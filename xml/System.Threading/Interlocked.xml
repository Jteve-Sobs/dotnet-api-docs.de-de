<Type Name="Interlocked" FullName="System.Threading.Interlocked">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="38e43e4414c980905a1eb748e3e096a6c3144761" />
    <Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="11/20/2018" />
    <Meta Name="ms.locfileid" Value="52251804" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class Interlocked" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Interlocked extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Threading.Interlocked" />
  <TypeSignature Language="VB.NET" Value="Public Class Interlocked" />
  <TypeSignature Language="C++ CLI" Value="public ref class Interlocked abstract sealed" />
  <TypeSignature Language="F#" Value="type Interlocked = class" />
  <AssemblyInfo>
    <AssemblyName>System.Threading</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0">
      <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="b4803-101">Stellt atomare Vorgänge für Variablen bereit, die von mehreren Threads gemeinsam genutzt werden.</span>
      <span class="sxs-lookup">
        <span data-stu-id="b4803-101">Provides atomic operations for variables that are shared by multiple threads.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4803-102">Die Methoden dieser Klasse Schutz vor Fehlern, die auftreten können, wenn das Zeitplanungsmodul Kontexte wechselt, während ein Thread auf eine Variable aktualisiert wird, die durch andere Threads zugegriffen werden kann, oder wenn zwei Threads gleichzeitig auf separaten Prozessoren ausgeführt werden.</span><span class="sxs-lookup"><span data-stu-id="b4803-102">The methods of this class help protect against errors that can occur when the scheduler switches contexts while a thread is updating a variable that can be accessed by other threads, or when two threads are executing concurrently on separate processors.</span></span> <span data-ttu-id="b4803-103">Die Member dieser Klasse lösen keine Ausnahmen.</span><span class="sxs-lookup"><span data-stu-id="b4803-103">The members of this class do not throw exceptions.</span></span>  
  
 <span data-ttu-id="b4803-104">Die <xref:System.Threading.Interlocked.Increment%2A> und <xref:System.Threading.Interlocked.Decrement%2A> Methoden inkrementieren oder dekrementieren eine Variable und den resultierenden Wert in einem einzigen Vorgang zu speichern.</span><span class="sxs-lookup"><span data-stu-id="b4803-104">The <xref:System.Threading.Interlocked.Increment%2A> and <xref:System.Threading.Interlocked.Decrement%2A> methods increment or decrement a variable and store the resulting value in a single operation.</span></span> <span data-ttu-id="b4803-105">Auf den meisten Computern ist eine Variable inkrementieren kein atomischer Vorgang an, dass die folgenden Schritte aus:</span><span class="sxs-lookup"><span data-stu-id="b4803-105">On most computers, incrementing a variable is not an atomic operation, requiring the following steps:</span></span>  
  
1.  <span data-ttu-id="b4803-106">Laden Sie einen Wert aus einer Instanzvariablen, in ein Register.</span><span class="sxs-lookup"><span data-stu-id="b4803-106">Load a value from an instance variable into a register.</span></span>  
  
2.  <span data-ttu-id="b4803-107">Inkrementiert oder dekrementiert den Wert.</span><span class="sxs-lookup"><span data-stu-id="b4803-107">Increment or decrement the value.</span></span>  
  
3.  <span data-ttu-id="b4803-108">Store den Wert in der Instanzvariablen an.</span><span class="sxs-lookup"><span data-stu-id="b4803-108">Store the value in the instance variable.</span></span>  
  
 <span data-ttu-id="b4803-109">Wenn Sie nicht verwenden <xref:System.Threading.Interlocked.Increment%2A> und <xref:System.Threading.Interlocked.Decrement%2A>, ein Thread nach dem Ausführen der ersten beiden Schritte präemptiv unterbrochen werden kann.</span><span class="sxs-lookup"><span data-stu-id="b4803-109">If you do not use <xref:System.Threading.Interlocked.Increment%2A> and <xref:System.Threading.Interlocked.Decrement%2A>, a thread can be preempted after executing the first two steps.</span></span> <span data-ttu-id="b4803-110">Ein anderer Thread können Sie alle drei Schritte auszuführen.</span><span class="sxs-lookup"><span data-stu-id="b4803-110">Another thread can then execute all three steps.</span></span> <span data-ttu-id="b4803-111">Wenn der erste Thread die Ausführung fortsetzt, überschreibt er den Wert in der Instanzvariablen, und die Auswirkungen der das Inkrement oder Dekrement vom zweiten Thread durchgeführt gehen verloren.</span><span class="sxs-lookup"><span data-stu-id="b4803-111">When the first thread resumes execution, it overwrites the value in the instance variable, and the effect of the increment or decrement performed by the second thread is lost.</span></span>  

 <span data-ttu-id="b4803-112">Die <xref:System.Threading.Interlocked.Add%2A> Methode automatisch eine ganzzahlige Variable einen ganzzahligen Wert hinzugefügt, und der neue Wert der Variablen zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="b4803-112">The <xref:System.Threading.Interlocked.Add%2A> method atomically adds an integer value to an integer variable and returns the new value of the variable.</span></span>  
  
 <span data-ttu-id="b4803-113">Die <xref:System.Threading.Interlocked.Exchange%2A> Methode tauscht automatisch die Werte der angegebenen Variablen.</span><span class="sxs-lookup"><span data-stu-id="b4803-113">The <xref:System.Threading.Interlocked.Exchange%2A> method atomically exchanges the values of the specified variables.</span></span> <span data-ttu-id="b4803-114">Die <xref:System.Threading.Interlocked.CompareExchange%2A> Methode kombiniert zwei Vorgänge: Vergleichen von zwei Werten, und speichern eine dritte, die in einer Variablen, abhängig vom Ergebnis des Vergleichs Wert.</span><span class="sxs-lookup"><span data-stu-id="b4803-114">The <xref:System.Threading.Interlocked.CompareExchange%2A> method combines two operations: comparing two values and storing a third value in one of the variables, based on the outcome of the comparison.</span></span> <span data-ttu-id="b4803-115">Die Vergleichs- und Austauschvorgang als atomischen Vorgang erfolgen.</span><span class="sxs-lookup"><span data-stu-id="b4803-115">The compare and exchange operations are performed as an atomic operation.</span></span>  

 <span data-ttu-id="b4803-116">Stellen Sie sicher, dass Schreib- oder Lesezugriff auf eine freigegebene Variable atomar ist.</span><span class="sxs-lookup"><span data-stu-id="b4803-116">Ensure that any write or read access to a shared variable is atomic.</span></span> <span data-ttu-id="b4803-117">Andernfalls die Daten möglicherweise beschädigt, oder der geladene Wert ist möglicherweise falsch.</span><span class="sxs-lookup"><span data-stu-id="b4803-117">Otherwise, the data might be corrupted or the loaded value might be incorrect.</span></span>    
   
  
## Examples  
 <span data-ttu-id="b4803-118">Das folgende Codebeispiel zeigt einen Mechanismus zum Sperren von Thread-sichere Ressource.</span><span class="sxs-lookup"><span data-stu-id="b4803-118">The following code example shows a thread-safe resource locking mechanism.</span></span>  
  
 [!code-cpp[System.Threading.Interlocked.Exchange Int32 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Interlocked.Exchange Int32 Example/CPP/class1.cpp#1)]
 [!code-csharp[System.Threading.Interlocked.Exchange Int32 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Interlocked.Exchange Int32 Example/CS/class1.cs#1)]
 [!code-vb[System.Threading.Interlocked.Exchange Int32 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Interlocked.Exchange Int32 Example/VB/class1.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="b4803-119">Dieser Typ ist threadsicher.</span>
      <span class="sxs-lookup">
        <span data-stu-id="b4803-119">This type is thread safe.</span>
      </span>
    </threadsafe>
    <related type="Article" href="~/docs/standard/threading/index.md">
      <span data-ttu-id="b4803-120">Verwaltetes Threading</span>
      <span class="sxs-lookup">
        <span data-stu-id="b4803-120">Managed Threading</span>
      </span>
    </related>
    <related type="Article" href="~/docs/standard/threading/overview-of-synchronization-primitives.md">
      <span data-ttu-id="b4803-121">Übersicht über Synchronisierungsprimitive</span>
      <span class="sxs-lookup">
        <span data-stu-id="b4803-121">Overview of synchronization primitives</span>
      </span>
    </related>
  </Docs>
  <Members>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b4803-122">Fügt in einer atomaren Operation zwei Ganzzahlen hinzu und ersetzt die erste Ganzzahl durch die Summe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-122">Adds two integers and replaces the first integer with the sum, as an atomic operation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public static int Add (ref int location1, int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Add(int32&amp; location1, int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Interlocked.Add(System.Int32@,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Add (ByRef location1 As Integer, value As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Add(int % location1, int value);" />
      <MemberSignature Language="F#" Value="static member Add :  * int -&gt; int" Usage="System.Threading.Interlocked.Add (location1, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location1" Type="System.Int32" RefType="ref" />
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="location1">
          <span data-ttu-id="b4803-123">Eine Variable, die den ersten Wert enthält, der hinzugefügt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-123">A variable containing the first value to be added.</span>
          </span>
          <span data-ttu-id="b4803-124">Die Summe der beiden Werte wird in <paramref name="location1" /> gespeichert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-124">The sum of the two values is stored in <paramref name="location1" />.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="b4803-125">Der Wert, der der Ganzzahl in <paramref name="location1" /> hinzugefügt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-125">The value to be added to the integer at <paramref name="location1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b4803-126">Fügt in einer atomaren Operation zwei 32-Bit-Ganzzahlen hinzu und ersetzt die erste Ganzzahl durch die Summe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-126">Adds two 32-bit integers and replaces the first integer with the sum, as an atomic operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b4803-127">Der unter <paramref name="location1" /> gespeicherte neue Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-127">The new value stored at <paramref name="location1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4803-128">Diese Methode verarbeitet Überlaufmodus durch das wrapping: Wenn den Wert an `location1` ist <xref:System.Int32.MaxValue?displayProperty=nameWithType> und `value` 1 ist, ist das Ergebnis <xref:System.Int32.MinValue?displayProperty=nameWithType>; Wenn `value` gleich 2 ist, ist das Ergebnis (<xref:System.Int32.MinValue?displayProperty=nameWithType> + 1); und so weiter.</span><span class="sxs-lookup"><span data-stu-id="b4803-128">This method handles an overflow condition by wrapping: if the value at `location1` is <xref:System.Int32.MaxValue?displayProperty=nameWithType> and `value` is 1, the result is <xref:System.Int32.MinValue?displayProperty=nameWithType>; if `value` is 2, the result is (<xref:System.Int32.MinValue?displayProperty=nameWithType> + 1); and so on.</span></span> <span data-ttu-id="b4803-129">Es werden keine Ausnahmen ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="b4803-129">No exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NullReferenceException">
          <span data-ttu-id="b4803-130">Die Adresse von <paramref name="location1" /> ist ein NULL-Zeiger.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-130">The address of <paramref name="location1" /> is a null pointer.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/threading/index.md">
          <span data-ttu-id="b4803-131">Verwaltetes Threading</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-131">Managed Threading</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/threading/overview-of-synchronization-primitives.md">
          <span data-ttu-id="b4803-132">Übersicht über Synchronisierungsprimitive</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-132">Overview of synchronization primitives</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public static long Add (ref long location1, long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 Add(int64&amp; location1, int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Interlocked.Add(System.Int64@,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Add (ByRef location1 As Long, value As Long) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long Add(long % location1, long value);" />
      <MemberSignature Language="F#" Value="static member Add :  * int64 -&gt; int64" Usage="System.Threading.Interlocked.Add (location1, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location1" Type="System.Int64" RefType="ref" />
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="location1">
          <span data-ttu-id="b4803-133">Eine Variable, die den ersten Wert enthält, der hinzugefügt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-133">A variable containing the first value to be added.</span>
          </span>
          <span data-ttu-id="b4803-134">Die Summe der beiden Werte wird in <paramref name="location1" /> gespeichert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-134">The sum of the two values is stored in <paramref name="location1" />.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="b4803-135">Der Wert, der der Ganzzahl in <paramref name="location1" /> hinzugefügt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-135">The value to be added to the integer at <paramref name="location1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b4803-136">Fügt in einer atomaren Operation zwei 64-Bit-Ganzzahlen hinzu und ersetzt die erste Ganzzahl durch die Summe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-136">Adds two 64-bit integers and replaces the first integer with the sum, as an atomic operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b4803-137">Der unter <paramref name="location1" /> gespeicherte neue Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-137">The new value stored at <paramref name="location1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4803-138">Diese Methode verarbeitet Überlaufmodus durch das wrapping: Wenn den Wert an `location1` ist <xref:System.Int64.MaxValue?displayProperty=nameWithType> und `value` 1 ist, ist das Ergebnis <xref:System.Int64.MinValue?displayProperty=nameWithType>; Wenn `value` gleich 2 ist, ist das Ergebnis (<xref:System.Int64.MinValue?displayProperty=nameWithType> + 1); und so weiter.</span><span class="sxs-lookup"><span data-stu-id="b4803-138">This method handles an overflow condition by wrapping: if the value at `location1` is <xref:System.Int64.MaxValue?displayProperty=nameWithType> and `value` is 1, the result is <xref:System.Int64.MinValue?displayProperty=nameWithType>; if `value` is 2, the result is (<xref:System.Int64.MinValue?displayProperty=nameWithType> + 1); and so on.</span></span> <span data-ttu-id="b4803-139">Es werden keine Ausnahmen ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="b4803-139">No exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NullReferenceException">
          <span data-ttu-id="b4803-140">Die Adresse von <paramref name="location1" /> ist ein NULL-Zeiger.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-140">The address of <paramref name="location1" /> is a null pointer.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Threading.Interlocked.Increment" />
        <altmember cref="Overload:System.Threading.Interlocked.Decrement" />
        <altmember cref="M:System.Threading.Interlocked.Read(System.Int64@)" />
        <related type="Article" href="~/docs/standard/threading/index.md">
          <span data-ttu-id="b4803-141">Verwaltetes Threading</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-141">Managed Threading</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/threading/overview-of-synchronization-primitives.md">
          <span data-ttu-id="b4803-142">Übersicht über Synchronisierungsprimitive</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-142">Overview of synchronization primitives</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="CompareExchange">
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b4803-143">Vergleicht zwei Werte hinsichtlich ihrer Gleichheit und ersetzt bei vorliegender Gleichheit den ersten Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-143">Compares two values for equality and, if they are equal, replaces the first value.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CompareExchange">
      <MemberSignature Language="C#" Value="public static double CompareExchange (ref double location1, double value, double comparand);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 CompareExchange(float64&amp; location1, float64 value, float64 comparand) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Interlocked.CompareExchange(System.Double@,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareExchange (ByRef location1 As Double, value As Double, comparand As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double CompareExchange(double % location1, double value, double comparand);" />
      <MemberSignature Language="F#" Value="static member CompareExchange :  * double * double -&gt; double" Usage="System.Threading.Interlocked.CompareExchange (location1, value, comparand)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location1" Type="System.Double" RefType="ref" />
        <Parameter Name="value" Type="System.Double" />
        <Parameter Name="comparand" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="location1">
          <span data-ttu-id="b4803-144">Das Ziel, dessen Wert mit <paramref name="comparand" /> verglichen und möglicherweise ersetzt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-144">The destination, whose value is compared with <paramref name="comparand" /> and possibly replaced.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="b4803-145">Der Wert, der den Zielwert ersetzt, wenn der Vergleich Gleichheit ergibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-145">The value that replaces the destination value if the comparison results in equality.</span>
          </span>
        </param>
        <param name="comparand">
          <span data-ttu-id="b4803-146">Der Wert, der mit dem Wert bei <paramref name="location1" /> verglichen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-146">The value that is compared to the value at <paramref name="location1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b4803-147">Vergleicht zwei Gleitkommazahlen mit doppelter Genauigkeit hinsichtlich ihrer Gleichheit und ersetzt bei vorliegender Gleichheit den ersten Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-147">Compares two double-precision floating point numbers for equality and, if they are equal, replaces the first value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b4803-148">Der ursprüngliche Wert in <paramref name="location1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-148">The original value in <paramref name="location1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4803-149">Wenn `comparand` und der Wert im `location1` gleich sind, klicken Sie dann `value` befindet sich in `location1`.</span><span class="sxs-lookup"><span data-stu-id="b4803-149">If `comparand` and the value in `location1` are equal, then `value` is stored in `location1`.</span></span> <span data-ttu-id="b4803-150">Andernfalls wird kein Vorgang ausgeführt.</span><span class="sxs-lookup"><span data-stu-id="b4803-150">Otherwise, no operation is performed.</span></span> <span data-ttu-id="b4803-151">Die Vergleichs- und Austauschvorgang als atomischen Vorgang erfolgen.</span><span class="sxs-lookup"><span data-stu-id="b4803-151">The compare and exchange operations are performed as an atomic operation.</span></span> <span data-ttu-id="b4803-152">Der Rückgabewert von <xref:System.Threading.Interlocked.CompareExchange%2A> ist der ursprüngliche Wert in `location1`, unabhängig davon, ob der Austausch ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="b4803-152">The return value of <xref:System.Threading.Interlocked.CompareExchange%2A> is the original value in `location1`, whether or not the exchange takes place.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b4803-153">Im folgenden Codebeispiel wird veranschaulicht, eine Thread-sichere Methode, die akkumuliert, eine laufende Summe der <xref:System.Double> Werte.</span><span class="sxs-lookup"><span data-stu-id="b4803-153">The following code example demonstrates a thread-safe method that accumulates a running total of <xref:System.Double> values.</span></span> <span data-ttu-id="b4803-154">Zwei Threads hinzufügen, eine Reihe von <xref:System.Double> Werte, mit dem Thread-sichere Methode und die normalen hinzufügen, und beim Beenden der Threads die Ergebnisse verglichen werden.</span><span class="sxs-lookup"><span data-stu-id="b4803-154">Two threads add a series of <xref:System.Double> values using the thread-safe method and ordinary addition, and when the threads complete the totals are compared.</span></span> <span data-ttu-id="b4803-155">Auf einem Computer mit Dual-Prozessor besteht ein deutlicher Unterschied bei den Gesamtergebnissen zur Verfügung.</span><span class="sxs-lookup"><span data-stu-id="b4803-155">On a dual-processor computer, there is a significant difference in the totals.</span></span>  
  
 <span data-ttu-id="b4803-156">In der Thread-sichere Methode, die laufende Summe der anfängliche Wert gespeichert ist, und klicken Sie dann die <xref:System.Threading.Interlocked.CompareExchange%2A> Methode wird verwendet, um die neu berechneten Summe mit dem alten exchange.</span><span class="sxs-lookup"><span data-stu-id="b4803-156">In the thread-safe method, the initial value of the running total is saved, and then the <xref:System.Threading.Interlocked.CompareExchange%2A> method is used to exchange the newly computed total with the old total.</span></span> <span data-ttu-id="b4803-157">Ist der zurückgegebene Wert nicht gleich dem gespeicherten Wert, der die laufende Summe, hat dann ein anderer Thread die Gesamtsumme in der Zwischenzeit aktualisiert.</span><span class="sxs-lookup"><span data-stu-id="b4803-157">If the return value is not equal to the saved value of the running total, then another thread has updated the total in the meantime.</span></span> <span data-ttu-id="b4803-158">In diesem Fall muss der Versuch, die laufende Summe zu aktualisieren, wiederholt werden.</span><span class="sxs-lookup"><span data-stu-id="b4803-158">In that case, the attempt to update the running total must be repeated.</span></span>  
  
 [!code-csharp[System.Threading.Interlocked CompareExchange Double#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Interlocked CompareExchange Double/cs/source.cs#1)]
 [!code-vb[System.Threading.Interlocked CompareExchange Double#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Interlocked CompareExchange Double/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NullReferenceException">
          <span data-ttu-id="b4803-159">Die Adresse von <paramref name="location1" /> ist ein NULL-Zeiger.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-159">The address of <paramref name="location1" /> is a null pointer.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/threading/index.md">
          <span data-ttu-id="b4803-160">Verwaltetes Threading</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-160">Managed Threading</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/threading/overview-of-synchronization-primitives.md">
          <span data-ttu-id="b4803-161">Übersicht über Synchronisierungsprimitive</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-161">Overview of synchronization primitives</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="CompareExchange">
      <MemberSignature Language="C#" Value="public static int CompareExchange (ref int location1, int value, int comparand);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 CompareExchange(int32&amp; location1, int32 value, int32 comparand) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Interlocked.CompareExchange(System.Int32@,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareExchange (ByRef location1 As Integer, value As Integer, comparand As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int CompareExchange(int % location1, int value, int comparand);" />
      <MemberSignature Language="F#" Value="static member CompareExchange :  * int * int -&gt; int" Usage="System.Threading.Interlocked.CompareExchange (location1, value, comparand)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location1" Type="System.Int32" RefType="ref" />
        <Parameter Name="value" Type="System.Int32" />
        <Parameter Name="comparand" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="location1">
          <span data-ttu-id="b4803-162">Das Ziel, dessen Wert mit <paramref name="comparand" /> verglichen und möglicherweise ersetzt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-162">The destination, whose value is compared with <paramref name="comparand" /> and possibly replaced.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="b4803-163">Der Wert, der den Zielwert ersetzt, wenn der Vergleich Gleichheit ergibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-163">The value that replaces the destination value if the comparison results in equality.</span>
          </span>
        </param>
        <param name="comparand">
          <span data-ttu-id="b4803-164">Der Wert, der mit dem Wert bei <paramref name="location1" /> verglichen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-164">The value that is compared to the value at <paramref name="location1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b4803-165">Vergleicht zwei 32-Bit-Ganzzahlen mit Vorzeichen hinsichtlich ihrer Gleichheit und ersetzt bei vorliegender Gleichheit den ersten Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-165">Compares two 32-bit signed integers for equality and, if they are equal, replaces the first value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b4803-166">Der ursprüngliche Wert in <paramref name="location1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-166">The original value in <paramref name="location1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4803-167">Wenn `comparand` und der Wert im `location1` gleich sind, klicken Sie dann `value` befindet sich in `location1`.</span><span class="sxs-lookup"><span data-stu-id="b4803-167">If `comparand` and the value in `location1` are equal, then `value` is stored in `location1`.</span></span> <span data-ttu-id="b4803-168">Andernfalls wird kein Vorgang ausgeführt.</span><span class="sxs-lookup"><span data-stu-id="b4803-168">Otherwise, no operation is performed.</span></span> <span data-ttu-id="b4803-169">Die Vergleichs- und Austauschvorgang als atomischen Vorgang erfolgen.</span><span class="sxs-lookup"><span data-stu-id="b4803-169">The compare and exchange operations are performed as an atomic operation.</span></span> <span data-ttu-id="b4803-170">Der Rückgabewert von <xref:System.Threading.Interlocked.CompareExchange%2A> ist der ursprüngliche Wert in `location1`, unabhängig davon, ob der Austausch ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="b4803-170">The return value of <xref:System.Threading.Interlocked.CompareExchange%2A> is the original value in `location1`, whether or not the exchange takes place.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b4803-171">Im folgenden Codebeispiel wird veranschaulicht, eine Thread-sichere Methode, die akkumuliert, eine laufende Summe.</span><span class="sxs-lookup"><span data-stu-id="b4803-171">The following code example demonstrates a thread-safe method that accumulates a running total.</span></span> <span data-ttu-id="b4803-172">Die laufende Summe der Anfangswert wird gespeichert, und klicken Sie dann die <xref:System.Threading.Interlocked.CompareExchange%2A> Methode wird verwendet, um die neu berechneten Summe mit dem alten exchange.</span><span class="sxs-lookup"><span data-stu-id="b4803-172">The initial value of the running total is saved, and then the <xref:System.Threading.Interlocked.CompareExchange%2A> method is used to exchange the newly computed total with the old total.</span></span> <span data-ttu-id="b4803-173">Ist der zurückgegebene Wert nicht gleich dem gespeicherten Wert, der die laufende Summe, hat dann ein anderer Thread die Gesamtsumme in der Zwischenzeit aktualisiert.</span><span class="sxs-lookup"><span data-stu-id="b4803-173">If the return value is not equal to the saved value of the running total, then another thread has updated the total in the meantime.</span></span> <span data-ttu-id="b4803-174">In diesem Fall muss der Versuch, die laufende Summe zu aktualisieren, wiederholt werden.</span><span class="sxs-lookup"><span data-stu-id="b4803-174">In that case, the attempt to update the running total must be repeated.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b4803-175">Die <xref:System.Threading.Interlocked.Add%2A> -Methode, eingeführt in Version 2.0 von .NET Framework bietet eine benutzerfreundliche Methode für "accumulate" Thread-sichere laufende Summen für ganze Zahlen.</span><span class="sxs-lookup"><span data-stu-id="b4803-175">The <xref:System.Threading.Interlocked.Add%2A> method, introduced in version 2.0 of the .NET Framework, provides a more convenient way to accumulate thread-safe running totals for integers.</span></span>  
  
 [!code-cpp[System.Threading.Interlocked CompareExchange0#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Interlocked CompareExchange0/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Interlocked CompareExchange0#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Interlocked CompareExchange0/CS/source.cs#1)]
 [!code-vb[System.Threading.Interlocked CompareExchange0#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Interlocked CompareExchange0/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NullReferenceException">
          <span data-ttu-id="b4803-176">Die Adresse von <paramref name="location1" /> ist ein NULL-Zeiger.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-176">The address of <paramref name="location1" /> is a null pointer.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/threading/index.md">
          <span data-ttu-id="b4803-177">Verwaltetes Threading</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-177">Managed Threading</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/threading/overview-of-synchronization-primitives.md">
          <span data-ttu-id="b4803-178">Übersicht über Synchronisierungsprimitive</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-178">Overview of synchronization primitives</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="CompareExchange">
      <MemberSignature Language="C#" Value="public static long CompareExchange (ref long location1, long value, long comparand);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 CompareExchange(int64&amp; location1, int64 value, int64 comparand) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Interlocked.CompareExchange(System.Int64@,System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareExchange (ByRef location1 As Long, value As Long, comparand As Long) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long CompareExchange(long % location1, long value, long comparand);" />
      <MemberSignature Language="F#" Value="static member CompareExchange :  * int64 * int64 -&gt; int64" Usage="System.Threading.Interlocked.CompareExchange (location1, value, comparand)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location1" Type="System.Int64" RefType="ref" />
        <Parameter Name="value" Type="System.Int64" />
        <Parameter Name="comparand" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="location1">
          <span data-ttu-id="b4803-179">Das Ziel, dessen Wert mit <paramref name="comparand" /> verglichen und möglicherweise ersetzt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-179">The destination, whose value is compared with <paramref name="comparand" /> and possibly replaced.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="b4803-180">Der Wert, der den Zielwert ersetzt, wenn der Vergleich Gleichheit ergibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-180">The value that replaces the destination value if the comparison results in equality.</span>
          </span>
        </param>
        <param name="comparand">
          <span data-ttu-id="b4803-181">Der Wert, der mit dem Wert bei <paramref name="location1" /> verglichen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-181">The value that is compared to the value at <paramref name="location1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b4803-182">Vergleicht zwei 64-Bit-Ganzzahlen mit Vorzeichen hinsichtlich ihrer Gleichheit und ersetzt bei vorliegender Gleichheit den ersten Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-182">Compares two 64-bit signed integers for equality and, if they are equal, replaces the first value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b4803-183">Der ursprüngliche Wert in <paramref name="location1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-183">The original value in <paramref name="location1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4803-184">Wenn `comparand` und der Wert im `location1` gleich sind, klicken Sie dann `value` befindet sich in `location1`.</span><span class="sxs-lookup"><span data-stu-id="b4803-184">If `comparand` and the value in `location1` are equal, then `value` is stored in `location1`.</span></span> <span data-ttu-id="b4803-185">Andernfalls wird kein Vorgang ausgeführt.</span><span class="sxs-lookup"><span data-stu-id="b4803-185">Otherwise, no operation is performed.</span></span> <span data-ttu-id="b4803-186">Die Vergleichs- und Austauschvorgang als atomischen Vorgang erfolgen.</span><span class="sxs-lookup"><span data-stu-id="b4803-186">The compare and exchange operations are performed as an atomic operation.</span></span> <span data-ttu-id="b4803-187">Der Rückgabewert von <xref:System.Threading.Interlocked.CompareExchange%2A> ist der ursprüngliche Wert in `location1`, unabhängig davon, ob der Austausch ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="b4803-187">The return value of <xref:System.Threading.Interlocked.CompareExchange%2A> is the original value in `location1`, whether or not the exchange takes place.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NullReferenceException">
          <span data-ttu-id="b4803-188">Die Adresse von <paramref name="location1" /> ist ein NULL-Zeiger.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-188">The address of <paramref name="location1" /> is a null pointer.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/threading/index.md">
          <span data-ttu-id="b4803-189">Verwaltetes Threading</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-189">Managed Threading</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/threading/overview-of-synchronization-primitives.md">
          <span data-ttu-id="b4803-190">Übersicht über Synchronisierungsprimitive</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-190">Overview of synchronization primitives</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="CompareExchange">
      <MemberSignature Language="C#" Value="public static IntPtr CompareExchange (ref IntPtr location1, IntPtr value, IntPtr comparand);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int CompareExchange(native int&amp; location1, native int value, native int comparand) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Interlocked.CompareExchange(System.IntPtr@,System.IntPtr,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareExchange (ByRef location1 As IntPtr, value As IntPtr, comparand As IntPtr) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr CompareExchange(IntPtr % location1, IntPtr value, IntPtr comparand);" />
      <MemberSignature Language="F#" Value="static member CompareExchange :  * nativeint * nativeint -&gt; nativeint" Usage="System.Threading.Interlocked.CompareExchange (location1, value, comparand)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location1" Type="System.IntPtr" RefType="ref" />
        <Parameter Name="value" Type="System.IntPtr" />
        <Parameter Name="comparand" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="location1">
          <span data-ttu-id="b4803-191">Das Ziel <see cref="T:System.IntPtr" />, dessen Wert mit dem Wert von <paramref name="comparand" /> verglichen und möglicherweise durch <paramref name="value" /> ersetzt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-191">The destination <see cref="T:System.IntPtr" />, whose value is compared with the value of <paramref name="comparand" /> and possibly replaced by <paramref name="value" />.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="b4803-192">Der <see cref="T:System.IntPtr" />, der den Zielwert ersetzt, wenn der Vergleich Gleichheit ergibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-192">The <see cref="T:System.IntPtr" /> that replaces the destination value if the comparison results in equality.</span>
          </span>
        </param>
        <param name="comparand">
          <span data-ttu-id="b4803-193">Der <see cref="T:System.IntPtr" />, der mit dem Wert in <paramref name="location1" /> verglichen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-193">The <see cref="T:System.IntPtr" /> that is compared to the value at <paramref name="location1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b4803-194">Vergleicht zwei plattformspezifische Handles oder Zeiger hinsichtlich ihrer Gleichheit und ersetzt bei vorliegender Gleichheit den ersten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-194">Compares two platform-specific handles or pointers for equality and, if they are equal, replaces the first one.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b4803-195">Der ursprüngliche Wert in <paramref name="location1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-195">The original value in <paramref name="location1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4803-196">Wenn `comparand` und der Wert im `location1` gleich sind, klicken Sie dann `value` befindet sich in `location1`.</span><span class="sxs-lookup"><span data-stu-id="b4803-196">If `comparand` and the value in `location1` are equal, then `value` is stored in `location1`.</span></span> <span data-ttu-id="b4803-197">Andernfalls wird kein Vorgang ausgeführt.</span><span class="sxs-lookup"><span data-stu-id="b4803-197">Otherwise, no operation is performed.</span></span> <span data-ttu-id="b4803-198">Die Vergleichs- und Austauschvorgang als atomischen Vorgang erfolgen.</span><span class="sxs-lookup"><span data-stu-id="b4803-198">The compare and exchange operations are performed as an atomic operation.</span></span> <span data-ttu-id="b4803-199">Der Rückgabewert dieser Methode ist der ursprüngliche Wert in `location1`, unabhängig davon, ob der Austausch ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="b4803-199">The return value of this method is the original value in `location1`, whether or not the exchange takes place.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b4803-200"><xref:System.IntPtr> ist ein Plattformspezifischer Typ an.</span><span class="sxs-lookup"><span data-stu-id="b4803-200"><xref:System.IntPtr> is a platform-specific type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NullReferenceException">
          <span data-ttu-id="b4803-201">Die Adresse von <paramref name="location1" /> ist ein NULL-Zeiger.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-201">The address of <paramref name="location1" /> is a null pointer.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/threading/index.md">
          <span data-ttu-id="b4803-202">Verwaltetes Threading</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-202">Managed Threading</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/threading/overview-of-synchronization-primitives.md">
          <span data-ttu-id="b4803-203">Übersicht über Synchronisierungsprimitive</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-203">Overview of synchronization primitives</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="CompareExchange">
      <MemberSignature Language="C#" Value="public static object CompareExchange (ref object location1, object value, object comparand);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object CompareExchange(object&amp; location1, object value, object comparand) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Interlocked.CompareExchange(System.Object@,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareExchange (ByRef location1 As Object, value As Object, comparand As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CompareExchange(System::Object ^ % location1, System::Object ^ value, System::Object ^ comparand);" />
      <MemberSignature Language="F#" Value="static member CompareExchange :  * obj * obj -&gt; obj" Usage="System.Threading.Interlocked.CompareExchange (location1, value, comparand)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location1" Type="System.Object" RefType="ref" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="comparand" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="location1">
          <span data-ttu-id="b4803-204">Das Zielobjekt, das mit <paramref name="comparand" /> nach Verweis verglichen und möglicherweise ersetzt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-204">The destination object that is compared by reference with <paramref name="comparand" /> and possibly replaced.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="b4803-205">Das Objekt, das das Zielobjekt ersetzt, wenn beim Verweisevergleich Gleichheit festgestellt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-205">The object that replaces the destination object if the reference comparison results in equality.</span>
          </span>
        </param>
        <param name="comparand">
          <span data-ttu-id="b4803-206">Das Objekt, das nach Verweis mit dem Objekt bei <paramref name="location1" /> verglichen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-206">The object that is compared by reference to the object at <paramref name="location1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b4803-207">Vergleicht zwei Objekte hinsichtlich ihrer Verweisgleichheit und ersetzt bei vorliegender Gleichheit das erste Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-207">Compares two objects for reference equality and, if they are equal, replaces the first object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b4803-208">Der ursprüngliche Wert in <paramref name="location1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-208">The original value in <paramref name="location1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks

> [!IMPORTANT]
> <span data-ttu-id="b4803-209">Ab .NET Framework 2.0 die <xref:System.Threading.Interlocked.CompareExchange%60%601%28%60%600%40%2C%60%600%2C%60%600%29> -methodenüberladung, bietet eine typsichere Alternative für Verweistypen zulässig.</span><span class="sxs-lookup"><span data-stu-id="b4803-209">Beginning with .NET Framework 2.0, the <xref:System.Threading.Interlocked.CompareExchange%60%601%28%60%600%40%2C%60%600%2C%60%600%29> method overload provides a type-safe alternative for reference types.</span></span> <span data-ttu-id="b4803-210">Es wird empfohlen, dass Sie anstelle dieser Überladung aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="b4803-210">We recommend that you call it instead of this overload.</span></span>

<span data-ttu-id="b4803-211">Wenn `comparand` und das Objekt in `location1` werden dann als Verweis gleich `value` befindet sich in `location1`.</span><span class="sxs-lookup"><span data-stu-id="b4803-211">If `comparand` and the object in `location1` are equal by reference, then `value` is stored in `location1`.</span></span> <span data-ttu-id="b4803-212">Andernfalls wird kein Vorgang ausgeführt.</span><span class="sxs-lookup"><span data-stu-id="b4803-212">Otherwise, no operation is performed.</span></span> <span data-ttu-id="b4803-213">Die Vergleichs- und Austauschvorgang als atomischen Vorgang erfolgen.</span><span class="sxs-lookup"><span data-stu-id="b4803-213">The compare and exchange operations are performed as an atomic operation.</span></span> <span data-ttu-id="b4803-214">Der Rückgabewert von <xref:System.Threading.Interlocked.CompareExchange%2A> ist der ursprüngliche Wert in `location1`, unabhängig davon, ob der Austausch ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="b4803-214">The return value of <xref:System.Threading.Interlocked.CompareExchange%2A> is the original value in `location1`, whether or not the exchange takes place.</span></span>  

> [!NOTE]
>  <span data-ttu-id="b4803-215">Die Objekte werden für Wertgleichheit, anstatt auf Verweisgleichheit verglichen.</span><span class="sxs-lookup"><span data-stu-id="b4803-215">The objects are compared for reference equality rather than value equality.</span></span> <span data-ttu-id="b4803-216">Daher zwei geschachtelte Instanzen der gleichen Werttyp (z. B. die ganze Zahl 3) immer angezeigt werden und kein Vorgang ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="b4803-216">As a result, two boxed instances of the same value type (for example, the integer 3) always appear to be unequal and no operation is performed.</span></span> <span data-ttu-id="b4803-217">Verwenden Sie diese Überladung nicht mit Werttypen.</span><span class="sxs-lookup"><span data-stu-id="b4803-217">Do not use this overload with value types.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b4803-218">Die Adresse von <paramref name="location1" /> ist ein NULL-Zeiger.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-218">The address of <paramref name="location1" /> is a null pointer.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/threading/index.md">
          <span data-ttu-id="b4803-219">Verwaltetes Threading</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-219">Managed Threading</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/threading/overview-of-synchronization-primitives.md">
          <span data-ttu-id="b4803-220">Übersicht über Synchronisierungsprimitive</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-220">Overview of synchronization primitives</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="CompareExchange">
      <MemberSignature Language="C#" Value="public static float CompareExchange (ref float location1, float value, float comparand);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 CompareExchange(float32&amp; location1, float32 value, float32 comparand) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Interlocked.CompareExchange(System.Single@,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareExchange (ByRef location1 As Single, value As Single, comparand As Single) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float CompareExchange(float % location1, float value, float comparand);" />
      <MemberSignature Language="F#" Value="static member CompareExchange :  * single * single -&gt; single" Usage="System.Threading.Interlocked.CompareExchange (location1, value, comparand)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location1" Type="System.Single" RefType="ref" />
        <Parameter Name="value" Type="System.Single" />
        <Parameter Name="comparand" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="location1">
          <span data-ttu-id="b4803-221">Das Ziel, dessen Wert mit <paramref name="comparand" /> verglichen und möglicherweise ersetzt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-221">The destination, whose value is compared with <paramref name="comparand" /> and possibly replaced.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="b4803-222">Der Wert, der den Zielwert ersetzt, wenn der Vergleich Gleichheit ergibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-222">The value that replaces the destination value if the comparison results in equality.</span>
          </span>
        </param>
        <param name="comparand">
          <span data-ttu-id="b4803-223">Der Wert, der mit dem Wert bei <paramref name="location1" /> verglichen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-223">The value that is compared to the value at <paramref name="location1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b4803-224">Vergleicht zwei Gleitkommazahlen mit einfacher Genauigkeit hinsichtlich ihrer Gleichheit und ersetzt bei vorliegender Gleichheit den ersten Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-224">Compares two single-precision floating point numbers for equality and, if they are equal, replaces the first value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b4803-225">Der ursprüngliche Wert in <paramref name="location1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-225">The original value in <paramref name="location1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4803-226">Wenn `comparand` und der Wert im `location1` gleich sind, klicken Sie dann `value` befindet sich in `location1`.</span><span class="sxs-lookup"><span data-stu-id="b4803-226">If `comparand` and the value in `location1` are equal, then `value` is stored in `location1`.</span></span> <span data-ttu-id="b4803-227">Andernfalls wird kein Vorgang ausgeführt.</span><span class="sxs-lookup"><span data-stu-id="b4803-227">Otherwise, no operation is performed.</span></span> <span data-ttu-id="b4803-228">Die Vergleichs- und Austauschvorgang als atomischen Vorgang erfolgen.</span><span class="sxs-lookup"><span data-stu-id="b4803-228">The compare and exchange operations are performed as an atomic operation.</span></span> <span data-ttu-id="b4803-229">Der Rückgabewert von <xref:System.Threading.Interlocked.CompareExchange%2A> ist der ursprüngliche Wert in `location1`, unabhängig davon, ob der Austausch ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="b4803-229">The return value of <xref:System.Threading.Interlocked.CompareExchange%2A> is the original value in `location1`, whether or not the exchange takes place.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b4803-230">Im folgenden Codebeispiel wird veranschaulicht, eine Thread-sichere Methode, die akkumuliert, eine laufende Summe der <xref:System.Single> Werte.</span><span class="sxs-lookup"><span data-stu-id="b4803-230">The following code example demonstrates a thread-safe method that accumulates a running total of <xref:System.Single> values.</span></span> <span data-ttu-id="b4803-231">Zwei Threads hinzufügen, eine Reihe von <xref:System.Single> Werte, mit dem Thread-sichere Methode und die normalen hinzufügen, und beim Beenden der Threads die Ergebnisse verglichen werden.</span><span class="sxs-lookup"><span data-stu-id="b4803-231">Two threads add a series of <xref:System.Single> values using the thread-safe method and ordinary addition, and when the threads complete the totals are compared.</span></span> <span data-ttu-id="b4803-232">Auf einem Computer mit Dual-Prozessor besteht ein deutlicher Unterschied bei den Gesamtergebnissen zur Verfügung.</span><span class="sxs-lookup"><span data-stu-id="b4803-232">On a dual-processor computer, there is a significant difference in the totals.</span></span>  
  
 <span data-ttu-id="b4803-233">In der Thread-sichere Methode, die laufende Summe der anfängliche Wert gespeichert ist, und klicken Sie dann die <xref:System.Threading.Interlocked.CompareExchange%2A> Methode wird verwendet, um die neu berechneten Summe mit dem alten exchange.</span><span class="sxs-lookup"><span data-stu-id="b4803-233">In the thread-safe method, the initial value of the running total is saved, and then the <xref:System.Threading.Interlocked.CompareExchange%2A> method is used to exchange the newly computed total with the old total.</span></span> <span data-ttu-id="b4803-234">Ist der zurückgegebene Wert nicht gleich dem gespeicherten Wert, der die laufende Summe, hat dann ein anderer Thread die Gesamtsumme in der Zwischenzeit aktualisiert.</span><span class="sxs-lookup"><span data-stu-id="b4803-234">If the return value is not equal to the saved value of the running total, then another thread has updated the total in the meantime.</span></span> <span data-ttu-id="b4803-235">In diesem Fall muss der Versuch, die laufende Summe zu aktualisieren, wiederholt werden.</span><span class="sxs-lookup"><span data-stu-id="b4803-235">In that case, the attempt to update the running total must be repeated.</span></span>  
  
 [!code-csharp[System.Threading.Interlocked CompareExchange Single#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Interlocked CompareExchange Single/cs/source.cs#1)]
 [!code-vb[System.Threading.Interlocked CompareExchange Single#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Interlocked CompareExchange Single/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NullReferenceException">
          <span data-ttu-id="b4803-236">Die Adresse von <paramref name="location1" /> ist ein NULL-Zeiger.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-236">The address of <paramref name="location1" /> is a null pointer.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/threading/index.md">
          <span data-ttu-id="b4803-237">Verwaltetes Threading</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-237">Managed Threading</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/threading/overview-of-synchronization-primitives.md">
          <span data-ttu-id="b4803-238">Übersicht über Synchronisierungsprimitive</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-238">Overview of synchronization primitives</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="CompareExchange&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T CompareExchange&lt;T&gt; (ref T location1, T value, T comparand) where T : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T CompareExchange&lt;class T&gt;(!!T&amp; location1, !!T value, !!T comparand) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Interlocked.CompareExchange``1(``0@,``0,``0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareExchange(Of T As Class) (ByRef location1 As T, value As T, comparand As T) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : class static T CompareExchange(T % location1, T value, T comparand);" />
      <MemberSignature Language="F#" Value="static member CompareExchange :  * 'T * 'T -&gt; 'T (requires 'T : null)" Usage="System.Threading.Interlocked.CompareExchange (location1, value, comparand)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="location1" Type="T" RefType="ref" />
        <Parameter Name="value" Type="T" />
        <Parameter Name="comparand" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="b4803-239">Der Typ, der für <paramref name="location1" />, <paramref name="value" /> und <paramref name="comparand" /> verwendet werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-239">The type to be used for <paramref name="location1" />, <paramref name="value" />, and <paramref name="comparand" />.</span>
          </span>
          <span data-ttu-id="b4803-240">Dieser Typ muss ein Referenztyp sein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-240">This type must be a reference type.</span>
          </span>
        </typeparam>
        <param name="location1">
          <span data-ttu-id="b4803-241">Das Ziel, dessen Wert mit <paramref name="comparand" /> nach Verweis verglichen und möglicherweise ersetzt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-241">The destination, whose value is compared by reference with <paramref name="comparand" /> and possibly replaced.</span>
          </span>
          <span data-ttu-id="b4803-242">Dies ist ein Verweisparameter (<see langword="ref" /> in C#, <see langword="ByRef" /> in Visual Basic).</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-242">This is a reference parameter (<see langword="ref" /> in C#, <see langword="ByRef" /> in Visual Basic).</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="b4803-243">Der Wert, der den Zielwert ersetzt, wenn der Vergleich nach Verweis Gleichheit ergibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-243">The value that replaces the destination value if the comparison by reference results in equality.</span>
          </span>
        </param>
        <param name="comparand">
          <span data-ttu-id="b4803-244">Der Wert, der nach Verweis mit dem Wert bei <paramref name="location1" /> verglichen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-244">The value that is compared by reference to the value at <paramref name="location1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b4803-245">Vergleicht zwei Instanzen des angegebenen Referenztyps <paramref name="T" /> hinsichtlich ihrer Verweisgleichheit und ersetzt bei vorliegender Gleichheit den ersten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-245">Compares two instances of the specified reference type <paramref name="T" /> for reference equality and, if they are equal, replaces the first one.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b4803-246">Der ursprüngliche Wert in <paramref name="location1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-246">The original value in <paramref name="location1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4803-247">Wenn `comparand` und der Wert im `location1` werden dann als Verweis gleich `value` befindet sich in `location1`.</span><span class="sxs-lookup"><span data-stu-id="b4803-247">If `comparand` and the value in `location1` are equal by reference, then `value` is stored in `location1`.</span></span> <span data-ttu-id="b4803-248">Andernfalls wird kein Vorgang ausgeführt.</span><span class="sxs-lookup"><span data-stu-id="b4803-248">Otherwise, no operation is performed.</span></span> <span data-ttu-id="b4803-249">Der Vergleich und Austausch werden als atomarer Vorgang ausgeführt.</span><span class="sxs-lookup"><span data-stu-id="b4803-249">The comparison and the exchange are performed as an atomic operation.</span></span> <span data-ttu-id="b4803-250">Der Rückgabewert dieser Methode ist der ursprüngliche Wert in `location1`, unabhängig davon, ob der Austausch ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="b4803-250">The return value of this method is the original value in `location1`, whether or not the exchange takes place.</span></span>  
  
 <span data-ttu-id="b4803-251">Diese Methode unterstützt nur Verweistypen.</span><span class="sxs-lookup"><span data-stu-id="b4803-251">This method only supports reference types.</span></span> <span data-ttu-id="b4803-252">Es gibt Überladungen der der <xref:System.Threading.Interlocked.CompareExchange%2A> -Methode für die Werttypen <xref:System.Int32>, <xref:System.Int64>, <xref:System.IntPtr>, <xref:System.Single>, und <xref:System.Double>, aber es gibt keine Unterstützung für andere Werttypen.</span><span class="sxs-lookup"><span data-stu-id="b4803-252">There are overloads of the <xref:System.Threading.Interlocked.CompareExchange%2A> method for the value types <xref:System.Int32>, <xref:System.Int64>, <xref:System.IntPtr>, <xref:System.Single>, and <xref:System.Double>, but there is no support for other value types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b4803-253">Diese methodenüberladung ist besser als die <xref:System.Threading.Interlocked.CompareExchange%28System.Object%40%2CSystem.Object%2CSystem.Object%29> Methode zu überladen, da letztere das Zielobjekt spät gebunden Zugriff erforderlich ist.</span><span class="sxs-lookup"><span data-stu-id="b4803-253">This method overload is preferable to the <xref:System.Threading.Interlocked.CompareExchange%28System.Object%40%2CSystem.Object%2CSystem.Object%29> method overload, because the latter requires the destination object to be accessed late-bound.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NullReferenceException">
          <span data-ttu-id="b4803-254">Die Adresse von <paramref name="location1" /> ist ein NULL-Zeiger.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-254">The address of <paramref name="location1" /> is a null pointer.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Decrement">
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b4803-255">Dekrementiert den Wert einer angegebenen Variablen und speichert das Ergebnis in einer atomaren Operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-255">Decrements a specified variable and stores the result, as an atomic operation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Decrement">
      <MemberSignature Language="C#" Value="public static int Decrement (ref int location);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Decrement(int32&amp; location) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Interlocked.Decrement(System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Decrement (ByRef location As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Decrement(int % location);" />
      <MemberSignature Language="F#" Value="static member Decrement :  -&gt; int" Usage="System.Threading.Interlocked.Decrement location" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="System.Int32" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="location">
          <span data-ttu-id="b4803-256">Die Variable, deren Wert dekrementiert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-256">The variable whose value is to be decremented.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b4803-257">Dekrementiert den Wert einer angegebenen Variablen und speichert das Ergebnis in einer atomaren Operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-257">Decrements a specified variable and stores the result, as an atomic operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b4803-258">Der dekrementierte Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-258">The decremented value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4803-259">Diese Methode verarbeitet Überlaufmodus durch das wrapping: Wenn `location`  =  <xref:System.Int32.MinValue?displayProperty=nameWithType>, `location` – 1 = <xref:System.Int32.MaxValue?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="b4803-259">This method handles an overflow condition by wrapping: If `location` = <xref:System.Int32.MinValue?displayProperty=nameWithType>, `location` - 1 = <xref:System.Int32.MaxValue?displayProperty=nameWithType>.</span></span> <span data-ttu-id="b4803-260">Es werden keine Ausnahmen ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="b4803-260">No exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b4803-261">Im folgende Beispiel wird bestimmt, wie viele Zufallszahlen, die zwischen 0 und 1.000 liegen erforderlich sind, um 1.000 zufällige Zahlen mit einem Wert für den Mittelpunkt zu generieren.</span><span class="sxs-lookup"><span data-stu-id="b4803-261">The following example determines how many random numbers that range from 0 to 1,000 are required to generate 1,000 random numbers with a midpoint value.</span></span> <span data-ttu-id="b4803-262">Um zu verfolgen die Anzahl der Werte für Mittelpunkt, eine Variable, `midpointCount`, ist gleich 1.000 und dekrementiert jedes Mal der Zufallszahlen-Generator einen Wert für den Mittelpunkt gibt.</span><span class="sxs-lookup"><span data-stu-id="b4803-262">To keep track of the number of midpoint values, a variable, `midpointCount`, is set equal to 1,000 and decremented each time the random number generator returns a midpoint value.</span></span> <span data-ttu-id="b4803-263">Da drei Threads, die Zufallszahlen, generieren die <xref:System.Threading.Interlocked.Decrement%28System.Int32%40%29> Methode wird aufgerufen, um sicherzustellen, dass mehrere Threads nicht aktualisieren `midpointCount` gleichzeitig.</span><span class="sxs-lookup"><span data-stu-id="b4803-263">Because three threads generate the random numbers, the <xref:System.Threading.Interlocked.Decrement%28System.Int32%40%29> method is called to ensure that multiple threads don't update `midpointCount` concurrently.</span></span> <span data-ttu-id="b4803-264">Beachten Sie, dass auch eine Sperre, zum Schutz der vom Zufallszahlen-Generator, und dass verwendet wird eine <xref:System.Threading.CountdownEvent> Objekt wird verwendet, um sicherzustellen, dass die `Main` Methode nicht vollständig ausführen, bevor der drei Threads.</span><span class="sxs-lookup"><span data-stu-id="b4803-264">Note that a lock is also used to protect the random number generator, and that a <xref:System.Threading.CountdownEvent> object is used to ensure that the `Main` method doesn't finish execution before the three threads.</span></span>  
  
 [!code-csharp[System.Threading.Interlocked.Decrement#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.interlocked.decrement/cs/decrement1.cs#1)]
 [!code-vb[System.Threading.Interlocked.Decrement#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.interlocked.decrement/vb/decrement1.vb#1)]  
  
 <span data-ttu-id="b4803-265">Im folgende Beispiel ähnelt dem vorherigen Beispiel, außer dass mithilfe der <xref:System.Threading.Tasks.Task> Klasse anstatt eine Threadprozedur 50.000 zufällige Mittelpunkt ganzen Zahlen zu generieren.</span><span class="sxs-lookup"><span data-stu-id="b4803-265">The following example is similar to the previous one, except that it uses the <xref:System.Threading.Tasks.Task> class instead of a thread procedure to generate 50,000 random midpoint integers.</span></span> <span data-ttu-id="b4803-266">In diesem Beispiel ist ein Lambda-Ausdruck ersetzt die `GenerateNumbers` Threadprozedur und der Aufruf der <xref:System.Threading.Tasks.Task.WaitAll%2A?displayProperty=nameWithType> Methode beseitigt die Notwendigkeit der <xref:System.Threading.CountdownEvent> Objekt.</span><span class="sxs-lookup"><span data-stu-id="b4803-266">In this example, a lambda expression replaces the `GenerateNumbers` thread procedure, and the call to the <xref:System.Threading.Tasks.Task.WaitAll%2A?displayProperty=nameWithType> method eliminates the need for the <xref:System.Threading.CountdownEvent> object.</span></span>  
  
 [!code-csharp[System.Threading.Interlocked.Decrement#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.interlocked.decrement/cs/decrement2.cs#2)]
 [!code-vb[System.Threading.Interlocked.Decrement#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.interlocked.decrement/vb/decrement2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b4803-267">Die Adresse von <paramref name="location" /> ist ein NULL-Zeiger.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-267">The address of <paramref name="location" /> is a null pointer.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/threading/index.md">
          <span data-ttu-id="b4803-268">Verwaltetes Threading</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-268">Managed Threading</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/threading/overview-of-synchronization-primitives.md">
          <span data-ttu-id="b4803-269">Übersicht über Synchronisierungsprimitive</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-269">Overview of synchronization primitives</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Decrement">
      <MemberSignature Language="C#" Value="public static long Decrement (ref long location);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 Decrement(int64&amp; location) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Interlocked.Decrement(System.Int64@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Decrement (ByRef location As Long) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long Decrement(long % location);" />
      <MemberSignature Language="F#" Value="static member Decrement :  -&gt; int64" Usage="System.Threading.Interlocked.Decrement location" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="System.Int64" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="location">
          <span data-ttu-id="b4803-270">Die Variable, deren Wert dekrementiert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-270">The variable whose value is to be decremented.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b4803-271">Dekrementiert den Wert der angegebenen Variablen und speichert das Ergebnis in einer atomaren Operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-271">Decrements the specified variable and stores the result, as an atomic operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b4803-272">Der dekrementierte Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-272">The decremented value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4803-273">Diese Methode verarbeitet Überlaufmodus durch das wrapping: Wenn `location`  =  <xref:System.Int64.MinValue?displayProperty=nameWithType>, `location` – 1 = <xref:System.Int64.MaxValue?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="b4803-273">This method handles an overflow condition by wrapping: if `location` = <xref:System.Int64.MinValue?displayProperty=nameWithType>, `location` - 1 = <xref:System.Int64.MaxValue?displayProperty=nameWithType>.</span></span> <span data-ttu-id="b4803-274">Es werden keine Ausnahmen ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="b4803-274">No exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b4803-275">Die Adresse von <paramref name="location" /> ist ein NULL-Zeiger.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-275">The address of <paramref name="location" /> is a null pointer.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Threading.Interlocked.Increment" />
        <altmember cref="Overload:System.Threading.Interlocked.Add" />
        <altmember cref="M:System.Threading.Interlocked.Read(System.Int64@)" />
        <related type="Article" href="~/docs/standard/threading/index.md">
          <span data-ttu-id="b4803-276">Verwaltetes Threading</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-276">Managed Threading</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/threading/overview-of-synchronization-primitives.md">
          <span data-ttu-id="b4803-277">Übersicht über Synchronisierungsprimitive</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-277">Overview of synchronization primitives</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Exchange">
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b4803-278">Legt eine Variable in einer atomaren Operation auf einen angegebenen Wert fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-278">Sets a variable to a specified value as an atomic operation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Exchange">
      <MemberSignature Language="C#" Value="public static double Exchange (ref double location1, double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Exchange(float64&amp; location1, float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Interlocked.Exchange(System.Double@,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Exchange (ByRef location1 As Double, value As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Exchange(double % location1, double value);" />
      <MemberSignature Language="F#" Value="static member Exchange :  * double -&gt; double" Usage="System.Threading.Interlocked.Exchange (location1, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location1" Type="System.Double" RefType="ref" />
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="location1">
          <span data-ttu-id="b4803-279">Die Variable, die auf den angegebenen Wert festgelegt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-279">The variable to set to the specified value.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="b4803-280">Der Wert, auf den der <paramref name="location1" />-Parameter festgelegt ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-280">The value to which the <paramref name="location1" /> parameter is set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b4803-281">Legt in einer atomaren Operation eine Gleitkommazahl mit doppelter Genauigkeit auf einen angegebenen Wert fest und gibt den ursprünglichen Wert zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-281">Sets a double-precision floating point number to a specified value and returns the original value, as an atomic operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b4803-282">Der ursprüngliche Wert von <paramref name="location1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-282">The original value of <paramref name="location1" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NullReferenceException">
          <span data-ttu-id="b4803-283">Die Adresse von <paramref name="location1" /> ist ein NULL-Zeiger.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-283">The address of <paramref name="location1" /> is a null pointer.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/threading/index.md">
          <span data-ttu-id="b4803-284">Verwaltetes Threading</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-284">Managed Threading</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/threading/overview-of-synchronization-primitives.md">
          <span data-ttu-id="b4803-285">Übersicht über Synchronisierungsprimitive</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-285">Overview of synchronization primitives</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Exchange">
      <MemberSignature Language="C#" Value="public static int Exchange (ref int location1, int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Exchange(int32&amp; location1, int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Interlocked.Exchange(System.Int32@,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Exchange (ByRef location1 As Integer, value As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Exchange(int % location1, int value);" />
      <MemberSignature Language="F#" Value="static member Exchange :  * int -&gt; int" Usage="System.Threading.Interlocked.Exchange (location1, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location1" Type="System.Int32" RefType="ref" />
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="location1">
          <span data-ttu-id="b4803-286">Die Variable, die auf den angegebenen Wert festgelegt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-286">The variable to set to the specified value.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="b4803-287">Der Wert, auf den der <paramref name="location1" />-Parameter festgelegt ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-287">The value to which the <paramref name="location1" /> parameter is set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b4803-288">Legt eine 32-Bit-Ganzzahl mit Vorzeichen in einer atomaren Operation auf einen angegebenen Wert fest und gibt den ursprünglichen Wert zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-288">Sets a 32-bit signed integer to a specified value and returns the original value, as an atomic operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b4803-289">Der ursprüngliche Wert von <paramref name="location1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-289">The original value of <paramref name="location1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b4803-290">Das folgende Codebeispiel zeigt einen Mechanismus zum Sperren von Thread-sichere Ressource.</span><span class="sxs-lookup"><span data-stu-id="b4803-290">The following code example shows a thread-safe resource locking mechanism.</span></span>  
  
 [!code-cpp[System.Threading.Interlocked.Exchange Int32 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Interlocked.Exchange Int32 Example/CPP/class1.cpp#1)]
 [!code-csharp[System.Threading.Interlocked.Exchange Int32 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Interlocked.Exchange Int32 Example/CS/class1.cs#1)]
 [!code-vb[System.Threading.Interlocked.Exchange Int32 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Interlocked.Exchange Int32 Example/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b4803-291">Die Adresse von <paramref name="location1" /> ist ein NULL-Zeiger.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-291">The address of <paramref name="location1" /> is a null pointer.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/threading/index.md">
          <span data-ttu-id="b4803-292">Verwaltetes Threading</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-292">Managed Threading</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/threading/overview-of-synchronization-primitives.md">
          <span data-ttu-id="b4803-293">Übersicht über Synchronisierungsprimitive</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-293">Overview of synchronization primitives</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Exchange">
      <MemberSignature Language="C#" Value="public static long Exchange (ref long location1, long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 Exchange(int64&amp; location1, int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Interlocked.Exchange(System.Int64@,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Exchange (ByRef location1 As Long, value As Long) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long Exchange(long % location1, long value);" />
      <MemberSignature Language="F#" Value="static member Exchange :  * int64 -&gt; int64" Usage="System.Threading.Interlocked.Exchange (location1, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location1" Type="System.Int64" RefType="ref" />
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="location1">
          <span data-ttu-id="b4803-294">Die Variable, die auf den angegebenen Wert festgelegt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-294">The variable to set to the specified value.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="b4803-295">Der Wert, auf den der <paramref name="location1" />-Parameter festgelegt ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-295">The value to which the <paramref name="location1" /> parameter is set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b4803-296">Legt eine 64-Bit-Ganzzahl mit Vorzeichen in einer atomaren Operation auf einen angegebenen Wert fest und gibt den ursprünglichen Wert zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-296">Sets a 64-bit signed integer to a specified value and returns the original value, as an atomic operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b4803-297">Der ursprüngliche Wert von <paramref name="location1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-297">The original value of <paramref name="location1" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NullReferenceException">
          <span data-ttu-id="b4803-298">Die Adresse von <paramref name="location1" /> ist ein NULL-Zeiger.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-298">The address of <paramref name="location1" /> is a null pointer.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/threading/index.md">
          <span data-ttu-id="b4803-299">Verwaltetes Threading</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-299">Managed Threading</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/threading/overview-of-synchronization-primitives.md">
          <span data-ttu-id="b4803-300">Übersicht über Synchronisierungsprimitive</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-300">Overview of synchronization primitives</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Exchange">
      <MemberSignature Language="C#" Value="public static IntPtr Exchange (ref IntPtr location1, IntPtr value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int Exchange(native int&amp; location1, native int value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Interlocked.Exchange(System.IntPtr@,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Exchange (ByRef location1 As IntPtr, value As IntPtr) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr Exchange(IntPtr % location1, IntPtr value);" />
      <MemberSignature Language="F#" Value="static member Exchange :  * nativeint -&gt; nativeint" Usage="System.Threading.Interlocked.Exchange (location1, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location1" Type="System.IntPtr" RefType="ref" />
        <Parameter Name="value" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="location1">
          <span data-ttu-id="b4803-301">Die Variable, die auf den angegebenen Wert festgelegt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-301">The variable to set to the specified value.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="b4803-302">Der Wert, auf den der <paramref name="location1" />-Parameter festgelegt ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-302">The value to which the <paramref name="location1" /> parameter is set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b4803-303">Legt in einer atomaren Operation ein plattformspezifisches Handle bzw. einen plattformspezifischen Zeiger auf einen angegebenen Wert fest und gibt den ursprünglichen Wert zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-303">Sets a platform-specific handle or pointer to a specified value and returns the original value, as an atomic operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b4803-304">Der ursprüngliche Wert von <paramref name="location1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-304">The original value of <paramref name="location1" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NullReferenceException">
          <span data-ttu-id="b4803-305">Die Adresse von <paramref name="location1" /> ist ein NULL-Zeiger.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-305">The address of <paramref name="location1" /> is a null pointer.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/threading/index.md">
          <span data-ttu-id="b4803-306">Verwaltetes Threading</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-306">Managed Threading</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/threading/overview-of-synchronization-primitives.md">
          <span data-ttu-id="b4803-307">Übersicht über Synchronisierungsprimitive</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-307">Overview of synchronization primitives</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Exchange">
      <MemberSignature Language="C#" Value="public static object Exchange (ref object location1, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object Exchange(object&amp; location1, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Interlocked.Exchange(System.Object@,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Exchange (ByRef location1 As Object, value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ Exchange(System::Object ^ % location1, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member Exchange :  * obj -&gt; obj" Usage="System.Threading.Interlocked.Exchange (location1, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location1" Type="System.Object" RefType="ref" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="location1">
          <span data-ttu-id="b4803-308">Die Variable, die auf den angegebenen Wert festgelegt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-308">The variable to set to the specified value.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="b4803-309">Der Wert, auf den der <paramref name="location1" />-Parameter festgelegt ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-309">The value to which the <paramref name="location1" /> parameter is set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b4803-310">Legt in einer atomaren Operation ein Objekt auf einen angegebenen Wert fest und gibt einen Verweis auf das ursprüngliche Objekt zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-310">Sets an object to a specified value and returns a reference to the original object, as an atomic operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b4803-311">Der ursprüngliche Wert von <paramref name="location1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-311">The original value of <paramref name="location1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks

> [!IMPORTANT]
> <span data-ttu-id="b4803-312">Ab .NET Framework 2.0 die <xref:System.Threading.Interlocked.Exchange%60%601%28%60%600%40%2C%60%600%29> -methodenüberladung, bietet eine typsichere Alternative für Verweistypen zulässig.</span><span class="sxs-lookup"><span data-stu-id="b4803-312">Beginning with .NET Framework 2.0, the <xref:System.Threading.Interlocked.Exchange%60%601%28%60%600%40%2C%60%600%29> method overload provides a type-safe alternative for reference types.</span></span> <span data-ttu-id="b4803-313">Es wird empfohlen, dass Sie anstelle dieser Überladung aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="b4803-313">We recommend that you call it instead of this overload.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b4803-314">Die Adresse von <paramref name="location1" /> ist ein NULL-Zeiger.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-314">The address of <paramref name="location1" /> is a null pointer.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/threading/index.md">
          <span data-ttu-id="b4803-315">Verwaltetes Threading</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-315">Managed Threading</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/threading/overview-of-synchronization-primitives.md">
          <span data-ttu-id="b4803-316">Übersicht über Synchronisierungsprimitive</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-316">Overview of synchronization primitives</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Exchange">
      <MemberSignature Language="C#" Value="public static float Exchange (ref float location1, float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Exchange(float32&amp; location1, float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Interlocked.Exchange(System.Single@,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Exchange (ByRef location1 As Single, value As Single) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Exchange(float % location1, float value);" />
      <MemberSignature Language="F#" Value="static member Exchange :  * single -&gt; single" Usage="System.Threading.Interlocked.Exchange (location1, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location1" Type="System.Single" RefType="ref" />
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="location1">
          <span data-ttu-id="b4803-317">Die Variable, die auf den angegebenen Wert festgelegt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-317">The variable to set to the specified value.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="b4803-318">Der Wert, auf den der <paramref name="location1" />-Parameter festgelegt ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-318">The value to which the <paramref name="location1" /> parameter is set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b4803-319">Legt in einer atomaren Operation eine Gleitkommazahl mit einfacher Genauigkeit auf einen angegebenen Wert fest und gibt den ursprünglichen Wert zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-319">Sets a single-precision floating point number to a specified value and returns the original value, as an atomic operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b4803-320">Der ursprüngliche Wert von <paramref name="location1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-320">The original value of <paramref name="location1" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NullReferenceException">
          <span data-ttu-id="b4803-321">Die Adresse von <paramref name="location1" /> ist ein NULL-Zeiger.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-321">The address of <paramref name="location1" /> is a null pointer.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/threading/index.md">
          <span data-ttu-id="b4803-322">Verwaltetes Threading</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-322">Managed Threading</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/threading/overview-of-synchronization-primitives.md">
          <span data-ttu-id="b4803-323">Übersicht über Synchronisierungsprimitive</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-323">Overview of synchronization primitives</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Exchange&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T Exchange&lt;T&gt; (ref T location1, T value) where T : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T Exchange&lt;class T&gt;(!!T&amp; location1, !!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Interlocked.Exchange``1(``0@,``0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Exchange(Of T As Class) (ByRef location1 As T, value As T) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : class static T Exchange(T % location1, T value);" />
      <MemberSignature Language="F#" Value="static member Exchange :  * 'T -&gt; 'T (requires 'T : null)" Usage="System.Threading.Interlocked.Exchange (location1, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="location1" Type="T" RefType="ref" />
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="b4803-324">Der Typ, der für <paramref name="location1" /> und <paramref name="value" /> verwendet werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-324">The type to be used for <paramref name="location1" /> and <paramref name="value" />.</span>
          </span>
          <span data-ttu-id="b4803-325">Dieser Typ muss ein Referenztyp sein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-325">This type must be a reference type.</span>
          </span>
        </typeparam>
        <param name="location1">
          <span data-ttu-id="b4803-326">Die Variable, die auf den angegebenen Wert festgelegt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-326">The variable to set to the specified value.</span>
          </span>
          <span data-ttu-id="b4803-327">Dies ist ein Verweisparameter (<see langword="ref" /> in C#, <see langword="ByRef" /> in Visual Basic).</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-327">This is a reference parameter (<see langword="ref" /> in C#, <see langword="ByRef" /> in Visual Basic).</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="b4803-328">Der Wert, auf den der <paramref name="location1" />-Parameter festgelegt ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-328">The value to which the <paramref name="location1" /> parameter is set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b4803-329">Legt eine Variable vom angegebenen Typ <paramref name="T" /> in einer atomaren Operation auf einen angegebenen Wert fest und gibt den ursprünglichen Wert zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-329">Sets a variable of the specified type <paramref name="T" /> to a specified value and returns the original value, as an atomic operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b4803-330">Der ursprüngliche Wert von <paramref name="location1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-330">The original value of <paramref name="location1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4803-331">Diese Methode unterstützt nur Verweistypen.</span><span class="sxs-lookup"><span data-stu-id="b4803-331">This method only supports reference types.</span></span> <span data-ttu-id="b4803-332">Es gibt Überladungen der der <xref:System.Threading.Interlocked.Exchange%2A> -Methode für die <xref:System.Int32>, <xref:System.Int64>, <xref:System.IntPtr>, <xref:System.Single>, und <xref:System.Double> Werttypen, aber es gibt keine Unterstützung für andere Werttypen.</span><span class="sxs-lookup"><span data-stu-id="b4803-332">There are overloads of the <xref:System.Threading.Interlocked.Exchange%2A> method for the <xref:System.Int32>, <xref:System.Int64>, <xref:System.IntPtr>, <xref:System.Single>, and <xref:System.Double> value types, but there is no support for other value types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b4803-333">Diese methodenüberladung ist besser als die <xref:System.Threading.Interlocked.Exchange%28System.Object%40%2CSystem.Object%29> Methode zu überladen, da letztere spät gebundener Zugriff auf das Zielobjekt erforderlich ist.</span><span class="sxs-lookup"><span data-stu-id="b4803-333">This method overload is preferable to the <xref:System.Threading.Interlocked.Exchange%28System.Object%40%2CSystem.Object%29> method overload, because the latter requires late-bound access to the destination object .</span></span>  
 ]]></format>
        </remarks>
        <exception cref="T:System.NullReferenceException">
          <span data-ttu-id="b4803-334">Die Adresse von <paramref name="location1" /> ist ein NULL-Zeiger.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-334">The address of <paramref name="location1" /> is a null pointer.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Increment">
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b4803-335">Inkrementiert den Wert einer angegebenen Variablen und speichert das Ergebnis in einer atomaren Operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-335">Increments a specified variable and stores the result, as an atomic operation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Increment">
      <MemberSignature Language="C#" Value="public static int Increment (ref int location);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Increment(int32&amp; location) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Interlocked.Increment(System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Increment (ByRef location As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Increment(int % location);" />
      <MemberSignature Language="F#" Value="static member Increment :  -&gt; int" Usage="System.Threading.Interlocked.Increment location" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="System.Int32" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="location">
          <span data-ttu-id="b4803-336">Die Variable, deren Wert inkrementiert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-336">The variable whose value is to be incremented.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b4803-337">Inkrementiert den Wert einer angegebenen Variablen und speichert das Ergebnis in einer atomaren Operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-337">Increments a specified variable and stores the result, as an atomic operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b4803-338">Der inkrementierte Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-338">The incremented value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4803-339">Diese Methode verarbeitet Überlaufmodus durch das wrapping: Wenn `location`  =  <xref:System.Int32.MaxValue?displayProperty=nameWithType>, `location` + 1 = <xref:System.Int32.MinValue?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="b4803-339">This method handles an overflow condition by wrapping: if `location` = <xref:System.Int32.MaxValue?displayProperty=nameWithType>, `location` + 1 = <xref:System.Int32.MinValue?displayProperty=nameWithType>.</span></span> <span data-ttu-id="b4803-340">Es werden keine Ausnahmen ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="b4803-340">No exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b4803-341">Im folgende Beispiel wird bestimmt, wie viele Zufallszahlen, die zwischen 0 und 1.000 liegen erforderlich sind, um 1.000 zufällige Zahlen mit einem Wert für den Mittelpunkt zu generieren.</span><span class="sxs-lookup"><span data-stu-id="b4803-341">The following example determines how many random numbers that range from 0 to 1,000 are required to generate 1,000 random numbers with a midpoint value.</span></span> <span data-ttu-id="b4803-342">Um zu verfolgen die Anzahl der Werte für Mittelpunkt, eine Variable, `midpointCount`, gleich 0 festgelegt und inkrementiert jedes Mal der Zufallszahlen-Generator einen Wert für den Mittelpunkt, gibt bis 10.000 erreicht ist.</span><span class="sxs-lookup"><span data-stu-id="b4803-342">To keep track of the number of midpoint values, a variable, `midpointCount`, is set equal to 0 and incremented each time the random number generator returns a midpoint value until it reaches 10,000.</span></span> <span data-ttu-id="b4803-343">Da drei Threads, die Zufallszahlen, generieren die <xref:System.Threading.Interlocked.Increment%28System.Int32%40%29> Methode wird aufgerufen, um sicherzustellen, dass mehrere Threads nicht aktualisieren `midpointCount` gleichzeitig.</span><span class="sxs-lookup"><span data-stu-id="b4803-343">Because three threads generate the random numbers, the <xref:System.Threading.Interlocked.Increment%28System.Int32%40%29> method is called to ensure that multiple threads don't update `midpointCount` concurrently.</span></span> <span data-ttu-id="b4803-344">Beachten Sie, dass auch eine Sperre, zum Schutz der vom Zufallszahlen-Generator, und dass verwendet wird eine <xref:System.Threading.CountdownEvent> Objekt wird verwendet, um sicherzustellen, dass die `Main` Methode nicht vollständig ausführen, bevor der drei Threads.</span><span class="sxs-lookup"><span data-stu-id="b4803-344">Note that a lock is also used to protect the random number generator, and that a <xref:System.Threading.CountdownEvent> object is used to ensure that the `Main` method doesn't finish execution before the three threads.</span></span>  
  
 [!code-csharp[System.Threading.Interlocked.Increment2#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.interlocked.increment2/cs/increment3.cs#3)]
 [!code-vb[System.Threading.Interlocked.Increment2#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.interlocked.increment2/vb/Increment3.vb#3)]  
  
 <span data-ttu-id="b4803-345">Im folgende Beispiel ähnelt dem vorherigen Beispiel, außer dass mithilfe der <xref:System.Threading.Tasks.Task> Klasse anstatt eine Threadprozedur 50.000 zufällige Mittelpunkt ganzen Zahlen zu generieren.</span><span class="sxs-lookup"><span data-stu-id="b4803-345">The following example is similar to the previous one, except that it uses the <xref:System.Threading.Tasks.Task> class instead of a thread procedure to generate 50,000 random midpoint integers.</span></span> <span data-ttu-id="b4803-346">In diesem Beispiel ist ein Lambda-Ausdruck ersetzt die `GenerateNumbers` Threadprozedur und der Aufruf der <xref:System.Threading.Tasks.Task.WaitAll%2A?displayProperty=nameWithType> Methode beseitigt die Notwendigkeit der <xref:System.Threading.CountdownEvent> Objekt.</span><span class="sxs-lookup"><span data-stu-id="b4803-346">In this example, a lambda expression replaces the `GenerateNumbers` thread procedure, and the call to the <xref:System.Threading.Tasks.Task.WaitAll%2A?displayProperty=nameWithType> method eliminates the need for the <xref:System.Threading.CountdownEvent> object.</span></span>  
  
 [!code-csharp[System.Threading.Interlocked.Increment2#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.interlocked.increment2/cs/increment4.cs#4)]
 [!code-vb[System.Threading.Interlocked.Increment2#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.interlocked.increment2/vb/Increment4.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NullReferenceException">
          <span data-ttu-id="b4803-347">Die Adresse von <paramref name="location" /> ist ein NULL-Zeiger.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-347">The address of <paramref name="location" /> is a null pointer.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/threading/index.md">
          <span data-ttu-id="b4803-348">Verwaltetes Threading</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-348">Managed Threading</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/threading/overview-of-synchronization-primitives.md">
          <span data-ttu-id="b4803-349">Übersicht über Synchronisierungsprimitive</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-349">Overview of synchronization primitives</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Increment">
      <MemberSignature Language="C#" Value="public static long Increment (ref long location);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 Increment(int64&amp; location) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Interlocked.Increment(System.Int64@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Increment (ByRef location As Long) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long Increment(long % location);" />
      <MemberSignature Language="F#" Value="static member Increment :  -&gt; int64" Usage="System.Threading.Interlocked.Increment location" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="System.Int64" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="location">
          <span data-ttu-id="b4803-350">Die Variable, deren Wert inkrementiert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-350">The variable whose value is to be incremented.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b4803-351">Inkrementiert den Wert einer angegebenen Variablen und speichert das Ergebnis in einer atomaren Operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-351">Increments a specified variable and stores the result, as an atomic operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b4803-352">Der inkrementierte Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-352">The incremented value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4803-353">Diese Methode verarbeitet Überlaufmodus durch das wrapping: Wenn `location`  =  <xref:System.Int64.MaxValue?displayProperty=nameWithType>, `location` + 1 = <xref:System.Int64.MinValue?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="b4803-353">This method handles an overflow condition by wrapping: if `location` = <xref:System.Int64.MaxValue?displayProperty=nameWithType>, `location` + 1 = <xref:System.Int64.MinValue?displayProperty=nameWithType>.</span></span> <span data-ttu-id="b4803-354">Es werden keine Ausnahmen ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="b4803-354">No exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NullReferenceException">
          <span data-ttu-id="b4803-355">Die Adresse von <paramref name="location" /> ist ein NULL-Zeiger.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-355">The address of <paramref name="location" /> is a null pointer.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Threading.Interlocked.Decrement" />
        <altmember cref="Overload:System.Threading.Interlocked.Add" />
        <altmember cref="M:System.Threading.Interlocked.Read(System.Int64@)" />
        <related type="Article" href="~/docs/standard/threading/index.md">
          <span data-ttu-id="b4803-356">Verwaltetes Threading</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-356">Managed Threading</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/threading/overview-of-synchronization-primitives.md">
          <span data-ttu-id="b4803-357">Übersicht über Synchronisierungsprimitive</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-357">Overview of synchronization primitives</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="MemoryBarrier">
      <MemberSignature Language="C#" Value="public static void MemoryBarrier ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MemoryBarrier() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Interlocked.MemoryBarrier" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub MemoryBarrier ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void MemoryBarrier();" />
      <MemberSignature Language="F#" Value="static member MemoryBarrier : unit -&gt; unit" Usage="System.Threading.Interlocked.MemoryBarrier " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b4803-358">Synchronisiert den Speicherzugriff wie folgt: Der Prozessor, der den aktuellen Thread ausführt, kann Anweisungen nicht so neu anordnen, dass Speicherzugriffe vor dem Aufruf von <see cref="M:System.Threading.Interlocked.MemoryBarrier" /> nach Speicherzugriffen ausgeführt werden, die nach dem Aufruf <see cref="M:System.Threading.Interlocked.MemoryBarrier" /> erfolgen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-358">Synchronizes memory access as follows: The processor that executes the current thread cannot reorder instructions in such a way that memory accesses before the call to <see cref="M:System.Threading.Interlocked.MemoryBarrier" /> execute after memory accesses that follow the call to <see cref="M:System.Threading.Interlocked.MemoryBarrier" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4803-359">Diese Methode wurde hinzugefügt, um die <xref:System.Threading.Interlocked> -Klasse in der [!INCLUDE[net_v45](~/includes/net-v45-md.md)] aus Gründen der benutzerfreundlichkeit; es ist ein Wrapper für die <xref:System.Threading.Thread.MemoryBarrier%2A?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="b4803-359">This method was added to the <xref:System.Threading.Interlocked> class in the [!INCLUDE[net_v45](~/includes/net-v45-md.md)] as a convenience; it's a wrapper for the <xref:System.Threading.Thread.MemoryBarrier%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="b4803-360"><xref:System.Threading.Interlocked.MemoryBarrier%2A> ist nur auf Systemen mit mehreren Prozessoren erforderlich, die unsichere speichersortierung (z. B. ein System, das mehrere Intel Itanium-Prozessoren verwendet).</span><span class="sxs-lookup"><span data-stu-id="b4803-360"><xref:System.Threading.Interlocked.MemoryBarrier%2A> is required only on multiprocessor systems that have weak memory ordering (for example, a system that employs multiple Intel Itanium processors).</span></span>  
  
 <span data-ttu-id="b4803-361">Den meisten Fällen ist die C#- `lock` -Anweisung, die Visual Basic `SyncLock` -Anweisung oder der <xref:System.Threading.Monitor> Klasse bereitstellen, einfachere Möglichkeiten, um Daten zu synchronisieren.</span><span class="sxs-lookup"><span data-stu-id="b4803-361">For most purposes, the C# `lock` statement, the Visual Basic `SyncLock` statement, or the <xref:System.Threading.Monitor> class provide easier ways to synchronize data.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MemoryBarrierProcessWide">
      <MemberSignature Language="C#" Value="public static void MemoryBarrierProcessWide ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MemoryBarrierProcessWide() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Interlocked.MemoryBarrierProcessWide" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub MemoryBarrierProcessWide ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void MemoryBarrierProcessWide();" />
      <MemberSignature Language="F#" Value="static member MemoryBarrierProcessWide : unit -&gt; unit" Usage="System.Threading.Interlocked.MemoryBarrierProcessWide " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public static long Read (ref long location);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 Read(int64&amp; location) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Interlocked.Read(System.Int64@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Read (ByRef location As Long) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long Read(long % location);" />
      <MemberSignature Language="F#" Value="static member Read :  -&gt; int64" Usage="System.Threading.Interlocked.Read location" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="System.Int64" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="location">
          <span data-ttu-id="b4803-362">Der zu ladende 64-Bit-Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-362">The 64-bit value to be loaded.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b4803-363">Gibt einen 64-Bit-Wert zurück, der in einer atomaren Operation geladen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-363">Returns a 64-bit value, loaded as an atomic operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b4803-364">Der geladene Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-364">The loaded value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4803-365">Die <xref:System.Threading.Interlocked.Read%2A> Methode ist in 64-Bit-Systemen nicht erforderlich, da Lesevorgänge für 64-Bit-bereits atomar sind.</span><span class="sxs-lookup"><span data-stu-id="b4803-365">The <xref:System.Threading.Interlocked.Read%2A> method is unnecessary on 64-bit systems, because 64-bit read operations are already atomic.</span></span> <span data-ttu-id="b4803-366">Auf 32-Bit-Systemen 64-Bit-Lesevorgänge sind nicht atomaren, es sei denn, die mit <xref:System.Threading.Interlocked.Read%2A>.</span><span class="sxs-lookup"><span data-stu-id="b4803-366">On 32-bit systems, 64-bit read operations are not atomic unless performed using <xref:System.Threading.Interlocked.Read%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Threading.Interlocked.Increment" />
        <altmember cref="Overload:System.Threading.Interlocked.Decrement" />
        <altmember cref="Overload:System.Threading.Interlocked.Add" />
        <related type="Article" href="~/docs/standard/threading/index.md">
          <span data-ttu-id="b4803-367">Verwaltetes Threading</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-367">Managed Threading</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/threading/overview-of-synchronization-primitives.md">
          <span data-ttu-id="b4803-368">Übersicht über Synchronisierungsprimitive</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4803-368">Overview of synchronization primitives</span>
          </span>
        </related>
      </Docs>
    </Member>
  </Members>
</Type>