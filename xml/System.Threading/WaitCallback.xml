<Type Name="WaitCallback" FullName="System.Threading.WaitCallback">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e449bc2e1f73bcea278171a976c548bee782a692" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86848670" /></Metadata><TypeSignature Language="C#" Value="public delegate void WaitCallback(object state);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed WaitCallback extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Threading.WaitCallback" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub WaitCallback(state As Object)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void WaitCallback(System::Object ^ state);" />
  <TypeSignature Language="F#" Value="type WaitCallback = delegate of obj -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.ThreadPool</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Threading.ThreadPool" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(true)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Parameters>
    <Parameter Name="state" Type="System.Object" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="state"><span data-ttu-id="b0d28-101">Ein Objekt, das die von der Rückrufmethode zu verwendenden Informationen enthält.</span><span class="sxs-lookup"><span data-stu-id="b0d28-101">An object containing information to be used by the callback method.</span></span></param>
    <summary><span data-ttu-id="b0d28-102">Stellt die Rückrufmethode dar, die von einem Thread des Threadpools ausgeführt werden soll.</span><span class="sxs-lookup"><span data-stu-id="b0d28-102">Represents a callback method to be executed by a thread pool thread.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0d28-103"><xref:System.Threading.WaitCallback> stellt eine Rückruf Methode dar, die Sie in einem Thread ausführen möchten <xref:System.Threading.ThreadPool> .</span><span class="sxs-lookup"><span data-stu-id="b0d28-103"><xref:System.Threading.WaitCallback> represents a callback method that you want to execute on a <xref:System.Threading.ThreadPool> thread.</span></span> <span data-ttu-id="b0d28-104">Erstellen Sie den Delegaten, indem Sie die Rückruf Methode an den- <xref:System.Threading.WaitCallback> Konstruktor übergeben.</span><span class="sxs-lookup"><span data-stu-id="b0d28-104">Create the delegate by passing your callback method to the <xref:System.Threading.WaitCallback> constructor.</span></span> <span data-ttu-id="b0d28-105">Die-Methode muss über die hier gezeigte Signatur verfügen.</span><span class="sxs-lookup"><span data-stu-id="b0d28-105">Your method must have the signature shown here.</span></span>  
  
 <span data-ttu-id="b0d28-106">Stellen Sie die Methode zur Ausführung in die Warteschlange, indem Sie den Delegaten <xref:System.Threading.WaitCallback> <xref:System.Threading.ThreadPool.QueueUserWorkItem%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="b0d28-106">Queue the method for execution by passing the <xref:System.Threading.WaitCallback> delegate to <xref:System.Threading.ThreadPool.QueueUserWorkItem%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="b0d28-107">Die Rückruf Methode wird ausgeführt, wenn ein Thread Pool Thread verfügbar wird.</span><span class="sxs-lookup"><span data-stu-id="b0d28-107">The callback method executes when a thread pool thread becomes available.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b0d28-108">Visual Basic Benutzer den <xref:System.Threading.WaitCallback> -Konstruktor weglassen und einfach den-Operator verwenden können, `AddressOf` Wenn Sie die Rückruf Methode an übergeben <xref:System.Threading.ThreadPool.QueueUserWorkItem%2A> .</span><span class="sxs-lookup"><span data-stu-id="b0d28-108">Visual Basic users can omit the <xref:System.Threading.WaitCallback> constructor, and simply use the `AddressOf` operator when passing the callback method to <xref:System.Threading.ThreadPool.QueueUserWorkItem%2A>.</span></span> <span data-ttu-id="b0d28-109">Visual Basic ruft automatisch den richtigen Delegatkonstruktor auf.</span><span class="sxs-lookup"><span data-stu-id="b0d28-109">Visual Basic automatically calls the correct delegate constructor.</span></span>  
  
 <span data-ttu-id="b0d28-110">Wenn Sie Informationen an die Rückruf Methode übergeben möchten, erstellen Sie ein-Objekt, das die erforderlichen Informationen enthält, und übergeben Sie es <xref:System.Threading.ThreadPool.QueueUserWorkItem(System.Threading.WaitCallback,System.Object)> als zweites Argument an die-Methode.</span><span class="sxs-lookup"><span data-stu-id="b0d28-110">If you want to pass information to the callback method, create an object that contains the necessary information and pass it to the <xref:System.Threading.ThreadPool.QueueUserWorkItem(System.Threading.WaitCallback,System.Object)> method as the second argument.</span></span> <span data-ttu-id="b0d28-111">Jedes Mal, wenn die Rückruf Methode ausgeführt wird, enthält der- `state` Parameter dieses-Objekt.</span><span class="sxs-lookup"><span data-stu-id="b0d28-111">Each time the callback method executes, the `state` parameter contains this object.</span></span>  

 <span data-ttu-id="b0d28-112">Beispiele für die Verwendung des-Delegaten `WaitCallback` finden Sie unter der- <xref:System.Threading.ThreadPool.QueueUserWorkItem%2A?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="b0d28-112">For examples that use the `WaitCallback` delegate, see the <xref:System.Threading.ThreadPool.QueueUserWorkItem%2A?displayProperty=nameWithType> method.</span></span>
  
 <span data-ttu-id="b0d28-113">Weitere Informationen zum Thread Pool finden Sie [unter Managed Thread Pool](/dotnet/standard/threading/the-managed-thread-pool).</span><span class="sxs-lookup"><span data-stu-id="b0d28-113">For more information about the thread pool, see [The managed thread pool](/dotnet/standard/threading/the-managed-thread-pool).</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Threading.ThreadPool" />
    <related type="Article" href="/dotnet/standard/threading/threads-and-threading"><span data-ttu-id="b0d28-114">Threads und Threading</span><span class="sxs-lookup"><span data-stu-id="b0d28-114">Threads and Threading</span></span></related>
    <related type="Article" href="/dotnet/standard/threading/the-managed-thread-pool"><span data-ttu-id="b0d28-115">Der verwaltete Threadpool</span><span class="sxs-lookup"><span data-stu-id="b0d28-115">The managed thread pool</span></span></related>
  </Docs>
</Type>
