<Type Name="WaitCallback" FullName="System.Threading.WaitCallback">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9b08f5a80a4dd4ed601aca65e52ee1547e19a78f" /><Meta Name="ms.sourcegitcommit" Value="b6b9d5f3f9c7eb43f14a8a1a68d044603cb8ed73" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="05/18/2020" /><Meta Name="ms.locfileid" Value="83480792" /></Metadata><TypeSignature Language="C#" Value="public delegate void WaitCallback(object state);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed WaitCallback extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Threading.WaitCallback" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub WaitCallback(state As Object)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void WaitCallback(System::Object ^ state);" />
  <TypeSignature Language="F#" Value="type WaitCallback = delegate of obj -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.ThreadPool</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Threading.ThreadPool" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Parameters>
    <Parameter Name="state" Type="System.Object" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="state">Ein Objekt, das die von der Rückrufmethode zu verwendenden Informationen enthält.</param>
    <summary>Stellt die Rückrufmethode dar, die von einem Thread des Threadpools ausgeführt werden soll.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Threading.WaitCallback> stellt eine Rückruf Methode dar, die Sie für einen <xref:System.Threading.ThreadPool> Thread ausführen möchten. Erstellen Sie den Delegaten, indem Sie die Rückruf Methode an den <xref:System.Threading.WaitCallback>-Konstruktor übergeben. Die-Methode muss über die hier gezeigte Signatur verfügen.  
  
 Stellen Sie die Methode zur Ausführung in die Warteschlange, indem Sie den <xref:System.Threading.WaitCallback> Delegaten an <xref:System.Threading.ThreadPool.QueueUserWorkItem%2A?displayProperty=nameWithType> Die Rückruf Methode wird ausgeführt, wenn ein Thread Pool Thread verfügbar wird.  
  
> [!NOTE]
>  Visual Basic Benutzer den <xref:System.Threading.WaitCallback>-Konstruktor weglassen und einfach den `AddressOf`-Operator verwenden können, wenn Sie die Rückruf Methode an <xref:System.Threading.ThreadPool.QueueUserWorkItem%2A>übergeben. Visual Basic ruft automatisch den richtigen Delegatkonstruktor auf.  
  
 Wenn Sie Informationen an die Rückruf Methode übergeben möchten, erstellen Sie ein-Objekt, das die erforderlichen Informationen enthält, und übergeben Sie es als zweites Argument an die <xref:System.Threading.ThreadPool.QueueUserWorkItem(System.Threading.WaitCallback,System.Object)>-Methode. Jedes Mal, wenn die Rückruf Methode ausgeführt wird, enthält der `state`-Parameter dieses-Objekt.  

 Beispiele, in denen der `WaitCallback` Delegat verwendet wird, finden Sie in der <xref:System.Threading.ThreadPool.QueueUserWorkItem%2A?displayProperty=nameWithType>-Methode.
  
 Weitere Informationen zum Thread Pool finden Sie [unter Managed Thread Pool](~/docs/standard/threading/the-managed-thread-pool.md).  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Threading.ThreadPool" />
    <related type="Article" href="~/docs/standard/threading/threads-and-threading.md">Threads und Threading</related>
    <related type="Article" href="~/docs/standard/threading/the-managed-thread-pool.md">Der verwaltete Threadpool</related>
  </Docs>
</Type>
