<Type Name="WaitCallback" FullName="System.Threading.WaitCallback">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c971c6ff730ee4e62d7280c5bffa17634a0ecf8f" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37754555" />
  </Metadata>
  <TypeSignature Language="C#" Value="public delegate void WaitCallback(object state);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed WaitCallback extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Threading.WaitCallback" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub WaitCallback(state As Object)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void WaitCallback(System::Object ^ state);" />
  <TypeSignature Language="F#" Value="type WaitCallback = delegate of obj -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.ThreadPool</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Parameters>
    <Parameter Name="state" Type="System.Object" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="state">Ein Objekt, das die von der Rückrufmethode zu verwendenden Informationen enthält.</param>
    <summary>Stellt die Rückrufmethode dar, die von einem Thread des Threadpools ausgeführt werden soll.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Threading.WaitCallback> Stellt eine Rückrufmethode, die Sie möchten, führen Sie auf eine <xref:System.Threading.ThreadPool> Thread. Der Delegat erstellt, durch die Rückrufmethode zum Übergeben der <xref:System.Threading.WaitCallback> Konstruktor. Die Methode muss die hier gezeigte Signatur verfügen.  
  
 Task für die Ausführung durch Übergeben der Warteschlange die <xref:System.Threading.WaitCallback> Delegieren <xref:System.Threading.ThreadPool.QueueUserWorkItem%2A?displayProperty=nameWithType>. Die Rückrufmethode wird ausgeführt, wenn ein Thread des Threadpools verfügbar wird.  
  
> [!NOTE]
>  Visual Basic-Benutzer können weglassen der <xref:System.Threading.WaitCallback> Konstruktor, und verwenden Sie einfach die `AddressOf` beim Übergeben der Rückrufmethode, um den Operator <xref:System.Threading.ThreadPool.QueueUserWorkItem%2A>. Visual Basic ruft automatisch den richtigen Delegaten-Konstruktor.  
  
 Wenn Sie die Informationen an die Rückrufmethode übergeben möchten, erstellen Sie ein Objekt, das die erforderlichen Informationen enthält, und übergeben es an <xref:System.Threading.ThreadPool.QueueUserWorkItem%2A> Wenn Sie Task für die Ausführung der Warteschlange. Jedes Mal, die die Rückrufmethode wird ausgeführt, die `state` Parameter dieses Objekt enthält.  
  
 Weitere Informationen zur Verwendung von Rückrufen zum Synchronisieren von Threads im Threadpool finden Sie unter [der verwaltete Threadpool](~/docs/standard/threading/the-managed-thread-pool.md).  
  
   
  
## Examples  
 Dieser Abschnitt enthält zwei Beispiele. Im ersten Beispiel wird veranschaulicht, wie Sie eine einfache Aufgabe für die Ausführung im Threadpool in die Warteschlange können.  
  
 Im zweite Beispiel wird veranschaulicht, wie Sie eine Aufgabe in die Warteschlange und Informationen an ihn übergeben.  
  
 **Beispiel 1**  
  
 Dieses Beispiel zeigt, wie Sie mit der <xref:System.Threading.WaitCallback> Delegat, der eine Aufgabe für die Ausführung im Threadpool in die Warteschlange. Das Codebeispiel verwendet die <xref:System.Threading.ThreadPool.QueueUserWorkItem%28System.Threading.WaitCallback%29?displayProperty=nameWithType> -methodenüberladung, um einen Task, der durch dargestellt wird in die Warteschlange ein <xref:System.Threading.WaitCallback> , umschließt die `ThreadProc` Methode, um ausgeführt werden, wenn ein Thread verfügbar wird. Es sind keine Taskinformationen wird mit dieser Überladung bereitgestellt. Aus diesem Grund die Informationen, die zur Verfügung steht die `ThreadProc` Methode ist beschränkt auf das Objekt, das die Methode gehört.  
  
 [!code-cpp[System.Threading.ThreadPool QueueUserWorkItem0#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.ThreadPool QueueUserWorkItem0/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.ThreadPool QueueUserWorkItem0#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.ThreadPool QueueUserWorkItem0/CS/source.cs#1)]
 [!code-vb[System.Threading.ThreadPool QueueUserWorkItem0#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.ThreadPool QueueUserWorkItem0/VB/source.vb#1)]  
  
 **Beispiel 2**  
  
 Dieses Beispiel zeigt, wie Sie ein Objekt zu erstellen, die Informationen zum Vorgang enthält. Darüber hinaus veranschaulicht dieses Objekt an eine Aufgabe, die in der Warteschlange befindet, für die Ausführung übergeben, durch den Threadpool.  
  
 [!code-cpp[System.Threading.ThreadPool QueueUserWorkItem1#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.ThreadPool QueueUserWorkItem1/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.ThreadPool QueueUserWorkItem1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.ThreadPool QueueUserWorkItem1/CS/source.cs#1)]
 [!code-vb[System.Threading.ThreadPool QueueUserWorkItem1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.ThreadPool QueueUserWorkItem1/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Threading.ThreadPool" />
  </Docs>
</Type>