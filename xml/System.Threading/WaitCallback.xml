<Type Name="WaitCallback" FullName="System.Threading.WaitCallback">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c971c6ff730ee4e62d7280c5bffa17634a0ecf8f" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37754555" />
  </Metadata>
  <TypeSignature Language="C#" Value="public delegate void WaitCallback(object state);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed WaitCallback extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Threading.WaitCallback" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub WaitCallback(state As Object)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void WaitCallback(System::Object ^ state);" />
  <TypeSignature Language="F#" Value="type WaitCallback = delegate of obj -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.ThreadPool</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Parameters>
    <Parameter Name="state" Type="System.Object" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="state">
      <span data-ttu-id="5823d-101">Ein Objekt, das die von der Rückrufmethode zu verwendenden Informationen enthält.</span>
      <span class="sxs-lookup">
        <span data-stu-id="5823d-101">An object containing information to be used by the callback method.</span>
      </span>
    </param>
    <summary>
      <span data-ttu-id="5823d-102">Stellt die Rückrufmethode dar, die von einem Thread des Threadpools ausgeführt werden soll.</span>
      <span class="sxs-lookup">
        <span data-stu-id="5823d-102">Represents a callback method to be executed by a thread pool thread.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5823d-103"><xref:System.Threading.WaitCallback> Stellt eine Rückrufmethode, die Sie möchten, führen Sie auf eine <xref:System.Threading.ThreadPool> Thread.</span><span class="sxs-lookup"><span data-stu-id="5823d-103"><xref:System.Threading.WaitCallback> represents a callback method that you want to execute on a <xref:System.Threading.ThreadPool> thread.</span></span> <span data-ttu-id="5823d-104">Der Delegat erstellt, durch die Rückrufmethode zum Übergeben der <xref:System.Threading.WaitCallback> Konstruktor.</span><span class="sxs-lookup"><span data-stu-id="5823d-104">Create the delegate by passing your callback method to the <xref:System.Threading.WaitCallback> constructor.</span></span> <span data-ttu-id="5823d-105">Die Methode muss die hier gezeigte Signatur verfügen.</span><span class="sxs-lookup"><span data-stu-id="5823d-105">Your method must have the signature shown here.</span></span>  
  
 <span data-ttu-id="5823d-106">Task für die Ausführung durch Übergeben der Warteschlange die <xref:System.Threading.WaitCallback> Delegieren <xref:System.Threading.ThreadPool.QueueUserWorkItem%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="5823d-106">Queue your task for execution by passing the <xref:System.Threading.WaitCallback> delegate to <xref:System.Threading.ThreadPool.QueueUserWorkItem%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="5823d-107">Die Rückrufmethode wird ausgeführt, wenn ein Thread des Threadpools verfügbar wird.</span><span class="sxs-lookup"><span data-stu-id="5823d-107">Your callback method executes when a thread pool thread becomes available.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5823d-108">Visual Basic-Benutzer können weglassen der <xref:System.Threading.WaitCallback> Konstruktor, und verwenden Sie einfach die `AddressOf` beim Übergeben der Rückrufmethode, um den Operator <xref:System.Threading.ThreadPool.QueueUserWorkItem%2A>.</span><span class="sxs-lookup"><span data-stu-id="5823d-108">Visual Basic users can omit the <xref:System.Threading.WaitCallback> constructor, and simply use the `AddressOf` operator when passing the callback method to <xref:System.Threading.ThreadPool.QueueUserWorkItem%2A>.</span></span> <span data-ttu-id="5823d-109">Visual Basic ruft automatisch den richtigen Delegaten-Konstruktor.</span><span class="sxs-lookup"><span data-stu-id="5823d-109">Visual Basic automatically calls the correct delegate constructor.</span></span>  
  
 <span data-ttu-id="5823d-110">Wenn Sie die Informationen an die Rückrufmethode übergeben möchten, erstellen Sie ein Objekt, das die erforderlichen Informationen enthält, und übergeben es an <xref:System.Threading.ThreadPool.QueueUserWorkItem%2A> Wenn Sie Task für die Ausführung der Warteschlange.</span><span class="sxs-lookup"><span data-stu-id="5823d-110">If you want to pass information to your callback method, create an object that contains the necessary information and pass it to <xref:System.Threading.ThreadPool.QueueUserWorkItem%2A> when you queue your task for execution.</span></span> <span data-ttu-id="5823d-111">Jedes Mal, die die Rückrufmethode wird ausgeführt, die `state` Parameter dieses Objekt enthält.</span><span class="sxs-lookup"><span data-stu-id="5823d-111">Each time your callback method executes, the `state` parameter contains this object.</span></span>  
  
 <span data-ttu-id="5823d-112">Weitere Informationen zur Verwendung von Rückrufen zum Synchronisieren von Threads im Threadpool finden Sie unter [der verwaltete Threadpool](~/docs/standard/threading/the-managed-thread-pool.md).</span><span class="sxs-lookup"><span data-stu-id="5823d-112">For more information about using callbacks to synchronize thread pool threads, see [The Managed Thread Pool](~/docs/standard/threading/the-managed-thread-pool.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5823d-113">Dieser Abschnitt enthält zwei Beispiele.</span><span class="sxs-lookup"><span data-stu-id="5823d-113">This section contains two examples.</span></span> <span data-ttu-id="5823d-114">Im ersten Beispiel wird veranschaulicht, wie Sie eine einfache Aufgabe für die Ausführung im Threadpool in die Warteschlange können.</span><span class="sxs-lookup"><span data-stu-id="5823d-114">The first example demonstrates how you can queue a simple task for execution by the thread pool.</span></span>  
  
 <span data-ttu-id="5823d-115">Im zweite Beispiel wird veranschaulicht, wie Sie eine Aufgabe in die Warteschlange und Informationen an ihn übergeben.</span><span class="sxs-lookup"><span data-stu-id="5823d-115">The second example demonstrates how you can queue a task and pass information to it.</span></span>  
  
 <span data-ttu-id="5823d-116">**Beispiel 1**</span><span class="sxs-lookup"><span data-stu-id="5823d-116">**Example 1**</span></span>  
  
 <span data-ttu-id="5823d-117">Dieses Beispiel zeigt, wie Sie mit der <xref:System.Threading.WaitCallback> Delegat, der eine Aufgabe für die Ausführung im Threadpool in die Warteschlange.</span><span class="sxs-lookup"><span data-stu-id="5823d-117">This example shows how to use the <xref:System.Threading.WaitCallback> delegate to queue a task for execution by the thread pool.</span></span> <span data-ttu-id="5823d-118">Das Codebeispiel verwendet die <xref:System.Threading.ThreadPool.QueueUserWorkItem%28System.Threading.WaitCallback%29?displayProperty=nameWithType> -methodenüberladung, um einen Task, der durch dargestellt wird in die Warteschlange ein <xref:System.Threading.WaitCallback> , umschließt die `ThreadProc` Methode, um ausgeführt werden, wenn ein Thread verfügbar wird.</span><span class="sxs-lookup"><span data-stu-id="5823d-118">The code example uses the <xref:System.Threading.ThreadPool.QueueUserWorkItem%28System.Threading.WaitCallback%29?displayProperty=nameWithType> method overload to queue a task, which is represented by a <xref:System.Threading.WaitCallback> that wraps the `ThreadProc` method, to execute when a thread becomes available.</span></span> <span data-ttu-id="5823d-119">Es sind keine Taskinformationen wird mit dieser Überladung bereitgestellt.</span><span class="sxs-lookup"><span data-stu-id="5823d-119">No task information is supplied with this overload.</span></span> <span data-ttu-id="5823d-120">Aus diesem Grund die Informationen, die zur Verfügung steht die `ThreadProc` Methode ist beschränkt auf das Objekt, das die Methode gehört.</span><span class="sxs-lookup"><span data-stu-id="5823d-120">Therefore, the information that is available to the `ThreadProc` method is limited to the object the method belongs to.</span></span>  
  
 [!code-cpp[System.Threading.ThreadPool QueueUserWorkItem0#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.ThreadPool QueueUserWorkItem0/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.ThreadPool QueueUserWorkItem0#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.ThreadPool QueueUserWorkItem0/CS/source.cs#1)]
 [!code-vb[System.Threading.ThreadPool QueueUserWorkItem0#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.ThreadPool QueueUserWorkItem0/VB/source.vb#1)]  
  
 <span data-ttu-id="5823d-121">**Beispiel 2**</span><span class="sxs-lookup"><span data-stu-id="5823d-121">**Example 2**</span></span>  
  
 <span data-ttu-id="5823d-122">Dieses Beispiel zeigt, wie Sie ein Objekt zu erstellen, die Informationen zum Vorgang enthält.</span><span class="sxs-lookup"><span data-stu-id="5823d-122">This example shows how to create an object that contains task information.</span></span> <span data-ttu-id="5823d-123">Darüber hinaus veranschaulicht dieses Objekt an eine Aufgabe, die in der Warteschlange befindet, für die Ausführung übergeben, durch den Threadpool.</span><span class="sxs-lookup"><span data-stu-id="5823d-123">It also demonstrates how to pass that object to a task that is queued for execution by the thread pool.</span></span>  
  
 [!code-cpp[System.Threading.ThreadPool QueueUserWorkItem1#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.ThreadPool QueueUserWorkItem1/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.ThreadPool QueueUserWorkItem1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.ThreadPool QueueUserWorkItem1/CS/source.cs#1)]
 [!code-vb[System.Threading.ThreadPool QueueUserWorkItem1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.ThreadPool QueueUserWorkItem1/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Threading.ThreadPool" />
  </Docs>
</Type>