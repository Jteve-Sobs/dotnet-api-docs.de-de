<Type Name="WaitCallback" FullName="System.Threading.WaitCallback">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="725a27fe96d2d466d7d3e8d48c2ce1fd0705c0b9" />
    <Meta Name="ms.sourcegitcommit" Value="d877ae76e9e11799bf919379507239e2c4072742" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="08/09/2018" />
    <Meta Name="ms.locfileid" Value="39829822" />
  </Metadata>
  <TypeSignature Language="C#" Value="public delegate void WaitCallback(object state);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed WaitCallback extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Threading.WaitCallback" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub WaitCallback(state As Object)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void WaitCallback(System::Object ^ state);" />
  <TypeSignature Language="F#" Value="type WaitCallback = delegate of obj -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.ThreadPool</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Parameters>
    <Parameter Name="state" Type="System.Object" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="state">
      <span data-ttu-id="c5002-101">Ein Objekt, das die von der Rückrufmethode zu verwendenden Informationen enthält.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c5002-101">An object containing information to be used by the callback method.</span>
      </span>
    </param>
    <summary>
      <span data-ttu-id="c5002-102">Stellt die Rückrufmethode dar, die von einem Thread des Threadpools ausgeführt werden soll.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c5002-102">Represents a callback method to be executed by a thread pool thread.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c5002-103"><xref:System.Threading.WaitCallback> Stellt eine Rückrufmethode, die Sie möchten, führen Sie auf eine <xref:System.Threading.ThreadPool> Thread.</span><span class="sxs-lookup"><span data-stu-id="c5002-103"><xref:System.Threading.WaitCallback> represents a callback method that you want to execute on a <xref:System.Threading.ThreadPool> thread.</span></span> <span data-ttu-id="c5002-104">Der Delegat erstellt, durch die Rückrufmethode zum Übergeben der <xref:System.Threading.WaitCallback> Konstruktor.</span><span class="sxs-lookup"><span data-stu-id="c5002-104">Create the delegate by passing your callback method to the <xref:System.Threading.WaitCallback> constructor.</span></span> <span data-ttu-id="c5002-105">Die Methode muss die hier gezeigte Signatur verfügen.</span><span class="sxs-lookup"><span data-stu-id="c5002-105">Your method must have the signature shown here.</span></span>  
  
 <span data-ttu-id="c5002-106">Die Methode für die Ausführung in die Warteschlange durch Übergeben der <xref:System.Threading.WaitCallback> Delegieren <xref:System.Threading.ThreadPool.QueueUserWorkItem%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="c5002-106">Queue the method for execution by passing the <xref:System.Threading.WaitCallback> delegate to <xref:System.Threading.ThreadPool.QueueUserWorkItem%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="c5002-107">Die Callback-Methode ausgeführt wird, wenn ein Thread des Threadpools verfügbar wird.</span><span class="sxs-lookup"><span data-stu-id="c5002-107">The callback method executes when a thread pool thread becomes available.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c5002-108">Visual Basic-Benutzer können weglassen der <xref:System.Threading.WaitCallback> Konstruktor, und verwenden Sie einfach die `AddressOf` beim Übergeben der Rückrufmethode, um den Operator <xref:System.Threading.ThreadPool.QueueUserWorkItem%2A>.</span><span class="sxs-lookup"><span data-stu-id="c5002-108">Visual Basic users can omit the <xref:System.Threading.WaitCallback> constructor, and simply use the `AddressOf` operator when passing the callback method to <xref:System.Threading.ThreadPool.QueueUserWorkItem%2A>.</span></span> <span data-ttu-id="c5002-109">Visual Basic ruft automatisch den richtigen Delegaten-Konstruktor.</span><span class="sxs-lookup"><span data-stu-id="c5002-109">Visual Basic automatically calls the correct delegate constructor.</span></span>  
  
 <span data-ttu-id="c5002-110">Wenn Sie die Informationen an die Rückrufmethode übergeben möchten, erstellen Sie ein Objekt, das die erforderlichen Informationen enthält, und übergeben Sie sie an der <xref:System.Threading.ThreadPool.QueueUserWorkItem(System.Threading.WaitCallback,System.Object)> Methode als zweites Argument.</span><span class="sxs-lookup"><span data-stu-id="c5002-110">If you want to pass information to the callback method, create an object that contains the necessary information and pass it to the <xref:System.Threading.ThreadPool.QueueUserWorkItem(System.Threading.WaitCallback,System.Object)> method as the second argument.</span></span> <span data-ttu-id="c5002-111">Jedes Mal die Callback-Methode ausgeführt wird, die `state` Parameter dieses Objekt enthält.</span><span class="sxs-lookup"><span data-stu-id="c5002-111">Each time the callback method executes, the `state` parameter contains this object.</span></span>  

 <span data-ttu-id="c5002-112">Beispiele für die Verwendung der `WaitCallback` delegieren, finden Sie unter den <xref:System.Threading.ThreadPool.QueueUserWorkItem%2A?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="c5002-112">For examples that use the `WaitCallback` delegate, see the <xref:System.Threading.ThreadPool.QueueUserWorkItem%2A?displayProperty=nameWithType> method.</span></span>
  
 <span data-ttu-id="c5002-113">Weitere Informationen zu den Threadpool, finden Sie unter [der verwaltete Threadpool](~/docs/standard/threading/the-managed-thread-pool.md).</span><span class="sxs-lookup"><span data-stu-id="c5002-113">For more information about the thread pool, see [The Managed Thread Pool](~/docs/standard/threading/the-managed-thread-pool.md).</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Threading.ThreadPool" />
  </Docs>
</Type>