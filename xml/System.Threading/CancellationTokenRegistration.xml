<Type Name="CancellationTokenRegistration" FullName="System.Threading.CancellationTokenRegistration">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3bf29c82d4cef6b2b50df05176f500ce41c5fa9e" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83967361" /></Metadata><TypeSignature Language="C#" Value="public struct CancellationTokenRegistration : IDisposable, IEquatable&lt;System.Threading.CancellationTokenRegistration&gt;" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit CancellationTokenRegistration extends System.ValueType implements class System.IDisposable, class System.IEquatable`1&lt;valuetype System.Threading.CancellationTokenRegistration&gt;" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="DocId" Value="T:System.Threading.CancellationTokenRegistration" />
  <TypeSignature Language="VB.NET" Value="Public Structure CancellationTokenRegistration&#xA;Implements IDisposable, IEquatable(Of CancellationTokenRegistration)" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="C++ CLI" Value="public value class CancellationTokenRegistration : IDisposable, IEquatable&lt;System::Threading::CancellationTokenRegistration&gt;" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="F#" Value="type CancellationTokenRegistration = struct&#xA;    interface IDisposable" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="C#" Value="public struct CancellationTokenRegistration : IAsyncDisposable, IDisposable, IEquatable&lt;System.Threading.CancellationTokenRegistration&gt;" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netstandard-2.1" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit CancellationTokenRegistration extends System.ValueType implements class System.IAsyncDisposable, class System.IDisposable, class System.IEquatable`1&lt;valuetype System.Threading.CancellationTokenRegistration&gt;" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netstandard-2.1" />
  <TypeSignature Language="VB.NET" Value="Public Structure CancellationTokenRegistration&#xA;Implements IAsyncDisposable, IDisposable, IEquatable(Of CancellationTokenRegistration)" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netstandard-2.1" />
  <TypeSignature Language="C++ CLI" Value="public value class CancellationTokenRegistration : IAsyncDisposable, IDisposable, IEquatable&lt;System::Threading::CancellationTokenRegistration&gt;" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netstandard-2.1" />
  <TypeSignature Language="F#" Value="type CancellationTokenRegistration = struct&#xA;    interface IAsyncDisposable&#xA;    interface IDisposable" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netstandard-2.1" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.Tasks</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="mscorlib" FromVersion="4.0.0.0" To="System.Threading.Tasks" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0" />
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Runtime" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
    <TypeForwarding From="System.Threading.Tasks" FromVersion="5.0.0.0" To="System.Runtime" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
    <TypeForwarding From="System.Threading.Tasks" FromVersion="4.1.0.0" To="System.Runtime" ToVersion="4.2.0.0" FrameworkAlternate="netcore-2.0" />
    <TypeForwarding From="System.Threading.Tasks" FromVersion="4.1.1.0" To="System.Runtime" ToVersion="4.2.1.0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0" />
    <TypeForwarding From="System.Threading.Tasks" FromVersion="4.1.2.0" To="System.Runtime" ToVersion="4.2.2.0" FrameworkAlternate="netcore-3.1" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Threading.CancellationTokenRegistration&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0">
      <AttributeName>System.Runtime.CompilerServices.IsReadOnly</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="f66e9-101">Stellt einen Rückrufdelegaten dar, der bei einem <see cref="T:System.Threading.CancellationToken" /> registriert wurde.</span><span class="sxs-lookup"><span data-stu-id="f66e9-101">Represents a callback delegate that has been registered with a <see cref="T:System.Threading.CancellationToken" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f66e9-102">Der Rückruf wird aufgerufen, wenn das Token abgebrochen wird.</span><span class="sxs-lookup"><span data-stu-id="f66e9-102">The callback is called when the token is canceled.</span></span> <span data-ttu-id="f66e9-103">Um die Registrierung eines Rückrufs aufzuheben, löschen Sie die zugehörige Registrierungs Instanz.</span><span class="sxs-lookup"><span data-stu-id="f66e9-103">To unregister a callback, dispose the corresponding Registration instance.</span></span> <span data-ttu-id="f66e9-104">Weitere Informationen und Codebeispiele finden Sie [unter Abbruch in verwalteten Threads](/dotnet/standard/threading/cancellation-in-managed-threads).</span><span class="sxs-lookup"><span data-stu-id="f66e9-104">For more information and code examples see [Cancellation in Managed Threads](/dotnet/standard/threading/cancellation-in-managed-threads).</span></span>  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="f66e9-105">Alle öffentlichen und geschützten Member von <see cref="T:System.Threading.CancellationTokenRegistration" /> sind Thread sicher und können gleichzeitig von mehreren Threads verwendet werden, mit Ausnahme von "verwerfen", die nur verwendet werden müssen, wenn alle anderen Vorgänge auf dem <see cref="T:System.Threading.CancellationTokenRegistration" /> abgeschlossen sind.</span><span class="sxs-lookup"><span data-stu-id="f66e9-105">All public and protected members of <see cref="T:System.Threading.CancellationTokenRegistration" /> are thread-safe and may be used concurrently from multiple threads, with the exception of Dispose, which must only be used when all other operations on the <see cref="T:System.Threading.CancellationTokenRegistration" /> have completed.</span></span></threadsafe>
    <related type="Article" href="/dotnet/standard/threading/cancellation-in-managed-threads"><span data-ttu-id="f66e9-106">Abbruch</span><span class="sxs-lookup"><span data-stu-id="f66e9-106">Cancellation</span></span></related>
    <related type="Article" href="/dotnet/standard/parallel-programming/task-cancellation"><span data-ttu-id="f66e9-107">Aufgabenabbruch</span><span class="sxs-lookup"><span data-stu-id="f66e9-107">Task Cancellation</span></span></related>
    <related type="Article" href="/dotnet/standard/threading/how-to-register-callbacks-for-cancellation-requests"><span data-ttu-id="f66e9-108">Gewusst wie: Registrieren von Rückrufen für Abbruchanforderungen</span><span class="sxs-lookup"><span data-stu-id="f66e9-108">How to: Register Callbacks for Cancellation Requests</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.CancellationTokenRegistration.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="cancellationTokenRegistration.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f66e9-109">Gibt alle von der aktuellen Instanz der <see cref="T:System.Threading.CancellationTokenRegistration" />-Klasse verwendeten Ressourcen frei.</span><span class="sxs-lookup"><span data-stu-id="f66e9-109">Releases all resources used by the current instance of the <see cref="T:System.Threading.CancellationTokenRegistration" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f66e9-110">Rufen Sie `Dispose` auf, wenn Sie <xref:System.Threading.CancellationTokenRegistration> nicht mehr benötigen.</span><span class="sxs-lookup"><span data-stu-id="f66e9-110">Call `Dispose` when you are finished using the <xref:System.Threading.CancellationTokenRegistration>.</span></span> <span data-ttu-id="f66e9-111">Die `Dispose`-Methode bewirkt, dass <xref:System.Threading.CancellationTokenRegistration> nicht mehr verwendet werden kann.</span><span class="sxs-lookup"><span data-stu-id="f66e9-111">The `Dispose` method leaves the <xref:System.Threading.CancellationTokenRegistration> in an unusable state.</span></span> <span data-ttu-id="f66e9-112">Nachdem Sie `Dispose`aufgerufen haben, müssen Sie alle Verweise auf die <xref:System.Threading.CancellationTokenRegistration> freigeben, damit der Garbage Collector den Speicher freigeben kann, den der <xref:System.Threading.CancellationTokenRegistration> belegt hat.</span><span class="sxs-lookup"><span data-stu-id="f66e9-112">After calling `Dispose`, you must release all references to the <xref:System.Threading.CancellationTokenRegistration> so the garbage collector can reclaim the memory that the <xref:System.Threading.CancellationTokenRegistration> was occupying.</span></span>  
  
 <span data-ttu-id="f66e9-113">Weitere Informationen finden Sie unter [Bereinigen von nicht verwalteten Ressourcen](/dotnet/standard/garbage-collection/unmanaged) und [Implementieren einer](/dotnet/standard/garbage-collection/implementing-dispose)verwerfen-Methode.</span><span class="sxs-lookup"><span data-stu-id="f66e9-113">For more information, see [Cleaning Up Unmanaged Resources](/dotnet/standard/garbage-collection/unmanaged) and [Implementing a Dispose Method](/dotnet/standard/garbage-collection/implementing-dispose).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f66e9-114">Rufen Sie immer `Dispose` auf, bevor Sie den letzten Verweis auf das <xref:System.Threading.CancellationTokenRegistration> freigeben.</span><span class="sxs-lookup"><span data-stu-id="f66e9-114">Always call `Dispose` before you release your last reference to the <xref:System.Threading.CancellationTokenRegistration>.</span></span> <span data-ttu-id="f66e9-115">Andernfalls bleiben die verwendeten Ressourcen reserviert, bis die Garbage Collection die <xref:System.Threading.CancellationTokenRegistration>-Methode des `Finalize`-Objekts aufruft.</span><span class="sxs-lookup"><span data-stu-id="f66e9-115">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Threading.CancellationTokenRegistration> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/standard/threading/how-to-register-callbacks-for-cancellation-requests"><span data-ttu-id="f66e9-116">Gewusst wie: Registrieren von Rückrufen für Abbruchanforderungen</span><span class="sxs-lookup"><span data-stu-id="f66e9-116">How to: Register Callbacks for Cancellation Requests</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DisposeAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.ValueTask DisposeAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Threading.Tasks.ValueTask DisposeAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.CancellationTokenRegistration.DisposeAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function DisposeAsync () As ValueTask" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::ValueTask DisposeAsync();" />
      <MemberSignature Language="F#" Value="abstract member DisposeAsync : unit -&gt; System.Threading.Tasks.ValueTask&#xA;override this.DisposeAsync : unit -&gt; System.Threading.Tasks.ValueTask" Usage="cancellationTokenRegistration.DisposeAsync " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IAsyncDisposable.DisposeAsync</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f66e9-117">Verwirft die Registrierung und hebt die Registrierung des Zielrückrufs aus dem zugeordneten <see cref="T:System.Threading.CancellationToken" /> auf.</span><span class="sxs-lookup"><span data-stu-id="f66e9-117">Disposes of the registration and unregisters the target callback from the associated <see cref="T:System.Threading.CancellationToken" />.</span></span></summary>
        <returns><span data-ttu-id="f66e9-118">Eine Aufgabe, die den asynchronen Löschvorgang darstellt.</span><span class="sxs-lookup"><span data-stu-id="f66e9-118">A task that represents the asynchronous dispose operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  

<span data-ttu-id="f66e9-119">Der zurückgegebene <xref:System.Threading.Tasks.ValueTask> wird abgeschlossen, sobald die Registrierung des zugeordneten Rückrufs aufgehoben wird, ohne dass er ausgeführt wird oder wenn die Ausführung abgeschlossen ist</span><span class="sxs-lookup"><span data-stu-id="f66e9-119">The returned <xref:System.Threading.Tasks.ValueTask> completes once the associated callback is unregistered without having executed or once it's finished executing, except in the degenerate case where the callback is unregistering itself.</span></span>

         ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f66e9-120">Ermittelt, ob die aktuelle <see cref="T:System.Threading.CancellationTokenRegistration" />-Instanz und die angegebene <see cref="T:System.Threading.CancellationTokenRegistration" />-Instanz gleich sind.</span><span class="sxs-lookup"><span data-stu-id="f66e9-120">Determines whether the current <see cref="T:System.Threading.CancellationTokenRegistration" /> instance is equal to the specified <see cref="T:System.Threading.CancellationTokenRegistration" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.CancellationTokenRegistration.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="cancellationTokenRegistration.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="f66e9-121">Das andere Objekt, mit dem diese Instanz verglichen werden soll.</span><span class="sxs-lookup"><span data-stu-id="f66e9-121">The other object to which to compare this instance.</span></span></param>
        <summary><span data-ttu-id="f66e9-122">Ermittelt, ob die aktuelle <see cref="T:System.Threading.CancellationTokenRegistration" />-Instanz und die angegebene <see cref="T:System.Threading.CancellationTokenRegistration" />-Instanz gleich sind.</span><span class="sxs-lookup"><span data-stu-id="f66e9-122">Determines whether the current <see cref="T:System.Threading.CancellationTokenRegistration" /> instance is equal to the specified <see cref="T:System.Threading.CancellationTokenRegistration" />.</span></span></summary>
        <returns><span data-ttu-id="f66e9-123"><see langword="true" />, wenn diese Instanz und <paramref name="obj" /> gleich sind.</span><span class="sxs-lookup"><span data-stu-id="f66e9-123"><see langword="true" /> if both this and <paramref name="obj" /> are equal.</span></span> <span data-ttu-id="f66e9-124">Andernfalls false.</span><span class="sxs-lookup"><span data-stu-id="f66e9-124">False, otherwise.</span></span>  
  
<span data-ttu-id="f66e9-125">Zwei <see cref="T:System.Threading.CancellationTokenRegistration" />-Instanzen sind gleich, wenn sie beide auf die Ausgabe eines Aufrufs derselben Register-Methode eines <see cref="T:System.Threading.CancellationToken" /> verweisen.</span><span class="sxs-lookup"><span data-stu-id="f66e9-125">Two <see cref="T:System.Threading.CancellationTokenRegistration" /> instances are equal if they both refer to the output of a single call to the same Register method of a <see cref="T:System.Threading.CancellationToken" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="/dotnet/standard/threading/cancellation-in-managed-threads"><span data-ttu-id="f66e9-126">Abbruch</span><span class="sxs-lookup"><span data-stu-id="f66e9-126">Cancellation</span></span></related>
        <related type="Article" href="/dotnet/standard/parallel-programming/task-cancellation"><span data-ttu-id="f66e9-127">Aufgabenabbruch</span><span class="sxs-lookup"><span data-stu-id="f66e9-127">Task Cancellation</span></span></related>
        <related type="Article" href="/dotnet/standard/threading/how-to-register-callbacks-for-cancellation-requests"><span data-ttu-id="f66e9-128">Gewusst wie: Registrieren von Rückrufen für Abbruchanforderungen</span><span class="sxs-lookup"><span data-stu-id="f66e9-128">How to: Register Callbacks for Cancellation Requests</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Threading.CancellationTokenRegistration other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype System.Threading.CancellationTokenRegistration other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.CancellationTokenRegistration.Equals(System.Threading.CancellationTokenRegistration)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As CancellationTokenRegistration) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Threading::CancellationTokenRegistration other);" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Threading.CancellationTokenRegistration -&gt; bool" Usage="cancellationTokenRegistration.Equals other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Threading.CancellationTokenRegistration" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="f66e9-129">Das andere <see cref="T:System.Threading.CancellationTokenRegistration" />, mit dem diese Instanz verglichen werden soll.</span><span class="sxs-lookup"><span data-stu-id="f66e9-129">The other <see cref="T:System.Threading.CancellationTokenRegistration" /> to which to compare this instance.</span></span></param>
        <summary><span data-ttu-id="f66e9-130">Ermittelt, ob die aktuelle <see cref="T:System.Threading.CancellationTokenRegistration" />-Instanz und die angegebene <see cref="T:System.Threading.CancellationTokenRegistration" />-Instanz gleich sind.</span><span class="sxs-lookup"><span data-stu-id="f66e9-130">Determines whether the current <see cref="T:System.Threading.CancellationTokenRegistration" /> instance is equal to the specified <see cref="T:System.Threading.CancellationTokenRegistration" />.</span></span></summary>
        <returns><span data-ttu-id="f66e9-131"><see langword="true" />, wenn diese Instanz und <paramref name="other" /> gleich sind.</span><span class="sxs-lookup"><span data-stu-id="f66e9-131"><see langword="true" /> if both this and <paramref name="other" /> are equal.</span></span> <span data-ttu-id="f66e9-132">Andernfalls false.</span><span class="sxs-lookup"><span data-stu-id="f66e9-132">False, otherwise.</span></span>  
  
<span data-ttu-id="f66e9-133">Zwei <see cref="T:System.Threading.CancellationTokenRegistration" />-Instanzen sind gleich, wenn sie beide auf die Ausgabe eines Aufrufs derselben Register-Methode eines <see cref="T:System.Threading.CancellationToken" /> verweisen.</span><span class="sxs-lookup"><span data-stu-id="f66e9-133">Two <see cref="T:System.Threading.CancellationTokenRegistration" /> instances are equal if they both refer to the output of a single call to the same Register method of a <see cref="T:System.Threading.CancellationToken" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="/dotnet/standard/threading/cancellation-in-managed-threads"><span data-ttu-id="f66e9-134">Abbruch</span><span class="sxs-lookup"><span data-stu-id="f66e9-134">Cancellation</span></span></related>
        <related type="Article" href="/dotnet/standard/parallel-programming/task-cancellation"><span data-ttu-id="f66e9-135">Aufgabenabbruch</span><span class="sxs-lookup"><span data-stu-id="f66e9-135">Task Cancellation</span></span></related>
        <related type="Article" href="/dotnet/standard/threading/how-to-register-callbacks-for-cancellation-requests"><span data-ttu-id="f66e9-136">Gewusst wie: Registrieren von Rückrufen für Abbruchanforderungen</span><span class="sxs-lookup"><span data-stu-id="f66e9-136">How to: Register Callbacks for Cancellation Requests</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.CancellationTokenRegistration.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="cancellationTokenRegistration.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f66e9-137">Dient als Hashfunktion für eine <see cref="T:System.Threading.CancellationTokenRegistration" />.</span><span class="sxs-lookup"><span data-stu-id="f66e9-137">Serves as a hash function for a <see cref="T:System.Threading.CancellationTokenRegistration" />.</span></span></summary>
        <returns><span data-ttu-id="f66e9-138">Ein Hashcode für die aktuelle <see cref="T:System.Threading.CancellationTokenRegistration" />-Instanz.</span><span class="sxs-lookup"><span data-stu-id="f66e9-138">A hash code for the current <see cref="T:System.Threading.CancellationTokenRegistration" /> instance.</span></span></returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="/dotnet/standard/threading/cancellation-in-managed-threads"><span data-ttu-id="f66e9-139">Abbruch</span><span class="sxs-lookup"><span data-stu-id="f66e9-139">Cancellation</span></span></related>
        <related type="Article" href="/dotnet/standard/parallel-programming/task-cancellation"><span data-ttu-id="f66e9-140">Aufgabenabbruch</span><span class="sxs-lookup"><span data-stu-id="f66e9-140">Task Cancellation</span></span></related>
        <related type="Article" href="/dotnet/standard/threading/how-to-register-callbacks-for-cancellation-requests"><span data-ttu-id="f66e9-141">Gewusst wie: Registrieren von Rückrufen für Abbruchanforderungen</span><span class="sxs-lookup"><span data-stu-id="f66e9-141">How to: Register Callbacks for Cancellation Requests</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Threading.CancellationTokenRegistration left, System.Threading.CancellationTokenRegistration right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Threading.CancellationTokenRegistration left, valuetype System.Threading.CancellationTokenRegistration right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.CancellationTokenRegistration.op_Equality(System.Threading.CancellationTokenRegistration,System.Threading.CancellationTokenRegistration)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As CancellationTokenRegistration, right As CancellationTokenRegistration) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Threading::CancellationTokenRegistration left, System::Threading::CancellationTokenRegistration right);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Threading.CancellationTokenRegistration * System.Threading.CancellationTokenRegistration -&gt; bool" Usage="left = right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Threading.CancellationTokenRegistration" />
        <Parameter Name="right" Type="System.Threading.CancellationTokenRegistration" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="f66e9-142">Die erste Instanz.</span><span class="sxs-lookup"><span data-stu-id="f66e9-142">The first instance.</span></span></param>
        <param name="right"><span data-ttu-id="f66e9-143">Die zweite Instanz.</span><span class="sxs-lookup"><span data-stu-id="f66e9-143">The second instance.</span></span></param>
        <summary><span data-ttu-id="f66e9-144">Bestimmt, ob zwei <see cref="T:System.Threading.CancellationTokenRegistration" />-Instanzen gleich sind.</span><span class="sxs-lookup"><span data-stu-id="f66e9-144">Determines whether two <see cref="T:System.Threading.CancellationTokenRegistration" /> instances are equal.</span></span></summary>
        <returns><span data-ttu-id="f66e9-145"><see langword="true" />, wenn die Instanzen gleich sind, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f66e9-145"><see langword="true" /> if the instances are equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="/dotnet/standard/threading/cancellation-in-managed-threads"><span data-ttu-id="f66e9-146">Abbruch</span><span class="sxs-lookup"><span data-stu-id="f66e9-146">Cancellation</span></span></related>
        <related type="Article" href="/dotnet/standard/parallel-programming/task-cancellation"><span data-ttu-id="f66e9-147">Aufgabenabbruch</span><span class="sxs-lookup"><span data-stu-id="f66e9-147">Task Cancellation</span></span></related>
        <related type="Article" href="/dotnet/standard/threading/how-to-register-callbacks-for-cancellation-requests"><span data-ttu-id="f66e9-148">Gewusst wie: Registrieren von Rückrufen für Abbruchanforderungen</span><span class="sxs-lookup"><span data-stu-id="f66e9-148">How to: Register Callbacks for Cancellation Requests</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Threading.CancellationTokenRegistration left, System.Threading.CancellationTokenRegistration right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Threading.CancellationTokenRegistration left, valuetype System.Threading.CancellationTokenRegistration right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.CancellationTokenRegistration.op_Inequality(System.Threading.CancellationTokenRegistration,System.Threading.CancellationTokenRegistration)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As CancellationTokenRegistration, right As CancellationTokenRegistration) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Threading::CancellationTokenRegistration left, System::Threading::CancellationTokenRegistration right);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Threading.CancellationTokenRegistration * System.Threading.CancellationTokenRegistration -&gt; bool" Usage="System.Threading.CancellationTokenRegistration.op_Inequality (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Threading.CancellationTokenRegistration" />
        <Parameter Name="right" Type="System.Threading.CancellationTokenRegistration" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="f66e9-149">Die erste Instanz.</span><span class="sxs-lookup"><span data-stu-id="f66e9-149">The first instance.</span></span></param>
        <param name="right"><span data-ttu-id="f66e9-150">Die zweite Instanz.</span><span class="sxs-lookup"><span data-stu-id="f66e9-150">The second instance.</span></span></param>
        <summary><span data-ttu-id="f66e9-151">Ermittelt, ob zwei <see cref="T:System.Threading.CancellationTokenRegistration" />-Instanzen ungleich sind.</span><span class="sxs-lookup"><span data-stu-id="f66e9-151">Determines whether two <see cref="T:System.Threading.CancellationTokenRegistration" /> instances are not equal.</span></span></summary>
        <returns><span data-ttu-id="f66e9-152"><see langword="true" />, wenn die Instanzen ungleich sind, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f66e9-152"><see langword="true" /> if the instances are not equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="/dotnet/standard/threading/cancellation-in-managed-threads"><span data-ttu-id="f66e9-153">Abbruch</span><span class="sxs-lookup"><span data-stu-id="f66e9-153">Cancellation</span></span></related>
        <related type="Article" href="/dotnet/standard/parallel-programming/task-cancellation"><span data-ttu-id="f66e9-154">Aufgabenabbruch</span><span class="sxs-lookup"><span data-stu-id="f66e9-154">Task Cancellation</span></span></related>
        <related type="Article" href="/dotnet/standard/threading/how-to-register-callbacks-for-cancellation-requests"><span data-ttu-id="f66e9-155">Gewusst wie: Registrieren von Rückrufen für Abbruchanforderungen</span><span class="sxs-lookup"><span data-stu-id="f66e9-155">How to: Register Callbacks for Cancellation Requests</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Token">
      <MemberSignature Language="C#" Value="public System.Threading.CancellationToken Token { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Threading.CancellationToken Token" />
      <MemberSignature Language="DocId" Value="P:System.Threading.CancellationTokenRegistration.Token" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Token As CancellationToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Threading::CancellationToken Token { System::Threading::CancellationToken get(); };" />
      <MemberSignature Language="F#" Value="member this.Token : System.Threading.CancellationToken" Usage="System.Threading.CancellationTokenRegistration.Token" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.CancellationToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f66e9-156">Ruft das <see cref="T:System.Threading.CancellationToken" /> ab, dem diese Registrierung zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="f66e9-156">Gets the <see cref="T:System.Threading.CancellationToken" /> with which this registration is associated.</span></span></summary>
        <value><span data-ttu-id="f66e9-157">Das Abbruch Token, dem diese Registrierung zugeordnet ist, oder ein Standard Token, wenn die Registrierung keinem Token zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="f66e9-157">The cancellation token with which this registration is associated, or a default token if the registration isn't associated with a token.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  

<span data-ttu-id="f66e9-158">Wenn die <xref:System.Threading.CancellationTokenRegistration> durch registrieren bei einem <xref:System.Threading.CancellationToken> erstellt wurde, für den bereits ein Abbruch angefordert wurde, ist die Registrierung möglicherweise nicht mit dem Token verknüpft. in diesem Fall gibt diese Eigenschaft möglicherweise ein Standard Token zurück.</span><span class="sxs-lookup"><span data-stu-id="f66e9-158">If the <xref:System.Threading.CancellationTokenRegistration> was created by registering with a <xref:System.Threading.CancellationToken> that already had cancellation requested, the registration may not be associated with the token, in which case this property may return a default token.</span></span>

         ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Unregister">
      <MemberSignature Language="C#" Value="public bool Unregister ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Unregister() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.CancellationTokenRegistration.Unregister" />
      <MemberSignature Language="VB.NET" Value="Public Function Unregister () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Unregister();" />
      <MemberSignature Language="F#" Value="member this.Unregister : unit -&gt; bool" Usage="cancellationTokenRegistration.Unregister " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f66e9-159">Verwirft die Registrierung und hebt die Registrierung des Zielrückrufs aus dem zugeordneten <see cref="T:System.Threading.CancellationToken" /> auf.</span><span class="sxs-lookup"><span data-stu-id="f66e9-159">Disposes of the registration and unregisters the target callback from the associated <see cref="T:System.Threading.CancellationToken" />.</span></span></summary>
        <returns><span data-ttu-id="f66e9-160"><see langword="true" />, wenn die Methode erfolgreich ausgeführt wird, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f66e9-160"><see langword="true" /> if the method succeeds; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
