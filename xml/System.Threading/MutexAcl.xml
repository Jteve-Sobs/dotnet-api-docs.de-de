<Type Name="MutexAcl" FullName="System.Threading.MutexAcl">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1b40861fbe5ed422d3f5b21f3a00d7a697e2374c" /><Meta Name="ms.sourcegitcommit" Value="b0947fed0227b6b2e292d7efb43705b488b130aa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="04/29/2020" /><Meta Name="ms.locfileid" Value="82505737" /></Metadata><TypeSignature Language="C#" Value="public static class MutexAcl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit MutexAcl extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Threading.MutexAcl" />
  <TypeSignature Language="VB.NET" Value="Public Class MutexAcl" />
  <TypeSignature Language="C++ CLI" Value="public ref class MutexAcl abstract sealed" />
  <TypeSignature Language="F#" Value="type MutexAcl = class" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.AccessControl</AssemblyName>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Threading.Mutex Create (bool initiallyOwned, string name, out bool createdNew, System.Security.AccessControl.MutexSecurity mutexSecurity);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Mutex Create(bool initiallyOwned, string name, [out] bool&amp; createdNew, class System.Security.AccessControl.MutexSecurity mutexSecurity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.MutexAcl.Create(System.Boolean,System.String,System.Boolean@,System.Security.AccessControl.MutexSecurity)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (initiallyOwned As Boolean, name As String, ByRef createdNew As Boolean, mutexSecurity As MutexSecurity) As Mutex" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Threading::Mutex ^ Create(bool initiallyOwned, System::String ^ name, [Runtime::InteropServices::Out] bool % createdNew, System::Security::AccessControl::MutexSecurity ^ mutexSecurity);" />
      <MemberSignature Language="F#" Value="static member Create : bool * string * bool * System.Security.AccessControl.MutexSecurity -&gt; System.Threading.Mutex" Usage="System.Threading.MutexAcl.Create (initiallyOwned, name, createdNew, mutexSecurity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Mutex</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="initiallyOwned" Type="System.Boolean" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="createdNew" Type="System.Boolean" RefType="out" />
        <Parameter Name="mutexSecurity" Type="System.Security.AccessControl.MutexSecurity" />
      </Parameters>
      <Docs>
        <param name="initiallyOwned"><see langword="true" />, um dem aufrufenden Thread den anfänglichen Besitz des benannten Systemmutex zuzuweisen, wenn der benannte Systemmutex als Ergebnis dieses Aufrufs erstellt wird, andernfalls <see langword="false" />.</param>
        <param name="name">Dies ist der optionale Name des Systemmutex. Wenn dieses Argument auf <see langword="null" /> oder <see cref="F:System.String.Empty" /> festgelegt ist, wird ein lokales Mutex erstellt.</param>
        <param name="createdNew">Wenn diese Methode zurückgegeben wird, wird dieses Argument immer auf <see langword="true" /> festgelegt, wenn ein lokales Mutex erstellt wird (d. h. wenn <paramref name="name" /> entweder <see langword="null" /> oder <see cref="F:System.String.Empty" /> ist). Wenn <paramref name="name" /> über einen gültigen und nicht leeren Wert verfügt, wird dieses Argument auf <see langword="true" /> festgelegt, wenn das Systemmutex erstellt wird, oder es wird auf <see langword="false" /> festgelegt, wenn ein vorhandenes Systemmutex mit diesem Namen gefunden wird. Dieser Parameter wird nicht initialisiert übergeben.</param>
        <param name="mutexSecurity">Dies ist die optional anzuwendende Zugriffssteuerungssicherheit für das Mutex.</param>
        <summary>Hiermit wird eine <see cref="T:System.Threading.Mutex" />-Instanz abgerufen oder erstellt, sodass optional eine <see cref="T:System.Security.AccessControl.MutexSecurity" />-Instanz angegeben werden kann, um eine Festlegung bei der Mutexerstellung zu ermöglichen.</summary>
        <returns>Dies ist ein Objekt, das bei einem angegebenen Namen ein Systemmutex und bei keinem angegebenen Namen ein lokales Mutex darstellt.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">Nur .NET Framework: Der Name überschreitet die maximal zulässige Länge.</exception>
        <exception cref="T:System.Threading.WaitHandleCannotBeOpenedException">Ein Mutexhandle mit systemweitem <paramref name="name" /> kann nicht erstellt werden. Ein Mutexhandle eines anderen Typs kann denselben Namen aufweisen.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
