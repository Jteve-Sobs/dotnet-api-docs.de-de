<Type Name="ParameterizedThreadStart" FullName="System.Threading.ParameterizedThreadStart">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c39d73aba14d7928eba9f731d9d1148c91b7ff76" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86667643" /></Metadata><TypeSignature Language="C#" Value="public delegate void ParameterizedThreadStart(object obj);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ParameterizedThreadStart extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Threading.ParameterizedThreadStart" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub ParameterizedThreadStart(obj As Object)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void ParameterizedThreadStart(System::Object ^ obj);" />
  <TypeSignature Language="F#" Value="type ParameterizedThreadStart = delegate of obj -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.Thread</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Threading.Thread" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(false)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(false)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Parameters>
    <Parameter Name="obj" Type="System.Object" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="obj">Ein Objekt, das Daten für die Threadprozedur enthält.</param>
    <summary>Stellt die Methode dar, die in einem <see cref="T:System.Threading.Thread" /> ausgeführt wird.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn ein verwalteter Thread erstellt wird, wird die-Methode, die auf dem Thread ausgeführt wird, durch Folgendes dargestellt:  
  
-   Ein Delegat <xref:System.Threading.ThreadStart> , der an den- <xref:System.Threading.Thread.%23ctor%28System.Threading.ThreadStart%29?displayProperty=nameWithType> Konstruktor übergeben wird.  Jede Methode, die keine Parameter hat und `void` in c# zurückgibt oder eine `Sub` Prozedur in Visual Basic ist, kann den Delegaten darstellen.  
  
-   Ein Delegat <xref:System.Threading.ParameterizedThreadStart> , der an den- <xref:System.Threading.Thread.%23ctor%28System.Threading.ParameterizedThreadStart%29?displayProperty=nameWithType> Konstruktor übergeben wird. Jede Methode, die über einen einzelnen Parameter vom Typ verfügt <xref:System.Object> und in c# "void" oder eine unter Prozedur in Visual Basic zurückgibt, kann den Delegaten darstellen.  
  
 Der Thread beginnt erst mit der Ausführung, wenn die- <xref:System.Threading.Thread.Start%2A?displayProperty=nameWithType> Methode aufgerufen wird. Der <xref:System.Threading.ThreadStart> -oder der <xref:System.Threading.ParameterizedThreadStart> -Delegat wird für den Thread aufgerufen, und die Ausführung beginnt in der ersten Zeile der Methode, die durch den-Delegaten dargestellt wird. Im Fall des-Delegaten <xref:System.Threading.ParameterizedThreadStart> wird das-Objekt, das an die-Methode übermittelt wird, an den-Delegaten <xref:System.Threading.Thread.Start%28System.Object%29> übermittelt.  
  
> [!NOTE]
>  Visual Basic-und c#-Benutzer können den-oder-Delegatkonstruktor weglassen, <xref:System.Threading.ThreadStart> <xref:System.Threading.ParameterizedThreadStart> Wenn ein Thread erstellt wird. Verwenden Sie in Visual Basic den- `AddressOf` Operator, wenn Sie die Methode an den- <xref:System.Threading.Thread.%23ctor%2A> Konstruktor übergeben, z. b `Dim t As New Thread(AddressOf ThreadProc)` .. Geben Sie in c# einfach den Namen der Thread Prozedur an. Der Compiler wählt den korrekten Delegatkonstruktor aus.  
  
> [!NOTE]
>  Wenn Sie in C++ einen Delegaten <xref:System.Threading.ParameterizedThreadStart> für eine Instanzmethode erstellen, ist der erste Parameter des Konstruktors die Instanzvariable. Bei einer statischen Methode ist der erste Parameter des Konstruktors 0 (null). Für eine statische Methode benötigt der Delegatkonstruktor nur einen Parameter: die Adresse der Rückruf Methode, die durch den Klassennamen qualifiziert ist.  
  
 Der <xref:System.Threading.ParameterizedThreadStart> -Delegat und die- <xref:System.Threading.Thread.Start%28System.Object%29?displayProperty=nameWithType> Methoden Überladung vereinfachen das Übergeben von Daten an eine Thread Prozedur, diese Technik ist jedoch nicht typsicher, da jedes Objekt an übergeben werden kann <xref:System.Threading.Thread.Start%28System.Object%29?displayProperty=nameWithType> . Eine stabilere Methode zum Übergeben von Daten an eine Thread Prozedur besteht darin, die Thread Prozedur und die Datenfelder in ein Workerobjekt einzufügen. Weitere Informationen finden Sie [unter Erstellen von Threads und übergeben von Daten zur Startzeit](/dotnet/standard/threading/creating-threads-and-passing-data-at-start-time).  
  
 Der Delegat <xref:System.Threading.ParameterizedThreadStart> unterstützt nur einen einzelnen Parameter. Sie können mehrere Datenelemente an den übergeben, indem Sie für <xref:System.Threading.ParameterizedThreadStart> diesen Parameter einen der folgenden Parameter festlegen:  
  
-   Ein -Array.  
  
-   Ein Auflistungstyp, wenn alle Datenelemente denselben Typ haben.  
  
-   Ein tupeltyp, z <xref:System.Tuple%602> . b <xref:System.Tuple%604> . oder.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird ein-Delegat verwendet <xref:System.Threading.ParameterizedThreadStart> , um eine statische Methode und eine Instanzmethode auszuführen. Der erste Delegat <xref:System.Threading.ParameterizedThreadStart> wird durch die statische `DoWork` -Methode dargestellt, und die zweite wird durch die- `DoMoreWork` Instanzmethode dargestellt. Beide Methoden stimmen mit der Signatur des Delegaten, d <xref:System.Threading.ParameterizedThreadStart> . h., Sie verfügen über einen einzelnen Parameter vom Typ <xref:System.Object> und geben keinen Wert zurück.  
  
> [!NOTE]
>  Der Visual Basic-und c#-Compiler leitet den Delegaten <xref:System.Threading.ParameterizedThreadStart> aus den Signaturen der `DoWork` -Methode und der- `DoMoreWork` Methode ab und ruft den korrekten Konstruktor auf. Folglich gibt es keinen expliziten Konstruktoraufrufe im Code.  
  
 [!code-cpp[System.Threading.ParameterizedThreadStart#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.ParameterizedThreadStart/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.ParameterizedThreadStart#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.ParameterizedThreadStart/CS/source.cs#1)]
 [!code-vb[System.Threading.ParameterizedThreadStart#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.ParameterizedThreadStart/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Threading.ThreadStart" />
    <altmember cref="T:System.Threading.Thread" />
    <altmember cref="Overload:System.Threading.Thread.Start" />
    <altmember cref="T:System.AppDomain" />
    <related type="Article" href="/dotnet/standard/threading/creating-threads-and-passing-data-at-start-time">Erstellen von Threads</related>
  </Docs>
</Type>
