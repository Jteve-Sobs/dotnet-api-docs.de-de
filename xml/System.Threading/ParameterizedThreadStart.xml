<Type Name="ParameterizedThreadStart" FullName="System.Threading.ParameterizedThreadStart">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3a27f0b92c5f9b53691bdec768065422021c571f" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75115993" /></Metadata><TypeSignature Language="C#" Value="public delegate void ParameterizedThreadStart(object obj);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ParameterizedThreadStart extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Threading.ParameterizedThreadStart" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub ParameterizedThreadStart(obj As Object)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void ParameterizedThreadStart(System::Object ^ obj);" />
  <TypeSignature Language="F#" Value="type ParameterizedThreadStart = delegate of obj -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.Thread</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Parameters>
    <Parameter Name="obj" Type="System.Object" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="obj">Ein Objekt, das Daten für die Threadprozedur enthält.</param>
    <summary>Stellt die Methode dar, die in einem <see cref="T:System.Threading.Thread" /> ausgeführt wird.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn ein verwalteter Thread erstellt wird, wird die-Methode, die auf dem Thread ausgeführt wird, durch Folgendes dargestellt:  
  
-   Ein <xref:System.Threading.ThreadStart>-Delegat, der an den <xref:System.Threading.Thread.%23ctor%28System.Threading.ThreadStart%29?displayProperty=nameWithType>-Konstruktor übergeben wird.  Jede Methode, die über keine Parameter verfügt und `void` in C# oder zurückgibt, ist eine `Sub` Prozedur in Visual Basic die den Delegaten darstellen kann.  
  
-   Ein <xref:System.Threading.ParameterizedThreadStart>-Delegat, der an den <xref:System.Threading.Thread.%23ctor%28System.Threading.ParameterizedThreadStart%29?displayProperty=nameWithType>-Konstruktor übergeben wird. Jede Methode, die über einen einzelnen Parameter vom Typ <xref:System.Object> und die in C# oder void zurückgibt, ist eine unter Prozedur in Visual Basic kann den Delegaten darstellen.  
  
 Der Thread beginnt erst mit der Ausführung, wenn die <xref:System.Threading.Thread.Start%2A?displayProperty=nameWithType>-Methode aufgerufen wird. Der <xref:System.Threading.ThreadStart>-oder <xref:System.Threading.ParameterizedThreadStart> Delegat wird für den Thread aufgerufen, und die Ausführung beginnt in der ersten Zeile der Methode, die durch den-Delegaten dargestellt wird. Im Fall des-<xref:System.Threading.ParameterizedThreadStart> Delegaten wird das-Objekt, das an die <xref:System.Threading.Thread.Start%28System.Object%29>-Methode übermittelt wird, an den-Delegaten übermittelt.  
  
> [!NOTE]
>  Visual Basic und C# Benutzer können den <xref:System.Threading.ThreadStart>-oder <xref:System.Threading.ParameterizedThreadStart> Delegatkonstruktor weglassen, wenn ein Thread erstellt wird. Verwenden Sie in Visual Basic den `AddressOf`-Operator, wenn Sie die Methode an den <xref:System.Threading.Thread.%23ctor%2A>-Konstruktor übergeben. beispielsweise `Dim t As New Thread(AddressOf ThreadProc)`. Geben C#Sie in einfach den Namen der Thread Prozedur an. Der Compiler wählt den korrekten Delegatkonstruktor aus.  
  
> [!NOTE]
>  Wenn Sie in C++einen <xref:System.Threading.ParameterizedThreadStart> Delegaten für eine Instanzmethode erstellen, ist der erste Parameter des Konstruktors die Instanzvariable. Bei einer statischen Methode ist der erste Parameter des Konstruktors 0 (null). Für eine statische Methode benötigt der Delegatkonstruktor nur einen Parameter: die Adresse der Rückruf Methode, die durch den Klassennamen qualifiziert ist.  
  
 Der <xref:System.Threading.ParameterizedThreadStart> Delegat und die <xref:System.Threading.Thread.Start%28System.Object%29?displayProperty=nameWithType>-Methoden Überladung vereinfachen das Übergeben von Daten an eine Thread Prozedur, dieses Verfahren ist jedoch nicht typsicher, da jedes Objekt an <xref:System.Threading.Thread.Start%28System.Object%29?displayProperty=nameWithType>übergeben werden kann. Eine stabilere Methode zum Übergeben von Daten an eine Thread Prozedur besteht darin, die Thread Prozedur und die Datenfelder in ein Workerobjekt einzufügen. Weitere Informationen finden Sie [unter Erstellen von Threads und übergeben von Daten zur Startzeit](~/docs/standard/threading/creating-threads-and-passing-data-at-start-time.md).  
  
 Der <xref:System.Threading.ParameterizedThreadStart> Delegat unterstützt nur einen einzelnen Parameter. Sie können mehrere Datenelemente an den <xref:System.Threading.ParameterizedThreadStart> übergeben, indem Sie für diesen Parameter einen der folgenden Parameter festlegen:  
  
-   Ein Array.  
  
-   Ein Auflistungstyp, wenn alle Datenelemente denselben Typ haben.  
  
-   Ein tupeltyp, z. b. <xref:System.Tuple%602> oder <xref:System.Tuple%604>.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird ein <xref:System.Threading.ParameterizedThreadStart> Delegaten verwendet, um eine statische Methode und eine Instanzmethode auszuführen. Der erste <xref:System.Threading.ParameterizedThreadStart> Delegat wird durch die statische `DoWork`-Methode dargestellt, und die zweite wird durch die-Instanz `DoMoreWork`-Methode dargestellt. Beide Methoden entsprechen der <xref:System.Threading.ParameterizedThreadStart> Delegatsignatur. Das heißt, Sie verfügen über einen einzelnen Parameter vom Typ <xref:System.Object> und geben keinen Wert zurück.  
  
> [!NOTE]
>  Die Visual Basic und C# Compiler leiten den <xref:System.Threading.ParameterizedThreadStart> Delegaten aus den Signaturen der Methoden `DoWork` und `DoMoreWork` ab und wenden den korrekten Konstruktor an. Folglich gibt es keinen expliziten Konstruktoraufrufe im Code.  
  
 [!code-cpp[System.Threading.ParameterizedThreadStart#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.ParameterizedThreadStart/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.ParameterizedThreadStart#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.ParameterizedThreadStart/CS/source.cs#1)]
 [!code-vb[System.Threading.ParameterizedThreadStart#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.ParameterizedThreadStart/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Threading.ThreadStart" />
    <altmember cref="T:System.Threading.Thread" />
    <altmember cref="Overload:System.Threading.Thread.Start" />
    <altmember cref="T:System.AppDomain" />
    <related type="Article" href="~/docs/standard/threading/creating-threads-and-passing-data-at-start-time.md">Erstellen von Threads</related>
  </Docs>
</Type>
