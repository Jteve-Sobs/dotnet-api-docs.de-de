<Type Name="ParameterizedThreadStart" FullName="System.Threading.ParameterizedThreadStart">
  <Metadata><Meta Name="ms.openlocfilehash" Value="33bf1e7037d4fd595a1fa1ff8e3d19fffbfa234b" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58740084" /></Metadata><TypeSignature Language="C#" Value="public delegate void ParameterizedThreadStart(object obj);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ParameterizedThreadStart extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Threading.ParameterizedThreadStart" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub ParameterizedThreadStart(obj As Object)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void ParameterizedThreadStart(System::Object ^ obj);" />
  <TypeSignature Language="F#" Value="type ParameterizedThreadStart = delegate of obj -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.Thread</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Parameters>
    <Parameter Name="obj" Type="System.Object" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="obj">Ein Objekt, das Daten für die Threadprozedur enthält.</param>
    <summary>Stellt die Methode dar, die in einem <see cref="T:System.Threading.Thread" /> ausgeführt wird.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn ein verwalteter Thread erstellt wird, wird die Methode, die auf dem Thread ausgeführt wird. durch dargestellt:  
  
-   Ein <xref:System.Threading.ThreadStart> Delegat, der an die <xref:System.Threading.Thread.%23ctor%28System.Threading.ThreadStart%29?displayProperty=nameWithType> Konstruktor.  Jede Methode, die über keine Parameter verfügt und dabei `void` in c# oder eine `Sub` Prozedur in Visual Basic kann der Delegat darstellen.  
  
-   Ein <xref:System.Threading.ParameterizedThreadStart> Delegat, der an die <xref:System.Threading.Thread.%23ctor%28System.Threading.ParameterizedThreadStart%29?displayProperty=nameWithType> Konstruktor. Jede Methode, die einen einzelnen vom Typ Parameter <xref:System.Object> und, in c# "void" zurückgibt, oder dass eine Subprozedur in Visual Basic kann der Delegat darstellen.  
  
 Der Thread beginnt nicht ausgeführt werden, bis die <xref:System.Threading.Thread.Start%2A?displayProperty=nameWithType> Methode wird aufgerufen. Die <xref:System.Threading.ThreadStart> oder <xref:System.Threading.ParameterizedThreadStart> Delegat wird aufgerufen, für den Thread, und die Ausführung beginnt, in der ersten Zeile der durch den Delegaten dargestellte Methode. Im Fall von der <xref:System.Threading.ParameterizedThreadStart> zu delegieren, das Objekt, das an die <xref:System.Threading.Thread.Start%28System.Object%29> Methode an den Delegaten übergeben wird.  
  
> [!NOTE]
>  Visual Basic und C#-Benutzer können Auslassen der <xref:System.Threading.ThreadStart> oder <xref:System.Threading.ParameterizedThreadStart> Konstruktor beim Erstellen eines Threads. Verwenden Sie in Visual Basic die `AddressOf` Operator beim Übergeben der Methode, um die <xref:System.Threading.Thread.%23ctor%2A> Konstruktor, z. B. `Dim t As New Thread(AddressOf ThreadProc)`. Geben Sie einfach den Namen der Threadprozedur, in c#. Der Compiler wählt die richtige Konstruktor.  
  
> [!NOTE]
>  Bei der Erstellung einer <xref:System.Threading.ParameterizedThreadStart> Delegat für eine Instanzmethode in C++ ist der erste Parameter des Konstruktors die Instanzvariable ist. Für eine statische Methode ist der erste Parameter des Konstruktors 0 (null). Für eine statische Methode, erfordert der Konstruktor nur einen Parameter: die Adresse der Rückrufmethode darstellt, mit dem Klassennamen qualifiziert.  
  
 Die <xref:System.Threading.ParameterizedThreadStart> delegieren und <xref:System.Threading.Thread.Start%28System.Object%29?displayProperty=nameWithType> methodenüberladung erleichtern Ihnen die Daten an eine Threadprozedur zu übergeben, aber dieses Verfahren ist nicht typsicher, da jedes Objekt übergeben werden kann <xref:System.Threading.Thread.Start%28System.Object%29?displayProperty=nameWithType>. Eine stabilere Möglichkeit, Daten an eine Threadprozedur übergeben werden sowohl die Threadprozedur und die Datenfelder in einer Worker-Objekt eingefügt. Weitere Informationen finden Sie unter [Erstellen von Threads und übergeben von Daten zur Startzeit](~/docs/standard/threading/creating-threads-and-passing-data-at-start-time.md).  
  
 Die <xref:System.Threading.ParameterizedThreadStart> Delegat unterstützt nur einen einzigen Parameter. Sie können mehrere Datenelemente zu übergeben, die <xref:System.Threading.ParameterizedThreadStart> dazu, eine der folgenden Parameter:  
  
-   Ein Array.  
  
-   Einen Auflistungstyp, wenn alle Datenelemente vom gleichen Typ sind.  
  
-   Geben Sie ein Tupel, z. B. <xref:System.Tuple%602> oder <xref:System.Tuple%604>.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird eine <xref:System.Threading.ParameterizedThreadStart> Delegat eine statische Methode und eine Instanzmethode ausgeführt. Die erste <xref:System.Threading.ParameterizedThreadStart> Delegat wird dargestellt, von der statischen `DoWork` -Methode und die zweite ist von der Instanz dargestellte `DoMoreWork` Methode. Beide Methoden entsprechen den <xref:System.Threading.ParameterizedThreadStart> Delegatsignatur; das heißt, sie haben einen einzelnen Parameter vom Typ <xref:System.Object> und keinen Wert zurückgeben.  
  
> [!NOTE]
>  Ableiten von der Visual Basic- und C#-Compiler die <xref:System.Threading.ParameterizedThreadStart> delegieren, die von den Signaturen der `DoWork` und `DoMoreWork` Methoden, und rufen Sie den korrekten Konstruktor. Daher besteht keine expliziten Konstruktoraufruf im Code.  
  
 [!code-cpp[System.Threading.ParameterizedThreadStart#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.ParameterizedThreadStart/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.ParameterizedThreadStart#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.ParameterizedThreadStart/CS/source.cs#1)]
 [!code-vb[System.Threading.ParameterizedThreadStart#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.ParameterizedThreadStart/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Threading.ThreadStart" />
    <altmember cref="T:System.Threading.Thread" />
    <altmember cref="Overload:System.Threading.Thread.Start" />
    <altmember cref="T:System.AppDomain" />
    <related type="Article" href="~/docs/standard/threading/creating-threads-and-passing-data-at-start-time.md">Erstellen von Threads</related>
  </Docs>
</Type>