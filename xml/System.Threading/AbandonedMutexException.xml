<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="AbandonedMutexException.xml" source-language="en-US" target-language="de-DE">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5aff749be646a23d7b3e5cd0e23fa4000612a6a58.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">aff749be646a23d7b3e5cd0e23fa4000612a6a58</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Threading.AbandonedMutexException">
          <source>The exception that is thrown when one thread acquires a <ph id="ph1">&lt;see cref="T:System.Threading.Mutex" /&gt;</ph> object that another thread has abandoned by exiting without releasing it.</source>
          <target state="translated">Die Ausnahme, die ausgelöst wird, wenn ein Thread ein <ph id="ph1">&lt;see cref="T:System.Threading.Mutex" /&gt;</ph>-Objekt abruft, das von einem anderen Thread abgebrochen wurde, indem das Objekt beim Beenden nicht freigegeben wurde.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.AbandonedMutexException">
          <source>When a thread abandons a mutex, the exception is thrown in the next thread that acquires the mutex.</source>
          <target state="translated">Wenn ein Thread einen Mutex abbricht, wird die Ausnahme im nächsten Thread ausgelöst, der den Mutex verwendet.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.AbandonedMutexException">
          <source>The thread might acquire the mutex because it was already waiting on the mutex or because it enters the mutex at a later time.</source>
          <target state="translated">Der Thread kann den Mutex abrufen, da es bereits auf den Mutex gewartet hat oder weil er zu einem späteren Zeitpunkt in der Mutex aufgehoben wird.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.AbandonedMutexException">
          <source>An abandoned mutex indicates a serious programming error.</source>
          <target state="translated">Ein abgebrochenes Mutex weist einen schwerwiegenden Programmierfehler.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.AbandonedMutexException">
          <source>When a thread exits without releasing the mutex, the data structures protected by the mutex might not be in a consistent state.</source>
          <target state="translated">Wenn ein Thread beendet, ohne das Mutex, möglicherweise nicht die vom Mutex geschützte Datenstruktur in einem konsistenten Zustand.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.AbandonedMutexException">
          <source>Prior to version 2.0 of the .NET Framework, such problems were hard to discover because no exception was thrown if a wait completed as the result of an abandoned mutex.</source>
          <target state="translated">Vor Version 2.0 von .NET Framework wurden solche Probleme schwer zu ermitteln, da keine Ausnahme ausgelöst wurde, wenn eine Wartezeit, die als Ergebnis ein abgebrochenes Mutex wurde abgeschlossen.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.AbandonedMutexException">
          <source>For more information, see the <ph id="ph1">&lt;xref:System.Threading.Mutex&gt;</ph> class.</source>
          <target state="translated">Weitere Informationen finden Sie in den Ausführungen zur <ph id="ph1">&lt;xref:System.Threading.Mutex&gt;</ph>-Klasse.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.AbandonedMutexException">
          <source>The next thread to request ownership of the mutex can handle this exception and proceed, provided that the integrity of the data structures can be verified.</source>
          <target state="translated">Der nächste Thread, der Besitz des Mutex anfordert, kann diese Ausnahme behandeln und fortgesetzt werden, vorausgesetzt, dass die Integrität der Datenstruktur überprüft werden kann.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.AbandonedMutexException">
          <source>The following code example executes a thread that abandons five mutexes, demonstrating their effects on the <ph id="ph1">&lt;xref:System.Threading.WaitHandle.WaitOne%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Threading.WaitHandle.WaitAny%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Threading.WaitHandle.WaitAll%2A&gt;</ph> methods.</source>
          <target state="translated">Das folgende Codebeispiel führt einen Thread, der fünf Mutexe bezeichnet, deren Auswirkungen auf demonstrieren abbricht der <ph id="ph1">&lt;xref:System.Threading.WaitHandle.WaitOne%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Threading.WaitHandle.WaitAny%2A&gt;</ph>, und <ph id="ph3">&lt;xref:System.Threading.WaitHandle.WaitAll%2A&gt;</ph> Methoden.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.AbandonedMutexException">
          <source>The value of the <ph id="ph1">&lt;xref:System.Threading.AbandonedMutexException.MutexIndex%2A&gt;</ph> property is displayed for the <ph id="ph2">&lt;xref:System.Threading.WaitHandle.WaitAny%2A&gt;</ph> call.</source>
          <target state="translated">Der Wert von der <ph id="ph1">&lt;xref:System.Threading.AbandonedMutexException.MutexIndex%2A&gt;</ph> Eigenschaft wird angezeigt, für die <ph id="ph2">&lt;xref:System.Threading.WaitHandle.WaitAny%2A&gt;</ph> aufrufen.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.AbandonedMutexException">
          <source>The call to the <ph id="ph1">&lt;xref:System.Threading.WaitHandle.WaitAny%2A&gt;</ph> method is interrupted by one of the abandoned mutexes.</source>
          <target state="translated">Der Aufruf der <ph id="ph1">&lt;xref:System.Threading.WaitHandle.WaitAny%2A&gt;</ph> Methode wird von einem der abgebrochenen Mutexe unterbrochen.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.AbandonedMutexException">
          <source>The other abandoned mutex could still cause an <ph id="ph1">&lt;xref:System.Threading.AbandonedMutexException&gt;</ph> to be thrown by subsequent wait methods.</source>
          <target state="translated">Die anderen abgebrochene Mutex verursachen können immer noch eine <ph id="ph1">&lt;xref:System.Threading.AbandonedMutexException&gt;</ph> durch nachfolgende Wait-Methoden ausgelöst wird.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="T:System.Threading.AbandonedMutexException">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Threading.AbandonedMutexException" /&gt;</ph> class.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Threading.AbandonedMutexException" /&gt;</ph>-Klasse.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Threading.AbandonedMutexException.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Threading.AbandonedMutexException" /&gt;</ph> class with default values.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Threading.AbandonedMutexException" /&gt;</ph>-Klasse mit Standardwerten.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor">
          <source>This constructor initializes the <ph id="ph1">&lt;xref:System.Exception.Message%2A&gt;</ph> property of the new instance to a system-supplied message that describes the error, such as "The wait completed due to an abandoned mutex."</source>
          <target state="translated">Dieser Konstruktor initialisiert die <ph id="ph1">&lt;xref:System.Exception.Message%2A&gt;</ph> -Eigenschaft der neuen Instanz mit einer vom System gelieferten Meldung, die den Fehler beschreibt, wie z. B. "Der Wartezustand durch ein abgebrochenes Mutex abgeschlossene."</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor">
          <source>This message takes into account the current system culture.</source>
          <target state="translated">Diese Meldung berücksichtigt die aktuelle Systemkultur.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor">
          <source>The following table shows the initial property values for an instance of <ph id="ph1">&lt;xref:System.Threading.AbandonedMutexException&gt;</ph>.</source>
          <target state="translated">In der folgenden Tabelle werden die anfänglichen Eigenschaftenwerte für eine <ph id="ph1">&lt;xref:System.Threading.AbandonedMutexException&gt;</ph>-Instanz aufgeführt.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor">
          <source>Property</source>
          <target state="translated">Eigenschaft</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor">
          <source>Value</source>
          <target state="translated">Wert</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor">
          <source><ph id="ph1">`null`</ph>.</source>
          <target state="translated"><ph id="ph1">`null`</ph></target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor">
          <source>The system-supplied error message string.</source>
          <target state="translated">Das System bereitgestellte Fehlermeldungszeichenfolge.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor">
          <source><ph id="ph1">`null`</ph>.</source>
          <target state="translated"><ph id="ph1">`null`</ph></target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor">
          <source>–1 (minus one).</source>
          <target state="translated">-1 (minus eins).</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String)">
          <source>An error message that explains the reason for the exception.</source>
          <target state="translated">Eine Fehlermeldung, in der die Ursache der Ausnahme erklärt wird.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Threading.AbandonedMutexException" /&gt;</ph> class with a specified error message.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Threading.AbandonedMutexException" /&gt;</ph>-Klasse mit einer angegebenen Fehlermeldung.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String)">
          <source>The content of <ph id="ph1">`message`</ph> is intended to be understood by humans.</source>
          <target state="translated">Der Inhalt der <ph id="ph1">`message`</ph> soll in verständlicher Sprache gehalten sein.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String)">
          <source>The caller of this constructor is required to ensure that this string has been localized for the current system culture.</source>
          <target state="translated">Der Aufrufer dieses Konstruktors muss sicherstellen, dass diese Zeichenfolge für die aktuelle Systemkultur lokalisiert wurde.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String)">
          <source>The following table shows the initial property values for an instance of <ph id="ph1">&lt;xref:System.Threading.AbandonedMutexException&gt;</ph> initialized with this constructor.</source>
          <target state="translated">Die folgende Tabelle zeigt die anfänglichen Eigenschaftenwerte für eine Instanz von <ph id="ph1">&lt;xref:System.Threading.AbandonedMutexException&gt;</ph> mit diesem Konstruktor initialisiert.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String)">
          <source>Property</source>
          <target state="translated">Eigenschaft</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String)">
          <source>Value</source>
          <target state="translated">Wert</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String)">
          <source><ph id="ph1">`null`</ph>.</source>
          <target state="translated"><ph id="ph1">`null`</ph></target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String)">
          <source><ph id="ph1">`message`</ph>.</source>
          <target state="translated"><ph id="ph1">`message`</ph></target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String)">
          <source><ph id="ph1">`null`</ph>.</source>
          <target state="translated"><ph id="ph1">`null`</ph></target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String)">
          <source>–1 (minus one).</source>
          <target state="translated">-1 (minus eins).</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Threading.AbandonedMutexException.#ctor(System.Int32,System.Threading.WaitHandle)">
          <source>The index of the abandoned mutex in the array of wait handles if the exception is thrown for the <ph id="ph1">&lt;see cref="Overload:System.Threading.WaitHandle.WaitAny" /&gt;</ph> method, or –1 if the exception is thrown for the <ph id="ph2">&lt;see cref="Overload:System.Threading.WaitHandle.WaitOne" /&gt;</ph> or <ph id="ph3">&lt;see cref="Overload:System.Threading.WaitHandle.WaitAll" /&gt;</ph> methods.</source>
          <target state="translated">Der Index des abgebrochenen Mutex im Array von WaitHandles, wenn die Ausnahme für die <ph id="ph1">&lt;see cref="Overload:System.Threading.WaitHandle.WaitAny" /&gt;</ph>-Methode ausgelöst wird, oder -1, wenn die Ausnahme für die <ph id="ph2">&lt;see cref="Overload:System.Threading.WaitHandle.WaitOne" /&gt;</ph>-Methode oder die <ph id="ph3">&lt;see cref="Overload:System.Threading.WaitHandle.WaitAll" /&gt;</ph>-Methode ausgelöst wird.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Threading.AbandonedMutexException.#ctor(System.Int32,System.Threading.WaitHandle)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Threading.Mutex" /&gt;</ph> object that represents the abandoned mutex.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Threading.Mutex" /&gt;</ph>-Objekt, das den abgebrochenen Mutex darstellt.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Threading.AbandonedMutexException.#ctor(System.Int32,System.Threading.WaitHandle)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Threading.AbandonedMutexException" /&gt;</ph> class with a specified index for the abandoned mutex, if applicable, and a <ph id="ph2">&lt;see cref="T:System.Threading.Mutex" /&gt;</ph> object that represents the mutex.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Threading.AbandonedMutexException" /&gt;</ph>-Klasse mit einem festgelegten Index für den abgebrochenen Mutex (falls zutreffend) und einem <ph id="ph2">&lt;see cref="T:System.Threading.Mutex" /&gt;</ph>-Objekt, das den Mutex darstellt.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor(System.Int32,System.Threading.WaitHandle)">
          <source>This constructor initializes the <ph id="ph1">&lt;xref:System.Exception.Message%2A&gt;</ph> property of the new instance to a system-supplied message that describes the error, such as "The wait completed due to an abandoned mutex."</source>
          <target state="translated">Dieser Konstruktor initialisiert die <ph id="ph1">&lt;xref:System.Exception.Message%2A&gt;</ph> -Eigenschaft der neuen Instanz mit einer vom System gelieferten Meldung, die den Fehler beschreibt, wie z. B. "Der Wartezustand durch ein abgebrochenes Mutex abgeschlossene."</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor(System.Int32,System.Threading.WaitHandle)">
          <source>This message takes into account the current system culture.</source>
          <target state="translated">Diese Meldung berücksichtigt die aktuelle Systemkultur.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor(System.Int32,System.Threading.WaitHandle)">
          <source>The following table shows the initial property values for an instance of <ph id="ph1">&lt;xref:System.Threading.AbandonedMutexException&gt;</ph> initialized with this constructor.</source>
          <target state="translated">Die folgende Tabelle zeigt die anfänglichen Eigenschaftenwerte für eine Instanz von <ph id="ph1">&lt;xref:System.Threading.AbandonedMutexException&gt;</ph> mit diesem Konstruktor initialisiert.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor(System.Int32,System.Threading.WaitHandle)">
          <source>Property</source>
          <target state="translated">Eigenschaft</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor(System.Int32,System.Threading.WaitHandle)">
          <source>Value</source>
          <target state="translated">Wert</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor(System.Int32,System.Threading.WaitHandle)">
          <source><ph id="ph1">`null`</ph>.</source>
          <target state="translated"><ph id="ph1">`null`</ph></target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor(System.Int32,System.Threading.WaitHandle)">
          <source>A system-supplied error message string.</source>
          <target state="translated">Ein System bereitgestellte Fehlermeldungszeichenfolge.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor(System.Int32,System.Threading.WaitHandle)">
          <source><ph id="ph1">`handle`</ph>.</source>
          <target state="translated"><ph id="ph1">`handle`</ph></target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor(System.Int32,System.Threading.WaitHandle)">
          <source><ph id="ph1">`location`</ph>.</source>
          <target state="translated"><ph id="ph1">`location`</ph></target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Threading.AbandonedMutexException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> object that holds the serialized object data about the exception being thrown.</source>
          <target state="translated">Das <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph>-Objekt, das die serialisierten Objektdaten für die ausgelöste Ausnahme enthält.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Threading.AbandonedMutexException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> object that contains contextual information about the source or destination.</source>
          <target state="translated">Das <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph>-Objekt, das die Kontextinformationen für die Quelle oder das Ziel enthält.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Threading.AbandonedMutexException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Threading.AbandonedMutexException" /&gt;</ph> class with serialized data.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Threading.AbandonedMutexException" /&gt;</ph>-Klasse mit serialisierten Daten.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>This constructor is called during deserialization to reconstitute the exception object transmitted over a stream.</source>
          <target state="translated">Dieser Konstruktor wird während der Deserialisierung aufgerufen, um das über einen Stream übertragene Ausnahmeobjekt wiederherzustellen.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>For more information, see <bpt id="p1">[</bpt>XML and SOAP Serialization<ept id="p1">](~/docs/standard/serialization/xml-and-soap-serialization.md)</ept>.</source>
          <target state="translated">Weitere Informationen finden Sie unter <bpt id="p1">[</bpt>XML- und SOAP-Serialisierung<ept id="p1">](~/docs/standard/serialization/xml-and-soap-serialization.md)</ept>.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Exception)">
          <source>An error message that explains the reason for the exception.</source>
          <target state="translated">Eine Fehlermeldung, in der die Ursache der Ausnahme erklärt wird.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Exception)">
          <source>The exception that is the cause of the current exception.</source>
          <target state="translated">Die Ausnahme, die die Ursache der aktuellen Ausnahme ist.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Exception)">
          <source>If the <bpt id="p1">&lt;c&gt;</bpt>inner<ept id="p1">&lt;/c&gt;</ept> parameter is not <ph id="ph1">&lt;see langword="null" /&gt;</ph>, the current exception is raised in a <ph id="ph2">&lt;see langword="catch" /&gt;</ph> block that handles the inner exception.</source>
          <target state="translated">Wenn der <bpt id="p1">&lt;c&gt;</bpt>inner<ept id="p1">&lt;/c&gt;</ept>-Parameter nicht <ph id="ph1">&lt;see langword="null" /&gt;</ph> ist, wird die aktuelle Ausnahme in einem <ph id="ph2">&lt;see langword="catch" /&gt;</ph>-Block ausgelöst, der die innere Ausnahme behandelt.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Exception)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Threading.AbandonedMutexException" /&gt;</ph> class with a specified error message and inner exception.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Threading.AbandonedMutexException" /&gt;</ph>-Klasse mit einer festgelegten Fehlermeldung und einer festgelegten inneren Ausnahme.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Exception)">
          <source>The content of <ph id="ph1">`message`</ph> is intended to be understood by humans.</source>
          <target state="translated">Der Inhalt der <ph id="ph1">`message`</ph> soll in verständlicher Sprache gehalten sein.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Exception)">
          <source>The caller of this constructor is required to ensure that this string has been localized for the current system culture.</source>
          <target state="translated">Der Aufrufer dieses Konstruktors muss sicherstellen, dass diese Zeichenfolge für die aktuelle Systemkultur lokalisiert wurde.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Exception)">
          <source>An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property.</source>
          <target state="translated">Eine Ausnahme, die als direktes Ergebnis einer vorhergehenden Ausnahme ausgelöst wird, muss in der <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph>-Eigenschaft über einen Verweis auf die vorhergehende Ausnahme verfügen.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Exception)">
          <source>The <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property returns the same value that is passed into the constructor, or <ph id="ph2">`null`</ph> if the <ph id="ph3">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property does not supply the inner exception value to the constructor.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph>-Eigenschaft gibt den gleichen Wert zurück, der an den Konstruktor übergeben wird, oder <ph id="ph2">`null`</ph>, wenn die <ph id="ph3">&lt;xref:System.Exception.InnerException%2A&gt;</ph>-Eigenschaft den Wert der inneren Ausnahme nicht an den Konstruktor übergibt.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Exception)">
          <source>The following table shows the initial property values for an instance of <ph id="ph1">&lt;xref:System.Threading.AbandonedMutexException&gt;</ph> initialized with this constructor.</source>
          <target state="translated">Die folgende Tabelle zeigt die anfänglichen Eigenschaftenwerte für eine Instanz von <ph id="ph1">&lt;xref:System.Threading.AbandonedMutexException&gt;</ph> mit diesem Konstruktor initialisiert.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Exception)">
          <source>Property</source>
          <target state="translated">Eigenschaft</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Exception)">
          <source>Value</source>
          <target state="translated">Wert</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Exception)">
          <source><ph id="ph1">`inner`</ph>.</source>
          <target state="translated"><ph id="ph1">`inner`</ph></target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Exception)">
          <source><ph id="ph1">`message`</ph>.</source>
          <target state="translated"><ph id="ph1">`message`</ph></target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Exception)">
          <source><ph id="ph1">`null`</ph>.</source>
          <target state="translated"><ph id="ph1">`null`</ph></target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Exception)">
          <source>–1 (minus one).</source>
          <target state="translated">-1 (minus eins).</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Int32,System.Threading.WaitHandle)">
          <source>An error message that explains the reason for the exception.</source>
          <target state="translated">Eine Fehlermeldung, in der die Ursache der Ausnahme erklärt wird.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Int32,System.Threading.WaitHandle)">
          <source>The index of the abandoned mutex in the array of wait handles if the exception is thrown for the <ph id="ph1">&lt;see cref="Overload:System.Threading.WaitHandle.WaitAny" /&gt;</ph> method, or –1 if the exception is thrown for the <ph id="ph2">&lt;see cref="Overload:System.Threading.WaitHandle.WaitOne" /&gt;</ph> or <ph id="ph3">&lt;see cref="Overload:System.Threading.WaitHandle.WaitAll" /&gt;</ph> methods.</source>
          <target state="translated">Der Index des abgebrochenen Mutex im Array von WaitHandles, wenn die Ausnahme für die <ph id="ph1">&lt;see cref="Overload:System.Threading.WaitHandle.WaitAny" /&gt;</ph>-Methode ausgelöst wird, oder -1, wenn die Ausnahme für die <ph id="ph2">&lt;see cref="Overload:System.Threading.WaitHandle.WaitOne" /&gt;</ph>-Methode oder die <ph id="ph3">&lt;see cref="Overload:System.Threading.WaitHandle.WaitAll" /&gt;</ph>-Methode ausgelöst wird.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Int32,System.Threading.WaitHandle)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Threading.Mutex" /&gt;</ph> object that represents the abandoned mutex.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Threading.Mutex" /&gt;</ph>-Objekt, das den abgebrochenen Mutex darstellt.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Int32,System.Threading.WaitHandle)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Threading.AbandonedMutexException" /&gt;</ph> class with a specified error message, the index of the abandoned mutex, if applicable, and the abandoned mutex.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Threading.AbandonedMutexException" /&gt;</ph>-Klasse mit einer festgelegten Fehlermeldung, dem Index des abgebrochenen Mutex (falls zutreffend) und dem abgebrochenen Mutex.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Int32,System.Threading.WaitHandle)">
          <source>The content of <ph id="ph1">`message`</ph> is intended to be understood by humans.</source>
          <target state="translated">Der Inhalt der <ph id="ph1">`message`</ph> soll in verständlicher Sprache gehalten sein.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Int32,System.Threading.WaitHandle)">
          <source>The caller of this constructor is required to ensure that this string has been localized for the current system culture.</source>
          <target state="translated">Der Aufrufer dieses Konstruktors muss sicherstellen, dass diese Zeichenfolge für die aktuelle Systemkultur lokalisiert wurde.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Int32,System.Threading.WaitHandle)">
          <source>The following table shows the initial property values for an instance of <ph id="ph1">&lt;xref:System.Threading.AbandonedMutexException&gt;</ph> initialized with this constructor.</source>
          <target state="translated">Die folgende Tabelle zeigt die anfänglichen Eigenschaftenwerte für eine Instanz von <ph id="ph1">&lt;xref:System.Threading.AbandonedMutexException&gt;</ph> mit diesem Konstruktor initialisiert.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Int32,System.Threading.WaitHandle)">
          <source>Property</source>
          <target state="translated">Eigenschaft</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Int32,System.Threading.WaitHandle)">
          <source>Value</source>
          <target state="translated">Wert</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Int32,System.Threading.WaitHandle)">
          <source><ph id="ph1">`null`</ph>.</source>
          <target state="translated"><ph id="ph1">`null`</ph></target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Int32,System.Threading.WaitHandle)">
          <source><ph id="ph1">`message`</ph>.</source>
          <target state="translated"><ph id="ph1">`message`</ph></target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Int32,System.Threading.WaitHandle)">
          <source><ph id="ph1">`handle`</ph>.</source>
          <target state="translated"><ph id="ph1">`handle`</ph></target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Int32,System.Threading.WaitHandle)">
          <source><ph id="ph1">`location`</ph>.</source>
          <target state="translated"><ph id="ph1">`location`</ph></target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Exception,System.Int32,System.Threading.WaitHandle)">
          <source>An error message that explains the reason for the exception.</source>
          <target state="translated">Eine Fehlermeldung, in der die Ursache der Ausnahme erklärt wird.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Exception,System.Int32,System.Threading.WaitHandle)">
          <source>The exception that is the cause of the current exception.</source>
          <target state="translated">Die Ausnahme, die die Ursache der aktuellen Ausnahme ist.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Exception,System.Int32,System.Threading.WaitHandle)">
          <source>If the <bpt id="p1">&lt;c&gt;</bpt>inner<ept id="p1">&lt;/c&gt;</ept> parameter is not <ph id="ph1">&lt;see langword="null" /&gt;</ph>, the current exception is raised in a <ph id="ph2">&lt;see langword="catch" /&gt;</ph> block that handles the inner exception.</source>
          <target state="translated">Wenn der <bpt id="p1">&lt;c&gt;</bpt>inner<ept id="p1">&lt;/c&gt;</ept>-Parameter nicht <ph id="ph1">&lt;see langword="null" /&gt;</ph> ist, wird die aktuelle Ausnahme in einem <ph id="ph2">&lt;see langword="catch" /&gt;</ph>-Block ausgelöst, der die innere Ausnahme behandelt.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Exception,System.Int32,System.Threading.WaitHandle)">
          <source>The index of the abandoned mutex in the array of wait handles if the exception is thrown for the <ph id="ph1">&lt;see cref="Overload:System.Threading.WaitHandle.WaitAny" /&gt;</ph> method, or –1 if the exception is thrown for the <ph id="ph2">&lt;see cref="Overload:System.Threading.WaitHandle.WaitOne" /&gt;</ph> or <ph id="ph3">&lt;see cref="Overload:System.Threading.WaitHandle.WaitAll" /&gt;</ph> methods.</source>
          <target state="translated">Der Index des abgebrochenen Mutex im Array von WaitHandles, wenn die Ausnahme für die <ph id="ph1">&lt;see cref="Overload:System.Threading.WaitHandle.WaitAny" /&gt;</ph>-Methode ausgelöst wird, oder -1, wenn die Ausnahme für die <ph id="ph2">&lt;see cref="Overload:System.Threading.WaitHandle.WaitOne" /&gt;</ph>-Methode oder die <ph id="ph3">&lt;see cref="Overload:System.Threading.WaitHandle.WaitAll" /&gt;</ph>-Methode ausgelöst wird.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Exception,System.Int32,System.Threading.WaitHandle)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Threading.Mutex" /&gt;</ph> object that represents the abandoned mutex.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Threading.Mutex" /&gt;</ph>-Objekt, das den abgebrochenen Mutex darstellt.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Exception,System.Int32,System.Threading.WaitHandle)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Threading.AbandonedMutexException" /&gt;</ph> class with a specified error message, the inner exception, the index for the abandoned mutex, if applicable, and a <ph id="ph2">&lt;see cref="T:System.Threading.Mutex" /&gt;</ph> object that represents the mutex.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Threading.AbandonedMutexException" /&gt;</ph>-Klasse mit einer festgelegten Fehlermeldung, der inneren Ausnahme, dem Index für den abgebrochenen Mutex (falls zutreffend) und einem <ph id="ph2">&lt;see cref="T:System.Threading.Mutex" /&gt;</ph>-Objekt, das den Mutex darstellt.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Exception,System.Int32,System.Threading.WaitHandle)">
          <source>The content of <ph id="ph1">`message`</ph> is a text string intended to inform the user about the exception.</source>
          <target state="translated">Der Inhalt des <ph id="ph1">`message`</ph> eine Textzeichenfolge richtet sich an den Benutzer über die Ausnahme zu informieren.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Exception,System.Int32,System.Threading.WaitHandle)">
          <source>The caller of this constructor is required to ensure that this string has been localized for the current system culture.</source>
          <target state="translated">Der Aufrufer dieses Konstruktors muss sicherstellen, dass diese Zeichenfolge für die aktuelle Systemkultur lokalisiert wurde.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Exception,System.Int32,System.Threading.WaitHandle)">
          <source>An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property.</source>
          <target state="translated">Eine Ausnahme, die als direktes Ergebnis einer vorhergehenden Ausnahme ausgelöst wird, muss in der <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph>-Eigenschaft über einen Verweis auf die vorhergehende Ausnahme verfügen.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Exception,System.Int32,System.Threading.WaitHandle)">
          <source>The <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property returns the same value that is passed into the constructor, or <ph id="ph2">`null`</ph> if the <ph id="ph3">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property does not supply the inner exception value to the constructor.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph>-Eigenschaft gibt den gleichen Wert zurück, der an den Konstruktor übergeben wird, oder <ph id="ph2">`null`</ph>, wenn die <ph id="ph3">&lt;xref:System.Exception.InnerException%2A&gt;</ph>-Eigenschaft den Wert der inneren Ausnahme nicht an den Konstruktor übergibt.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Exception,System.Int32,System.Threading.WaitHandle)">
          <source>The following table shows the initial property values for an instance of <ph id="ph1">&lt;xref:System.Threading.AbandonedMutexException&gt;</ph> initialized with this constructor.</source>
          <target state="translated">Die folgende Tabelle zeigt die anfänglichen Eigenschaftenwerte für eine Instanz von <ph id="ph1">&lt;xref:System.Threading.AbandonedMutexException&gt;</ph> mit diesem Konstruktor initialisiert.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Exception,System.Int32,System.Threading.WaitHandle)">
          <source>Property</source>
          <target state="translated">Eigenschaft</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Exception,System.Int32,System.Threading.WaitHandle)">
          <source>Value</source>
          <target state="translated">Wert</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Exception,System.Int32,System.Threading.WaitHandle)">
          <source><ph id="ph1">`inner`</ph>.</source>
          <target state="translated"><ph id="ph1">`inner`</ph></target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Exception,System.Int32,System.Threading.WaitHandle)">
          <source><ph id="ph1">`message`</ph>.</source>
          <target state="translated"><ph id="ph1">`message`</ph></target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Exception,System.Int32,System.Threading.WaitHandle)">
          <source><ph id="ph1">`handle`</ph>.</source>
          <target state="translated"><ph id="ph1">`handle`</ph></target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Exception,System.Int32,System.Threading.WaitHandle)">
          <source><ph id="ph1">`location`</ph>.</source>
          <target state="translated"><ph id="ph1">`location`</ph></target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="P:System.Threading.AbandonedMutexException.Mutex">
          <source>Gets the abandoned mutex that caused the exception, if known.</source>
          <target state="translated">Ruft den abgebrochenen Mutex ab, das die Ausnahme verursacht hat (falls bekannt).</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.AbandonedMutexException.Mutex">
          <source>A <ph id="ph1">&lt;see cref="T:System.Threading.Mutex" /&gt;</ph> object that represents the abandoned mutex, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if the abandoned mutex could not be identified.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Threading.Mutex" /&gt;</ph>-Objekt, das den abgebrochenen Mutex darstellt, oder <ph id="ph2">&lt;see langword="null" /&gt;</ph>, wenn der abgebrochene Mutex nicht bestimmt werden konnte.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.AbandonedMutexException.Mutex">
          <source>If the exception is thrown on a call to the <ph id="ph1">&lt;xref:System.Threading.WaitHandle.WaitAny%2A?displayProperty=nameWithType&gt;</ph> method, the <ph id="ph2">&lt;xref:System.Threading.Mutex&gt;</ph> returned is the abandoned mutex with the lowest index in the array of <ph id="ph3">&lt;xref:System.Threading.WaitHandle&gt;</ph> objects that was passed to <ph id="ph4">&lt;xref:System.Threading.WaitHandle.WaitAny%2A&gt;</ph>, or <ph id="ph5">`null`</ph> if the abandoned mutex could not be identified.</source>
          <target state="translated">Wenn die Ausnahme, bei einem Aufruf von ausgelöst wird der <ph id="ph1">&lt;xref:System.Threading.WaitHandle.WaitAny%2A?displayProperty=nameWithType&gt;</ph> -Methode, die <ph id="ph2">&lt;xref:System.Threading.Mutex&gt;</ph> der abgebrochene Mutex mit dem niedrigsten Index im Array der zurückgegeben wird <ph id="ph3">&lt;xref:System.Threading.WaitHandle&gt;</ph> Objekte, die zum übergeben wurde <ph id="ph4">&lt;xref:System.Threading.WaitHandle.WaitAny%2A&gt;</ph>, oder <ph id="ph5">`null`</ph> Wenn abgebrochene Mutex nicht überprüft werden identifiziert.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.AbandonedMutexException.Mutex">
          <source>If the exception is thrown on a call to <ph id="ph1">&lt;xref:System.Threading.WaitHandle.WaitOne%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Threading.WaitHandle.WaitAll%2A&gt;</ph>, this property always returns <ph id="ph3">`null`</ph>.</source>
          <target state="translated">Wenn die Ausnahme, bei einem Aufruf von ausgelöst wird <ph id="ph1">&lt;xref:System.Threading.WaitHandle.WaitOne%2A&gt;</ph> oder <ph id="ph2">&lt;xref:System.Threading.WaitHandle.WaitAll%2A&gt;</ph>, gibt diese Eigenschaft immer <ph id="ph3">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="P:System.Threading.AbandonedMutexException.MutexIndex">
          <source>Gets the index of the abandoned mutex that caused the exception, if known.</source>
          <target state="translated">Ruft den Index des abgebrochenen Mutex ab, der die Ausnahme verursacht hat (falls bekannt).</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.AbandonedMutexException.MutexIndex">
          <source>The index, in the array of wait handles passed to the <ph id="ph1">&lt;see cref="Overload:System.Threading.WaitHandle.WaitAny" /&gt;</ph> method, of the <ph id="ph2">&lt;see cref="T:System.Threading.Mutex" /&gt;</ph> object that represents the abandoned mutex, or –1 if the index of the abandoned mutex could not be determined.</source>
          <target state="translated">Der Index des <ph id="ph1">&lt;see cref="Overload:System.Threading.WaitHandle.WaitAny" /&gt;</ph>-Objekts, das der abgebrochene Mutex darstellt, im Array von WaitHandles, die an die <ph id="ph2">&lt;see cref="T:System.Threading.Mutex" /&gt;</ph>-Methode übergeben wurden, oder -1, wenn der Index des abgebrochenen Mutex nicht bestimmt werden konnte.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.AbandonedMutexException.MutexIndex">
          <source>If the exception is thrown on a call to the <ph id="ph1">&lt;xref:System.Threading.WaitHandle.WaitAny%2A?displayProperty=nameWithType&gt;</ph> method, this property returns the index of the abandoned mutex with the lowest index in the array of <ph id="ph2">&lt;xref:System.Threading.WaitHandle&gt;</ph> objects that was passed to <ph id="ph3">&lt;xref:System.Threading.WaitHandle.WaitAny%2A&gt;</ph>, or –1 if the abandoned mutex could not be identified.</source>
          <target state="translated">Wenn die Ausnahme, bei einem Aufruf von ausgelöst wird der <ph id="ph1">&lt;xref:System.Threading.WaitHandle.WaitAny%2A?displayProperty=nameWithType&gt;</ph> -Methode, diese Eigenschaft gibt den Index des abgebrochenen Mutex mit dem niedrigsten Index im Array der <ph id="ph2">&lt;xref:System.Threading.WaitHandle&gt;</ph> Objekte, die zum übergeben wurde <ph id="ph3">&lt;xref:System.Threading.WaitHandle.WaitAny%2A&gt;</ph>, oder – 1, wenn ein abgebrochene Mutex konnte nicht identifiziert werden .</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.AbandonedMutexException.MutexIndex">
          <source>If the exception is thrown on a call to <ph id="ph1">&lt;xref:System.Threading.WaitHandle.WaitOne%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Threading.WaitHandle.WaitAll%2A&gt;</ph>, this property always returns –1.</source>
          <target state="translated">Wenn die Ausnahme, bei einem Aufruf von ausgelöst wird <ph id="ph1">&lt;xref:System.Threading.WaitHandle.WaitOne%2A&gt;</ph> oder <ph id="ph2">&lt;xref:System.Threading.WaitHandle.WaitAll%2A&gt;</ph>, diese Eigenschaft gibt immer-1 zurück.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.AbandonedMutexException.MutexIndex">
          <source>The following code example executes a thread that abandons five mutexes.</source>
          <target state="translated">Das folgende Codebeispiel führt einen Thread, der fünf Mutexe abbricht.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.AbandonedMutexException.MutexIndex">
          <source>The abandoned mutexes are used to demonstrate the effects on the <ph id="ph1">&lt;xref:System.Threading.WaitHandle.WaitOne%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph2">&lt;xref:System.Threading.WaitHandle.WaitAny%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Threading.WaitHandle.WaitAll%2A&gt;</ph> method calls.</source>
          <target state="translated">Abgebrochenen Mutexe werden zum Veranschaulichen der Auswirkungen auf die <ph id="ph1">&lt;xref:System.Threading.WaitHandle.WaitOne%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph2">&lt;xref:System.Threading.WaitHandle.WaitAny%2A&gt;</ph>, und <ph id="ph3">&lt;xref:System.Threading.WaitHandle.WaitAll%2A&gt;</ph> Methodenaufrufe.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.AbandonedMutexException.MutexIndex">
          <source>The value of the <ph id="ph1">&lt;xref:System.Threading.AbandonedMutexException.MutexIndex%2A&gt;</ph> property is displayed for the <ph id="ph2">&lt;xref:System.Threading.WaitHandle.WaitAny%2A&gt;</ph> call.</source>
          <target state="translated">Der Wert von der <ph id="ph1">&lt;xref:System.Threading.AbandonedMutexException.MutexIndex%2A&gt;</ph> Eigenschaft wird angezeigt, für die <ph id="ph2">&lt;xref:System.Threading.WaitHandle.WaitAny%2A&gt;</ph> aufrufen.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.AbandonedMutexException.MutexIndex">
          <source>The call to <ph id="ph1">&lt;xref:System.Threading.WaitHandle.WaitAny%2A&gt;</ph> is interrupted by one of the abandoned mutexes.</source>
          <target state="translated">Der Aufruf von <ph id="ph1">&lt;xref:System.Threading.WaitHandle.WaitAny%2A&gt;</ph> durch eines der abgebrochenen Mutexe unterbrochen wird.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.AbandonedMutexException.MutexIndex">
          <source>The other abandoned mutex could still cause an <ph id="ph1">&lt;xref:System.Threading.AbandonedMutexException&gt;</ph> to be thrown by subsequent wait methods.</source>
          <target state="translated">Die anderen abgebrochene Mutex verursachen können immer noch eine <ph id="ph1">&lt;xref:System.Threading.AbandonedMutexException&gt;</ph> durch nachfolgende Wait-Methoden ausgelöst wird.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>