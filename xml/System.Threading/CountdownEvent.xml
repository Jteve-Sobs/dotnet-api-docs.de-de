<Type Name="CountdownEvent" FullName="System.Threading.CountdownEvent">
  <TypeSignature Language="C#" Value="public class CountdownEvent : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CountdownEvent extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Threading.CountdownEvent" />
  <TypeSignature Language="VB.NET" Value="Public Class CountdownEvent&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class CountdownEvent : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Threading</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("Initial Count={InitialCount}, Current Count={CurrentCount}")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="b0034-101">Stellt einen Synchronisierungsprimitiven dar, dem signalisiert wird, wenn sein Zähler 0 (null) erreicht.</span><span class="sxs-lookup"><span data-stu-id="b0034-101">Represents a synchronization primitive that is signaled when its count reaches zero.</span></span></summary>
    <remarks>To be added.</remarks>
    <threadsafe><span data-ttu-id="b0034-102">Alle öffentlichen und geschützten Member der <see cref="T:System.Threading.CountdownEvent" /> sind threadsicher und können gleichzeitig von mehreren Threads, mit Ausnahme von Dispose, das nur zu Transportservers verwendet werden verwendet, wenn alle Vorgänge für die <see cref="T:System.Threading.CountdownEvent" /> abgeschlossen haben, und zurückgesetzt, die soll nur verwendet werden, wenn keine anderen Threads auf das Ereignis zugreifen.</span><span class="sxs-lookup"><span data-stu-id="b0034-102">All public and protected members of <see cref="T:System.Threading.CountdownEvent" /> are thread-safe and may be used concurrently from multiple threads, with the exception of Dispose, which must only be used when all other operations on the <see cref="T:System.Threading.CountdownEvent" /> have completed, and Reset, which should only be used when no other threads are accessing the event.</span></span>  
  
 <span data-ttu-id="b0034-103">Beispiel</span><span class="sxs-lookup"><span data-stu-id="b0034-103">Example</span></span>  
  
 <span data-ttu-id="b0034-104">Das folgende Beispiel zeigt, wie Sie eine <see cref="T:System.Threading.CountdownEvent" />:</span><span class="sxs-lookup"><span data-stu-id="b0034-104">The following example shows how to use a <see cref="T:System.Threading.CountdownEvent" />:</span></span>  
  
 [!code-csharp[System.Threading.CountdownEvent#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.countdownevent/cs/countdownevent.cs#01)]
 [!code-vb[System.Threading.CountdownEvent#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.countdownevent/vb/countdownevent.vb#01)]</threadsafe>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CountdownEvent (int initialCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 initialCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.CountdownEvent.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (initialCount As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CountdownEvent(int initialCount);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="initialCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="initialCount"><span data-ttu-id="b0034-105">Die zum Festlegen von <see cref="T:System.Threading.CountdownEvent" /> ursprünglich erforderliche Anzahl von Signalen.</span><span class="sxs-lookup"><span data-stu-id="b0034-105">The number of signals initially required to set the <see cref="T:System.Threading.CountdownEvent" />.</span></span></param>
        <summary><span data-ttu-id="b0034-106">Initialisiert eine neue Instanz der <see cref="T:System.Threading.CountdownEvent" />-Klasse mit der angegebenen Anzahl.</span><span class="sxs-lookup"><span data-stu-id="b0034-106">Initializes a new instance of <see cref="T:System.Threading.CountdownEvent" /> class with the specified count.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0034-107">iI `initialCount` gleich 0 ist, wird das Ereignis im Zustand "signalisiert" erstellt.</span><span class="sxs-lookup"><span data-stu-id="b0034-107">iI `initialCount` is 0, the event is created in a signaled state.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="b0034-108"><paramref name="initialCount" /> ist kleiner als 0.</span><span class="sxs-lookup"><span data-stu-id="b0034-108"><paramref name="initialCount" /> is less than 0.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddCount">
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b0034-109">Erhöht die aktuelle Anzahl von <see cref="T:System.Threading.CountdownEvent" />.</span><span class="sxs-lookup"><span data-stu-id="b0034-109">Increments the <see cref="T:System.Threading.CountdownEvent" />'s current count.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddCount">
      <MemberSignature Language="C#" Value="public void AddCount ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCount() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.CountdownEvent.AddCount" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddCount ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddCount();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b0034-110">Erhöht die aktuelle Anzahl von <see cref="T:System.Threading.CountdownEvent" /> um 1.</span><span class="sxs-lookup"><span data-stu-id="b0034-110">Increments the <see cref="T:System.Threading.CountdownEvent" />'s current count by one.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="b0034-111">Die aktuelle Instanz wurde bereits verworfen.</span><span class="sxs-lookup"><span data-stu-id="b0034-111">The current instance has already been disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b0034-112">Die aktuelle Instanz ist bereits festgelegt.</span><span class="sxs-lookup"><span data-stu-id="b0034-112">The current instance is already set.</span></span>  
  
 <span data-ttu-id="b0034-113">- oder - </span><span class="sxs-lookup"><span data-stu-id="b0034-113">-or-</span></span>  
  
 <span data-ttu-id="b0034-114"><see cref="P:System.Threading.CountdownEvent.CurrentCount" /> ist größer oder gleich <see cref="F:System.Int32.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="b0034-114"><see cref="P:System.Threading.CountdownEvent.CurrentCount" /> is equal to or greater than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddCount">
      <MemberSignature Language="C#" Value="public void AddCount (int signalCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCount(int32 signalCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.CountdownEvent.AddCount(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddCount (signalCount As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddCount(int signalCount);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="signalCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="signalCount"><span data-ttu-id="b0034-115">Der Wert, um den <see cref="P:System.Threading.CountdownEvent.CurrentCount" /> erhöht werden soll.</span><span class="sxs-lookup"><span data-stu-id="b0034-115">The value by which to increase <see cref="P:System.Threading.CountdownEvent.CurrentCount" />.</span></span></param>
        <summary><span data-ttu-id="b0034-116">Erhöht die aktuelle Anzahl von <see cref="T:System.Threading.CountdownEvent" /> um einen angegebenen Wert.</span><span class="sxs-lookup"><span data-stu-id="b0034-116">Increments the <see cref="T:System.Threading.CountdownEvent" />'s current count by a specified value.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="b0034-117">Die aktuelle Instanz wurde bereits verworfen.</span><span class="sxs-lookup"><span data-stu-id="b0034-117">The current instance has already been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="b0034-118"><paramref name="signalCount" /> ist kleiner oder gleich 0.</span><span class="sxs-lookup"><span data-stu-id="b0034-118"><paramref name="signalCount" /> is less than or equal to 0.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b0034-119">Die aktuelle Instanz ist bereits festgelegt.</span><span class="sxs-lookup"><span data-stu-id="b0034-119">The current instance is already set.</span></span>  
  
 <span data-ttu-id="b0034-120">- oder - </span><span class="sxs-lookup"><span data-stu-id="b0034-120">-or-</span></span>  
  
 <span data-ttu-id="b0034-121"><see cref="P:System.Threading.CountdownEvent.CurrentCount" /> ist größer gleich <see cref="F:System.Int32.MaxValue" />, nach die Anzahl schrittweise durch <paramref name="signalCount." /> erhöht wird.</span><span class="sxs-lookup"><span data-stu-id="b0034-121"><see cref="P:System.Threading.CountdownEvent.CurrentCount" /> is equal to or greater than <see cref="F:System.Int32.MaxValue" /> after count is incremented by <paramref name="signalCount." /></span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CurrentCount">
      <MemberSignature Language="C#" Value="public int CurrentCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CurrentCount" />
      <MemberSignature Language="DocId" Value="P:System.Threading.CountdownEvent.CurrentCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CurrentCount { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b0034-122">Ruft die Anzahl verbleibender Signale ab, die zum Festlegen des Ereignisses erforderlich sind.</span><span class="sxs-lookup"><span data-stu-id="b0034-122">Gets the number of remaining signals required to set the event.</span></span></summary>
        <value><span data-ttu-id="b0034-123">Die Anzahl verbleibender Signale, die zum Festlegen des Ereignisses erforderlich sind.</span><span class="sxs-lookup"><span data-stu-id="b0034-123">The number of remaining signals required to set the event.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b0034-124">Gibt die von der aktuellen Instanz der <see cref="T:System.Threading.CountdownEvent" />-Klasse verwendeten Ressourcen frei.</span><span class="sxs-lookup"><span data-stu-id="b0034-124">Releases resources used by the current instance of the <see cref="T:System.Threading.CountdownEvent" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.CountdownEvent.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b0034-125">Gibt alle von der aktuellen Instanz der <see cref="T:System.Threading.CountdownEvent" />-Klasse verwendeten Ressourcen frei.</span><span class="sxs-lookup"><span data-stu-id="b0034-125">Releases all resources used by the current instance of the <see cref="T:System.Threading.CountdownEvent" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0034-126">Rufen Sie `Dispose` auf, wenn Sie <xref:System.Threading.CountdownEvent> nicht mehr benötigen.</span><span class="sxs-lookup"><span data-stu-id="b0034-126">Call `Dispose` when you are finished using the <xref:System.Threading.CountdownEvent>.</span></span> <span data-ttu-id="b0034-127">Die `Dispose`-Methode bewirkt, dass <xref:System.Threading.CountdownEvent> nicht mehr verwendet werden kann.</span><span class="sxs-lookup"><span data-stu-id="b0034-127">The `Dispose` method leaves the <xref:System.Threading.CountdownEvent> in an unusable state.</span></span> <span data-ttu-id="b0034-128">Nach dem Aufruf `Dispose`, müssen Sie alle Verweise auf Freigeben der <xref:System.Threading.CountdownEvent> , damit der Garbage Collector den Arbeitsspeicher freigeben kann, die die <xref:System.Threading.CountdownEvent> belegt wurde.</span><span class="sxs-lookup"><span data-stu-id="b0034-128">After calling `Dispose`, you must release all references to the <xref:System.Threading.CountdownEvent> so the garbage collector can reclaim the memory that the <xref:System.Threading.CountdownEvent> was occupying.</span></span>  
  
 <span data-ttu-id="b0034-129">Weitere Informationen finden Sie unter [Bereinigen von nicht verwalteten Ressourcen](~/docs/standard/garbage-collection/unmanaged.md) und [Implementieren einer Dispose-Methode](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="b0034-129">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b0034-130">Rufen Sie immer `Dispose` auf, bevor Sie den letzten Verweis auf das <xref:System.Threading.CountdownEvent> freigeben.</span><span class="sxs-lookup"><span data-stu-id="b0034-130">Always call `Dispose` before you release your last reference to the <xref:System.Threading.CountdownEvent>.</span></span> <span data-ttu-id="b0034-131">Andernfalls bleiben die verwendeten Ressourcen reserviert, bis die Garbage Collection die <xref:System.Threading.CountdownEvent>-Methode des `Finalize`-Objekts aufruft.</span><span class="sxs-lookup"><span data-stu-id="b0034-131">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Threading.CountdownEvent> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.CountdownEvent.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="b0034-132">true, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben, false, um nur nicht verwaltete Ressourcen freizugeben.</span><span class="sxs-lookup"><span data-stu-id="b0034-132">true to release both managed and unmanaged resources; false to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="b0034-133">Gibt die von <see cref="T:System.Threading.CountdownEvent" /> verwendeten nicht verwalteten Ressourcen und optional die verwalteten Ressourcen frei.</span><span class="sxs-lookup"><span data-stu-id="b0034-133">Releases the unmanaged resources used by the <see cref="T:System.Threading.CountdownEvent" />, and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0034-134">Im Gegensatz zu den Großteil der Mitglieder <xref:System.Threading.CountdownEvent>, <xref:System.Threading.CountdownEvent.Dispose%2A> ist nicht threadsicher und können nicht gleichzeitig mit anderen Mitgliedern dieser Instanz verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="b0034-134">Unlike most of the members of <xref:System.Threading.CountdownEvent>, <xref:System.Threading.CountdownEvent.Dispose%2A> is not thread-safe and may not be used concurrently with other members of this instance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitialCount">
      <MemberSignature Language="C#" Value="public int InitialCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 InitialCount" />
      <MemberSignature Language="DocId" Value="P:System.Threading.CountdownEvent.InitialCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InitialCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int InitialCount { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b0034-135">Ruft die Anzahl von Signalen ab, die ursprünglich zum Festlegen des Ereignisses erforderlich waren.</span><span class="sxs-lookup"><span data-stu-id="b0034-135">Gets the numbers of signals initially required to set the event.</span></span></summary>
        <value><span data-ttu-id="b0034-136">Die Anzahl von Signalen, die ursprünglich zum Festlegen des Ereignisses erforderlich waren.</span><span class="sxs-lookup"><span data-stu-id="b0034-136">The number of signals initially required to set the event.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSet">
      <MemberSignature Language="C#" Value="public bool IsSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSet" />
      <MemberSignature Language="DocId" Value="P:System.Threading.CountdownEvent.IsSet" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSet As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSet { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b0034-137">Gibt an, ob die aktuelle Anzahl des <see cref="T:System.Threading.CountdownEvent" />-Objekts 0 (null) erreicht hat.</span><span class="sxs-lookup"><span data-stu-id="b0034-137">Indicates whether the <see cref="T:System.Threading.CountdownEvent" /> object's current count has reached zero..</span></span></summary>
        <value>
          <span data-ttu-id="b0034-138"><see langword="true" /> Wenn die aktuelle Anzahl 0 (null) ist; andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b0034-138"><see langword="true" /> if the current count is zero; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0034-139">Die <xref:System.Threading.CountdownEvent> löst ein Ereignis, wenn der Countdown mit 0 (null) erreicht hat.</span><span class="sxs-lookup"><span data-stu-id="b0034-139">The <xref:System.Threading.CountdownEvent> does not raise an event when the countdown has reached zero.</span></span> <span data-ttu-id="b0034-140">Stattdessen die <xref:System.Threading.CountdownEvent.CurrentCount%2A> Eigenschaft gleich 0 (null), und die <xref:System.Threading.CountdownEvent.IsSet%2A> -Eigenschaft gleich `true`.</span><span class="sxs-lookup"><span data-stu-id="b0034-140">Instead, the <xref:System.Threading.CountdownEvent.CurrentCount%2A> property equals zero, and the <xref:System.Threading.CountdownEvent.IsSet%2A> property equals `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Reset">
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b0034-141">Setzt den <see cref="P:System.Threading.CountdownEvent.CurrentCount" />-Wert zurück.</span><span class="sxs-lookup"><span data-stu-id="b0034-141">Resets the <see cref="P:System.Threading.CountdownEvent.CurrentCount" /> value.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.CountdownEvent.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b0034-142">Setzt <see cref="P:System.Threading.CountdownEvent.CurrentCount" /> auf den Wert von <see cref="P:System.Threading.CountdownEvent.InitialCount" /> zurück.</span><span class="sxs-lookup"><span data-stu-id="b0034-142">Resets the <see cref="P:System.Threading.CountdownEvent.CurrentCount" /> to the value of <see cref="P:System.Threading.CountdownEvent.InitialCount" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0034-143">Im Gegensatz zu den Großteil der Mitglieder <xref:System.Threading.CountdownEvent>, Zurücksetzen ist nicht threadsicher und können nicht gleichzeitig mit anderen Mitgliedern dieser Instanz verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="b0034-143">Unlike most of the members of <xref:System.Threading.CountdownEvent>, Reset is not thread-safe and may not be used concurrently with other members of this instance.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="b0034-144">Die aktuelle Instanz wurde bereits freigegeben.</span><span class="sxs-lookup"><span data-stu-id="b0034-144">The current instance has already been disposed..</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset (int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reset(int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.CountdownEvent.Reset(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset (count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset(int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="count"><span data-ttu-id="b0034-145">Die zum Festlegen von <see cref="T:System.Threading.CountdownEvent" /> erforderliche Anzahl von Signalen.</span><span class="sxs-lookup"><span data-stu-id="b0034-145">The number of signals required to set the <see cref="T:System.Threading.CountdownEvent" />.</span></span></param>
        <summary><span data-ttu-id="b0034-146">Setzt die <see cref="P:System.Threading.CountdownEvent.InitialCount" />-Eigenschaft auf einen angegebenen Wert zurück.</span><span class="sxs-lookup"><span data-stu-id="b0034-146">Resets the <see cref="P:System.Threading.CountdownEvent.InitialCount" /> property to a specified value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0034-147">Diese Methode setzt <xref:System.Threading.CountdownEvent.InitialCount%2A> für alle nachfolgenden Zugriffe auf die Eigenschaft in der aktuellen Instanz.</span><span class="sxs-lookup"><span data-stu-id="b0034-147">This method resets <xref:System.Threading.CountdownEvent.InitialCount%2A> for all subsequent accesses of the property on the current instance.</span></span> <span data-ttu-id="b0034-148">Im Gegensatz zu den Großteil der Mitglieder <xref:System.Threading.CountdownEvent>, Zurücksetzen ist nicht threadsicher und können nicht gleichzeitig mit anderen Mitgliedern dieser Instanz verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="b0034-148">Unlike most of the members of <xref:System.Threading.CountdownEvent>, Reset is not thread-safe and may not be used concurrently with other members of this instance.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="b0034-149">Die aktuelle Instanz wurde bereits freigegeben.</span><span class="sxs-lookup"><span data-stu-id="b0034-149">The current instance has alread been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="b0034-150"><paramref name="count" /> ist kleiner als 0.</span><span class="sxs-lookup"><span data-stu-id="b0034-150"><paramref name="count" /> is less than 0.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Signal">
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b0034-151">Registriert ein Signal beim <see cref="T:System.Threading.CountdownEvent" /> und dekrementiert den Wert von <see cref="P:System.Threading.CountdownEvent.CurrentCount" />.</span><span class="sxs-lookup"><span data-stu-id="b0034-151">Registers a signal with the <see cref="T:System.Threading.CountdownEvent" />, decrementing the value of <see cref="P:System.Threading.CountdownEvent.CurrentCount" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Signal">
      <MemberSignature Language="C#" Value="public bool Signal ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Signal() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.CountdownEvent.Signal" />
      <MemberSignature Language="VB.NET" Value="Public Function Signal () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Signal();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b0034-152">Registriert ein Signal beim <see cref="T:System.Threading.CountdownEvent" /> und dekrementiert den Wert von <see cref="P:System.Threading.CountdownEvent.CurrentCount" />.</span><span class="sxs-lookup"><span data-stu-id="b0034-152">Registers a signal with the <see cref="T:System.Threading.CountdownEvent" />, decrementing the value of <see cref="P:System.Threading.CountdownEvent.CurrentCount" />.</span></span></summary>
        <returns><span data-ttu-id="b0034-153">True, wenn die Anzahl aufgrund des Signals 0 (null) erreicht hat und das Ereignis festgelegt wurde, andernfalls false.</span><span class="sxs-lookup"><span data-stu-id="b0034-153">true if the signal caused the count to reach zero and the event was set; otherwise, false.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="b0034-154">Die aktuelle Instanz wurde bereits verworfen.</span><span class="sxs-lookup"><span data-stu-id="b0034-154">The current instance has already been disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b0034-155">Die aktuelle Instanz ist bereits festgelegt.</span><span class="sxs-lookup"><span data-stu-id="b0034-155">The current instance is already set.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Signal">
      <MemberSignature Language="C#" Value="public bool Signal (int signalCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Signal(int32 signalCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.CountdownEvent.Signal(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Signal (signalCount As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Signal(int signalCount);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="signalCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="signalCount"><span data-ttu-id="b0034-156">Die Anzahl zu registrierender Signale.</span><span class="sxs-lookup"><span data-stu-id="b0034-156">The number of signals to register.</span></span></param>
        <summary><span data-ttu-id="b0034-157">Registriert mehrere Signale bei <see cref="T:System.Threading.CountdownEvent" /> und verringert den Wert von <see cref="P:System.Threading.CountdownEvent.CurrentCount" /> um den angegebenen Wert.</span><span class="sxs-lookup"><span data-stu-id="b0034-157">Registers multiple signals with the <see cref="T:System.Threading.CountdownEvent" />, decrementing the value of <see cref="P:System.Threading.CountdownEvent.CurrentCount" /> by the specified amount.</span></span></summary>
        <returns><span data-ttu-id="b0034-158">True, wenn die Anzahl aufgrund der Signale 0 (null) erreicht hat und das Ereignis festgelegt wurde, andernfalls false.</span><span class="sxs-lookup"><span data-stu-id="b0034-158">true if the signals caused the count to reach zero and the event was set; otherwise, false.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="b0034-159">Die aktuelle Instanz wurde bereits verworfen.</span><span class="sxs-lookup"><span data-stu-id="b0034-159">The current instance has already been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="b0034-160"><paramref name="signalCount" /> ist kleiner als 1.</span><span class="sxs-lookup"><span data-stu-id="b0034-160"><paramref name="signalCount" /> is less than 1.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b0034-161">Die aktuelle Instanz ist bereits festgelegt.</span><span class="sxs-lookup"><span data-stu-id="b0034-161">The current instance is already set.</span></span> <span data-ttu-id="b0034-162">-oder- <paramref name="signalCount" /> ist größer als <see cref="P:System.Threading.CountdownEvent.CurrentCount" />.</span><span class="sxs-lookup"><span data-stu-id="b0034-162">-or- Or <paramref name="signalCount" /> is greater than <see cref="P:System.Threading.CountdownEvent.CurrentCount" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryAddCount">
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b0034-163">Versucht, <see cref="P:System.Threading.CountdownEvent.CurrentCount" /> zu inkrementieren.</span><span class="sxs-lookup"><span data-stu-id="b0034-163">Attempts to increment <see cref="P:System.Threading.CountdownEvent.CurrentCount" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TryAddCount">
      <MemberSignature Language="C#" Value="public bool TryAddCount ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryAddCount() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.CountdownEvent.TryAddCount" />
      <MemberSignature Language="VB.NET" Value="Public Function TryAddCount () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryAddCount();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b0034-164">Versucht, <see cref="P:System.Threading.CountdownEvent.CurrentCount" /> um eins zu inkrementieren.</span><span class="sxs-lookup"><span data-stu-id="b0034-164">Attempts to increment <see cref="P:System.Threading.CountdownEvent.CurrentCount" /> by one.</span></span></summary>
        <returns><span data-ttu-id="b0034-165">True, wenn die Anzahl erfolgreich erhöht wurde, andernfalls false.</span><span class="sxs-lookup"><span data-stu-id="b0034-165">true if the increment succeeded; otherwise, false.</span></span> <span data-ttu-id="b0034-166">Wenn <see cref="P:System.Threading.CountdownEvent.CurrentCount" /> bereits 0 (null) ist, gibt diese Methode false zurück.</span><span class="sxs-lookup"><span data-stu-id="b0034-166">If <see cref="P:System.Threading.CountdownEvent.CurrentCount" /> is already at zero, this method will return false.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="b0034-167">Die aktuelle Instanz wurde bereits verworfen.</span><span class="sxs-lookup"><span data-stu-id="b0034-167">The current instance has already been disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="b0034-168"><see cref="P:System.Threading.CountdownEvent.CurrentCount" /> ist gleich <see cref="F:System.Int32.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="b0034-168"><see cref="P:System.Threading.CountdownEvent.CurrentCount" /> is equal to <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TryAddCount">
      <MemberSignature Language="C#" Value="public bool TryAddCount (int signalCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryAddCount(int32 signalCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.CountdownEvent.TryAddCount(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryAddCount (signalCount As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryAddCount(int signalCount);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="signalCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="signalCount"><span data-ttu-id="b0034-169">Der Wert, um den <see cref="P:System.Threading.CountdownEvent.CurrentCount" /> erhöht werden soll.</span><span class="sxs-lookup"><span data-stu-id="b0034-169">The value by which to increase <see cref="P:System.Threading.CountdownEvent.CurrentCount" />.</span></span></param>
        <summary><span data-ttu-id="b0034-170">Versucht, <see cref="P:System.Threading.CountdownEvent.CurrentCount" /> durch einen angegebenen Wert zu inkrementieren.</span><span class="sxs-lookup"><span data-stu-id="b0034-170">Attempts to increment <see cref="P:System.Threading.CountdownEvent.CurrentCount" /> by a specified value.</span></span></summary>
        <returns><span data-ttu-id="b0034-171">True, wenn die Anzahl erfolgreich erhöht wurde, andernfalls false.</span><span class="sxs-lookup"><span data-stu-id="b0034-171">true if the increment succeeded; otherwise, false.</span></span> <span data-ttu-id="b0034-172">Wenn <see cref="P:System.Threading.CountdownEvent.CurrentCount" /> bereits 0 (null) ist, wird false zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="b0034-172">If <see cref="P:System.Threading.CountdownEvent.CurrentCount" /> is already at zero this will return false.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="b0034-173">Die aktuelle Instanz wurde bereits verworfen.</span><span class="sxs-lookup"><span data-stu-id="b0034-173">The current instance has already been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="b0034-174"><paramref name="signalCount" /> ist kleiner oder gleich 0.</span><span class="sxs-lookup"><span data-stu-id="b0034-174"><paramref name="signalCount" /> is less than or equal to 0.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b0034-175">Die aktuelle Instanz ist bereits festgelegt.</span><span class="sxs-lookup"><span data-stu-id="b0034-175">The current instance is already set.</span></span>  
  
 <span data-ttu-id="b0034-176">- oder - </span><span class="sxs-lookup"><span data-stu-id="b0034-176">-or-</span></span>  
  
 <span data-ttu-id="b0034-177"><see cref="P:System.Threading.CountdownEvent.CurrentCount" /> + <paramref name="signalCount" /> ist größer oder gleich <see cref="F:System.Int32.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="b0034-177"><see cref="P:System.Threading.CountdownEvent.CurrentCount" /> + <paramref name="signalCount" /> is equal to or greater than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Wait">
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b0034-178">Blockiert den aktuellen Thread, bis <see cref="T:System.Threading.CountdownEvent" /> festgelegt wird.</span><span class="sxs-lookup"><span data-stu-id="b0034-178">Blocks the current thread until the <see cref="T:System.Threading.CountdownEvent" /> is set.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Wait">
      <MemberSignature Language="C#" Value="public void Wait ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Wait() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.CountdownEvent.Wait" />
      <MemberSignature Language="VB.NET" Value="Public Sub Wait ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Wait();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b0034-179">Blockiert den aktuellen Thread, bis <see cref="T:System.Threading.CountdownEvent" /> festgelegt wird.</span><span class="sxs-lookup"><span data-stu-id="b0034-179">Blocks the current thread until the <see cref="T:System.Threading.CountdownEvent" /> is set.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0034-180">Der Aufrufer diese Methode blockiert, bis die aktuelle Instanz unbegrenzt festgelegt ist.</span><span class="sxs-lookup"><span data-stu-id="b0034-180">The caller of this method blocks indefinitely until the current instance is set.</span></span> <span data-ttu-id="b0034-181">Der Aufrufer wird sofort zurückgegeben, wenn das Ereignis derzeit in einem Set-Zustand befindet.</span><span class="sxs-lookup"><span data-stu-id="b0034-181">The caller will return immediately if the event is currently in a set state.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="b0034-182">Die aktuelle Instanz wurde bereits verworfen.</span><span class="sxs-lookup"><span data-stu-id="b0034-182">The current instance has already been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Wait">
      <MemberSignature Language="C#" Value="public bool Wait (int millisecondsTimeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Wait(int32 millisecondsTimeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.CountdownEvent.Wait(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Wait (millisecondsTimeout As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Wait(int millisecondsTimeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="millisecondsTimeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="millisecondsTimeout"><span data-ttu-id="b0034-183">Die Anzahl von Millisekunden, die gewartet wird, oder <see cref="F:System.Threading.Timeout.Infinite" /> (-1) für Warten ohne Timeout.</span><span class="sxs-lookup"><span data-stu-id="b0034-183">The number of milliseconds to wait, or <see cref="F:System.Threading.Timeout.Infinite" />(-1) to wait indefinitely.</span></span></param>
        <summary><span data-ttu-id="b0034-184">Blockiert den aktuellen Thread, bis <see cref="T:System.Threading.CountdownEvent" /> festgelegt wird, wobei eine 32-Bit-Ganzzahl mit Vorzeichen zum Messen des Timeouts verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="b0034-184">Blocks the current thread until the <see cref="T:System.Threading.CountdownEvent" /> is set, using a 32-bit signed integer to measure the timeout.</span></span></summary>
        <returns><span data-ttu-id="b0034-185">True, wenn <see cref="T:System.Threading.CountdownEvent" /> festgelegt wurde, andernfalls false.</span><span class="sxs-lookup"><span data-stu-id="b0034-185">true if the <see cref="T:System.Threading.CountdownEvent" /> was set; otherwise, false.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="b0034-186">Die aktuelle Instanz wurde bereits verworfen.</span><span class="sxs-lookup"><span data-stu-id="b0034-186">The current instance has already been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="b0034-187"><paramref name="millisecondsTimeout" /> ist eine negative Zahl, jedoch nicht -1, was einen unbeschränkten Timeout darstellt.</span><span class="sxs-lookup"><span data-stu-id="b0034-187"><paramref name="millisecondsTimeout" /> is a negative number other than -1, which represents an infinite time-out.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Wait">
      <MemberSignature Language="C#" Value="public void Wait (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Wait(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.CountdownEvent.Wait(System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Wait(System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"><span data-ttu-id="b0034-188">Das zu überwachende <see cref="T:System.Threading.CancellationToken" />.</span><span class="sxs-lookup"><span data-stu-id="b0034-188">The <see cref="T:System.Threading.CancellationToken" /> to observe.</span></span></param>
        <summary><span data-ttu-id="b0034-189">Blockiert den aktuellen Thread, bis <see cref="T:System.Threading.CountdownEvent" /> festgelegt wird, wobei ein <see cref="T:System.Threading.CancellationToken" /> überwacht wird.</span><span class="sxs-lookup"><span data-stu-id="b0034-189">Blocks the current thread until the <see cref="T:System.Threading.CountdownEvent" /> is set, while observing a <see cref="T:System.Threading.CancellationToken" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0034-190">Der Aufrufer diese Methode blockiert, bis die aktuelle Instanz unbegrenzt festgelegt ist.</span><span class="sxs-lookup"><span data-stu-id="b0034-190">The caller of this method blocks indefinitely until the current instance is set.</span></span> <span data-ttu-id="b0034-191">Der Aufrufer wird sofort zurückgegeben, wenn das Ereignis derzeit in einem Set-Zustand befindet.</span><span class="sxs-lookup"><span data-stu-id="b0034-191">The caller will return immediately if the event is currently in a set state.</span></span> <span data-ttu-id="b0034-192">Wenn die <xref:System.Threading.CancellationToken> beobachtet wird während der Wartevorgang abgebrochen wird eine <xref:System.OperationCanceledException> ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="b0034-192">If the <xref:System.Threading.CancellationToken> being observed is canceled during the wait operation, an <xref:System.OperationCanceledException> will be thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="b0034-193"><paramref name="cancellationToken" /> wurde abgebrochen.</span><span class="sxs-lookup"><span data-stu-id="b0034-193"><paramref name="cancellationToken" /> has been canceled.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="b0034-194">Die aktuelle Instanz wurde bereits verworfen.</span><span class="sxs-lookup"><span data-stu-id="b0034-194">The current instance has already been disposed.</span></span> <span data-ttu-id="b0034-195">- Oder - Die <see cref="T:System.Threading.CancellationTokenSource" />, die <paramref name="cancellationToken" /> erstellte, wurde bereits freigegeben.</span><span class="sxs-lookup"><span data-stu-id="b0034-195">-or- The <see cref="T:System.Threading.CancellationTokenSource" /> that created <paramref name="cancellationToken" /> has already been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Wait">
      <MemberSignature Language="C#" Value="public bool Wait (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Wait(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.CountdownEvent.Wait(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function Wait (timeout As TimeSpan) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Wait(TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="b0034-196">Eine <see cref="T:System.TimeSpan" />-Struktur, die die Anzahl der zu wartenden Millisekunden angibt, oder eine <see cref="T:System.TimeSpan" />-Struktur, die -1 Millisekunden zum unendlichen Warten angibt.</span><span class="sxs-lookup"><span data-stu-id="b0034-196">A <see cref="T:System.TimeSpan" /> that represents the number of milliseconds to wait, or a <see cref="T:System.TimeSpan" /> that represents -1 milliseconds to wait indefinitely.</span></span></param>
        <summary><span data-ttu-id="b0034-197">Blockiert den aktuellen Thread, bis <see cref="T:System.Threading.CountdownEvent" /> festgelegt wird, wobei ein <see cref="T:System.TimeSpan" /> zum Messen des Timeouts verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="b0034-197">Blocks the current thread until the <see cref="T:System.Threading.CountdownEvent" /> is set, using a <see cref="T:System.TimeSpan" /> to measure the timeout.</span></span></summary>
        <returns><span data-ttu-id="b0034-198">True, wenn <see cref="T:System.Threading.CountdownEvent" /> festgelegt wurde, andernfalls false.</span><span class="sxs-lookup"><span data-stu-id="b0034-198">true if the <see cref="T:System.Threading.CountdownEvent" /> was set; otherwise, false.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="b0034-199">Die aktuelle Instanz wurde bereits verworfen.</span><span class="sxs-lookup"><span data-stu-id="b0034-199">The current instance has already been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="b0034-200"><paramref name="timeout" /> ist eine negative Zahl ungleich  -1 Millisekunden, die ein unendliches Timeout darstellt, - oder - Timeout ist größer als <see cref="F:System.Int32.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="b0034-200"><paramref name="timeout" /> is a negative number other than -1 milliseconds, which represents an infinite time-out -or- timeout is greater than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Wait">
      <MemberSignature Language="C#" Value="public bool Wait (int millisecondsTimeout, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Wait(int32 millisecondsTimeout, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.CountdownEvent.Wait(System.Int32,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Wait(int millisecondsTimeout, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="millisecondsTimeout" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="millisecondsTimeout"><span data-ttu-id="b0034-201">Die Anzahl von Millisekunden, die gewartet wird, oder <see cref="F:System.Threading.Timeout.Infinite" /> (-1) für Warten ohne Timeout.</span><span class="sxs-lookup"><span data-stu-id="b0034-201">The number of milliseconds to wait, or <see cref="F:System.Threading.Timeout.Infinite" />(-1) to wait indefinitely.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="b0034-202">Das zu überwachende <see cref="T:System.Threading.CancellationToken" />.</span><span class="sxs-lookup"><span data-stu-id="b0034-202">The <see cref="T:System.Threading.CancellationToken" /> to observe.</span></span></param>
        <summary><span data-ttu-id="b0034-203">Blockiert den aktuellen Thread, bis <see cref="T:System.Threading.CountdownEvent" /> festgelegt wird, wobei eine 32-Bit-Ganzzahl mit Vorzeichen zum Messen des Timeouts verwendet und ein <see cref="T:System.Threading.CancellationToken" /> überwacht wird.</span><span class="sxs-lookup"><span data-stu-id="b0034-203">Blocks the current thread until the <see cref="T:System.Threading.CountdownEvent" /> is set, using a 32-bit signed integer to measure the timeout, while observing a <see cref="T:System.Threading.CancellationToken" />.</span></span></summary>
        <returns><span data-ttu-id="b0034-204">True, wenn <see cref="T:System.Threading.CountdownEvent" /> festgelegt wurde, andernfalls false.</span><span class="sxs-lookup"><span data-stu-id="b0034-204">true if the <see cref="T:System.Threading.CountdownEvent" /> was set; otherwise, false.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="b0034-205"><paramref name="cancellationToken" /> wurde abgebrochen.</span><span class="sxs-lookup"><span data-stu-id="b0034-205"><paramref name="cancellationToken" /> has been canceled.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="b0034-206">Die aktuelle Instanz wurde bereits verworfen.</span><span class="sxs-lookup"><span data-stu-id="b0034-206">The current instance has already been disposed.</span></span> <span data-ttu-id="b0034-207">- Oder - Die <see cref="T:System.Threading.CancellationTokenSource" />, die <paramref name="cancellationToken" /> erstellte, wurde bereits freigegeben.</span><span class="sxs-lookup"><span data-stu-id="b0034-207">-or- The <see cref="T:System.Threading.CancellationTokenSource" /> that created <paramref name="cancellationToken" /> has already been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="b0034-208"><paramref name="millisecondsTimeout" /> ist eine negative Zahl, jedoch nicht -1, was einen unbeschränkten Timeout darstellt.</span><span class="sxs-lookup"><span data-stu-id="b0034-208"><paramref name="millisecondsTimeout" /> is a negative number other than -1, which represents an infinite time-out.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Wait">
      <MemberSignature Language="C#" Value="public bool Wait (TimeSpan timeout, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Wait(valuetype System.TimeSpan timeout, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.CountdownEvent.Wait(System.TimeSpan,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Wait(TimeSpan timeout, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="b0034-209">Eine <see cref="T:System.TimeSpan" />-Struktur, die die Anzahl der zu wartenden Millisekunden angibt, oder eine <see cref="T:System.TimeSpan" />-Struktur, die -1 Millisekunden zum unendlichen Warten angibt.</span><span class="sxs-lookup"><span data-stu-id="b0034-209">A <see cref="T:System.TimeSpan" /> that represents the number of milliseconds to wait, or a <see cref="T:System.TimeSpan" /> that represents -1 milliseconds to wait indefinitely.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="b0034-210">Das zu überwachende <see cref="T:System.Threading.CancellationToken" />.</span><span class="sxs-lookup"><span data-stu-id="b0034-210">The <see cref="T:System.Threading.CancellationToken" /> to observe.</span></span></param>
        <summary><span data-ttu-id="b0034-211">Blockiert den aktuellen Thread, bis <see cref="T:System.Threading.CountdownEvent" /> festgelegt wird, wobei ein <see cref="T:System.TimeSpan" /> zum Messen des Zeitintervalls verwendet und ein <see cref="T:System.Threading.CancellationToken" /> überwacht wird.</span><span class="sxs-lookup"><span data-stu-id="b0034-211">Blocks the current thread until the <see cref="T:System.Threading.CountdownEvent" /> is set, using a <see cref="T:System.TimeSpan" /> to measure the timeout, while observing a <see cref="T:System.Threading.CancellationToken" />.</span></span></summary>
        <returns><span data-ttu-id="b0034-212">True, wenn <see cref="T:System.Threading.CountdownEvent" /> festgelegt wurde, andernfalls false.</span><span class="sxs-lookup"><span data-stu-id="b0034-212">true if the <see cref="T:System.Threading.CountdownEvent" /> was set; otherwise, false.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="b0034-213"><paramref name="cancellationToken" /> wurde abgebrochen.</span><span class="sxs-lookup"><span data-stu-id="b0034-213"><paramref name="cancellationToken" /> has been canceled.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="b0034-214">Die aktuelle Instanz wurde bereits verworfen.</span><span class="sxs-lookup"><span data-stu-id="b0034-214">The current instance has already been disposed.</span></span> <span data-ttu-id="b0034-215">- Oder - Die <see cref="T:System.Threading.CancellationTokenSource" />, die <paramref name="cancellationToken" /> erstellte, wurde bereits freigegeben.</span><span class="sxs-lookup"><span data-stu-id="b0034-215">-or- The <see cref="T:System.Threading.CancellationTokenSource" /> that created <paramref name="cancellationToken" /> has already been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="b0034-216"><paramref name="timeout" /> ist eine negative Zahl ungleich  -1 Millisekunden, die ein unendliches Timeout darstellt, - oder - Timeout ist größer als <see cref="F:System.Int32.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="b0034-216"><paramref name="timeout" /> is a negative number other than -1 milliseconds, which represents an infinite time-out -or- timeout is greater than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WaitHandle">
      <MemberSignature Language="C#" Value="public System.Threading.WaitHandle WaitHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Threading.WaitHandle WaitHandle" />
      <MemberSignature Language="DocId" Value="P:System.Threading.CountdownEvent.WaitHandle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WaitHandle As WaitHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Threading::WaitHandle ^ WaitHandle { System::Threading::WaitHandle ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.WaitHandle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b0034-217">Ruft ein <see cref="T:System.Threading.WaitHandle" /> ab, das verwendet wird, um auf das festzulegende Ereignis zu warten.</span><span class="sxs-lookup"><span data-stu-id="b0034-217">Gets a <see cref="T:System.Threading.WaitHandle" /> that is used to wait for the event to be set.</span></span></summary>
        <value><span data-ttu-id="b0034-218">Ein <see cref="T:System.Threading.WaitHandle" />, das verwendet wird, um auf das festzulegende Ereignis zu warten.</span><span class="sxs-lookup"><span data-stu-id="b0034-218">A <see cref="T:System.Threading.WaitHandle" /> that is used to wait for the event to be set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0034-219"><xref:System.Threading.CountdownEvent.WaitHandle%2A> sollte nur verwendet werden, wenn sie für die Integration in Codebasen benötigt wird, die auf einem WaitHandle abhängig sind.</span><span class="sxs-lookup"><span data-stu-id="b0034-219"><xref:System.Threading.CountdownEvent.WaitHandle%2A> should only be used if it's needed for integration with code bases that rely on having a WaitHandle.</span></span> <span data-ttu-id="b0034-220">Ist die einzige erforderliche warten, bis die <xref:System.Threading.CountdownEvent> festgelegt werden, die <xref:System.Threading.CountdownEvent.Wait%2A> Methode sollte bevorzugt werden.</span><span class="sxs-lookup"><span data-stu-id="b0034-220">If all that's needed is to wait for the <xref:System.Threading.CountdownEvent> to be set, the <xref:System.Threading.CountdownEvent.Wait%2A> method should be preferred.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="b0034-221">Die aktuelle Instanz wurde bereits verworfen.</span><span class="sxs-lookup"><span data-stu-id="b0034-221">The current instance has already been disposed.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>