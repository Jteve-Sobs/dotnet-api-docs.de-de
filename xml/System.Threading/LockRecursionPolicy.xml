<Type Name="LockRecursionPolicy" FullName="System.Threading.LockRecursionPolicy">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3e1994ed3b74e8a82eba5ccf67734b0ee2cc1f50" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36406540" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum LockRecursionPolicy" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed LockRecursionPolicy extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Threading.LockRecursionPolicy" />
  <TypeSignature Language="VB.NET" Value="Public Enum LockRecursionPolicy" />
  <TypeSignature Language="C++ CLI" Value="public enum class LockRecursionPolicy" />
  <TypeSignature Language="F#" Value="type LockRecursionPolicy = " />
  <AssemblyInfo>
    <AssemblyName>System.Threading</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>
      <span data-ttu-id="ad7ef-101">Gibt an, ob eine Sperre mehrmals dem gleichen Thread zugewiesen werden kann.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ad7ef-101">Specifies whether a lock can be entered multiple times by the same thread.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad7ef-102">Die Standardrichtlinie für die Rekursion hängt vom Typ der Sperre.</span><span class="sxs-lookup"><span data-stu-id="ad7ef-102">The default recursion policy depends on the type of lock.</span></span> <span data-ttu-id="ad7ef-103">Die Standardrichtlinie und das genaue Verhalten der Sperre Rekursion für alle angegebenen Sperrtyp finden Sie in der Dokumentation für den Typ.</span><span class="sxs-lookup"><span data-stu-id="ad7ef-103">For the default policy and the precise behavior of lock recursion for any given lock type, see the documentation for the type.</span></span> <span data-ttu-id="ad7ef-104">Z. B. die <xref:System.Threading.ReaderWriterLockSlim> Klasse lässt sich nicht auf einen Thread die Sperre im Schreibmodus, wenn er die Sperre im Lesemodus, unabhängig von der Einstellung bereits zugewiesen, um die Wahrscheinlichkeit von Deadlocks zu reduzieren.</span><span class="sxs-lookup"><span data-stu-id="ad7ef-104">For example, the <xref:System.Threading.ReaderWriterLockSlim> class does not allow a thread to enter the lock in write mode if it already entered the lock in read mode, regardless of the lock policy setting, in order to reduce the chance of deadlocks.</span></span>  
  
 <span data-ttu-id="ad7ef-105">Derzeit nur eine Sperre diese Enumeration wird verwendet:</span><span class="sxs-lookup"><span data-stu-id="ad7ef-105">Currently only one lock uses this enumeration:</span></span>  
  
-   <span data-ttu-id="ad7ef-106"><xref:System.Threading.ReaderWriterLockSlim></span><span class="sxs-lookup"><span data-stu-id="ad7ef-106"><xref:System.Threading.ReaderWriterLockSlim>.</span></span> <span data-ttu-id="ad7ef-107">Weitere Informationen finden Sie in den Ausführungen zur <xref:System.Threading.ReaderWriterLockSlim.RecursionPolicy%2A>-Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="ad7ef-107">For more information, see the <xref:System.Threading.ReaderWriterLockSlim.RecursionPolicy%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ad7ef-108">Das folgende Beispiel zeigt zwei Ausnahme Szenarien, die von abhängig ist die <xref:System.Threading.LockRecursionPolicy> festlegen und eine, die nicht der Fall ist.</span><span class="sxs-lookup"><span data-stu-id="ad7ef-108">The following example shows two exception scenarios, one that depends on the <xref:System.Threading.LockRecursionPolicy> setting and one that does not.</span></span>  
  
 <span data-ttu-id="ad7ef-109">Im ersten Szenario wird der Thread die Sperre im Lesemodus und versucht dann Lesemodus rekursiv eingeben.</span><span class="sxs-lookup"><span data-stu-id="ad7ef-109">In the first scenario, the thread enters the lock in read mode and then tries to enter read mode recursively.</span></span> <span data-ttu-id="ad7ef-110">Wenn die <xref:System.Threading.ReaderWriterLockSlim> wird erstellt, mit dem Standardkonstruktor, der Rekursionsrichtlinie für die NoRecursion festgelegt ist, wird eine Ausnahme ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="ad7ef-110">If the <xref:System.Threading.ReaderWriterLockSlim> is created by using the default constructor, which sets recursion policy to NoRecursion, an exception is thrown.</span></span> <span data-ttu-id="ad7ef-111">Wenn SupportsRecursion, zum Erstellen verwendet wird der <xref:System.Threading.ReaderWriterLockSlim>, wird keine Ausnahme ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="ad7ef-111">If SupportsRecursion is used to create the <xref:System.Threading.ReaderWriterLockSlim>, no exception is thrown.</span></span>  
  
 <span data-ttu-id="ad7ef-112">Im zweiten Szenario wird der Thread die Sperre im Lesemodus und versucht dann, die Sperre im Schreibmodus.</span><span class="sxs-lookup"><span data-stu-id="ad7ef-112">In the second scenario, the thread enters the lock in read mode and then tries to enter the lock in write mode.</span></span> <span data-ttu-id="ad7ef-113"><xref:System.Threading.LockRecursionException> unabhängig von der Rekursionsrichtlinie der Sperre ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="ad7ef-113"><xref:System.Threading.LockRecursionException> is thrown regardless of the lock recursion policy.</span></span>  
  
 [!code-csharp[System.Threading.LockRecursionPolicy#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.LockRecursionPolicy/cs/example1.cs#1)]
 [!code-vb[System.Threading.LockRecursionPolicy#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.LockRecursionPolicy/vb/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="NoRecursion">
      <MemberSignature Language="C#" Value="NoRecursion" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Threading.LockRecursionPolicy NoRecursion = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Threading.LockRecursionPolicy.NoRecursion" />
      <MemberSignature Language="VB.NET" Value="NoRecursion" />
      <MemberSignature Language="C++ CLI" Value="NoRecursion" />
      <MemberSignature Language="F#" Value="NoRecursion = 0" Usage="System.Threading.LockRecursionPolicy.NoRecursion" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.LockRecursionPolicy</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="ad7ef-114">Wenn ein Thread rekursiv versucht, eine Sperre zu erhalten, wird eine Ausnahme ausgelöst.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ad7ef-114">If a thread tries to enter a lock recursively, an exception is thrown.</span>
          </span>
          <span data-ttu-id="ad7ef-115">Einige Klassen gestatten gewisse Rekursionen, wenn diese Einstellung aktiv ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ad7ef-115">Some classes may allow certain recursions when this setting is in effect.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="SupportsRecursion">
      <MemberSignature Language="C#" Value="SupportsRecursion" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Threading.LockRecursionPolicy SupportsRecursion = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Threading.LockRecursionPolicy.SupportsRecursion" />
      <MemberSignature Language="VB.NET" Value="SupportsRecursion" />
      <MemberSignature Language="C++ CLI" Value="SupportsRecursion" />
      <MemberSignature Language="F#" Value="SupportsRecursion = 1" Usage="System.Threading.LockRecursionPolicy.SupportsRecursion" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.LockRecursionPolicy</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="ad7ef-116">Ein Thread kann rekursiv eine Sperre erhalten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ad7ef-116">A thread can enter a lock recursively.</span>
          </span>
          <span data-ttu-id="ad7ef-117">Einige Klassen beschränken diese Möglichkeit einer rekursiven Zuweisung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ad7ef-117">Some classes may restrict this capability.</span>
          </span>
        </summary>
      </Docs>
    </Member>
  </Members>
</Type>