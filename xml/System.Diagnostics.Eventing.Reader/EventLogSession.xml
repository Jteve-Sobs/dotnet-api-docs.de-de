<Type Name="EventLogSession" FullName="System.Diagnostics.Eventing.Reader.EventLogSession">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="15a29a13a960a18b2660f26e53cfb1f0321383d8" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class EventLogSession : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EventLogSession extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.Eventing.Reader.EventLogSession" />
  <TypeSignature Language="VB.NET" Value="Public Class EventLogSession&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class EventLogSession : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="66f40-101">Wird verwendet, um auf den Ereignisprotokolldienst auf dem lokalen Computer oder auf einem Remotecomputer zuzugreifen, und Informationen über Ereignisprotokolle und Ereignisanbieter auf dem Computer zu verwalten und zu sammeln.</span>
      <span class="sxs-lookup">
        <span data-stu-id="66f40-101">Used to access the Event Log service on the local computer or a remote computer so you can manage and gather information about the event logs and event providers on the computer.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="66f40-102">Z. B. Code mit dieser Klasse finden Sie unter [How To: Abfrage nach Ereignissen](http://msdn.microsoft.com/library/5231a436-4cf2-4539-90d2-a04813aba069), [wie: Abrufen von Informationen über ein Ereignisherausgeber](http://msdn.microsoft.com/library/2a3e897f-25a9-4dad-8541-171ac49970a3) oder [Vorgehensweise: Konfigurieren und lesen die Ereignisprotokolleigenschaften](http://msdn.microsoft.com/library/2d2b00b3-2d1d-4567-a47e-3f5a7c1955ac).</span><span class="sxs-lookup"><span data-stu-id="66f40-102">For example code using this class, see [How To: Query for Events](http://msdn.microsoft.com/library/5231a436-4cf2-4539-90d2-a04813aba069), [How to: Retrieve Information About an Event Publisher](http://msdn.microsoft.com/library/2a3e897f-25a9-4dad-8541-171ac49970a3) or [How to: Configure and Read Event Log Properties](http://msdn.microsoft.com/library/2d2b00b3-2d1d-4567-a47e-3f5a7c1955ac).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="66f40-103">Initialisiert ein neues <see cref="T:System.Diagnostics.Eventing.Reader.EventLogSession" />-Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66f40-103">Initializes a new <see cref="T:System.Diagnostics.Eventing.Reader.EventLogSession" /> object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventLogSession ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.Reader.EventLogSession.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventLogSession();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="66f40-104">Initialisiert ein neues <see cref="T:System.Diagnostics.Eventing.Reader.EventLogSession" />-Objekt, stellt eine Verbindung mit dem lokalen Ereignisprotokolldienst her.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66f40-104">Initializes a new <see cref="T:System.Diagnostics.Eventing.Reader.EventLogSession" /> object, establishes a connection with the local Event Log service.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventLogSession (string server);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string server) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.Reader.EventLogSession.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (server As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventLogSession(System::String ^ server);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="server" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="server">
          <span data-ttu-id="66f40-105">Der Name des Computers, für den eine Verbindung mit dem Ereignisprotokolldienst hergestellt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66f40-105">The name of the computer on which to connect to the Event Log service.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="66f40-106">Initialisiert ein neues <see cref="T:System.Diagnostics.Eventing.Reader.EventLogSession" />-Objekt und stellt eine Verbindung mit dem Ereignisprotokolldienst auf dem angegebene Computer her.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66f40-106">Initializes a new <see cref="T:System.Diagnostics.Eventing.Reader.EventLogSession" /> object, and establishes a connection with the Event Log service on the specified computer.</span>
          </span>
          <span data-ttu-id="66f40-107">Die Anmeldeinformationen (Benutzername und Kennwort) des Benutzers, der die Methode aufruft, werden als Anmeldeinformationen für den Zugriff auf den Remotecomputer verwendet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66f40-107">The credentials (user name and password) of the user who calls the method is used for the credentials to access the remote computer.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventLogSession (string server, string domain, string user, System.Security.SecureString password, System.Diagnostics.Eventing.Reader.SessionAuthentication logOnType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string server, string domain, string user, class System.Security.SecureString password, valuetype System.Diagnostics.Eventing.Reader.SessionAuthentication logOnType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.Reader.EventLogSession.#ctor(System.String,System.String,System.String,System.Security.SecureString,System.Diagnostics.Eventing.Reader.SessionAuthentication)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (server As String, domain As String, user As String, password As SecureString, logOnType As SessionAuthentication)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventLogSession(System::String ^ server, System::String ^ domain, System::String ^ user, System::Security::SecureString ^ password, System::Diagnostics::Eventing::Reader::SessionAuthentication logOnType);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="server" Type="System.String" />
        <Parameter Name="domain" Type="System.String" />
        <Parameter Name="user" Type="System.String" />
        <Parameter Name="password" Type="System.Security.SecureString" />
        <Parameter Name="logOnType" Type="System.Diagnostics.Eventing.Reader.SessionAuthentication" />
      </Parameters>
      <Docs>
        <param name="server">
          <span data-ttu-id="66f40-108">Der Name des Computers, für den eine Verbindung mit dem Ereignisprotokolldienst hergestellt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66f40-108">The name of the computer on which to connect to the Event Log service.</span>
          </span>
        </param>
        <param name="domain">
          <span data-ttu-id="66f40-109">Die Domäne des angegebenen Benutzers.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66f40-109">The domain of the specified user.</span>
          </span>
        </param>
        <param name="user">
          <span data-ttu-id="66f40-110">Der Benutzername, der verwendet wird, um eine Verbindung mit dem Remotecomputer herzustellen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66f40-110">The user name used to connect to the remote computer.</span>
          </span>
        </param>
        <param name="password">
          <span data-ttu-id="66f40-111">Das Kennwort, das verwendet wird, um eine Verbindung mit dem Remotecomputer herzustellen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66f40-111">The password used to connect to the remote computer.</span>
          </span>
        </param>
        <param name="logOnType">
          <span data-ttu-id="66f40-112">Der Verbindungstyp, der für die Verbindung zum Remotecomputer verwendet werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66f40-112">The type of connection to use for the connection to the remote computer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="66f40-113">Initialisiert ein neues <see cref="T:System.Diagnostics.Eventing.Reader.EventLogSession" />-Objekt und stellt eine Verbindung mit dem Ereignisprotokolldienst auf dem angegebene Computer her.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66f40-113">Initializes a new <see cref="T:System.Diagnostics.Eventing.Reader.EventLogSession" /> object, and establishes a connection with the Event Log service on the specified computer.</span>
          </span>
          <span data-ttu-id="66f40-114">Die angegebenen Anmeldeinformationen (Benutzername und Kennwort) werden als Anmeldeinformationen für den Zugriff auf den Remotecomputer verwendet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66f40-114">The specified credentials (user name and password) are used for the credentials to access the remote computer.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelCurrentOperations">
      <MemberSignature Language="C#" Value="public void CancelCurrentOperations ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CancelCurrentOperations() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.Reader.EventLogSession.CancelCurrentOperations" />
      <MemberSignature Language="VB.NET" Value="Public Sub CancelCurrentOperations ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CancelCurrentOperations();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="66f40-115">Bricht alle Vorgänge (z. B. das Lesen eines Ereignisprotokolls oder das Abonnieren eines Ereignisprotokolls) ab, die derzeit für den Ereignisprotokolldienst ausgeführt werden, mit dem dieses Sitzungsobjekt verbunden ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66f40-115">Cancels any operations (such as reading an event log or subscribing to an event log) that are currently active for the Event Log service that this session object is connected to.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ClearLog">
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="66f40-116">Löscht Ereignisse aus dem angegebenen Ereignisprotokoll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66f40-116">Clears events from the specified event log.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="66f40-117">Z. B. Code mit dieser Klasse finden Sie unter [Vorgehensweise: exportieren, archivieren und Löschen von Ereignisprotokollen](http://msdn.microsoft.com/library/7753ff87-f402-41ac-ac64-767e04dd1773).</span><span class="sxs-lookup"><span data-stu-id="66f40-117">For example code using this class, see [How To: Export, Archive, and Clear Event Logs](http://msdn.microsoft.com/library/7753ff87-f402-41ac-ac64-767e04dd1773).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="ClearLog">
      <MemberSignature Language="C#" Value="public void ClearLog (string logName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearLog(string logName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.Reader.EventLogSession.ClearLog(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearLog (logName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearLog(System::String ^ logName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="logName">
          <span data-ttu-id="66f40-118">Der Name des Ereignisprotokolls, aus dem alle Ereignisse gelöscht werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66f40-118">The name of the event log to clear all the events from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="66f40-119">Löscht Ereignisse aus dem angegebenen Ereignisprotokoll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66f40-119">Clears events from the specified event log.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="66f40-120">Z. B. Code mit dieser Klasse finden Sie unter [Vorgehensweise: exportieren, archivieren und Löschen von Ereignisprotokollen](http://msdn.microsoft.com/library/7753ff87-f402-41ac-ac64-767e04dd1773).</span><span class="sxs-lookup"><span data-stu-id="66f40-120">For example code using this class, see [How To: Export, Archive, and Clear Event Logs](http://msdn.microsoft.com/library/7753ff87-f402-41ac-ac64-767e04dd1773).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearLog">
      <MemberSignature Language="C#" Value="public void ClearLog (string logName, string backupPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearLog(string logName, string backupPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.Reader.EventLogSession.ClearLog(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearLog (logName As String, backupPath As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearLog(System::String ^ logName, System::String ^ backupPath);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logName" Type="System.String" />
        <Parameter Name="backupPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="logName">
          <span data-ttu-id="66f40-121">Der Name des Ereignisprotokolls, aus dem alle Ereignisse gelöscht werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66f40-121">The name of the event log to clear all the events from.</span>
          </span>
        </param>
        <param name="backupPath">
          <span data-ttu-id="66f40-122">Der Pfad der Datei, in der die gelöschten Ereignisse gespeichert werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66f40-122">The path to the file in which the cleared events will be saved.</span>
          </span>
          <span data-ttu-id="66f40-123">Die Datei sollte die Erweiterung EVTX aufweisen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66f40-123">The file should end in .evtx.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="66f40-124">Löscht Ereignisse aus dem angegebenen Ereignisprotokoll und speichert die gelöschten Ereignisse in der angegebenen Datei.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66f40-124">Clears events from the specified event log, and saves the cleared events to the specified file.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="66f40-125">Z. B. Code mit dieser Klasse finden Sie unter [Vorgehensweise: exportieren, archivieren und Löschen von Ereignisprotokollen](http://msdn.microsoft.com/library/7753ff87-f402-41ac-ac64-767e04dd1773).</span><span class="sxs-lookup"><span data-stu-id="66f40-125">For example code using this class, see [How To: Export, Archive, and Clear Event Logs](http://msdn.microsoft.com/library/7753ff87-f402-41ac-ac64-767e04dd1773).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="66f40-126">Gibt die vom Objekt verwendeten Ressourcen frei.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66f40-126">Releases the resources used by this object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.Reader.EventLogSession.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="66f40-127">Gibt alle vom Objekt verwendeten Ressourcen frei.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66f40-127">Releases all the resources used by this object.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.Reader.EventLogSession.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="66f40-128">
            <see langword="true" />, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben, <see langword="false" />, um ausschließlich nicht verwaltete Ressourcen freizugeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66f40-128">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="66f40-129">Gibt die vom Objekt verwendeten nicht verwalteten Ressourcen und optional auch die verwalteten Ressourcen frei.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66f40-129">Releases the unmanaged resources used by this object, and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ExportLog">
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="66f40-130">Exportiert Ereignisse in eine externe Protokolldatei.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66f40-130">Exports events into an external log file.</span>
          </span>
          <span data-ttu-id="66f40-131">Die Ereignisse werden ohne Ereignismeldungen gespeichert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66f40-131">The events are stored without the event messages.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ExportLog">
      <MemberSignature Language="C#" Value="public void ExportLog (string path, System.Diagnostics.Eventing.Reader.PathType pathType, string query, string targetFilePath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ExportLog(string path, valuetype System.Diagnostics.Eventing.Reader.PathType pathType, string query, string targetFilePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.Reader.EventLogSession.ExportLog(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ExportLog(System::String ^ path, System::Diagnostics::Eventing::Reader::PathType pathType, System::String ^ query, System::String ^ targetFilePath);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="pathType" Type="System.Diagnostics.Eventing.Reader.PathType" />
        <Parameter Name="query" Type="System.String" />
        <Parameter Name="targetFilePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="66f40-132">Der Name des Ereignisprotokolls, aus dem Ereignisse exportiert werden sollen, oder der Pfad zu der Ereignisprotokolldatei, aus der Ereignisse exportiert werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66f40-132">The name of the event log to export events from, or the path to the event log file to export events from.</span>
          </span>
        </param>
        <param name="pathType">
          <span data-ttu-id="66f40-133">Gibt an, ob die im Pfadparameter verwendete Zeichenfolge den Namen eines Ereignisprotokolls oder den Pfad zu einer Ereignisprotokolldatei angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66f40-133">Specifies whether the string used in the path parameter specifies the name of an event log, or the path to an event log file.</span>
          </span>
        </param>
        <param name="query">
          <span data-ttu-id="66f40-134">Die Abfrage, die zum Auswählen der zu exportierenden Ereignisse verwendet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66f40-134">The query used to select the events to export.</span>
          </span>
          <span data-ttu-id="66f40-135">Nur die von dieser Abfrage zurückgegebenen Ereignisse werden exportiert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66f40-135">Only the events returned from the query will be exported.</span>
          </span>
        </param>
        <param name="targetFilePath">
          <span data-ttu-id="66f40-136">Der Pfad zu der Protokolldatei (mit der Dateiendung EVTX), in der die exportierten Ereignisse gespeichert werden, nachdem diese Methode ausgeführt wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66f40-136">The path to the log file (ends in .evtx) in which the exported events will be stored after this method is executed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="66f40-137">Exportiert Ereignisse in eine externe Protokolldatei.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66f40-137">Exports events into an external log file.</span>
          </span>
          <span data-ttu-id="66f40-138">Die Ereignisse werden ohne Ereignismeldungen gespeichert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66f40-138">The events are stored without the event messages.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportLog">
      <MemberSignature Language="C#" Value="public void ExportLog (string path, System.Diagnostics.Eventing.Reader.PathType pathType, string query, string targetFilePath, bool tolerateQueryErrors);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ExportLog(string path, valuetype System.Diagnostics.Eventing.Reader.PathType pathType, string query, string targetFilePath, bool tolerateQueryErrors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.Reader.EventLogSession.ExportLog(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ExportLog(System::String ^ path, System::Diagnostics::Eventing::Reader::PathType pathType, System::String ^ query, System::String ^ targetFilePath, bool tolerateQueryErrors);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="pathType" Type="System.Diagnostics.Eventing.Reader.PathType" />
        <Parameter Name="query" Type="System.String" />
        <Parameter Name="targetFilePath" Type="System.String" />
        <Parameter Name="tolerateQueryErrors" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="66f40-139">Der Name des Ereignisprotokolls, aus dem Ereignisse exportiert werden sollen, oder der Pfad zu der Ereignisprotokolldatei, aus der Ereignisse exportiert werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66f40-139">The name of the event log to export events from, or the path to the event log file to export events from.</span>
          </span>
        </param>
        <param name="pathType">
          <span data-ttu-id="66f40-140">Gibt an, ob die im Pfadparameter verwendete Zeichenfolge den Namen eines Ereignisprotokolls oder den Pfad zu einer Ereignisprotokolldatei angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66f40-140">Specifies whether the string used in the path parameter specifies the name of an event log, or the path to an event log file.</span>
          </span>
        </param>
        <param name="query">
          <span data-ttu-id="66f40-141">Die Abfrage, die zum Auswählen der zu exportierenden Ereignisse verwendet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66f40-141">The query used to select the events to export.</span>
          </span>
          <span data-ttu-id="66f40-142">Nur die von dieser Abfrage zurückgegebenen Ereignisse werden exportiert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66f40-142">Only the events returned from the query will be exported.</span>
          </span>
        </param>
        <param name="targetFilePath">
          <span data-ttu-id="66f40-143">Der Pfad zu der Protokolldatei (mit der Dateiendung EVTX), in der die exportierten Ereignisse gespeichert werden, nachdem diese Methode ausgeführt wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66f40-143">The path to the log file (ends in .evtx) in which the exported events will be stored after this method is executed.</span>
          </span>
        </param>
        <param name="tolerateQueryErrors">
          <span data-ttu-id="66f40-144">
            <see langword="true" /> gibt an, dass die Methode weiterhin Ereignisse exportiert, auch wenn bei der angegebenen Abfrage bei einigen Protokollen ein Fehler auftritt, und <see langword="false" /> gibt an, dass die Methode nicht fortgesetzt wird, wenn bei der angegebenen Abfrage ein Fehler auftritt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66f40-144">
              <see langword="true" /> indicates that the method will continue exporting events even if the specified query fails for some logs, and <see langword="false" /> indicates that this method will not continue to export events when the specified query fails.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="66f40-145">Exportiert Ereignisse in eine externe Protokolldatei.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66f40-145">Exports events into an external log file.</span>
          </span>
          <span data-ttu-id="66f40-146">Es kann ein Flag gesetzt werden, um anzugeben, dass die Methode weiterhin Ereignisse exportiert, auch wenn bei der angegebenen Abfrage bei einigen Protokollen ein Fehler auftritt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66f40-146">A flag can be set to indicate that the method will continue exporting events even if the specified query fails for some logs.</span>
          </span>
          <span data-ttu-id="66f40-147">Die Ereignisse werden ohne Ereignismeldungen gespeichert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66f40-147">The events are stored without the event messages.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ExportLogAndMessages">
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="66f40-148">Exportiert Ereignisse und die zugehörigen Meldungen in eine externe Protokolldatei.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66f40-148">Exports events and their messages into an external log file.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ExportLogAndMessages">
      <MemberSignature Language="C#" Value="public void ExportLogAndMessages (string path, System.Diagnostics.Eventing.Reader.PathType pathType, string query, string targetFilePath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ExportLogAndMessages(string path, valuetype System.Diagnostics.Eventing.Reader.PathType pathType, string query, string targetFilePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.Reader.EventLogSession.ExportLogAndMessages(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ExportLogAndMessages(System::String ^ path, System::Diagnostics::Eventing::Reader::PathType pathType, System::String ^ query, System::String ^ targetFilePath);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="pathType" Type="System.Diagnostics.Eventing.Reader.PathType" />
        <Parameter Name="query" Type="System.String" />
        <Parameter Name="targetFilePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="66f40-149">Der Name des Ereignisprotokolls, aus dem Ereignisse exportiert werden sollen, oder der Pfad zu der Ereignisprotokolldatei, aus der Ereignisse exportiert werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66f40-149">The name of the event log to export events from, or the path to the event log file to export events from.</span>
          </span>
        </param>
        <param name="pathType">
          <span data-ttu-id="66f40-150">Gibt an, ob die im Pfadparameter verwendete Zeichenfolge den Namen eines Ereignisprotokolls oder den Pfad zu einer Ereignisprotokolldatei angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66f40-150">Specifies whether the string used in the path parameter specifies the name of an event log, or the path to an event log file.</span>
          </span>
        </param>
        <param name="query">
          <span data-ttu-id="66f40-151">Die Abfrage, die zum Auswählen der zu exportierenden Ereignisse verwendet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66f40-151">The query used to select the events to export.</span>
          </span>
          <span data-ttu-id="66f40-152">Nur die von dieser Abfrage zurückgegebenen Ereignisse werden exportiert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66f40-152">Only the events returned from the query will be exported.</span>
          </span>
        </param>
        <param name="targetFilePath">
          <span data-ttu-id="66f40-153">Der Pfad zu der Protokolldatei (mit der Dateiendung EVTX), in der die exportierten Ereignisse gespeichert werden, nachdem diese Methode ausgeführt wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66f40-153">The path to the log file (ends in .evtx) in which the exported events will be stored after this method is executed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="66f40-154">Exportiert Ereignisse und die zugehörigen Meldungen in eine externe Protokolldatei.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66f40-154">Exports events and their messages into an external log file.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66f40-155">Die Ereignisnachrichten werden in der Standardsprache exportiert.</span><span class="sxs-lookup"><span data-stu-id="66f40-155">The event messages are exported in the default language.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="66f40-156">Z. B. Code mit dieser Klasse finden Sie unter [Vorgehensweise: exportieren, archivieren und Löschen von Ereignisprotokollen](https://msdn.microsoft.com/library/bb671203.aspx).</span><span class="sxs-lookup"><span data-stu-id="66f40-156">For example code using this class, see [How to: Export, Archive, and Clear Event Logs](https://msdn.microsoft.com/library/bb671203.aspx).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportLogAndMessages">
      <MemberSignature Language="C#" Value="public void ExportLogAndMessages (string path, System.Diagnostics.Eventing.Reader.PathType pathType, string query, string targetFilePath, bool tolerateQueryErrors, System.Globalization.CultureInfo targetCultureInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ExportLogAndMessages(string path, valuetype System.Diagnostics.Eventing.Reader.PathType pathType, string query, string targetFilePath, bool tolerateQueryErrors, class System.Globalization.CultureInfo targetCultureInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.Reader.EventLogSession.ExportLogAndMessages(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String,System.String,System.Boolean,System.Globalization.CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ExportLogAndMessages(System::String ^ path, System::Diagnostics::Eventing::Reader::PathType pathType, System::String ^ query, System::String ^ targetFilePath, bool tolerateQueryErrors, System::Globalization::CultureInfo ^ targetCultureInfo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="pathType" Type="System.Diagnostics.Eventing.Reader.PathType" />
        <Parameter Name="query" Type="System.String" />
        <Parameter Name="targetFilePath" Type="System.String" />
        <Parameter Name="tolerateQueryErrors" Type="System.Boolean" />
        <Parameter Name="targetCultureInfo" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="66f40-157">Der Name des Ereignisprotokolls, aus dem Ereignisse exportiert werden sollen, oder der Pfad zu der Ereignisprotokolldatei, aus der Ereignisse exportiert werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66f40-157">The name of the event log to export events from, or the path to the event log file to export events from.</span>
          </span>
        </param>
        <param name="pathType">
          <span data-ttu-id="66f40-158">Gibt an, ob die im Pfadparameter verwendete Zeichenfolge den Namen eines Ereignisprotokolls oder den Pfad zu einer Ereignisprotokolldatei angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66f40-158">Specifies whether the string used in the path parameter specifies the name of an event log, or the path to an event log file.</span>
          </span>
        </param>
        <param name="query">
          <span data-ttu-id="66f40-159">Die Abfrage, die zum Auswählen der zu exportierenden Ereignisse verwendet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66f40-159">The query used to select the events to export.</span>
          </span>
          <span data-ttu-id="66f40-160">Nur die von dieser Abfrage zurückgegebenen Ereignisse werden exportiert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66f40-160">Only the events returned from the query will be exported.</span>
          </span>
        </param>
        <param name="targetFilePath">
          <span data-ttu-id="66f40-161">Der Pfad zu der Protokolldatei (mit der Dateiendung EVTX), in der die exportierten Ereignisse gespeichert werden, nachdem diese Methode ausgeführt wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66f40-161">The path to the log file (ends in .evtx) in which the exported events will be stored after this method is executed.</span>
          </span>
        </param>
        <param name="tolerateQueryErrors">
          <span data-ttu-id="66f40-162">
            <see langword="true" /> gibt an, dass die Methode weiterhin Ereignisse exportiert, auch wenn bei der angegebenen Abfrage bei einigen Protokollen ein Fehler auftritt, und <see langword="false" /> gibt an, dass die Methode nicht fortgesetzt wird, wenn bei der angegebenen Abfrage ein Fehler auftritt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66f40-162">
              <see langword="true" /> indicates that the method will continue exporting events even if the specified query fails for some logs, and <see langword="false" /> indicates that this method will not continue to export events when the specified query fails.</span>
          </span>
        </param>
        <param name="targetCultureInfo">
          <span data-ttu-id="66f40-163">Die Kultur, die angibt, in welcher Sprache die Ereignismeldungen exportiert werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66f40-163">The culture that specifies which language that the exported event messages will be in.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="66f40-164">Exportiert Ereignisse und die zugehörigen Meldungen in eine externe Protokolldatei.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66f40-164">Exports events and their messages into an external log file.</span>
          </span>
          <span data-ttu-id="66f40-165">Es kann ein Flag gesetzt werden, um anzugeben, dass die Methode weiterhin Ereignisse exportiert, auch wenn bei der angegebenen Abfrage bei einigen Protokollen ein Fehler auftritt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66f40-165">A flag can be set to indicate that the method will continue exporting events even if the specified query fails for some logs.</span>
          </span>
          <span data-ttu-id="66f40-166">Die Ereignismeldungen werden in der angegebenen Sprache exportiert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66f40-166">The event messages are exported in the specified language.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="66f40-167">Z. B. Code mit dieser Klasse finden Sie unter [Vorgehensweise: exportieren, archivieren und Löschen von Ereignisprotokollen](https://msdn.microsoft.com/library/bb671203.aspx).</span><span class="sxs-lookup"><span data-stu-id="66f40-167">For example code using this class, see [How to: Export, Archive, and Clear Event Logs](https://msdn.microsoft.com/library/bb671203.aspx).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLogInformation">
      <MemberSignature Language="C#" Value="public System.Diagnostics.Eventing.Reader.EventLogInformation GetLogInformation (string logName, System.Diagnostics.Eventing.Reader.PathType pathType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Diagnostics.Eventing.Reader.EventLogInformation GetLogInformation(string logName, valuetype System.Diagnostics.Eventing.Reader.PathType pathType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.Reader.EventLogSession.GetLogInformation(System.String,System.Diagnostics.Eventing.Reader.PathType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Diagnostics::Eventing::Reader::EventLogInformation ^ GetLogInformation(System::String ^ logName, System::Diagnostics::Eventing::Reader::PathType pathType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.Eventing.Reader.EventLogInformation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logName" Type="System.String" />
        <Parameter Name="pathType" Type="System.Diagnostics.Eventing.Reader.PathType" />
      </Parameters>
      <Docs>
        <param name="logName">
          <span data-ttu-id="66f40-168">Der Name des Ereignisprotokolls, für das Informationen abgerufen werden sollen, oder der Pfad der Ereignisprotokolldatei, für die Informationen abgerufen werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66f40-168">The name of the event log to get information about, or the path to the event log file to get information about.</span>
          </span>
        </param>
        <param name="pathType">
          <span data-ttu-id="66f40-169">Gibt an, ob die im Pfadparameter verwendete Zeichenfolge den Namen eines Ereignisprotokolls oder den Pfad zu einer Ereignisprotokolldatei angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66f40-169">Specifies whether the string used in the path parameter specifies the name of an event log, or the path to an event log file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="66f40-170">Ruft ein Objekt ab, das Laufzeitinformationen für das angegebene Ereignisprotokoll enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66f40-170">Gets an object that contains runtime information for the specified event log.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="66f40-171">Gibt ein <see cref="T:System.Diagnostics.Eventing.Reader.EventLogInformation" />-Objekt zurück, das Informationen über das angegebene Protokoll enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66f40-171">Returns an <see cref="T:System.Diagnostics.Eventing.Reader.EventLogInformation" /> object that contains information about the specified log.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLogNames">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;string&gt; GetLogNames ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;string&gt; GetLogNames() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.Reader.EventLogSession.GetLogNames" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLogNames () As IEnumerable(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::String ^&gt; ^ GetLogNames();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="66f40-172">Ruft eine zählbare Auflistung aller Ereignisprotokollnamen ab, die für den Ereignisprotokolldienst registriert sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66f40-172">Gets an enumerable collection of all the event log names that are registered with the Event Log service.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="66f40-173">Gibt eine zählbare Auflistung von Zeichenfolgen zurück, die die Ereignisprotokollnamen enthalten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66f40-173">Returns an enumerable collection of strings that contain the event log names.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProviderNames">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;string&gt; GetProviderNames ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;string&gt; GetProviderNames() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.Reader.EventLogSession.GetProviderNames" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProviderNames () As IEnumerable(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::String ^&gt; ^ GetProviderNames();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="66f40-174">Ruft eine zählbare Auflistung aller Ereignisanbieternamen ab, die für den Ereignisprotokolldienst registriert sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66f40-174">Gets an enumerable collection of all the event provider names that are registered with the Event Log service.</span>
          </span>
          <span data-ttu-id="66f40-175">Ein Ereignisanbieter ist eine Anwendung, die Ereignisse in einem Ereignisprotokoll veröffentlicht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66f40-175">An event provider is an application that publishes events to an event log.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="66f40-176">Gibt eine aufzählbare Auflistung von Zeichenfolgen mit den Ereignisanbieternamen zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66f40-176">Returns an enumerable collection of strings that contain the event provider names.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GlobalSession">
      <MemberSignature Language="C#" Value="public static System.Diagnostics.Eventing.Reader.EventLogSession GlobalSession { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Diagnostics.Eventing.Reader.EventLogSession GlobalSession" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.EventLogSession.GlobalSession" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property GlobalSession As EventLogSession" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Diagnostics::Eventing::Reader::EventLogSession ^ GlobalSession { System::Diagnostics::Eventing::Reader::EventLogSession ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.Eventing.Reader.EventLogSession</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="66f40-177">Ruft ein vordefiniertes statisches Sitzungsobjekt ab, das mit dem Ereignisprotokolldienst auf dem lokalen Computer verbunden ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66f40-177">Gets a static predefined session object that is connected to the Event Log service on the local computer.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="66f40-178">Gibt ein <see cref="T:System.Diagnostics.Eventing.Reader.EventLogSession" /> zurück, das ein vordefiniertes Sitzungsobjekt darstellt, das mit dem Ereignisprotokolldienst auf dem lokalen Computer verbunden ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66f40-178">Returns an <see cref="T:System.Diagnostics.Eventing.Reader.EventLogSession" /> object that is a predefined session object that is connected to the Event Log service on the local computer.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>