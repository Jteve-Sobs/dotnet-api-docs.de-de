<Type Name="EventLogMode" FullName="System.Diagnostics.Eventing.Reader.EventLogMode">
  <Metadata><Meta Name="ms.openlocfilehash" Value="83c519ad1dd06bd816830a7fe9c055756f1ea44e" /><Meta Name="ms.sourcegitcommit" Value="9dda17222b9f7d3edf130133bfb1370d5b410a4b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="09/22/2018" /><Meta Name="ms.locfileid" Value="46590122" /></Metadata><TypeSignature Language="C#" Value="public enum EventLogMode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed EventLogMode extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.Eventing.Reader.EventLogMode" />
  <TypeSignature Language="VB.NET" Value="Public Enum EventLogMode" />
  <TypeSignature Language="C++ CLI" Value="public enum class EventLogMode" />
  <TypeSignature Language="F#" Value="type EventLogMode = " />
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary><span data-ttu-id="38845-101">Bestimmt die Behandlung eines Ereignisprotokolls durch den Ereignisprotokolldienst, wenn das Protokoll die maximal zulässige Größe erreicht hat (und keine weiteren Elemente mehr aufnehmen kann).</span><span class="sxs-lookup"><span data-stu-id="38845-101">Determines the behavior for the event log service handles an event log when the log reaches its maximum allowed size (when the event log is full).</span></span></summary>
    <remarks>To be added.</remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/d26107ee-7a80-44d7-b43b-cf774559e4ac"><span data-ttu-id="38845-102">Technologiezusammenfassung zum Lesen und Verwalten von Ereignisprotokollen</span><span class="sxs-lookup"><span data-stu-id="38845-102">Technology Summary for Reading and Managing Event Logs</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/79377aba-b6e5-4e4d-a9be-ea25ce6f1dc5"><span data-ttu-id="38845-103">Ereignisprotokollszenarien</span><span class="sxs-lookup"><span data-stu-id="38845-103">Event Log Scenarios</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="AutoBackup">
      <MemberSignature Language="C#" Value="AutoBackup" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Diagnostics.Eventing.Reader.EventLogMode AutoBackup = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.Eventing.Reader.EventLogMode.AutoBackup" />
      <MemberSignature Language="VB.NET" Value="AutoBackup" />
      <MemberSignature Language="C++ CLI" Value="AutoBackup" />
      <MemberSignature Language="F#" Value="AutoBackup = 1" Usage="System.Diagnostics.Eventing.Reader.EventLogMode.AutoBackup" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.Eventing.Reader.EventLogMode</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="38845-104">Archivieren Sie das Protokoll bei Erreichen der maximalen Kapazität, und überschreiben Sie keine Ereignisse.</span><span class="sxs-lookup"><span data-stu-id="38845-104">Archive the log when full, do not overwrite events.</span></span> <span data-ttu-id="38845-105">Das Protokoll wird ggf. automatisch archiviert.</span><span class="sxs-lookup"><span data-stu-id="38845-105">The log is automatically archived when necessary.</span></span> <span data-ttu-id="38845-106">Es werden keine Ereignisse überschrieben.</span><span class="sxs-lookup"><span data-stu-id="38845-106">No events are overwritten.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Circular">
      <MemberSignature Language="C#" Value="Circular" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Diagnostics.Eventing.Reader.EventLogMode Circular = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.Eventing.Reader.EventLogMode.Circular" />
      <MemberSignature Language="VB.NET" Value="Circular" />
      <MemberSignature Language="C++ CLI" Value="Circular" />
      <MemberSignature Language="F#" Value="Circular = 0" Usage="System.Diagnostics.Eventing.Reader.EventLogMode.Circular" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.Eventing.Reader.EventLogMode</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="38845-107">Neue Ereignisse werden weiterhin gespeichert, auch wenn die Protokolldatei voll ist.</span><span class="sxs-lookup"><span data-stu-id="38845-107">New events continue to be stored when the log file is full.</span></span> <span data-ttu-id="38845-108">Jedes neue eingehende Ereignis ersetzt jeweils das älteste Ereignis im Protokoll.</span><span class="sxs-lookup"><span data-stu-id="38845-108">Each new incoming event replaces the oldest event in the log.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Retain">
      <MemberSignature Language="C#" Value="Retain" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Diagnostics.Eventing.Reader.EventLogMode Retain = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.Eventing.Reader.EventLogMode.Retain" />
      <MemberSignature Language="VB.NET" Value="Retain" />
      <MemberSignature Language="C++ CLI" Value="Retain" />
      <MemberSignature Language="F#" Value="Retain = 2" Usage="System.Diagnostics.Eventing.Reader.EventLogMode.Retain" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.Eventing.Reader.EventLogMode</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary><span data-ttu-id="38845-109">Überschreiben Sie keine Ereignisse.</span><span class="sxs-lookup"><span data-stu-id="38845-109">Do not overwrite events.</span></span> <span data-ttu-id="38845-110">Löschen Sie das Protokoll manuell statt automatisch.</span><span class="sxs-lookup"><span data-stu-id="38845-110">Clear the log manually rather than automatically.</span></span></summary>
      </Docs>
    </Member>
  </Members>
</Type>