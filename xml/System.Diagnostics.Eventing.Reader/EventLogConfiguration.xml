<Type Name="EventLogConfiguration" FullName="System.Diagnostics.Eventing.Reader.EventLogConfiguration">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="85920d8bcbccff7eb0e0231852fc7ab277235e5f" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37667020" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class EventLogConfiguration : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EventLogConfiguration extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.Eventing.Reader.EventLogConfiguration" />
  <TypeSignature Language="VB.NET" Value="Public Class EventLogConfiguration&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class EventLogConfiguration : IDisposable" />
  <TypeSignature Language="F#" Value="type EventLogConfiguration = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="ccfb1-101">Enthält statische Informationen und Konfigurationseinstellungen für ein Ereignisprotokoll.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ccfb1-101">Contains static information and configuration settings for an event log.</span>
      </span>
      <span data-ttu-id="ccfb1-102">Zahlreiche Konfigurationseinstellungen wurden vom Ereignisanbieter festgelegt, der das Protokoll erstellt hat.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ccfb1-102">Many of the configurations settings were defined by the event provider that created the log.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccfb1-103">Wenn eine Eigenschaft für dieses Objekt geändert wird, rufen Sie die <xref:System.Diagnostics.Eventing.Reader.EventLogConfiguration.SaveChanges%2A> Methode, um die Änderungen zu speichern.</span><span class="sxs-lookup"><span data-stu-id="ccfb1-103">If a property is changed for this object, call the <xref:System.Diagnostics.Eventing.Reader.EventLogConfiguration.SaveChanges%2A> method to save the changes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ccfb1-104">Code, die mit dieser Klasse, z. B. finden Sie unter [Vorgehensweise: Konfigurieren und Lesen von Ereignisprotokolleigenschaften](http://msdn.microsoft.com/library/2d2b00b3-2d1d-4567-a47e-3f5a7c1955ac).</span><span class="sxs-lookup"><span data-stu-id="ccfb1-104">For example code using this class, see [How to: Configure and Read Event Log Properties](http://msdn.microsoft.com/library/2d2b00b3-2d1d-4567-a47e-3f5a7c1955ac).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ccfb1-105">Initialisiert ein neues <see cref="T:System.Diagnostics.Eventing.Reader.EventLogConfiguration" />-Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccfb1-105">Initializes a new <see cref="T:System.Diagnostics.Eventing.Reader.EventLogConfiguration" /> object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventLogConfiguration (string logName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string logName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.Reader.EventLogConfiguration.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (logName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventLogConfiguration(System::String ^ logName);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.Eventing.Reader.EventLogConfiguration : string -&gt; System.Diagnostics.Eventing.Reader.EventLogConfiguration" Usage="new System.Diagnostics.Eventing.Reader.EventLogConfiguration logName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="logName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="logName">
          <span data-ttu-id="ccfb1-106">Der Name des lokalen Ereignisprotokolls, für das Informationen und Konfigurationseinstellungen abgerufen werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccfb1-106">The name of the local event log for which to get information and configuration settings.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ccfb1-107">Initialisiert ein neues <see cref="T:System.Diagnostics.Eventing.Reader.EventLogConfiguration" />-Objekt, indem das lokale Ereignisprotokoll angegeben wird, für das Informationen und Konfigurationseinstellungen abgerufen werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccfb1-107">Initializes a new <see cref="T:System.Diagnostics.Eventing.Reader.EventLogConfiguration" /> object by specifying the local event log for which to get information and configuration settings.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventLogConfiguration (string logName, System.Diagnostics.Eventing.Reader.EventLogSession session);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string logName, class System.Diagnostics.Eventing.Reader.EventLogSession session) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.Reader.EventLogConfiguration.#ctor(System.String,System.Diagnostics.Eventing.Reader.EventLogSession)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (logName As String, session As EventLogSession)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventLogConfiguration(System::String ^ logName, System::Diagnostics::Eventing::Reader::EventLogSession ^ session);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.Eventing.Reader.EventLogConfiguration : string * System.Diagnostics.Eventing.Reader.EventLogSession -&gt; System.Diagnostics.Eventing.Reader.EventLogConfiguration" Usage="new System.Diagnostics.Eventing.Reader.EventLogConfiguration (logName, session)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="logName" Type="System.String" />
        <Parameter Name="session" Type="System.Diagnostics.Eventing.Reader.EventLogSession" />
      </Parameters>
      <Docs>
        <param name="logName">
          <span data-ttu-id="ccfb1-108">Der Name des Ereignisprotokolls, für das Informationen und Konfigurationseinstellungen abgerufen werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccfb1-108">The name of the event log for which to get information and configuration settings.</span>
          </span>
        </param>
        <param name="session">
          <span data-ttu-id="ccfb1-109">Die Ereignisprotokollsitzung, mit der der Ereignisprotokolldienst bestimmt wird, zu dem das angegebene Protokoll gehört.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccfb1-109">The event log session used to determine the event log service that the specified log belongs to.</span>
          </span>
          <span data-ttu-id="ccfb1-110">Die Sitzung ist entweder mit dem Ereignisprotokolldienst auf dem lokalen Computer oder auf einem Remotecomputer verbunden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccfb1-110">The session is either connected to the event log service on the local computer or a remote computer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ccfb1-111">Initialisiert ein neues <see cref="T:System.Diagnostics.Eventing.Reader.EventLogConfiguration" />-Objekt, indem der Name des Protokolls angegeben wird, für das Informationen und Konfigurationseinstellungen abgerufen werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccfb1-111">Initializes a new <see cref="T:System.Diagnostics.Eventing.Reader.EventLogConfiguration" /> object by specifying the name of the log for which to get information and configuration settings.</span>
          </span>
          <span data-ttu-id="ccfb1-112">Das Protokoll kann sich je nach der angegebenen Ereignisprotokollsitzung auf dem lokalen Computer oder auf einem Remotecomputer befinden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccfb1-112">The log can be on the local computer or a remote computer, based on the event log session specified.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ccfb1-113">Gibt die vom Objekt verwendeten Ressourcen frei.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccfb1-113">Releases the resources used by this object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.Reader.EventLogConfiguration.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="eventLogConfiguration.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ccfb1-114">Gibt alle vom Objekt verwendeten Ressourcen frei.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccfb1-114">Releases all the resources used by this object.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.Reader.EventLogConfiguration.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="eventLogConfiguration.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="ccfb1-115">
            <see langword="true" />, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben, <see langword="false" />, um ausschließlich nicht verwaltete Ressourcen freizugeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccfb1-115">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ccfb1-116">Gibt die vom Objekt verwendeten nicht verwalteten Ressourcen und optional auch die verwalteten Ressourcen frei.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccfb1-116">Releases the unmanaged resources used by this object, and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsClassicLog">
      <MemberSignature Language="C#" Value="public bool IsClassicLog { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsClassicLog" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.IsClassicLog" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsClassicLog As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsClassicLog { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsClassicLog : bool" Usage="System.Diagnostics.Eventing.Reader.EventLogConfiguration.IsClassicLog" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ccfb1-117">Ruft das Flag ab, das angibt, ob es sich um ein klassisches Ereignisprotokoll handelt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccfb1-117">Gets the flag that indicates if the event log is a classic event log.</span>
          </span>
          <span data-ttu-id="ccfb1-118">Bei einem klassischen Ereignisprotokoll sind die Ereignisse in einer MC-Datei anstelle eines Manifests (XML-Datei) für den Ereignisanbieter definiert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccfb1-118">A classic event log is one that has its events defined in a .mc file instead of a manifest (.xml file) used by the event provider.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ccfb1-119">Gibt <see langword="true" /> zurück, wenn es sich um ein klassisches Ereignisprotokoll handelt; andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccfb1-119">Returns <see langword="true" /> if the event log is a classic log, and returns <see langword="false" /> if the event log is not a classic log.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEnabled">
      <MemberSignature Language="C#" Value="public bool IsEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.IsEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property IsEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsEnabled : bool with get, set" Usage="System.Diagnostics.Eventing.Reader.EventLogConfiguration.IsEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ccfb1-120">Ruft einen booleschen Wert ab, der bestimmt, ob das Ereignisprotokoll aktiviert oder deaktiviert ist, oder legt diesen fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccfb1-120">Gets or sets a Boolean value that determines whether the event log is enabled or disabled.</span>
          </span>
          <span data-ttu-id="ccfb1-121">Ereignisse können nur in aktivierten Ereignisprotokollen protokolliert werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccfb1-121">An enabled log is one in which events can be logged, and a disabled log is one in which events cannot be logged.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ccfb1-122">Gibt <see langword="true" /> zurück, wenn das Protokoll aktiviert wird, und gibt <see langword="false" /> zurück, wenn das Protokoll deaktiviert ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccfb1-122">Returns <see langword="true" /> if the log is enabled, and returns <see langword="false" /> if the log is disabled.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccfb1-123">Wenn der Wert dieser Eigenschaft geändert wird, rufen Sie die <xref:System.Diagnostics.Eventing.Reader.EventLogConfiguration.SaveChanges%2A> Methode, um die Änderungen zu speichern.</span><span class="sxs-lookup"><span data-stu-id="ccfb1-123">If the value of this property is changed, call the <xref:System.Diagnostics.Eventing.Reader.EventLogConfiguration.SaveChanges%2A> method to save the changes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LogFilePath">
      <MemberSignature Language="C#" Value="public string LogFilePath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LogFilePath" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.LogFilePath" />
      <MemberSignature Language="VB.NET" Value="Public Property LogFilePath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ LogFilePath { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.LogFilePath : string with get, set" Usage="System.Diagnostics.Eventing.Reader.EventLogConfiguration.LogFilePath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ccfb1-124">Ruft den Verzeichnispfad für den Speicherort der Datei ab, in der die Ereignisse für das Protokoll gespeichert werden, oder legt diesen fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccfb1-124">Gets or sets the file directory path to the location of the file where the events are stored for the log.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ccfb1-125">Gibt eine Zeichenfolge zurück, die den Pfad zur Ereignisprotokolldatei enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccfb1-125">Returns a string that contains the path to the event log file.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccfb1-126">Wenn der Wert dieser Eigenschaft geändert wird, rufen Sie die <xref:System.Diagnostics.Eventing.Reader.EventLogConfiguration.SaveChanges%2A> Methode, um die Änderungen zu speichern.</span><span class="sxs-lookup"><span data-stu-id="ccfb1-126">If the value of this property is changed, call the <xref:System.Diagnostics.Eventing.Reader.EventLogConfiguration.SaveChanges%2A> method to save the changes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LogIsolation">
      <MemberSignature Language="C#" Value="public System.Diagnostics.Eventing.Reader.EventLogIsolation LogIsolation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Diagnostics.Eventing.Reader.EventLogIsolation LogIsolation" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.LogIsolation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LogIsolation As EventLogIsolation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Diagnostics::Eventing::Reader::EventLogIsolation LogIsolation { System::Diagnostics::Eventing::Reader::EventLogIsolation get(); };" />
      <MemberSignature Language="F#" Value="member this.LogIsolation : System.Diagnostics.Eventing.Reader.EventLogIsolation" Usage="System.Diagnostics.Eventing.Reader.EventLogConfiguration.LogIsolation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.Eventing.Reader.EventLogIsolation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ccfb1-127">Ruft einen <see cref="T:System.Diagnostics.Eventing.Reader.EventLogIsolation" />-Wert ab, der angibt, ob das Ereignisprotokoll ein Anwendungs-, System- oder benutzerdefiniertes Ereignisprotokoll ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccfb1-127">Gets an <see cref="T:System.Diagnostics.Eventing.Reader.EventLogIsolation" /> value that specifies whether the event log is an application, system, or custom event log.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ccfb1-128">Gibt einen <see cref="T:System.Diagnostics.Eventing.Reader.EventLogIsolation" />-Wert zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccfb1-128">Returns an <see cref="T:System.Diagnostics.Eventing.Reader.EventLogIsolation" /> value.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogMode">
      <MemberSignature Language="C#" Value="public System.Diagnostics.Eventing.Reader.EventLogMode LogMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Diagnostics.Eventing.Reader.EventLogMode LogMode" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.LogMode" />
      <MemberSignature Language="VB.NET" Value="Public Property LogMode As EventLogMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Diagnostics::Eventing::Reader::EventLogMode LogMode { System::Diagnostics::Eventing::Reader::EventLogMode get(); void set(System::Diagnostics::Eventing::Reader::EventLogMode value); };" />
      <MemberSignature Language="F#" Value="member this.LogMode : System.Diagnostics.Eventing.Reader.EventLogMode with get, set" Usage="System.Diagnostics.Eventing.Reader.EventLogConfiguration.LogMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.Eventing.Reader.EventLogMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ccfb1-129">Ruft einen <see cref="T:System.Diagnostics.Eventing.Reader.EventLogMode" />-Wert ab, der bestimmt, wie Ereignisse behandelt werden, wenn das Ereignisprotokoll voll ist, oder legt diesen fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccfb1-129">Gets or sets an <see cref="T:System.Diagnostics.Eventing.Reader.EventLogMode" /> value that determines how events are handled when the event log becomes full.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ccfb1-130">Gibt einen <see cref="T:System.Diagnostics.Eventing.Reader.EventLogMode" />-Wert zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccfb1-130">Returns an <see cref="T:System.Diagnostics.Eventing.Reader.EventLogMode" /> value.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccfb1-131">Wenn der Wert dieser Eigenschaft geändert wird, rufen Sie die <xref:System.Diagnostics.Eventing.Reader.EventLogConfiguration.SaveChanges%2A> Methode, um die Änderungen zu speichern.</span><span class="sxs-lookup"><span data-stu-id="ccfb1-131">If the value of this property is changed, call the <xref:System.Diagnostics.Eventing.Reader.EventLogConfiguration.SaveChanges%2A> method to save the changes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LogName">
      <MemberSignature Language="C#" Value="public string LogName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LogName" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.LogName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LogName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ LogName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LogName : string" Usage="System.Diagnostics.Eventing.Reader.EventLogConfiguration.LogName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ccfb1-132">Ruft den Namen des Ereignisprotokolls ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccfb1-132">Gets the name of the event log.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ccfb1-133">Gibt eine Zeichenfolge mit dem Namen des Ereignisprotokolls zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccfb1-133">Returns a string that contains the name of the event log.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogType">
      <MemberSignature Language="C#" Value="public System.Diagnostics.Eventing.Reader.EventLogType LogType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Diagnostics.Eventing.Reader.EventLogType LogType" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.LogType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LogType As EventLogType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Diagnostics::Eventing::Reader::EventLogType LogType { System::Diagnostics::Eventing::Reader::EventLogType get(); };" />
      <MemberSignature Language="F#" Value="member this.LogType : System.Diagnostics.Eventing.Reader.EventLogType" Usage="System.Diagnostics.Eventing.Reader.EventLogConfiguration.LogType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.Eventing.Reader.EventLogType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ccfb1-134">Ruft einen <see cref="T:System.Diagnostics.Eventing.Reader.EventLogType" />-Wert ab, der den Typ des Ereignisprotokolls bestimmt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccfb1-134">Gets an <see cref="T:System.Diagnostics.Eventing.Reader.EventLogType" /> value that determines the type of the event log.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ccfb1-135">Gibt einen <see cref="T:System.Diagnostics.Eventing.Reader.EventLogType" />-Wert zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccfb1-135">Returns an <see cref="T:System.Diagnostics.Eventing.Reader.EventLogType" /> value.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaximumSizeInBytes">
      <MemberSignature Language="C#" Value="public long MaximumSizeInBytes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaximumSizeInBytes" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.MaximumSizeInBytes" />
      <MemberSignature Language="VB.NET" Value="Public Property MaximumSizeInBytes As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MaximumSizeInBytes { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.MaximumSizeInBytes : int64 with get, set" Usage="System.Diagnostics.Eventing.Reader.EventLogConfiguration.MaximumSizeInBytes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ccfb1-136">Ruft die maximale Größe in Byte ab, bis zu der die Ereignisprotokolldatei anwachsen darf, oder legt diese fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccfb1-136">Gets or sets the maximum size, in bytes, that the event log file is allowed to be.</span>
          </span>
          <span data-ttu-id="ccfb1-137">Wenn die Datei diese maximale Größe erreicht, wird sie als voll betrachtet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccfb1-137">When the file reaches this maximum size, it is considered full.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ccfb1-138">Gibt einen Long-Wert zurück, der die maximale Größe in Byte angibt, bis zu der die Ereignisprotokolldatei anwachsen darf.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccfb1-138">Returns a long value that represents the maximum size, in bytes, that the event log file is allowed to be.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccfb1-139">Wenn der Wert dieser Eigenschaft geändert wird, rufen Sie die <xref:System.Diagnostics.Eventing.Reader.EventLogConfiguration.SaveChanges%2A> Methode, um die Änderungen zu speichern.</span><span class="sxs-lookup"><span data-stu-id="ccfb1-139">If the value of this property is changed, call the <xref:System.Diagnostics.Eventing.Reader.EventLogConfiguration.SaveChanges%2A> method to save the changes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OwningProviderName">
      <MemberSignature Language="C#" Value="public string OwningProviderName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OwningProviderName" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.OwningProviderName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OwningProviderName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OwningProviderName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OwningProviderName : string" Usage="System.Diagnostics.Eventing.Reader.EventLogConfiguration.OwningProviderName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ccfb1-140">Ruft den Namen des Ereignisanbieters ab, der dieses Ereignisprotokoll erstellt hat.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccfb1-140">Gets the name of the event provider that created this event log.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ccfb1-141">Gibt eine Zeichenfolge zurück, die den Namen des Ereignisanbieters enthält, der das Ereignisprotokoll erstellt hat.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccfb1-141">Returns a string that contains the name of the event provider that created this event log.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProviderBufferSize">
      <MemberSignature Language="C#" Value="public Nullable&lt;int&gt; ProviderBufferSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; ProviderBufferSize" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderBufferSize" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProviderBufferSize As Nullable(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;int&gt; ProviderBufferSize { Nullable&lt;int&gt; get(); };" />
      <MemberSignature Language="F#" Value="member this.ProviderBufferSize : Nullable&lt;int&gt;" Usage="System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderBufferSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ccfb1-142">Ruft die Größe des Puffers ab, den der Ereignisanbieter zum Veröffentlichen von Ereignissen im Protokoll verwendet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccfb1-142">Gets the size of the buffer that the event provider uses for publishing events to the log.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ccfb1-143">Gibt einen ganzzahligen Wert zurück, der NULL sein kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccfb1-143">Returns an integer value that can be null.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProviderControlGuid">
      <MemberSignature Language="C#" Value="public Nullable&lt;Guid&gt; ProviderControlGuid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.Guid&gt; ProviderControlGuid" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderControlGuid" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProviderControlGuid As Nullable(Of Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;Guid&gt; ProviderControlGuid { Nullable&lt;Guid&gt; get(); };" />
      <MemberSignature Language="F#" Value="member this.ProviderControlGuid : Nullable&lt;Guid&gt;" Usage="System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderControlGuid" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Guid&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ccfb1-144">Ruft die GUID des Ereignisprotokolls ab, sofern es sich bei dem Protokoll um ein Debugprotokoll handelt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccfb1-144">Gets the control globally unique identifier (GUID) for the event log if the log is a debug log.</span>
          </span>
          <span data-ttu-id="ccfb1-145">Wenn dieses Protokoll kein Debugprotokoll ist, ist dieser Wert NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccfb1-145">If this log is not a debug log, this value will be null.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ccfb1-146">Gibt einen GUID-Wert oder NULL zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccfb1-146">Returns a GUID value or null.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProviderKeywords">
      <MemberSignature Language="C#" Value="public Nullable&lt;long&gt; ProviderKeywords { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int64&gt; ProviderKeywords" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderKeywords" />
      <MemberSignature Language="VB.NET" Value="Public Property ProviderKeywords As Nullable(Of Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;long&gt; ProviderKeywords { Nullable&lt;long&gt; get(); void set(Nullable&lt;long&gt; value); };" />
      <MemberSignature Language="F#" Value="member this.ProviderKeywords : Nullable&lt;int64&gt; with get, set" Usage="System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderKeywords" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ccfb1-147">Ruft die vom Ereignisanbieter verwendete Schlüsselwortmaske ab oder legt diese fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccfb1-147">Gets or sets keyword mask used by the event provider.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ccfb1-148">Gibt einen Long-Wert zurück, der NULL sein kann, wenn der Ereignisanbieter keine Schlüsselwörter definiert hat.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccfb1-148">Returns a long value that can be null if the event provider did not define any keywords.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccfb1-149">Wenn der Wert dieser Eigenschaft geändert wird, rufen Sie die <xref:System.Diagnostics.Eventing.Reader.EventLogConfiguration.SaveChanges%2A> Methode, um die Änderungen zu speichern.</span><span class="sxs-lookup"><span data-stu-id="ccfb1-149">If the value of this property is changed, call the <xref:System.Diagnostics.Eventing.Reader.EventLogConfiguration.SaveChanges%2A> method to save the changes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProviderLatency">
      <MemberSignature Language="C#" Value="public Nullable&lt;int&gt; ProviderLatency { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; ProviderLatency" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderLatency" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProviderLatency As Nullable(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;int&gt; ProviderLatency { Nullable&lt;int&gt; get(); };" />
      <MemberSignature Language="F#" Value="member this.ProviderLatency : Nullable&lt;int&gt;" Usage="System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderLatency" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ccfb1-150">Ruft die maximale Wartezeitzeit ab, die vom Ereignisanbieter beim Veröffentlichen von Ereignissen im Protokoll verwendet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccfb1-150">Gets the maximum latency time used by the event provider when publishing events to the log.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ccfb1-151">Gibt einen ganzzahligen Wert zurück, der NULL sein kann, wenn vom Ereignisanbieter keine Wartezeit angegeben wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccfb1-151">Returns an integer value that can be null if no latency time was specified by the event provider.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProviderLevel">
      <MemberSignature Language="C#" Value="public Nullable&lt;int&gt; ProviderLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; ProviderLevel" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property ProviderLevel As Nullable(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;int&gt; ProviderLevel { Nullable&lt;int&gt; get(); void set(Nullable&lt;int&gt; value); };" />
      <MemberSignature Language="F#" Value="member this.ProviderLevel : Nullable&lt;int&gt; with get, set" Usage="System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ccfb1-152">Ruft die maximale Ereignisebene (die den Schweregrad des Ereignisses definiert) ab, die im Ereignisprotokoll aufgezeichnet werden darf, oder legt diese fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccfb1-152">Gets or sets the maximum event level (which defines the severity of the event) that is allowed to be logged in the event log.</span>
          </span>
          <span data-ttu-id="ccfb1-153">Dieser Wert wird vom Ereignisanbieter definiert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccfb1-153">This value is defined by the event provider.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ccfb1-154">Gibt einen ganzzahligen Wert zurück, der NULL sein kann, wenn die maximale Ereignisebene vom Ereignisanbieter nicht definiert wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccfb1-154">Returns an integer value that can be null if the maximum event level was not defined in the event provider.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccfb1-155">Wenn der Wert dieser Eigenschaft geändert wird, rufen Sie die <xref:System.Diagnostics.Eventing.Reader.EventLogConfiguration.SaveChanges%2A> Methode, um die Änderungen zu speichern.</span><span class="sxs-lookup"><span data-stu-id="ccfb1-155">If the value of this property is changed, call the <xref:System.Diagnostics.Eventing.Reader.EventLogConfiguration.SaveChanges%2A> method to save the changes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProviderMaximumNumberOfBuffers">
      <MemberSignature Language="C#" Value="public Nullable&lt;int&gt; ProviderMaximumNumberOfBuffers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; ProviderMaximumNumberOfBuffers" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderMaximumNumberOfBuffers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProviderMaximumNumberOfBuffers As Nullable(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;int&gt; ProviderMaximumNumberOfBuffers { Nullable&lt;int&gt; get(); };" />
      <MemberSignature Language="F#" Value="member this.ProviderMaximumNumberOfBuffers : Nullable&lt;int&gt;" Usage="System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderMaximumNumberOfBuffers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ccfb1-156">Ruft die maximale Anzahl an Puffern ab, die vom Ereignisanbieter zum Veröffentlichen von Ereignissen im Protokoll verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccfb1-156">Gets the maximum number of buffers used by the event provider to publish events to the event log.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ccfb1-157">Gibt einen ganzzahligen Wert zurück, der die maximale Anzahl an Puffern darstellt, die vom Ereignisanbieter zum Veröffentlichen von Ereignissen im Protokoll verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccfb1-157">Returns an integer value that is the maximum number of buffers used by the event provider to publish events to the event log.</span>
          </span>
          <span data-ttu-id="ccfb1-158">Dieser Wert kann NULL sein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccfb1-158">This value can be null.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProviderMinimumNumberOfBuffers">
      <MemberSignature Language="C#" Value="public Nullable&lt;int&gt; ProviderMinimumNumberOfBuffers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; ProviderMinimumNumberOfBuffers" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderMinimumNumberOfBuffers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProviderMinimumNumberOfBuffers As Nullable(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;int&gt; ProviderMinimumNumberOfBuffers { Nullable&lt;int&gt; get(); };" />
      <MemberSignature Language="F#" Value="member this.ProviderMinimumNumberOfBuffers : Nullable&lt;int&gt;" Usage="System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderMinimumNumberOfBuffers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ccfb1-159">Ruft die minimale Anzahl an Puffern ab, die vom Ereignisanbieter zum Veröffentlichen von Ereignissen im Protokoll verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccfb1-159">Gets the minimum number of buffers used by the event provider to publish events to the event log.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ccfb1-160">Gibt einen ganzzahligen Wert zurück, der die minimale Anzahl an Puffern darstellt, die vom Ereignisanbieter zum Veröffentlichen von Ereignissen im Protokoll verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccfb1-160">Returns an integer value that is the minimum number of buffers used by the event provider to publish events to the event log.</span>
          </span>
          <span data-ttu-id="ccfb1-161">Dieser Wert kann NULL sein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccfb1-161">This value can be null.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProviderNames">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;string&gt; ProviderNames { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;string&gt; ProviderNames" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderNames" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProviderNames As IEnumerable(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;System::String ^&gt; ^ ProviderNames { System::Collections::Generic::IEnumerable&lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ProviderNames : seq&lt;string&gt;" Usage="System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ccfb1-162">Ruft eine aufzählbare Auflistung der Namen aller Ereignisanbieter ab, die Ereignisse in diesem Ereignisprotokoll veröffentlichen dürfen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccfb1-162">Gets an enumerable collection of the names of all the event providers that can publish events to this event log.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ccfb1-163">Gibt eine aufzählbare Auflistung von Zeichenfolgen mit den Ereignisanbieternamen zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccfb1-163">Returns an enumerable collection of strings that contain the event provider names.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveChanges">
      <MemberSignature Language="C#" Value="public void SaveChanges ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SaveChanges() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.Reader.EventLogConfiguration.SaveChanges" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveChanges ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SaveChanges();" />
      <MemberSignature Language="F#" Value="member this.SaveChanges : unit -&gt; unit" Usage="eventLogConfiguration.SaveChanges " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ccfb1-164">Speichert die Konfigurationseinstellungen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccfb1-164">Saves the configuration settings that</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SecurityDescriptor">
      <MemberSignature Language="C#" Value="public string SecurityDescriptor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SecurityDescriptor" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.SecurityDescriptor" />
      <MemberSignature Language="VB.NET" Value="Public Property SecurityDescriptor As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SecurityDescriptor { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SecurityDescriptor : string with get, set" Usage="System.Diagnostics.Eventing.Reader.EventLogConfiguration.SecurityDescriptor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ccfb1-165">Ruft die Sicherheitsbeschreibung des Ereignisprotokolls ab oder legt diese fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccfb1-165">Gets or sets the security descriptor of the event log.</span>
          </span>
          <span data-ttu-id="ccfb1-166">Die Sicherheitsbeschreibung definiert die Benutzer und Benutzergruppen, die diese Ereignisprotokoll lesen und in dieses schreiben dürfen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccfb1-166">The security descriptor defines the users and groups of users that can read and write to the event log.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ccfb1-167">Gibt eine Zeichenfolge zurück, die die Sicherheitsbeschreibung für das Ereignisprotokoll enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ccfb1-167">Returns a string that contains the security descriptor for the event log.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccfb1-168">Wenn der Wert dieser Eigenschaft geändert wird, rufen Sie die <xref:System.Diagnostics.Eventing.Reader.EventLogConfiguration.SaveChanges%2A> Methode, um die Änderungen zu speichern.</span><span class="sxs-lookup"><span data-stu-id="ccfb1-168">If the value of this property is changed, call the <xref:System.Diagnostics.Eventing.Reader.EventLogConfiguration.SaveChanges%2A> method to save the changes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>