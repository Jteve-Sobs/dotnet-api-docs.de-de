<Type Name="EventRecordWrittenEventArgs" FullName="System.Diagnostics.Eventing.Reader.EventRecordWrittenEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="35d35eb39eeb0222d15c55f6f64e0c85b30fa6b9" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36742622" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class EventRecordWrittenEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit EventRecordWrittenEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.Eventing.Reader.EventRecordWrittenEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EventRecordWrittenEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class EventRecordWrittenEventArgs sealed : EventArgs" />
  <TypeSignature Language="F#" Value="type EventRecordWrittenEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="8aa0a-101">Wenn das <see cref="E:System.Diagnostics.Eventing.Reader.EventLogWatcher.EventRecordWritten" />-Ereignis ausgelöst wird, wird eine Instanz des Objekts an die Delegatenmethode übergeben, die das Ereignis behandelt.</span>
      <span class="sxs-lookup">
        <span data-stu-id="8aa0a-101">When the <see cref="E:System.Diagnostics.Eventing.Reader.EventLogWatcher.EventRecordWritten" /> event is raised, an instance of this object is passed to the delegate method that handles the event.</span>
      </span>
      <span data-ttu-id="8aa0a-102">Das Objekt enthält das Ereignis, das im Ereignisprotokoll veröffentlicht wurde oder die Ausnahme, die durch einen Fehler beim Abonnieren des Ereignisses ausgelöst wurde.</span>
      <span class="sxs-lookup">
        <span data-stu-id="8aa0a-102">This object contains the event that was published to the event log or the exception that occurred when the event subscription failed.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8aa0a-103">Z. B. Code mit dieser Klasse finden Sie unter [wie: Abonnieren von Ereignissen im Ereignisprotokoll](http://msdn.microsoft.com/library/62e006d3-9fab-4fdf-a8f8-e23d05498cd4).</span><span class="sxs-lookup"><span data-stu-id="8aa0a-103">For example code using this class, see [How to: Subscribe to Events in an Event Log](http://msdn.microsoft.com/library/62e006d3-9fab-4fdf-a8f8-e23d05498cd4).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="EventException">
      <MemberSignature Language="C#" Value="public Exception EventException { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception EventException" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.EventRecordWrittenEventArgs.EventException" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EventException As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ EventException { Exception ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EventException : Exception" Usage="System.Diagnostics.Eventing.Reader.EventRecordWrittenEventArgs.EventException" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8aa0a-104">Ruft die Ausnahme ab, die durch einen Fehler beim Abonnieren des Ereignisses ausgelöst wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8aa0a-104">Gets the exception that occurred when the event subscription failed.</span>
          </span>
          <span data-ttu-id="8aa0a-105">Die Ausnahme enthält eine Beschreibung der Ursache für den Fehler beim Abonnieren des Ereignisses.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8aa0a-105">The exception has a description of why the subscription failed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8aa0a-106">Gibt ein <see cref="T:System.Exception" />-Objekt zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8aa0a-106">Returns an <see cref="T:System.Exception" /> object.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EventRecord">
      <MemberSignature Language="C#" Value="public System.Diagnostics.Eventing.Reader.EventRecord EventRecord { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Diagnostics.Eventing.Reader.EventRecord EventRecord" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.EventRecordWrittenEventArgs.EventRecord" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EventRecord As EventRecord" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Diagnostics::Eventing::Reader::EventRecord ^ EventRecord { System::Diagnostics::Eventing::Reader::EventRecord ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EventRecord : System.Diagnostics.Eventing.Reader.EventRecord" Usage="System.Diagnostics.Eventing.Reader.EventRecordWrittenEventArgs.EventRecord" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.Eventing.Reader.EventRecord</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8aa0a-107">Ruft den Ereignisdatensatz ab, der im Ereignisprotokoll veröffentlicht wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8aa0a-107">Gets the event record that is published to the event log.</span>
          </span>
          <span data-ttu-id="8aa0a-108">Dieses Ereignis entspricht den Kriterien aus der Abfrage für das Ereignisabonnement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8aa0a-108">This event matches the criteria from the query specified in the event subscription.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8aa0a-109">Gibt ein <see cref="T:System.Diagnostics.Eventing.Reader.EventRecord" />-Objekt zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8aa0a-109">Returns a <see cref="T:System.Diagnostics.Eventing.Reader.EventRecord" /> object.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>