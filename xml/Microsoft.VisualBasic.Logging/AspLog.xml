<Type Name="AspLog" FullName="Microsoft.VisualBasic.Logging.AspLog">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="410a7f44cd11d5d9725cf179fc82a009c4567e6b" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39859322" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class AspLog : Microsoft.VisualBasic.Logging.Log" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi AspLog extends Microsoft.VisualBasic.Logging.Log" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.Logging.AspLog" />
  <TypeSignature Language="VB.NET" Value="Public Class AspLog&#xA;Inherits Log" />
  <TypeSignature Language="C++ CLI" Value="public ref class AspLog : Microsoft::VisualBasic::Logging::Log" />
  <TypeSignature Language="F#" Value="type AspLog = class&#xA;    inherit Log" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.VisualBasic.Logging.Log</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt eine Eigenschaft und Methoden zum Schreiben von Ereignis- und Ausnahmeinformationen in die Protokollüberwachung der Anwendung bereit.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die `My.Application.Log` Objekt stellt einen einfachen Einstiegspunkt für den Zugang zu den [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]Protokollierdienste. Die `WriteEntry` und `WriteException` Methoden Schreiben von Nachrichten in die protokollüberwachung der Anwendung. Die Listener können von der Anwendungskonfigurationsdatei konfiguriert werden. Weitere Informationen finden Sie unter [Walkthrough: Changing Where My.Application.Log Writes Information](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-changing-where-my-application-log-writes-information.md) und [arbeiten mit Anwendungsprotokollen](~/docs/visual-basic/developing-apps/programming/log-info/working-with-application-logs.md).  
  
 Die `My.Application.Log` Objekt ist nur für Clientanwendungen verfügbar. Verwenden Sie für Webanwendungen `My.Log`. Weitere Informationen finden Sie unter <xref:Microsoft.VisualBasic.Logging.Log?displayProperty=nameWithType>.  
  
 Die folgende Tabelle enthält Beispiele für Aufgaben im Zusammenhang mit der `My.Application.Log` Objekt.  
  
|Beschreibung|Siehe|  
|--------|---------|  
|Schreiben von Ereignisinformationen in die protokollüberwachung der Anwendung|[Gewusst wie: Schreiben von Protokollmeldungen](~/docs/visual-basic/developing-apps/programming/log-info/how-to-write-log-messages.md)|  
|Schreibt Ausnahmeinformationen in die protokollüberwachung der Anwendung|[Gewusst wie: Protokollieren von Ausnahmen](~/docs/visual-basic/developing-apps/programming/log-info/how-to-log-exceptions.md)|  
|Bestimmen des Installationsorts `My.Application.Log` schreibt Informationen|[Exemplarische Vorgehensweise: Bestimmen, wohin „My.Application.Log“ Informationen schreibt](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-determining-where-my-application-log-writes-information.md)|  
  
   
  
## Examples  
 Dieses Beispiel zeigt die Verwendung der `My.Application.Log.WriteEntry` -Methode zum Protokollieren von Ablaufprotokollinformationen. Weitere Informationen finden Sie unter [Vorgehensweise: Schreiben von Protokollmeldungen](~/docs/visual-basic/developing-apps/programming/log-info/how-to-write-log-messages.md).  
  
 [!code-vb[VbVbalrMyApplicationLog#11](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplicationLog/VB/Form1.vb#11)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:Microsoft.VisualBasic.Logging.Log" />
    <altmember cref="T:Microsoft.VisualBasic.ApplicationServices.ApplicationBase" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:Microsoft.VisualBasic.Logging.AspLog" />-Klasse.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AspLog ();" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.AspLog.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AspLog();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:Microsoft.VisualBasic.Logging.AspLog" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die `My.Log` Objekt stellt einen einfachen Einstiegspunkt für den Zugang zu den [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]Protokollierdienste. Die `WriteEntry` und `WriteException` Methoden Schreiben von Nachrichten in die protokollüberwachung der Anwendung. Die Listener können von der Anwendungskonfigurationsdatei konfiguriert werden. Weitere Informationen finden Sie unter [Walkthrough: Changing Where My.Application.Log Writes Information](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-changing-where-my-application-log-writes-information.md) und [arbeiten mit Anwendungsprotokollen](~/docs/visual-basic/developing-apps/programming/log-info/working-with-application-logs.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Logging.Log" />
        <altmember cref="T:Microsoft.VisualBasic.ApplicationServices.ApplicationBase" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AspLog (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.AspLog.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AspLog(System::String ^ name);" />
      <MemberSignature Language="F#" Value="new Microsoft.VisualBasic.Logging.AspLog : string -&gt; Microsoft.VisualBasic.Logging.AspLog" Usage="new Microsoft.VisualBasic.Logging.AspLog name" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <see cref="T:System.String" /> Der Name für das <see cref="P:Microsoft.VisualBasic.Logging.Log.TraceSource" />-Eigenschaftenobjekt.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:Microsoft.VisualBasic.Logging.AspLog" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die `My.Log` Objekt stellt einen einfachen Einstiegspunkt für den Zugang zu den [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]Protokollierdienste. Die `WriteEntry` und `WriteException` Methoden Schreiben von Nachrichten in die protokollüberwachung der Anwendung. Die Listener können von der Anwendungskonfigurationsdatei konfiguriert werden. Weitere Informationen finden Sie unter [Walkthrough: Changing Where My.Application.Log Writes Information](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-changing-where-my-application-log-writes-information.md) und [arbeiten mit Anwendungsprotokollen](~/docs/visual-basic/developing-apps/programming/log-info/working-with-application-logs.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Logging.Log" />
        <altmember cref="T:Microsoft.VisualBasic.ApplicationServices.ApplicationBase" />
      </Docs>
    </Member>
    <Member MemberName="InitializeWithDefaultsSinceNoConfigExists">
      <MemberSignature Language="C#" Value="protected internal override void InitializeWithDefaultsSinceNoConfigExists ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void InitializeWithDefaultsSinceNoConfigExists() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.AspLog.InitializeWithDefaultsSinceNoConfigExists" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub InitializeWithDefaultsSinceNoConfigExists ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void InitializeWithDefaultsSinceNoConfigExists();" />
      <MemberSignature Language="F#" Value="override this.InitializeWithDefaultsSinceNoConfigExists : unit -&gt; unit" Usage="aspLog.InitializeWithDefaultsSinceNoConfigExists " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Erstellt einen neuen <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> und fügt ihn der <see cref="P:System.Diagnostics.TraceSource.Listeners" />-Auflistung hinzu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode erstellt ein neues <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>, wird dessen Name auf `FileLog`, und konfiguriert ihn zum Protokollieren von Nachrichten mit einem Schweregrad <xref:System.Diagnostics.SourceLevels.Information> und höhere Versionen. Die neue <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> Objekt wird dann hinzugefügt, um die <xref:System.Diagnostics.TraceSource.Listeners%2A> Auflistung.  
  
 Die <xref:Microsoft.VisualBasic.Logging.Log.%23ctor%2A> Ruft die Methode, wenn die <xref:Microsoft.VisualBasic.Logging.Log.TraceSource%2A> Eigenschaft wurde nicht konfiguriert. Die Ablaufverfolgungsquelle kann in der Anwendungskonfigurationsdatei konfiguriert werden.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" />
      </Docs>
    </Member>
  </Members>
</Type>