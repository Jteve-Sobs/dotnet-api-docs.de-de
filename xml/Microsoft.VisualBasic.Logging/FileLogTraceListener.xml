<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="FileLogTraceListener.xml" source-language="en-US" target-language="de-DE">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac578cc1b5b2fdd6e02efea469bb7ec414d6f4ba417.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">78cc1b5b2fdd6e02efea469bb7ec414d6f4ba417</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>Provides a simple listener that directs logging output to file.</source>
          <target state="translated">Stellt einen einfachen Listener bereit, der Protokollausgaben an eine Datei weiterleitet.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>The <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener&gt;</ph> class provides automated maintenance capabilities to archive log files as needed, on a daily or per-application basis.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener&gt;</ph> -Klasse stellt automatisierte Wartungsfunktionen Protokolldateien archivieren Bedarf auf täglich oder pro Anwendung.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>This automatic archival functionality helps reduce the maintenance responsibilities of developers and administrators.</source>
          <target state="translated">Diese Funktionen zum automatischen Archivierung kann die Wartung Aufgaben von Entwicklern und Administratoren reduziert werden.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>An instance of <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener&gt;</ph> can be added to the <ph id="ph2">&lt;xref:System.Diagnostics.Debug.Listeners%2A?displayProperty=nameWithType&gt;</ph> or <ph id="ph3">&lt;xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType&gt;</ph> collections to redirect output from logging to a text file.</source>
          <target state="translated">Eine Instanz von <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener&gt;</ph> hinzugefügt werden können die <ph id="ph2">&lt;xref:System.Diagnostics.Debug.Listeners%2A?displayProperty=nameWithType&gt;</ph> oder <ph id="ph3">&lt;xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType&gt;</ph> Sammlungen Protokollausgabe in eine Textdatei umleiten.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>Instances of this class can also be added to <ph id="ph1">`My.Application.Log`</ph> or <ph id="ph2">`My.Log`</ph> (for Web applications) in <ph id="ph3">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph> applications.</source>
          <target state="translated">Instanzen dieser Klasse können auch hinzugefügt werden, um <ph id="ph1">`My.Application.Log`</ph> oder <ph id="ph2">`My.Log`</ph> (für Webanwendungen) in <ph id="ph3">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph> Anwendungen.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>For more information, see <bpt id="p1">[</bpt>Walkthrough: Changing Where My.Application.Log Writes Information<ept id="p1">](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-changing-where-my-application-log-writes-information.md)</ept><ph id="ph1">`.`</ph></source>
          <target state="translated">Weitere Informationen finden Sie unter <bpt id="p1">[</bpt>Exemplarische Vorgehensweise: ändern, wohin "My.Application.log" schreibt Informationen<ept id="p1">](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-changing-where-my-application-log-writes-information.md)</ept><ph id="ph1">`.`</ph></target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>The main features of this class are:</source>
          <target state="translated">Die Hauptfunktionen von dieser Klasse werden zu können:</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source><bpt id="p1">*</bpt>Archival functionality<ept id="p1">*</ept>.</source>
          <target state="translated"><bpt id="p1">*</bpt>Archivierung Funktionalität<ept id="p1">*</ept>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>The log files generated by this class are named according to the base name and the date, along with a number to distinguish the log file from successive versions of the log.</source>
          <target state="translated">Die von dieser Klasse generierten Protokolldateien heißen gemäß dem Basisnamen und dem Datum wird zusammen mit einer Zahl in die Protokolldatei von aufeinander folgenden Versionen des Protokolls zu unterscheiden.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>New log files are created on an as-needed basis.</source>
          <target state="translated">Neue Protokolldateien werden auf Basis bei Bedarf erstellt.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>The explicit form of the file name is <ph id="ph1">`baseName`</ph>[-<ph id="ph2">`dateStamp`</ph>][-<ph id="ph3">`version`</ph>].log, where:</source>
          <target state="translated">Die explizite Form des Dateinamens ist <ph id="ph1">`baseName`</ph>[-<ph id="ph2">`dateStamp`</ph>] [-<ph id="ph3">`version`</ph>] .log, wobei:</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>The <ph id="ph1">`baseName`</ph> part is the fundamental log name, specified by the <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A&gt;</ph> property.</source>
          <target state="translated">Die <ph id="ph1">`baseName`</ph> Teil ist der grundlegende Protokollnamen gemäß der <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A&gt;</ph> Eigenschaft.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>The <ph id="ph1">`dateStamp`</ph> part has the format "YYYY-MM-DD", and it is shown when <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A&gt;</ph> is <ph id="ph3">&lt;xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily&gt;</ph> or <ph id="ph4">&lt;xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly&gt;</ph>.</source>
          <target state="translated">Die <ph id="ph1">`dateStamp`</ph> Teil hat das Format "YYYY-MM-DD" und wird angezeigt, wenn <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A&gt;</ph> ist <ph id="ph3">&lt;xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily&gt;</ph> oder <ph id="ph4">&lt;xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>If more than one log file is needed with the same <ph id="ph1">`baseName`</ph> and <ph id="ph2">`dateStamp`</ph>, the <ph id="ph3">`version`</ph> part, a positive <ph id="ph4">`Integer`</ph>, is added to the file name.</source>
          <target state="translated">Ggf. mehr als eine Protokolldatei mit dem gleichen <ph id="ph1">`baseName`</ph> und <ph id="ph2">`dateStamp`</ph>, <ph id="ph3">`version`</ph> Webpart, ein positiver <ph id="ph4">`Integer`</ph>, wird dem Dateinamen hinzugefügt.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source><bpt id="p1">*</bpt>Multiple class instances<ept id="p1">*</ept>.</source>
          <target state="translated"><bpt id="p1">*</bpt>Mehrere Klasseninstanzen<ept id="p1">*</ept>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>If an instance of the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener&gt;</ph> class writes to a file that is in use:</source>
          <target state="translated">Wenn eine Instanz von der <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener&gt;</ph> Klasse schreibt in eine Datei, die verwendet wird:</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>The class shares the file if it is being used by another instance of the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener&gt;</ph> class in the same process.</source>
          <target state="translated">Die Klasse gibt die Datei frei, wenn sie von einer anderen Instanz verwendet wird, wird die <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener&gt;</ph> Klasse im gleichen Prozess.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>The class creates a new log file using the next available name if the file is being used by another process.</source>
          <target state="translated">Die Klasse erstellt eine neue Protokolldatei mit den Namen des nächsten verfügbar, wenn die Datei von einem anderen Prozess verwendet wird.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source><bpt id="p1">*</bpt>Thread safety<ept id="p1">*</ept>.</source>
          <target state="translated"><bpt id="p1">*</bpt>Threadsicherheit<ept id="p1">*</ept>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>The <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener&gt;</ph> class is thread safe.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener&gt;</ph> -Klasse ist threadsicher.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>This allows you to safely write messages to the log from multiple threads without using locks.</source>
          <target state="translated">Dadurch können Sie problemlos in das Protokoll aus mehreren Threads Schreiben von Nachrichten ohne Verwendung von Sperren.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source><bpt id="p1">**</bpt>Log-File Location<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Protokolldatei Speicherort<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>The <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A&gt;</ph> property takes a <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.LogFileLocation&gt;</ph> enumeration to specify one of the typical directories to write the log file to.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A&gt;</ph> Eigenschaft akzeptiert einen <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.LogFileLocation&gt;</ph> Enumeration eines üblichen Verzeichnisse an, die Protokolldatei geschrieben werden soll.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>To write the log to another location, set the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A&gt;</ph> property to that location.</source>
          <target state="translated">Um das Protokoll an einen anderen Speicherort zu schreiben, legen die <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A&gt;</ph> Eigenschaft für diesen Speicherort.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source><bpt id="p1">**</bpt>Log-File Name<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Name der Protokolldatei.<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>The base name for the log file is specified by the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A&gt;</ph> property.</source>
          <target state="translated">Der Basisname der Protokolldatei wird gemäß der <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A&gt;</ph> Eigenschaft.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>The current log file name can be read from the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A&gt;</ph> property.</source>
          <target state="translated">Name der aktuellen Protokolldatei gelesen werden kann, aus der <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A&gt;</ph> Eigenschaft.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>It is derived from several other properties and the current state of the logs in the file system.</source>
          <target state="translated">Es wird über mehrere weitere Eigenschaften und den aktuellen Status der Protokolle im Dateisystem abgeleitet.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source><bpt id="p1">**</bpt>Log Maintenance<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Pflege<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>The minimum frequency for creating new log files is determined by the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A&gt;</ph> property.</source>
          <target state="translated">Die mindesthäufigkeit für die Erstellung neuer Protokolldateien richtet sich nach der <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A&gt;</ph> Eigenschaft.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>When the value is <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily&gt;</ph> or <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly&gt;</ph>, a new log file is created at least once every day or week, and a date stamp is incorporated into the <ph id="ph3">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A&gt;</ph> name.</source>
          <target state="translated">Wenn der Wert ist <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily&gt;</ph> oder <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly&gt;</ph>, eine neue Protokolldatei wird jedem Tag oder Woche mindestens einmal erstellt und einen Datumsstempel in den <ph id="ph3">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A&gt;</ph> Namen.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>The maximum size (in bytes) of the log file is determined by the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A&gt;</ph> property.</source>
          <target state="translated">Die maximale Größe (in Bytes) der Protokolldatei richtet sich nach der <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A&gt;</ph> Eigenschaft.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>If the log file size exceeds this size, additional messages written to the log are discarded and, depending on the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A&gt;</ph> property, an exception is thrown.</source>
          <target state="translated">Wenn die Größe der Protokolldatei diese Größe überschreitet, werden zusätzliche Nachrichten, die in das Protokoll geschrieben verworfen und, je nach den <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A&gt;</ph> -Eigenschaft, eine Ausnahme ausgelöst.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>The <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A&gt;</ph> property determines how much free space (in bytes) must be available.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A&gt;</ph> Eigenschaft bestimmt, wie viel freier Speicherplatz (in Byte) verfügbar sein muss.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>This helps ensure that the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener&gt;</ph> class will not consume all available disk space.</source>
          <target state="translated">So kann sichergestellt werden, die die <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener&gt;</ph> Klasse werden nicht alle verfügbaren Speicherplatz zu nutzen.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>Use the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A&gt;</ph> property to specify the behavior of log writes when there are less than <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A&gt;</ph> bytes free.</source>
          <target state="translated">Verwenden der <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A&gt;</ph> Eigenschaft zum Festlegen des Verhaltens von Protokoll schreibt, wenn stehen weniger als <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A&gt;</ph> freien Bytes verfügbar.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source><bpt id="p1">**</bpt>Log-File Output Settings<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Protokolldatei Ausgabeeinstellungen<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>The <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush%2A&gt;</ph> property specifies whether the underlying stream should be flushed automatically after each write to the log file.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush%2A&gt;</ph> Eigenschaft gibt an, ob der zugrunde liegende Stream nach jedem Schreibvorgang in die Protokolldatei automatisch geleert werden soll.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>The <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Append%2A&gt;</ph> property specifies whether to append messages to the current log file, if allowed, or write them to a new log file.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Append%2A&gt;</ph> Eigenschaft gibt an, ob Nachrichten in die aktuelle Protokolldatei anfügen, wenn die zugelassen oder in eine neue Protokolldatei schreiben.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>The <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A&gt;</ph> property specifies the string to use for delimiting the fields within a log message.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A&gt;</ph> Eigenschaft gibt die Zeichenfolge zum begrenzen die Felder in einer Lognachricht verwendet werden soll.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>The <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding%2A&gt;</ph> property specifies the encoding to use when creating a new log file.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding%2A&gt;</ph> Eigenschaft gibt an, die beim Erstellen einer neuen Protokolldatei zu verwendende Codierung.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source><bpt id="p1">**</bpt>Log-File Output<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Protokolldatei Ausgabe<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>The <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A&gt;</ph> and <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent%2A&gt;</ph> methods write messages to the log file.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A&gt;</ph> und <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent%2A&gt;</ph> Methoden schreiben Nachrichten in der Protokolldatei gespeichert.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>These methods check the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A&gt;</ph> property, along with any existing logs with the same base name to determine if a new log should be created.</source>
          <target state="translated">Diese Methoden vergleichen die <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A&gt;</ph> Eigenschaft zusammen mit der vorhandenen Protokolle mit den gleichen Basisnamen, um festzustellen, ob ein neues Protokoll erstellt werden soll.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>The <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush%2A&gt;</ph> method flushes any messages currently in the output buffer to the log file.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush%2A&gt;</ph> Methode leert Nachrichten, die derzeit in den Ausgabepuffer in der Protokolldatei gespeichert.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>The <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close%2A&gt;</ph> method closes the log file so that it can be used by other processes.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close%2A&gt;</ph> Methode schließt die Protokolldatei, damit er von anderen Prozessen verwendet werden kann.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source><bpt id="p1">**</bpt>Enabling Output<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Aktivieren der Ausgabe<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>You must enable tracing or debugging to use a trace listener.</source>
          <target state="translated">Sie müssen die Ablaufverfolgungs- oder Debuggen verwenden Sie einen Ablaufverfolgungslistener aktivieren.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>The following syntax is compiler specific.</source>
          <target state="translated">Die folgende Syntax ist compilerspezifisch.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>If you use compilers other than C# or <ph id="ph1">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph>, refer to the documentation for your compiler.</source>
          <target state="translated">Wenn Sie als C#-Compiler verwenden dabei oder <ph id="ph1">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph>, finden Sie in der Dokumentation für den Compiler.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>To enable debugging in C#, add the <ph id="ph1">`/d:DEBUG`</ph> flag to the compiler command line when you compile your code, or you can add <ph id="ph2">`#define DEBUG`</ph> to the top of your file.</source>
          <target state="translated">Fügen Sie zum Aktivieren des Debuggens in C# geschrieben, die <ph id="ph1">`/d:DEBUG`</ph> Flag an die Befehlszeile des Compilers beim Kompilieren des Codes, oder Sie fügen <ph id="ph2">`#define DEBUG`</ph> an den Anfang der Datei.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>In <ph id="ph1">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph>, add the <ph id="ph2">`/d:DEBUG=True`</ph> flag to the compiler command line.</source>
          <target state="translated">In <ph id="ph1">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph>, Hinzufügen der <ph id="ph2">`/d:DEBUG=True`</ph> -Kennzeichen an die Befehlszeile des Compilers.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>To enable tracing in C#, add the <ph id="ph1">`/d:TRACE`</ph> flag to the compiler command line when you compile your code, or add <ph id="ph2">`#define TRACE`</ph> to the top of your file.</source>
          <target state="translated">Fügen Sie zum Aktivieren der Ablaufverfolgung in c# die <ph id="ph1">`/d:TRACE`</ph> Flag an die Befehlszeile des Compilers beim Kompilieren des Codes, oder fügen <ph id="ph2">`#define TRACE`</ph> an den Anfang der Datei.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>In <ph id="ph1">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph>, add the <ph id="ph2">`/d:TRACE=True`</ph> flag to the compiler command line.</source>
          <target state="translated">In <ph id="ph1">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph>, Hinzufügen der <ph id="ph2">`/d:TRACE=True`</ph> -Kennzeichen an die Befehlszeile des Compilers.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>To set the level of your listener, edit the configuration file for your application.</source>
          <target state="translated">Bearbeiten Sie die Konfigurationsdatei für die Anwendung, zum Festlegen der Ebene des Listeners.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>Within this file, you can add a listener, set its type and set its parameters, remove a listener, or clear all the listeners previously set by the application.</source>
          <target state="translated">In dieser Datei können Sie einen Listener hinzufügen und dessen Typ und Parameter festlegen, einen Listener zu entfernen oder deaktivieren die Listener, die zuvor von der Anwendung festgelegt.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>The configuration file should be formatted like the following example.</source>
          <target state="translated">Die Konfigurationsdatei sollte wie im folgenden Beispiel formatiert werden.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>For this example to run, you must provide the fully qualified assembly name.</source>
          <target state="translated">Für dieses Beispiel ausführen müssen Sie den vollqualifizierten Assemblynamen bereitstellen.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>For information about how to obtain the fully qualified assembly name, see <bpt id="p1">[</bpt>Assembly Names<ept id="p1">](~/docs/framework/app-domains/assembly-names.md)</ept>.</source>
          <target state="translated">Informationen zur Vorgehensweise zum Abrufen der vollqualifizierte Assemblyname finden Sie unter <bpt id="p1">[</bpt>Assemblynamen<ept id="p1">](~/docs/framework/app-domains/assembly-names.md)</ept>.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /&gt;</ph> class and sets the name.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /&gt;</ph>-Klasse und legt den Namen fest.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /&gt;</ph> class with the default name.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /&gt;</ph>-Klasse mit dem Standardnamen.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.#ctor">
          <source>This method sets the instance name of the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener&gt;</ph> class to FileLogTraceListener.</source>
          <target state="translated">Diese Methode legt den Instanznamen, der die <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener&gt;</ph> Klasse auf FileLogTraceListener fest.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.#ctor">
          <source>You can access the instance name through the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Name%2A&gt;</ph> property.</source>
          <target state="translated">Sie erreichen den Namen der Instanz über die <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Name%2A&gt;</ph> Eigenschaft.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.#ctor(System.String)">
          <source><ph id="ph1">&lt;see langword="String" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="String" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.#ctor(System.String)">
          <source>The name of the instance object.</source>
          <target state="translated">Der Name des Instanzobjekts.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /&gt;</ph> class with the supplied name.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /&gt;</ph>-Klasse mit dem angegebenen Namen.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.#ctor(System.String)">
          <source>This method sets the instance name of the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener&gt;</ph> class to <ph id="ph2">`name`</ph>.</source>
          <target state="translated">Diese Methode legt den Instanznamen, der die <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener&gt;</ph> Klasse <ph id="ph2">`name`</ph>.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.#ctor(System.String)">
          <source>You can access the instance name thought the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Name%2A&gt;</ph> property.</source>
          <target state="translated">Sie erreichen den Instanznamen der <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Name%2A&gt;</ph> Eigenschaft.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Append">
          <source>Determines whether to append the output to the current file or write it to a new file.</source>
          <target state="translated">Bestimmt, ob die Ausgabe an die aktuelle Datei angefügt oder in eine neue Datei geschrieben werden soll.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Append">
          <source><ph id="ph1">&lt;see langword="Boolean" /&gt;</ph>, with <ph id="ph2">&lt;see langword="True" /&gt;</ph> indicating that the output is appended to the current file, and <ph id="ph3">&lt;see langword="False" /&gt;</ph> indicating that output is written to a new file.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see langword="Boolean" /&gt;</ph>-Wert, wobei <ph id="ph2">&lt;see langword="True" /&gt;</ph> angibt, dass die Ausgabe an die aktuelle Datei angefügt wird, wohingegen die Ausgabe bei <ph id="ph3">&lt;see langword="False" /&gt;</ph> in eine neue Datei geschrieben wird.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Append">
          <source>The default setting for this property is <ph id="ph1">&lt;see langword="True" /&gt;</ph>.</source>
          <target state="translated">Die Standardeinstellung für diese Eigenschaft ist <ph id="ph1">&lt;see langword="True" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Append">
          <source>When the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Append%2A&gt;</ph> property is <ph id="ph2">`False`</ph>, the output is written to a new file.</source>
          <target state="translated">Wenn die <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Append%2A&gt;</ph> Eigenschaft ist <ph id="ph2">`False`</ph>, wird die Ausgabe in eine neue Datei geschrieben.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Append">
          <source>When the property is <ph id="ph1">`True`</ph>, the output is appended to the current file, unless:</source>
          <target state="translated">Wenn die Eigenschaft den Wert <ph id="ph1">`True`</ph>, die Ausgabe wird an die aktuelle Datei angefügt, es sei denn:</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Append">
          <source>The output file is locked by another process.</source>
          <target state="translated">Die Ausgabedatei wird von einem anderen Prozess gesperrt.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Append">
          <source>In this situation, a new log file is created with a version number that is incorporated into the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A&gt;</ph> name.</source>
          <target state="translated">In diesem Fall wird eine neue Protokolldatei erstellt, mit einer Versionsnummer, die in vorhandenen der <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A&gt;</ph> Name.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Append">
          <source>The current file size is greater than what the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A&gt;</ph> property allows.</source>
          <target state="translated">Die aktuelle Dateigröße ist größer als die <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A&gt;</ph> Eigenschaft ermöglicht.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Append">
          <source>In this situation, additional messages are discarded and, depending on the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A&gt;</ph> property, an exception is thrown.</source>
          <target state="translated">In diesem Fall werden zusätzliche Nachrichten verworfen, und, je nachdem, auf die <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A&gt;</ph> -Eigenschaft, eine Ausnahme ausgelöst.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Append">
          <source>The existing file name is out of date according to the log-creation schedule specified by the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A&gt;</ph> property.</source>
          <target state="translated">Der Name der vorhandenen gemäß den vom angegebenen protokollerstellung Zeitplan nicht mehr aktuell ist die <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A&gt;</ph> Eigenschaft.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Append">
          <source>In this situation, a new log file is created and the date stamp is incorporated into the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A&gt;</ph> name.</source>
          <target state="translated">In diesem Fall wird eine neue Protokolldatei erstellt, und der Datumsstempel in den <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A&gt;</ph> Namen.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush">
          <source>Indicates whether or not the writing to the log file stream flushes the buffer.</source>
          <target state="translated">Gibt an, ob beim Schreiben in den Protokolldateistream der Puffer entleert wird.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush">
          <source><ph id="ph1">&lt;see langword="Boolean" /&gt;</ph>, with <ph id="ph2">&lt;see langword="True" /&gt;</ph> indicating that the stream is flushed after every write; otherwise the log entries are buffered and written more efficiently.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see langword="Boolean" /&gt;</ph>-Wert, wobei <ph id="ph2">&lt;see langword="True" /&gt;</ph> angibt, dass der Stream nach jedem Schreibvorgang entleert wird. Andernfalls werden die Protokolleinträge im Puffer gespeichert und können effizienter geschrieben werden.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush">
          <source>The default setting for this property is <ph id="ph1">&lt;see langword="False" /&gt;</ph>.</source>
          <target state="translated">Die Standardeinstellung für diese Eigenschaft ist <ph id="ph1">&lt;see langword="False" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush">
          <source>The <ph id="ph1">`False`</ph> setting for the <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush%2A&gt;</ph> property provides the best performance for most applications, because it is more efficient to write multiple messages to the log file at one time.</source>
          <target state="translated">Die <ph id="ph1">`False`</ph> Einstellung für die <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush%2A&gt;</ph> Eigenschaft bietet die beste Leistung für die meisten Anwendungen, da es effizienter, mehrere Nachrichten gleichzeitig in die Protokolldatei geschrieben wird.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush">
          <source>You can use the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush%2A&gt;</ph> method to flush any messages currently in the log file's output buffer.</source>
          <target state="translated">Sie können die <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush%2A&gt;</ph> Methode, um alle Nachrichten derzeit in der Protokolldatei zu leeren Ausgabe des Puffers.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush">
          <source>You can also use the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close%2A&gt;</ph> method, which implicitly flushes the stream before closing the log file.</source>
          <target state="translated">Sie können auch die <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close%2A&gt;</ph> -Methode, die implizit den Stream entleert vor dem Schließen der Protokolldatei.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName">
          <source>Gets or sets the base name for the log files, which is used to create the full log-file name.</source>
          <target state="translated">Ruft den Basisnamen für die Protokolldateien ab, der zum Erstellen des vollständigen Protokolldateinamens verwendet wird, oder legt diesen fest.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName">
          <source><ph id="ph1">&lt;see langword="String" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="String" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName">
          <source>The base name for the log files.</source>
          <target state="translated">Der Basisname für die Protokolldateien.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName">
          <source>The default is the application's product name.</source>
          <target state="translated">Der Standardwert ist der Produktname der Anwendung.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName">
          <source>The <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A&gt;</ph> property determines the base name for the log files that the <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener&gt;</ph> class writes to.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A&gt;</ph> Eigenschaft bestimmt den Basisnamen für die Protokolldateien der <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener&gt;</ph> schreibt-Klasse auf.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName">
          <source>The <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A&gt;</ph> property gives the current full log-file name.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A&gt;</ph> Eigenschaft ermöglicht es den Namen der aktuellen vollständigen Protokolldatei.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName">
          <source>It is generated according to the log path, the base name, the date, and a number to distinguish it from different versions of the log.</source>
          <target state="translated">Es wird gemäß den Pfad des Protokolls, den Basisnamen, das Datum und eine Zahl zur Unterscheidung von verschiedenen Versionen des Protokolls generiert.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName">
          <source>New log files are created on an as-needed basis.</source>
          <target state="translated">Neue Protokolldateien werden auf Basis bei Bedarf erstellt.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName">
          <source>The explicit form of the full log file name is <ph id="ph1">`path`</ph><ph id="ph2">\\</ph><ph id="ph3">`baseName`</ph>[-<ph id="ph4">`dateStamp`</ph>][-<ph id="ph5">`iteration`</ph>].log, where</source>
          <target state="translated">Die explizite Form der Name der Protokolldatei voll ist <ph id="ph1">`path`</ph> <ph id="ph2">\\</ph> <ph id="ph3">`baseName`</ph>[-<ph id="ph4">`dateStamp`</ph>] [-<ph id="ph5">`iteration`</ph>] .log, wobei</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName">
          <source>The <ph id="ph1">`path`</ph> part is determined by the <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A&gt;</ph> property and, if that property value is set to <ph id="ph3">&lt;xref:Microsoft.VisualBasic.Logging.LogFileLocation.Custom&gt;</ph>, the <ph id="ph4">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A&gt;</ph> property.</source>
          <target state="translated">Die <ph id="ph1">`path`</ph> Teil richtet sich nach der <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A&gt;</ph> Eigenschaft und, wenn dieser Eigenschaftswert, um festgelegt ist <ph id="ph3">&lt;xref:Microsoft.VisualBasic.Logging.LogFileLocation.Custom&gt;</ph>die <ph id="ph4">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A&gt;</ph> Eigenschaft.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName">
          <source>The <ph id="ph1">`baseName`</ph> part is the fundamental log name, specified by the <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A&gt;</ph> property.</source>
          <target state="translated">Die <ph id="ph1">`baseName`</ph> Teil ist der grundlegende Protokollnamen gemäß der <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A&gt;</ph> Eigenschaft.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName">
          <source>The <ph id="ph1">`dateStamp`</ph> part has the format "YYYY-MM-DD", and it is shown when <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A&gt;</ph> is set to <ph id="ph3">&lt;xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily&gt;</ph> or <ph id="ph4">&lt;xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly&gt;</ph>.</source>
          <target state="translated">Die <ph id="ph1">`dateStamp`</ph> Teil hat das Format "YYYY-MM-DD" und wird angezeigt, wenn <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A&gt;</ph> festgelegt ist, um <ph id="ph3">&lt;xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily&gt;</ph> oder <ph id="ph4">&lt;xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName">
          <source>If more than one log file is needed with the same <ph id="ph1">`baseName`</ph> and <ph id="ph2">`dateStamp`</ph>, the <ph id="ph3">`iteration`</ph> part, a positive <ph id="ph4">`Integer`</ph>, is added to the file name.</source>
          <target state="translated">Ggf. mehr als eine Protokolldatei mit dem gleichen <ph id="ph1">`baseName`</ph> und <ph id="ph2">`dateStamp`</ph>, <ph id="ph3">`iteration`</ph> Webpart, ein positiver <ph id="ph4">`Integer`</ph>, wird dem Dateinamen hinzugefügt.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close">
          <source>Closes the underlying stream for the current log file and releases any resources associated with the current stream.</source>
          <target state="translated">Schließt den der aktuellen Protokolldatei zugrunde liegenden Stream und gibt alle Ressourcen frei, die dem aktuellen Stream zugeordnet sind.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close">
          <source>You do not need to call the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close%2A&gt;</ph> method explicitly, because the <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener&gt;</ph> class manages the underlying steam.</source>
          <target state="translated">Sie müssen nicht Aufrufen der <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close%2A&gt;</ph> Methode explizit, da die <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener&gt;</ph> Klasse verwaltet den zugrunde liegenden Stream.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation">
          <source>Gets or sets the log file directory when the <ph id="ph1">&lt;see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location" /&gt;</ph> property is set to <ph id="ph2">&lt;see cref="F:Microsoft.VisualBasic.Logging.LogFileLocation.Custom" /&gt;</ph>.</source>
          <target state="translated">Ruft das Verzeichnis der Protokolldateien ab oder legt dieses fest, wenn die <ph id="ph1">&lt;see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location" /&gt;</ph>-Eigenschaft auf <ph id="ph2">&lt;see cref="F:Microsoft.VisualBasic.Logging.LogFileLocation.Custom" /&gt;</ph> festgelegt ist.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation">
          <source><ph id="ph1">&lt;see langword="String" /&gt;</ph>, which is the name of the log-file directory.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see langword="String" /&gt;</ph>, der den Namen des Protokolldateiverzeichnisses angibt.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation">
          <source>The default setting for this property is the user's directory for application data.</source>
          <target state="translated">Die Standardeinstellung für diese Eigenschaft ist das Anwendungsdatenverzeichnis des Benutzers.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation">
          <source>When the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A&gt;</ph> property is set, it also sets the <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A&gt;</ph> property to <ph id="ph3">&lt;xref:Microsoft.VisualBasic.Logging.LogFileLocation.Custom&gt;</ph>.</source>
          <target state="translated">Wenn die <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A&gt;</ph> -Eigenschaft gesetzt ist, wird auch die <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A&gt;</ph> Eigenschaft, um <ph id="ph3">&lt;xref:Microsoft.VisualBasic.Logging.LogFileLocation.Custom&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation">
          <source>The <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A&gt;</ph> property will throw an exception if the directory cannot be resolved.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A&gt;</ph> -Eigenschaft löst eine Ausnahme aus, wenn das Verzeichnis nicht aufgelöst werden kann.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter">
          <source>Gets or sets the delimiter used to delimit fields within a log message.</source>
          <target state="translated">Ruft das Trennzeichen ab, das zum Begrenzen der Felder in einer Protokollmeldung verwendet wird, oder legt dieses fest.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter">
          <source><ph id="ph1">&lt;see langword="String" /&gt;</ph>, which is the delimiter used for fields within a log message.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see langword="String" /&gt;</ph>, der das für die Felder in einer Protokollmeldung verwendete Trennzeichen ist.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter">
          <source>The default setting for this property is the TAB character.</source>
          <target state="translated">Die Standardeinstellung für diese Eigenschaft ist das Tabstoppzeichen.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter">
          <source>The <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A&gt;</ph> property allows you to change the default delimiter.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A&gt;</ph> Eigenschaft können Sie das Standardtrennzeichen zu ändern.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior">
          <source>Determines what to do when writing to the log file and there is less free disk space available than specified by the <ph id="ph1">&lt;see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace" /&gt;</ph> property.</source>
          <target state="translated">Bestimmt die Vorgehensweise, wenn beim Schreiben in die Protokolldatei weniger freier Speicherplatz vorhanden ist, als die <ph id="ph1">&lt;see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace" /&gt;</ph>-Eigenschaft angibt.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior">
          <source><ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior">
          <source>Determines what to do when attempting to write to the log file and there is less free disk space available than specified by the <ph id="ph1">&lt;see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace" /&gt;</ph> property, or if the log file size is greater than what the <ph id="ph2">&lt;see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize" /&gt;</ph> property allows.</source>
          <target state="translated">Bestimmt die Vorgehensweise, wenn beim Schreiben in die Protokolldatei weniger freier Speicherplatz vorhanden ist, als die <ph id="ph1">&lt;see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace" /&gt;</ph>-Eigenschaft angibt, oder wenn die Größe der Protokolldatei den höchstzulässigen Wert der <ph id="ph2">&lt;see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize" /&gt;</ph>-Eigenschaft überschreitet.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior">
          <source>The default value is <ph id="ph1">&lt;see cref="F:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption.DiscardMessages" /&gt;</ph>.</source>
          <target state="translated">Der Standardwert ist <ph id="ph1">&lt;see cref="F:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption.DiscardMessages" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior">
          <source>When the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A&gt;</ph> property is set to <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption.DiscardMessages&gt;</ph>, the log messages are silently discarded if there is not enough reserved disk space.</source>
          <target state="translated">Wenn die <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A&gt;</ph> -Eigenschaftensatz auf <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption.DiscardMessages&gt;</ph>, die protokollmeldungen werden automatisch verworfen werden, wenn nicht genügend reservierte Speicherplatz vorhanden ist.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior">
          <source>This is the default behavior, and it prevents simple applications from failing if the disk gets too full.</source>
          <target state="translated">Dies ist das Standardverhalten, und es wird verhindert, dass einfache Anwendungen fehlschlägt, wenn der Datenträger zu voll abruft.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior">
          <source>More robust applications can set the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A&gt;</ph> property to <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption.ThrowException&gt;</ph>, and add <ph id="ph3">`Try...Catch`</ph> blocks around all code that writes to the log.</source>
          <target state="translated">Robustere Anwendungen können festlegen, die <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A&gt;</ph> Eigenschaft <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption.ThrowException&gt;</ph>, und fügen <ph id="ph3">`Try...Catch`</ph> -Blöcke für Code, der in das Protokoll schreibt.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="True" /&gt;</ph> releases both managed and unmanaged resources; <ph id="ph2">&lt;see langword="False" /&gt;</ph> releases only unmanaged resources.</source>
          <target state="translated">Bei <ph id="ph1">&lt;see langword="True" /&gt;</ph> werden sowohl verwaltete als auch nicht verwaltete Ressourcen, bei <ph id="ph2">&lt;see langword="False" /&gt;</ph> nur nicht verwaltete Ressourcen freigegeben.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Dispose(System.Boolean)">
          <source>Closes the underlying stream and optionally releases the managed resources.</source>
          <target state="translated">Schließt den zugrunde liegenden Stream und gibt optional die verwalteten Ressourcen frei.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Dispose(System.Boolean)">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is <ph id="ph2">`True`</ph>, this method releases all resources held by any managed objects that this <ph id="ph3">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener&gt;</ph> references.</source>
          <target state="translated">Wenn der <ph id="ph1">`disposing`</ph>-Parameter <ph id="ph2">`True`</ph> ist, gibt diese Methode sämtliche Ressourcen frei, die für verwaltete Objekte reserviert sind, auf die dieser <ph id="ph3">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener&gt;</ph> verweist.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Dispose(System.Boolean)">
          <source>This method invokes the <ph id="ph1">`Dispose`</ph> method of each referenced object.</source>
          <target state="translated">Diese Methode ruft die <ph id="ph1">`Dispose`</ph>-Methode aller Objekte auf, auf die verwiesen wird.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> can be called multiple times by other objects.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> kann von anderen Objekten mehrmals aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Dispose(System.Boolean)">
          <source>When overriding <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph>, be careful not to reference objects that have been previously disposed of in an earlier call to <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>.</source>
          <target state="translated">Beim Überschreiben von <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> müssen Sie darauf achten, nicht auf Objekte zu verweisen, die durch einen früheren Aufruf von <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph> freigegeben wurden.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Dispose(System.Boolean)">
          <source>This method calls the <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> method of the base class, <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>.</source>
          <target state="translated">Diese Methode ruft die <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> Methode der Basisklasse, <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding">
          <source>Gets or sets the encoding to use when creating a new log file.</source>
          <target state="translated">Ruft die Codierung ab, die beim Erstellen einer neuen Protokolldatei verwendet werden soll, oder legt diese fest.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding">
          <source><ph id="ph1">&lt;see cref="T:System.Text.Encoding" /&gt;</ph>, which is the encoding to use when creating a new log file.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Text.Encoding" /&gt;</ph>, die Codierung, die beim Erstellen einer neuen Protokolldatei verwendet werden soll.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding">
          <source>The default value of this property is <ph id="ph1">&lt;see cref="T:System.Text.UTF8Encoding" /&gt;</ph>.</source>
          <target state="translated">Der Standardwert dieser Eigenschaft ist <ph id="ph1">&lt;see cref="T:System.Text.UTF8Encoding" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding">
          <source>When appending text to an existing log file, the encoding for that file is used instead of the encoding specified by the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding%2A&gt;</ph> property.</source>
          <target state="translated">Beim Anfügen von Text an eine vorhandene Protokolldatei die Codierung für diese Datei anstatt durch die angegebene Codierung verwendet die <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding%2A&gt;</ph> Eigenschaft.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush">
          <source>Flushes the underlying stream that writes to the current log file.</source>
          <target state="translated">Entleert den zugrunde liegenden Stream, der in die aktuelle Protokolldatei schreibt.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush">
          <source>Use the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush%2A&gt;</ph> method to write all buffered data to the current log file.</source>
          <target state="translated">Verwenden der <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush%2A&gt;</ph> Methode, um alle gepufferten Daten in der aktuellen Protokolldatei zu schreiben.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName">
          <source>Gets the current full log-file name.</source>
          <target state="translated">Ruft den vollständigen Namen der aktuellen Protokolldatei ab.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName">
          <source><ph id="ph1">&lt;see langword="String" /&gt;</ph>, which is the current full log-file name.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see langword="String" /&gt;</ph>, der vollständige Name der aktuellen Protokolldatei.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName">
          <source>The <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A&gt;</ph> property gives the current full log-file name.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A&gt;</ph> Eigenschaft ermöglicht es den Namen der aktuellen vollständigen Protokolldatei.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName">
          <source>It is generated according to the log path, the base name, the date, and a number to distinguish it from different versions of the log.</source>
          <target state="translated">Es wird gemäß den Pfad des Protokolls, den Basisnamen, das Datum und eine Zahl zur Unterscheidung von verschiedenen Versionen des Protokolls generiert.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName">
          <source>New log files are created on an as-needed basis.</source>
          <target state="translated">Neue Protokolldateien werden auf Basis bei Bedarf erstellt.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName">
          <source>The explicit form of the full log-file name is <ph id="ph1">`path`</ph><ph id="ph2">\\</ph><ph id="ph3">`baseName`</ph>[-<ph id="ph4">`dateStamp`</ph>][-<ph id="ph5">`iteration`</ph>].log, where:</source>
          <target state="translated">Die explizite Form der der vollständige Dateiname des Protokolls wird <ph id="ph1">`path`</ph> <ph id="ph2">\\</ph> <ph id="ph3">`baseName`</ph>[-<ph id="ph4">`dateStamp`</ph>] [-<ph id="ph5">`iteration`</ph>] .log, wobei:</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName">
          <source>The <ph id="ph1">`path`</ph> part is determined by the <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A&gt;</ph> property and, if that property value is set to <ph id="ph3">&lt;xref:Microsoft.VisualBasic.Logging.LogFileLocation.Custom&gt;</ph>, the <ph id="ph4">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A&gt;</ph> property.</source>
          <target state="translated">Die <ph id="ph1">`path`</ph> Teil richtet sich nach der <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A&gt;</ph> Eigenschaft und, wenn dieser Eigenschaftswert, um festgelegt ist <ph id="ph3">&lt;xref:Microsoft.VisualBasic.Logging.LogFileLocation.Custom&gt;</ph>die <ph id="ph4">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A&gt;</ph> Eigenschaft.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName">
          <source>The <ph id="ph1">`baseName`</ph> part is the fundamental log name, specified by the <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A&gt;</ph> property.</source>
          <target state="translated">Die <ph id="ph1">`baseName`</ph> Teil ist der grundlegende Protokollnamen gemäß der <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A&gt;</ph> Eigenschaft.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName">
          <source>The <ph id="ph1">`dateStamp`</ph> part has the format YYYY-MM-DD, and it is shown when <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A&gt;</ph> is <ph id="ph3">&lt;xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily&gt;</ph> or <ph id="ph4">&lt;xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly&gt;</ph>.</source>
          <target state="translated">Die <ph id="ph1">`dateStamp`</ph> Teil hat das Format JJJJ-MM-TT und wird angezeigt, wenn <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A&gt;</ph> ist <ph id="ph3">&lt;xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily&gt;</ph> oder <ph id="ph4">&lt;xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName">
          <source>If more than one log file is needed with the same <ph id="ph1">`baseName`</ph> and <ph id="ph2">`dateStamp`</ph>, the <ph id="ph3">`iteration`</ph> part, a positive <ph id="ph4">`Integer`</ph>, is added to the file name.</source>
          <target state="translated">Ggf. mehr als eine Protokolldatei mit dem gleichen <ph id="ph1">`baseName`</ph> und <ph id="ph2">`dateStamp`</ph>, <ph id="ph3">`iteration`</ph> Webpart, ein positiver <ph id="ph4">`Integer`</ph>, wird dem Dateinamen hinzugefügt.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.GetSupportedAttributes">
          <source>Gets the custom XML configuration attributes supported by the trace listener.</source>
          <target state="translated">Ruft die vom Ablaufverfolgungslistener unterstützten benutzerdefinierten XML-Konfigurationsattribute ab.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.GetSupportedAttributes">
          <source><ph id="ph1">&lt;see langword="String" /&gt;</ph> array containing the XML configuration attributes recognized by this listener.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see langword="String" /&gt;</ph>-Array, das die von diesem Listener erkannten XML-Konfigurationsattribute enthält.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.GetSupportedAttributes">
          <source>The custom attributes for the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener&gt;</ph> can be used in the XML configuration file for controlling the behavior of an instance of the <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener&gt;</ph> class.</source>
          <target state="translated">Die benutzerdefinierten Attribute für die <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener&gt;</ph> können verwendet werden, in der XML-Konfigurationsdatei zum Steuern des Verhaltens einer Instanz von der <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener&gt;</ph> Klasse.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.GetSupportedAttributes">
          <source>Using any other attribute causes a configuration exception.</source>
          <target state="translated">Andere Attribute verwenden, führt dazu, dass eine Konfigurationsausnahme.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName">
          <source>Indicates whether or not the host name of the logging machine should be included in the output.</source>
          <target state="translated">Gibt an, ob der Hostname des protokollierenden Computers in die Ausgabe aufgenommen werden soll.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName">
          <source><ph id="ph1">&lt;see langword="Boolean" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Boolean" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName">
          <source>Use <ph id="ph1">&lt;see langword="True" /&gt;</ph> if the host identifier should be included; otherwise use <ph id="ph2">&lt;see langword="False" /&gt;</ph>.</source>
          <target state="translated">Verwenden Sie <ph id="ph1">&lt;see langword="True" /&gt;</ph>, um den Hostbezeichner aufzunehmen, andernfalls <ph id="ph2">&lt;see langword="False" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName">
          <source>The default value is <ph id="ph1">&lt;see langword="False" /&gt;</ph>.</source>
          <target state="translated">Der Standardwert ist <ph id="ph1">&lt;see langword="False" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName">
          <source>Use the property to configure the behavior of the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A&gt;</ph> and <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent%2A&gt;</ph> methods.</source>
          <target state="translated">Verwenden Sie die Eigenschaft so konfigurieren Sie das Verhalten der <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A&gt;</ph> und <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent%2A&gt;</ph> Methoden.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location">
          <source>Gets or sets location for the log files.</source>
          <target state="translated">Ruft den Speicherort für die Protokolldateien ab, oder legt diesen fest.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location">
          <source><ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.Logging.LogFileLocation" /&gt;</ph>, which is the location for the log file.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.Logging.LogFileLocation" /&gt;</ph>, gibt den Speicherort für die Protokolldatei an.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location">
          <source>The default value is <ph id="ph1">&lt;see cref="F:Microsoft.VisualBasic.Logging.LogFileLocation.LocalUserApplicationDirectory" /&gt;</ph>.</source>
          <target state="translated">Der Standardwert ist <ph id="ph1">&lt;see cref="F:Microsoft.VisualBasic.Logging.LogFileLocation.LocalUserApplicationDirectory" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location">
          <source>Use the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A&gt;</ph> property to set the log path to one of the predefined paths, determined by the <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.LogFileLocation&gt;</ph> enumeration values.</source>
          <target state="translated">Verwenden der <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A&gt;</ph> -Eigenschaft zum Festlegen des Pfads des Protokolls auf einen der vordefinierten Pfade bestimmt, indem die <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.LogFileLocation&gt;</ph> Enumerationswerte.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location">
          <source><bpt id="p1">**</bpt>Location value<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Location-Wert<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location">
          <source><bpt id="p1">**</bpt>Path<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Pfad<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location">
          <source>The path for the application data that is shared among all users, with the format:</source>
          <target state="translated">Der Pfad für die Anwendungsdaten, die für alle Benutzer, mit dem Format freigegeben werden:</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location">
          <source>A typical value for <ph id="ph1">`BasePath`</ph> is:</source>
          <target state="translated">Ein häufig angegebener Wert für <ph id="ph1">`BasePath`</ph> ist:</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location">
          <source>C:\Documents and Settings\All Users\Application Data</source>
          <target state="translated">C:\Documents and Einstellungen\All Einstellungen\Alle Daten</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location">
          <source>The values of <ph id="ph1">`CompanyName`</ph>, <ph id="ph2">`ProductName`</ph>, and <ph id="ph3">`ProductVersion`</ph> come from the assembly.</source>
          <target state="translated">Die Werte der <ph id="ph1">`CompanyName`</ph>, <ph id="ph2">`ProductName`</ph>, und <ph id="ph3">`ProductVersion`</ph> stammen aus der Assembly.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location">
          <source>The path for the executable file that started the application.</source>
          <target state="translated">Der Pfad für die ausführbare Datei, die die Anwendung gestartet hat.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location">
          <source>The path for the application data of a user, with the format:</source>
          <target state="translated">Der Pfad für die Anwendungsdaten eines Benutzers, mit dem Format:</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location">
          <source>A typical value for <ph id="ph1">`BasePath`</ph> is:</source>
          <target state="translated">Ein häufig angegebener Wert für <ph id="ph1">`BasePath`</ph> ist:</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location">
          <source>C:\Documents and Settings<ph id="ph1">\\</ph><ph id="ph2">`username`</ph>\Application Data</source>
          <target state="translated">C:\Dokumente und Einstellungen<ph id="ph1">\\</ph><ph id="ph2">`username`</ph>\Anwendungsdaten</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location">
          <source>The values of <ph id="ph1">`CompanyName`</ph>, <ph id="ph2">`ProductName`</ph>, and <ph id="ph3">`ProductVersion`</ph> come form the assembly.</source>
          <target state="translated">Die Werte der <ph id="ph1">`CompanyName`</ph>, <ph id="ph2">`ProductName`</ph>, und <ph id="ph3">`ProductVersion`</ph> stammen aus der Assembly.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location">
          <source>The path of the current system's temporary folder.</source>
          <target state="translated">Der Pfad des temporären Ordners des aktuellen Systems.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location">
          <source>If the string specified by <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A&gt;</ph> is not empty, then use it as the path; otherwise use the path for the application data of a user.</source>
          <target state="translated">Wenn die Zeichenfolge durch angegebene <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A&gt;</ph> ist nicht leer ist, und klicken Sie dann als Pfad verwenden; verwenden Sie andernfalls den Pfad für die Anwendungsdaten eines Benutzers.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule">
          <source>Determines which date to include in the names of the log files.</source>
          <target state="translated">Bestimmt das Datum, das in die Namen der Protokolldateien eingefügt werden soll.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule">
          <source><ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule">
          <source>This indicates which date to include in the log-file names.</source>
          <target state="translated">Dies gibt das Datum an, das in die Namen der Protokolldateien eingefügt werden soll.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule">
          <source>The default value is <ph id="ph1">&lt;see cref="F:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.None" /&gt;</ph>.</source>
          <target state="translated">Der Standardwert ist <ph id="ph1">&lt;see cref="F:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.None" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule">
          <source>Assign one of the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption&gt;</ph> enumeration values to the <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A&gt;</ph> property to specify which date to include in the names of the log files.</source>
          <target state="translated">Zuweisen eines der <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption&gt;</ph> -Enumerationswerte zum die <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A&gt;</ph> Eigenschaft, um das Datum, das die Namen der Protokolldateien einschließt anzugeben.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule">
          <source>The format of the date is YYYY-MM-DD.</source>
          <target state="translated">Das Format des Datums ist JJJJ-MM-TT.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule">
          <source>For more information on the format of the log file name, see <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A&gt;</ph>.</source>
          <target state="translated">Weitere Informationen zum Format der Name der Protokolldatei finden Sie unter <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule">
          <source><bpt id="p1">**</bpt>LogFileCreationSchedule value<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>LogFileCreationSchedule-Wert<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule">
          <source><bpt id="p1">**</bpt>Date in the log file name<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Das Datum in den Protokolldateinamen<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule">
          <source>Include the current date in the log file name.</source>
          <target state="translated">Schließt das aktuelle Datum in den Namen der Protokolldatei ein.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule">
          <source>Do not include the date in the log file name.</source>
          <target state="translated">Schließt kein Datum in den Namen der Protokolldatei ein.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule">
          <source>Include the first day of the current week in the log file name.</source>
          <target state="translated">Schließt den ersten Tag der laufenden Woche in den Namen der Protokolldatei ein.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule">
          <source>The week starts on Saturday.</source>
          <target state="translated">Die Woche beginnt am Samstag.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize">
          <source>Gets or sets the maximum allowed size of the log file, in bytes.</source>
          <target state="translated">Ruft die höchstzulässige Größe der Protokolldatei (in Bytes) ab oder legt diese fest.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize">
          <source><ph id="ph1">&lt;see langword="Long" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Long" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize">
          <source>This is the maximum allowed log-file size, in bytes.</source>
          <target state="translated">Dies ist die höchstzulässige Protokolldateigröße, in Bytes.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize">
          <source>The default value is 5000000.</source>
          <target state="translated">Der Standardwert ist 5000000.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize">
          <source>Use this property to make sure that the log files do not grow too large.</source>
          <target state="translated">Verwenden Sie diese Eigenschaft, um sicherzustellen, dass die Protokolldateien nicht zu groß werden.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize">
          <source>If the log file size (in bytes) is greater than the value of this property, then when the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener&gt;</ph> class attempts to write a message to the log, the message is discarded and the failure is either silent or an exception is thrown depending on the value of the <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A&gt;</ph> property.</source>
          <target state="translated">Wenn die Größe (in Byte) Protokolldatei ist größer als der Wert dieser Eigenschaft bei der <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener&gt;</ph> -Klasse versucht, eine Meldung im Ereignisprotokoll zu schreiben, wird die Nachricht verworfen, und der Fehler ist, ob eine automatische oder eine Ausnahme wird ausgelöst, abhängig vom Wert der <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A&gt;</ph>Eigenschaft.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize">
          <source>Otherwise, the message is written to the log, if the amount of free disk space (in bytes) is less than <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A&gt;</ph>.</source>
          <target state="translated">Hingegen ist die Nachricht in das Protokoll geschrieben, wenn die Menge des freien Speicherplatzes (in Bytes) ist kleiner als <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize">
          <source>When this property is set to a value less than 1000.</source>
          <target state="translated">Tritt ein, wenn die Eigenschaft wird auf einen Wert unter 1000 festgelegt wird.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace">
          <source>Gets or sets the amount of free disk space, in bytes, necessary before messages can be written to the log file.</source>
          <target state="translated">Ruft den freien Speicherplatz in Bytes ab, der benötigt wird, um Meldungen in die Protokolldatei zu schreiben, oder legt diesen fest.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace">
          <source><ph id="ph1">&lt;see langword="Long" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Long" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace">
          <source>This is the amount of free disk space necessary.</source>
          <target state="translated">Dies ist die erforderliche Menge an freiem Speicherplatz.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace">
          <source>The default value is 10000000.</source>
          <target state="translated">Der Standardwert ist 10000000.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace">
          <source>Use this property to make sure that the log files do not completely fill the disk.</source>
          <target state="translated">Verwenden Sie diese Eigenschaft, um sicherzustellen, dass die Protokolldateien den Datenträger nicht vollständig aufgefüllt.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace">
          <source>If the amount of free disk space (in bytes) is less than the value of this property, then when the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener&gt;</ph> class attempts to write a message to the log, the message is discarded and the failure is either silent or an exception is thrown depending on the value of the <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A&gt;</ph> property.</source>
          <target state="translated">Wenn Speicherplatz, der den Umfang des freien Speicherplatzes (in Byte) ist kleiner als der Wert dieser Eigenschaft, wenn die <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener&gt;</ph> -Klasse versucht, eine Meldung im Ereignisprotokoll zu schreiben, wird die Nachricht verworfen, und der Fehler ist, ob eine automatische oder eine Ausnahme wird ausgelöst, abhängig vom Wert der &lt; C2 &gt; <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A&gt;</ph>  Eigenschaft.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace">
          <source>Otherwise, the message is written to the log, if the log file size (in bytes) is greater than <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A&gt;</ph>.</source>
          <target state="translated">Andernfalls wird die Nachricht in das Protokoll geschrieben, ist die Größe der Protokolldatei (in Bytes) größer als <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace">
          <source>When this property is set to a value less than 0.</source>
          <target state="translated">Tritt ein, wenn die Eigenschaft wird auf einen Wert unter 0 festgelegt wird.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>Writes trace data to the output file.</source>
          <target state="translated">Schreibt Ablaufverfolgungsdaten in die Ausgabedatei.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source><ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A&gt;</ph> methods are not intended to be called by application code.</source>
          <target state="translated"><ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A&gt;</ph> Methoden dürfen nicht von Anwendungscode aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>These methods are called by members of the <ph id="ph1">&lt;xref:System.Diagnostics.Debug&gt;</ph>, <ph id="ph2">&lt;xref:System.Diagnostics.Trace&gt;</ph>, and <ph id="ph3">&lt;xref:System.Diagnostics.TraceSource&gt;</ph> classes to write trace data to output.</source>
          <target state="translated">Diese Methoden werden aufgerufen, von einem Mitglied der <ph id="ph1">&lt;xref:System.Diagnostics.Debug&gt;</ph>, <ph id="ph2">&lt;xref:System.Diagnostics.Trace&gt;</ph>, und <ph id="ph3">&lt;xref:System.Diagnostics.TraceSource&gt;</ph> Klassen zum Schreiben von auszugebenden Ablaufverfolgungsdaten.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventCache" /&gt;</ph> object that contains the current process ID, thread ID, and stack trace information.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventCache" /&gt;</ph>-Objekt mit der aktuellen Prozess-ID, Thread-ID und den aktuellen Stapelüberwachungsinformationen.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>A name of the trace source that invoked this method.</source>
          <target state="translated">Der Name der Ablaufverfolgungsquelle, die diese Methode aufgerufen hat.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventType" /&gt;</ph> enumeration values.</source>
          <target state="translated">Einer der <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventType" /&gt;</ph>-Enumerationswerte.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>A numeric identifier for the event.</source>
          <target state="translated">Ein numerischer Bezeichner für das Ereignis.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>The trace data to emit.</source>
          <target state="translated">Die auszugebenden Ablaufverfolgungsdaten.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>Writes trace information, a data object, and event information to the output file or stream.</source>
          <target state="translated">Schreibt Ablaufverfolgungsinformationen, ein Datenobjekt und Ereignisinformationen in die Ausgabedatei oder den Stream.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>This method:</source>
          <target state="translated">Diese Methode:</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>Formats the data and context information for output.</source>
          <target state="translated">Formatiert die Daten und dem angegebenen Kontext Informationen für die Ausgabe an.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>Creates a new log file, if necessary.</source>
          <target state="translated">Eine neue Protokolldatei erstellt, bei Bedarf.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>Writes the information to the log file.</source>
          <target state="translated">Schreibt die Informationen in der Protokolldatei gespeichert.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>For more information on creating new log files, see <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A&gt;</ph>.</source>
          <target state="translated">Weitere Informationen zum Erstellen von neuen Protokolldateien finden Sie unter <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>The following table lists the output fields in the order they appear.</source>
          <target state="translated">In der folgenden Tabelle sind die Ausgabefelder "in der Reihenfolge aufgeführt.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>The fields are delimited by the string that the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A&gt;</ph> property specifies, and are followed by a line terminator.</source>
          <target state="translated">Die Felder werden durch die Zeichenfolge begrenzt, die die <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A&gt;</ph> Eigenschaft gibt an, und gefolgt von einem Zeilenabschluss.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source><bpt id="p1">**</bpt>Field<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Feld<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source><bpt id="p1">**</bpt>Output condition<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Ausgabe-Bedingung<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source><bpt id="p1">**</bpt>Description<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Beschreibung<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>Always</source>
          <target state="translated">Immer</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>The value of <ph id="ph1">`name`</ph>.</source>
          <target state="translated">Der Wert von <ph id="ph1">`name`</ph>.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>Always</source>
          <target state="translated">Immer</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>The enumeration-value name of <ph id="ph1">`eventType`</ph>.</source>
          <target state="translated">Die Enumeration Wertnamen des <ph id="ph1">`eventType`</ph>.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>Always</source>
          <target state="translated">Immer</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>The string representation of <ph id="ph1">`id`</ph>.</source>
          <target state="translated">Eine Zeichenfolgendarstellung von <ph id="ph1">`id`</ph>.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>Always</source>
          <target state="translated">Immer</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>The string representation of <ph id="ph1">`data`</ph>.</source>
          <target state="translated">Eine Zeichenfolgendarstellung von <ph id="ph1">`data`</ph>.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>When the <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.Callstack&gt;</ph> flag is set in the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> property.</source>
          <target state="translated">Wenn die <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.Callstack&gt;</ph> Flag wird festgelegt, der <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> Eigenschaft.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.Callstack%2A&gt;</ph> property of <ph id="ph2">`eventCache`</ph>.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.Callstack%2A&gt;</ph> Eigenschaft <ph id="ph2">`eventCache`</ph>.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>When the <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.LogicalOperationStack&gt;</ph> flag is set in the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> property.</source>
          <target state="translated">Wenn die <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.LogicalOperationStack&gt;</ph> Flag wird festgelegt, der <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> Eigenschaft.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.ThreadId%2A&gt;</ph> property of <ph id="ph2">`eventCache`</ph>.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.ThreadId%2A&gt;</ph> Eigenschaft <ph id="ph2">`eventCache`</ph>.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>When the <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.DateTime&gt;</ph> flag is set in the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> property.</source>
          <target state="translated">Wenn die <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.DateTime&gt;</ph> Flag wird festgelegt, der <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> Eigenschaft.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>The string representation of the <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.DateTime%2A&gt;</ph> property of <ph id="ph2">`eventCache`</ph>.</source>
          <target state="translated">Die Zeichenfolgendarstellung der <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.DateTime%2A&gt;</ph> Eigenschaft <ph id="ph2">`eventCache`</ph>.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>The invariant culture is used for the string conversion.</source>
          <target state="translated">Die invariante Kultur wird für die zeichenfolgenkonvertierung verwendet.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>When the <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.ProcessId&gt;</ph> flag is set in the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> property.</source>
          <target state="translated">Wenn die <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.ProcessId&gt;</ph> Flag wird festgelegt, der <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> Eigenschaft.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>The string representation of the <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.ProcessId%2A&gt;</ph> property of <ph id="ph2">`eventCache`</ph>.</source>
          <target state="translated">Die Zeichenfolgendarstellung der <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.ProcessId%2A&gt;</ph> Eigenschaft <ph id="ph2">`eventCache`</ph>.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>The invariant culture is used for the string conversion.</source>
          <target state="translated">Die invariante Kultur wird für die zeichenfolgenkonvertierung verwendet.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>When the <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.ThreadId&gt;</ph> flag is set in the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> property.</source>
          <target state="translated">Wenn die <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.ThreadId&gt;</ph> Flag wird festgelegt, der <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> Eigenschaft.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.ThreadId%2A&gt;</ph> property of <ph id="ph2">`eventCache`</ph>.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.ThreadId%2A&gt;</ph> Eigenschaft <ph id="ph2">`eventCache`</ph>.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>When the <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.Timestamp&gt;</ph> flag is set in the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> property.</source>
          <target state="translated">Wenn die <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.Timestamp&gt;</ph> Flag wird festgelegt, der <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> Eigenschaft.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>The string representation of the <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.Timestamp%2A&gt;</ph> property of <ph id="ph2">`eventCache`</ph>.</source>
          <target state="translated">Die Zeichenfolgendarstellung der <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.Timestamp%2A&gt;</ph> Eigenschaft <ph id="ph2">`eventCache`</ph>.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>The invariant culture is used for the string conversion.</source>
          <target state="translated">Die invariante Kultur wird für die zeichenfolgenkonvertierung verwendet.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>When the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A&gt;</ph> property is <ph id="ph2">`True`</ph>.</source>
          <target state="translated">Wenn die <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A&gt;</ph> Eigenschaft ist <ph id="ph2">`True`</ph>.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>The name of the computer.</source>
          <target state="translated">Der Name des Computers.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventCache" /&gt;</ph> object that contains the current process ID, thread ID, and stack trace information.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventCache" /&gt;</ph>-Objekt mit der aktuellen Prozess-ID, Thread-ID und den aktuellen Stapelüberwachungsinformationen.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>The name of the trace source that invoked this method.</source>
          <target state="translated">Der Name der Ablaufverfolgungsquelle, die diese Methode aufgerufen hat.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventType" /&gt;</ph> enumeration values.</source>
          <target state="translated">Einer der <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventType" /&gt;</ph>-Enumerationswerte.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>A numeric identifier for the event.</source>
          <target state="translated">Ein numerischer Bezeichner für das Ereignis.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>An array of objects to emit as data.</source>
          <target state="translated">Ein Objektarray, das in Form von Daten ausgegeben werden soll.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>Writes trace information, an array of data objects, and event information to the output file or stream.</source>
          <target state="translated">Schreibt Ablaufverfolgungsinformationen, ein Array von Datenobjekten und Ereignisinformationen in die Ausgabedatei oder den Stream.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>This method:</source>
          <target state="translated">Diese Methode:</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>Formats the data and context information for output,</source>
          <target state="translated">Formatiert die Daten und dem angegebenen Kontext Informationen für die Ausgabe,</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>Creates a new log file, if necessary,</source>
          <target state="translated">Eine neue Protokolldatei erstellt, bei Bedarf,</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>Writes the information to the log file.</source>
          <target state="translated">Schreibt die Informationen in der Protokolldatei gespeichert.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>For more information on creating new log files, see <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A&gt;</ph>.</source>
          <target state="translated">Weitere Informationen zum Erstellen von neuen Protokolldateien finden Sie unter <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>This table lists the output fields in the order they appear.</source>
          <target state="translated">In dieser Tabelle sind die Ausgabefelder "in der Reihenfolge aufgeführt.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>The fields are delimited by the string that the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A&gt;</ph> property specifies, and are followed by a line terminator.</source>
          <target state="translated">Die Felder werden durch die Zeichenfolge begrenzt, die die <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A&gt;</ph> Eigenschaft gibt an, und gefolgt von einem Zeilenabschluss.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source><bpt id="p1">**</bpt>Field<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Feld<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source><bpt id="p1">**</bpt>Output condition<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Ausgabe-Bedingung<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source><bpt id="p1">**</bpt>Description<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Beschreibung<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>Always</source>
          <target state="translated">Immer</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>The value of <ph id="ph1">`name`</ph>.</source>
          <target state="translated">Der Wert von <ph id="ph1">`name`</ph>.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>Always</source>
          <target state="translated">Immer</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>The enumeration-value name of <ph id="ph1">`eventType`</ph>.</source>
          <target state="translated">Die Enumeration Wertnamen des <ph id="ph1">`eventType`</ph>.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>Always</source>
          <target state="translated">Immer</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>The string representation of <ph id="ph1">`id`</ph>.</source>
          <target state="translated">Eine Zeichenfolgendarstellung von <ph id="ph1">`id`</ph>.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>Always</source>
          <target state="translated">Immer</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>The string consisting of the string representation of each element in <ph id="ph1">`data`</ph>, each separated by <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A&gt;</ph>.</source>
          <target state="translated">Die Zeichenfolge besteht die Zeichenfolgendarstellung für jedes Element im <ph id="ph1">`data`</ph>, jeweils getrennt durch <ph id="ph2">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>When the <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.Callstack&gt;</ph> flag is set in the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> property.</source>
          <target state="translated">Wenn die <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.Callstack&gt;</ph> Flag wird festgelegt, der <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> Eigenschaft.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.Callstack%2A&gt;</ph> property of <ph id="ph2">`eventCache`</ph>.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.Callstack%2A&gt;</ph> Eigenschaft <ph id="ph2">`eventCache`</ph>.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>When the <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.LogicalOperationStack&gt;</ph> flag is set in the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> property.</source>
          <target state="translated">Wenn die <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.LogicalOperationStack&gt;</ph> Flag wird festgelegt, der <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> Eigenschaft.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.ThreadId%2A&gt;</ph> property of <ph id="ph2">`eventCache`</ph>.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.ThreadId%2A&gt;</ph> Eigenschaft <ph id="ph2">`eventCache`</ph>.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>When the <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.DateTime&gt;</ph> flag is set in the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> property.</source>
          <target state="translated">Wenn die <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.DateTime&gt;</ph> Flag wird festgelegt, der <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> Eigenschaft.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>The string representation of the <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.DateTime%2A&gt;</ph> property of <ph id="ph2">`eventCache`</ph>.</source>
          <target state="translated">Die Zeichenfolgendarstellung der <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.DateTime%2A&gt;</ph> Eigenschaft <ph id="ph2">`eventCache`</ph>.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>The invariant culture is used for the string conversion.</source>
          <target state="translated">Die invariante Kultur wird für die zeichenfolgenkonvertierung verwendet.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>When the <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.ProcessId&gt;</ph> flag is set in the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> property.</source>
          <target state="translated">Wenn die <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.ProcessId&gt;</ph> Flag wird festgelegt, der <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> Eigenschaft.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>The string representation of the <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.ProcessId%2A&gt;</ph> property of <ph id="ph2">`eventCache`</ph>.</source>
          <target state="translated">Die Zeichenfolgendarstellung der <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.ProcessId%2A&gt;</ph> Eigenschaft <ph id="ph2">`eventCache`</ph>.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>The invariant culture is used for the string conversion.</source>
          <target state="translated">Die invariante Kultur wird für die zeichenfolgenkonvertierung verwendet.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>When the <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.ThreadId&gt;</ph> flag is set in the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> property.</source>
          <target state="translated">Wenn die <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.ThreadId&gt;</ph> Flag wird festgelegt, der <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> Eigenschaft.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.ThreadId%2A&gt;</ph> property of <ph id="ph2">`eventCache`</ph>.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.ThreadId%2A&gt;</ph> Eigenschaft <ph id="ph2">`eventCache`</ph>.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>When the <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.Timestamp&gt;</ph> flag is set in the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> property.</source>
          <target state="translated">Wenn die <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.Timestamp&gt;</ph> Flag wird festgelegt, der <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> Eigenschaft.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>The string representation of the <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.Timestamp%2A&gt;</ph> property of <ph id="ph2">`eventCache`</ph>.</source>
          <target state="translated">Die Zeichenfolgendarstellung der <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.Timestamp%2A&gt;</ph> Eigenschaft <ph id="ph2">`eventCache`</ph>.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>The invariant culture is used for the string conversion.</source>
          <target state="translated">Die invariante Kultur wird für die zeichenfolgenkonvertierung verwendet.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>When the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A&gt;</ph> property is <ph id="ph2">`True`</ph>.</source>
          <target state="translated">Wenn die <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A&gt;</ph> Eigenschaft ist <ph id="ph2">`True`</ph>.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>The name of the computer.</source>
          <target state="translated">Der Name des Computers.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>Writes trace and event information to the output file or stream.</source>
          <target state="translated">Schreibt Ablaufverfolgungs- und Ereignisdaten in die Ausgabedatei oder den Ausgabestream.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source><ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent%2A&gt;</ph> methods are not intended to be called by application code.</source>
          <target state="translated"><ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent%2A&gt;</ph> Methoden dürfen nicht von Anwendungscode aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
          <source>These methods are called by members of the <ph id="ph1">&lt;xref:System.Diagnostics.Debug&gt;</ph>, <ph id="ph2">&lt;xref:System.Diagnostics.Trace&gt;</ph>, and <ph id="ph3">&lt;xref:System.Diagnostics.TraceSource&gt;</ph> classes to write trace data to output.</source>
          <target state="translated">Diese Methoden werden aufgerufen, von einem Mitglied der <ph id="ph1">&lt;xref:System.Diagnostics.Debug&gt;</ph>, <ph id="ph2">&lt;xref:System.Diagnostics.Trace&gt;</ph>, und <ph id="ph3">&lt;xref:System.Diagnostics.TraceSource&gt;</ph> Klassen zum Schreiben von auszugebenden Ablaufverfolgungsdaten.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventCache" /&gt;</ph> object that contains the current process ID, thread ID, and stack trace information.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventCache" /&gt;</ph>-Objekt mit der aktuellen Prozess-ID, Thread-ID und den aktuellen Stapelüberwachungsinformationen.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>A name of the trace source that invoked this method.</source>
          <target state="translated">Der Name der Ablaufverfolgungsquelle, die diese Methode aufgerufen hat.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventType" /&gt;</ph> enumeration values.</source>
          <target state="translated">Einer der <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventType" /&gt;</ph>-Enumerationswerte.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>A numeric identifier for the event.</source>
          <target state="translated">Ein numerischer Bezeichner für das Ereignis.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>A message to write.</source>
          <target state="translated">Eine zu schreibende Meldung.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>Writes trace information, a message and event information to the output file or stream.</source>
          <target state="translated">Schreibt Ablaufverfolgungsinformationen, eine Meldung und Ereignisinformationen in die Ausgabedatei oder den Stream.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>This method:</source>
          <target state="translated">Diese Methode:</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>Formats the data and context information for output.</source>
          <target state="translated">Formatiert die Daten und dem angegebenen Kontext Informationen für die Ausgabe an.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>Creates a new log file, if necessary.</source>
          <target state="translated">Eine neue Protokolldatei erstellt, bei Bedarf.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>Writes the information to the log file.</source>
          <target state="translated">Schreibt die Informationen in der Protokolldatei gespeichert.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>For more information on creating new log files, see <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A&gt;</ph>.</source>
          <target state="translated">Weitere Informationen zum Erstellen von neuen Protokolldateien finden Sie unter <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>This table lists the output fields in the order in which they appear.</source>
          <target state="translated">Diese Tabelle enthält die Ausgabefelder in der Reihenfolge, in der sie angezeigt werden.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>The fields are delimited by the string that the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A&gt;</ph> property specifies, and are followed by a line terminator.</source>
          <target state="translated">Die Felder werden durch die Zeichenfolge begrenzt, die die <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A&gt;</ph> Eigenschaft gibt an, und gefolgt von einem Zeilenabschluss.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source><bpt id="p1">**</bpt>Field<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Feld<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source><bpt id="p1">**</bpt>Output condition<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Ausgabe-Bedingung<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source><bpt id="p1">**</bpt>Description<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Beschreibung<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>Always.</source>
          <target state="translated">Immer.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>The value of <ph id="ph1">`name`</ph>.</source>
          <target state="translated">Der Wert von <ph id="ph1">`name`</ph>.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>Always.</source>
          <target state="translated">Immer.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>The enumeration-value name of <ph id="ph1">`eventType`</ph>.</source>
          <target state="translated">Die Enumeration Wertnamen des <ph id="ph1">`eventType`</ph>.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>Always.</source>
          <target state="translated">Immer.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>The string representation of <ph id="ph1">`id`</ph>.</source>
          <target state="translated">Eine Zeichenfolgendarstellung von <ph id="ph1">`id`</ph>.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>Always.</source>
          <target state="translated">Immer.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>The value of <ph id="ph1">`message`</ph>.</source>
          <target state="translated">Der Wert von <ph id="ph1">`message`</ph>.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>When the <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.Callstack&gt;</ph> flag is set in the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> property.</source>
          <target state="translated">Wenn die <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.Callstack&gt;</ph> Flag wird festgelegt, der <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> Eigenschaft.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.Callstack%2A&gt;</ph> property of <ph id="ph2">`eventCache`</ph>.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.Callstack%2A&gt;</ph> Eigenschaft <ph id="ph2">`eventCache`</ph>.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>When the <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.LogicalOperationStack&gt;</ph> flag is set in the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> property.</source>
          <target state="translated">Wenn die <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.LogicalOperationStack&gt;</ph> Flag wird festgelegt, der <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> Eigenschaft.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.ThreadId%2A&gt;</ph> property of <ph id="ph2">`eventCache`</ph>.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.ThreadId%2A&gt;</ph> Eigenschaft <ph id="ph2">`eventCache`</ph>.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>When the <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.DateTime&gt;</ph> flag is set in the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> property.</source>
          <target state="translated">Wenn die <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.DateTime&gt;</ph> Flag wird festgelegt, der <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> Eigenschaft.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>The string representation of the <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.DateTime%2A&gt;</ph> property of <ph id="ph2">`eventCache`</ph>.</source>
          <target state="translated">Die Zeichenfolgendarstellung der <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.DateTime%2A&gt;</ph> Eigenschaft <ph id="ph2">`eventCache`</ph>.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>The invariant culture is used for the string conversion.</source>
          <target state="translated">Die invariante Kultur wird für die zeichenfolgenkonvertierung verwendet.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>When the <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.ProcessId&gt;</ph> flag is set in the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> property.</source>
          <target state="translated">Wenn die <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.ProcessId&gt;</ph> Flag wird festgelegt, der <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> Eigenschaft.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>The string representation of the <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.ProcessId%2A&gt;</ph> property of <ph id="ph2">`eventCache`</ph>.</source>
          <target state="translated">Die Zeichenfolgendarstellung der <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.ProcessId%2A&gt;</ph> Eigenschaft <ph id="ph2">`eventCache`</ph>.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>The invariant culture is used for the string conversion.</source>
          <target state="translated">Die invariante Kultur wird für die zeichenfolgenkonvertierung verwendet.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>When the <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.ThreadId&gt;</ph> flag is set in the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> property.</source>
          <target state="translated">Wenn die <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.ThreadId&gt;</ph> Flag wird festgelegt, der <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> Eigenschaft.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.ThreadId%2A&gt;</ph> property of <ph id="ph2">`eventCache`</ph>.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.ThreadId%2A&gt;</ph> Eigenschaft <ph id="ph2">`eventCache`</ph>.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>When the <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.Timestamp&gt;</ph> flag is set in the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> property.</source>
          <target state="translated">Wenn die <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.Timestamp&gt;</ph> Flag wird festgelegt, der <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> Eigenschaft.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>The string representation of the <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.Timestamp%2A&gt;</ph> property of <ph id="ph2">`eventCache`</ph>.</source>
          <target state="translated">Die Zeichenfolgendarstellung der <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.Timestamp%2A&gt;</ph> Eigenschaft <ph id="ph2">`eventCache`</ph>.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>The invariant culture is used for the string conversion.</source>
          <target state="translated">Die invariante Kultur wird für die zeichenfolgenkonvertierung verwendet.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>When the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A&gt;</ph> property is <ph id="ph2">`True`</ph>.</source>
          <target state="translated">Wenn die <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A&gt;</ph> Eigenschaft ist <ph id="ph2">`True`</ph>.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>The name of the computer.</source>
          <target state="translated">Der Name des Computers.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventCache" /&gt;</ph> object that contains the current process ID, thread ID, and stack trace information.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventCache" /&gt;</ph>-Objekt mit der aktuellen Prozess-ID, Thread-ID und den aktuellen Stapelüberwachungsinformationen.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>A name of the trace source that invoked this method.</source>
          <target state="translated">Der Name der Ablaufverfolgungsquelle, die diese Methode aufgerufen hat.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventType" /&gt;</ph> enumeration values.</source>
          <target state="translated">Einer der <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventType" /&gt;</ph>-Enumerationswerte.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>A numeric identifier for the event.</source>
          <target state="translated">Ein numerischer Bezeichner für das Ereignis.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>A format string that contains zero or more format items, which correspond to objects in the <bpt id="p1">&lt;c&gt;</bpt>args<ept id="p1">&lt;/c&gt;</ept> array.</source>
          <target state="translated">Eine Formatzeichenfolge mit 0 oder mehr Formatelementen, die Objekten im <bpt id="p1">&lt;c&gt;</bpt>args<ept id="p1">&lt;/c&gt;</ept>-Array entsprechen</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>An <ph id="ph1">&lt;see langword="Object" /&gt;</ph> array containing zero or more objects to format.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see langword="Object" /&gt;</ph>-Array mit 0 oder mehr zu formatierenden Objekten.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>Writes trace information, a formatted array of objects, and event information to the output file or stream.</source>
          <target state="translated">Schreibt Ablaufverfolgungsinformationen, ein formatiertes Array von Objekten und Ereignisinformationen in die Ausgabedatei oder den Stream.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>This method:</source>
          <target state="translated">Diese Methode:</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>Formats the data and context information for output.</source>
          <target state="translated">Formatiert die Daten und dem angegebenen Kontext Informationen für die Ausgabe an.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>Creates a new a new log file, if necessary.</source>
          <target state="translated">Erstellt ein neues eine neue Protokolldatei bei Bedarf.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>Writes the information to the log file.</source>
          <target state="translated">Schreibt die Informationen in der Protokolldatei gespeichert.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>For more information on creating new log file, see <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A&gt;</ph>.</source>
          <target state="translated">Weitere Informationen zum Erstellen der neuen Protokolldatei finden Sie unter <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>This table lists the output fields in the order in which they appear.</source>
          <target state="translated">Diese Tabelle enthält die Ausgabefelder in der Reihenfolge, in der sie angezeigt werden.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>The fields are delimited by the string that the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A&gt;</ph> property specifies, and followed by a line terminator.</source>
          <target state="translated">Die Felder werden durch die Zeichenfolge begrenzt, die die <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A&gt;</ph> Eigenschaft gibt an, und gefolgt von einem Zeilenabschluss.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source><bpt id="p1">**</bpt>Field<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Feld<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source><bpt id="p1">**</bpt>Output condition<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Ausgabe-Bedingung<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source><bpt id="p1">**</bpt>Description<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Beschreibung<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>Always</source>
          <target state="translated">Immer</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>The value of <ph id="ph1">`name`</ph>.</source>
          <target state="translated">Der Wert von <ph id="ph1">`name`</ph>.</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>Always</source>
          <target state="translated">Immer</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>The enumeration-value name of <ph id="ph1">`eventType`</ph>.</source>
          <target state="translated">Die Enumeration Wertnamen des <ph id="ph1">`eventType`</ph>.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>Always</source>
          <target state="translated">Immer</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>The string representation of <ph id="ph1">`id`</ph>.</source>
          <target state="translated">Eine Zeichenfolgendarstellung von <ph id="ph1">`id`</ph>.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>Always</source>
          <target state="translated">Immer</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>The data in <ph id="ph1">`args`</ph> formatted with the <ph id="ph2">`format`</ph> string and using the invariant culture for string conversions.</source>
          <target state="translated">Die Daten in <ph id="ph1">`args`</ph> mit formatiert die <ph id="ph2">`format`</ph> Zeichenfolge und mit der invarianten Kultur für zeichenfolgenkonvertierungen.</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>When the <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.Callstack&gt;</ph> flag is set in the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> property.</source>
          <target state="translated">Wenn die <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.Callstack&gt;</ph> Flag wird festgelegt, der <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> Eigenschaft.</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.Callstack%2A&gt;</ph> property of <ph id="ph2">`eventCache`</ph>.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.Callstack%2A&gt;</ph> Eigenschaft <ph id="ph2">`eventCache`</ph>.</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>When the <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.LogicalOperationStack&gt;</ph> flag is set in the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> property.</source>
          <target state="translated">Wenn die <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.LogicalOperationStack&gt;</ph> Flag wird festgelegt, der <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> Eigenschaft.</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.ThreadId%2A&gt;</ph> property of <ph id="ph2">`eventCache`</ph>.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.ThreadId%2A&gt;</ph> Eigenschaft <ph id="ph2">`eventCache`</ph>.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>When the <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.DateTime&gt;</ph> flag is set in the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> property.</source>
          <target state="translated">Wenn die <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.DateTime&gt;</ph> Flag wird festgelegt, der <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> Eigenschaft.</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>The string representation of the <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.DateTime%2A&gt;</ph> property of <ph id="ph2">`eventCache`</ph>.</source>
          <target state="translated">Die Zeichenfolgendarstellung der <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.DateTime%2A&gt;</ph> Eigenschaft <ph id="ph2">`eventCache`</ph>.</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>The invariant culture is used for the string conversion.</source>
          <target state="translated">Die invariante Kultur wird für die zeichenfolgenkonvertierung verwendet.</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>When the <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.ProcessId&gt;</ph> flag is set in the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> property.</source>
          <target state="translated">Wenn die <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.ProcessId&gt;</ph> Flag wird festgelegt, der <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> Eigenschaft.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>The string representation of the <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.ProcessId%2A&gt;</ph> property of <ph id="ph2">`eventCache`</ph>.</source>
          <target state="translated">Die Zeichenfolgendarstellung der <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.ProcessId%2A&gt;</ph> Eigenschaft <ph id="ph2">`eventCache`</ph>.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>The invariant culture is used for the string conversion.</source>
          <target state="translated">Die invariante Kultur wird für die zeichenfolgenkonvertierung verwendet.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>When the <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.ThreadId&gt;</ph> flag is set in the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> property.</source>
          <target state="translated">Wenn die <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.ThreadId&gt;</ph> Flag wird festgelegt, der <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> Eigenschaft.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.ThreadId%2A&gt;</ph> property of <ph id="ph2">`eventCache`</ph>.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.ThreadId%2A&gt;</ph> Eigenschaft <ph id="ph2">`eventCache`</ph>.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>When the <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.Timestamp&gt;</ph> flag is set in the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> property.</source>
          <target state="translated">Wenn die <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.Timestamp&gt;</ph> Flag wird festgelegt, der <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> Eigenschaft.</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>The string representation of the <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.Timestamp%2A&gt;</ph> property of <ph id="ph2">`eventCache`</ph>.</source>
          <target state="translated">Die Zeichenfolgendarstellung der <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.Timestamp%2A&gt;</ph> Eigenschaft <ph id="ph2">`eventCache`</ph>.</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>The invariant culture is used for the string conversion.</source>
          <target state="translated">Die invariante Kultur wird für die zeichenfolgenkonvertierung verwendet.</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>When the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A&gt;</ph> property is <ph id="ph2">`True`</ph>.</source>
          <target state="translated">Wenn die <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A&gt;</ph> Eigenschaft ist <ph id="ph2">`True`</ph>.</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>The name of the computer.</source>
          <target state="translated">Der Name des Computers.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Write(System.String)">
          <source><ph id="ph1">&lt;see langword="String" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="String" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Write(System.String)">
          <source>The custom message to write.</source>
          <target state="translated">Die benutzerdefinierte Meldung, die geschrieben werden soll.</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Write(System.String)">
          <source>Writes a verbatim message to disk, without any additional context information.</source>
          <target state="translated">Schreibt eine wörtliche Meldung ohne weitere Kontextinformationen auf den Datenträger.</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Write(System.String)">
          <source>The <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Write%2A&gt;</ph> method writes a specific message to the log file, without any additional context information.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Write%2A&gt;</ph> -Methode schreibt eine bestimmte Nachricht in der Protokolldatei gespeichert, ohne weitere Kontextinformationen.</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Write(System.String)">
          <source>Use the one of the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A&gt;</ph> methods to include the context information in the log output.</source>
          <target state="translated">Wenden Sie eines der der <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A&gt;</ph> Methoden, die Kontextinformationen in die Protokollausgabe aufgenommen.</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.WriteLine(System.String)">
          <source><ph id="ph1">&lt;see langword="String" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="String" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.WriteLine(System.String)">
          <source>The custom message to write.</source>
          <target state="translated">Die benutzerdefinierte Meldung, die geschrieben werden soll.</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.WriteLine(System.String)">
          <source>Writes a verbatim message to disk, followed by the current line terminator, without any additional context information.</source>
          <target state="translated">Schreibt eine wörtliche Meldung ohne weitere Kontextinformationen, gefolgt vom aktuellen Zeilenabschlusszeichen, in die Datei</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.WriteLine(System.String)">
          <source>The <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.WriteLine%2A&gt;</ph> method writes a specific message to the log file, without any additional context information.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.WriteLine%2A&gt;</ph> -Methode schreibt eine bestimmte Nachricht in der Protokolldatei gespeichert, ohne weitere Kontextinformationen.</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.WriteLine(System.String)">
          <source>Use the one of the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A&gt;</ph> methods to include the context information in the log output.</source>
          <target state="translated">Wenden Sie eines der der <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A&gt;</ph> Methoden, die Kontextinformationen in die Protokollausgabe aufgenommen.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>