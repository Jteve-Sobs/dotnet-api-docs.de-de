<Type Name="FileLogTraceListener" FullName="Microsoft.VisualBasic.Logging.FileLogTraceListener">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c993f49f8ef84e416475e1c4d7f3f97289cbf34e" />
    <Meta Name="ms.sourcegitcommit" Value="3907f9a5780957d9c85af2e54c0a5bc2a5bf19ab" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="06/14/2018" />
    <Meta Name="ms.locfileid" Value="34174154" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class FileLogTraceListener : System.Diagnostics.TraceListener" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FileLogTraceListener extends System.Diagnostics.TraceListener" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" />
  <TypeSignature Language="VB.NET" Value="Public Class FileLogTraceListener&#xA;Inherits TraceListener" />
  <TypeSignature Language="C++ CLI" Value="public ref class FileLogTraceListener : System::Diagnostics::TraceListener" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Diagnostics.TraceListener</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="abd09-101">Stellt einen einfachen Listener bereit, der Protokollausgaben an eine Datei weiterleitet.</span>
      <span class="sxs-lookup">
        <span data-stu-id="abd09-101">Provides a simple listener that directs logging output to file.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abd09-102">Die <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> -Klasse stellt automatisierte Wartungsfunktionen Protokolldateien archivieren Bedarf auf täglich oder pro Anwendung.</span><span class="sxs-lookup"><span data-stu-id="abd09-102">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class provides automated maintenance capabilities to archive log files as needed, on a daily or per-application basis.</span></span> <span data-ttu-id="abd09-103">Diese Funktionen zum automatischen Archivierung kann die Wartung Aufgaben von Entwicklern und Administratoren reduziert werden.</span><span class="sxs-lookup"><span data-stu-id="abd09-103">This automatic archival functionality helps reduce the maintenance responsibilities of developers and administrators.</span></span>  
  
 <span data-ttu-id="abd09-104">Eine Instanz von <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> hinzugefügt werden können die <xref:System.Diagnostics.Debug.Listeners%2A?displayProperty=nameWithType> oder <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType> Sammlungen Protokollausgabe in eine Textdatei umleiten.</span><span class="sxs-lookup"><span data-stu-id="abd09-104">An instance of <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> can be added to the <xref:System.Diagnostics.Debug.Listeners%2A?displayProperty=nameWithType> or <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType> collections to redirect output from logging to a text file.</span></span> <span data-ttu-id="abd09-105">Instanzen dieser Klasse können auch hinzugefügt werden, um `My.Application.Log` oder `My.Log` (für Webanwendungen) in Visual Basic-Anwendungen.</span><span class="sxs-lookup"><span data-stu-id="abd09-105">Instances of this class can also be added to `My.Application.Log` or `My.Log` (for Web applications) in Visual Basic applications.</span></span> <span data-ttu-id="abd09-106">Weitere Informationen finden Sie unter [Exemplarische Vorgehensweise: ändern, wohin "My.Application.log" schreibt Informationen](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-changing-where-my-application-log-writes-information.md)`.`</span><span class="sxs-lookup"><span data-stu-id="abd09-106">For more information, see [Walkthrough: Changing Where My.Application.Log Writes Information](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-changing-where-my-application-log-writes-information.md)`.`</span></span>  
  
 <span data-ttu-id="abd09-107">Die Hauptfunktionen von dieser Klasse werden zu können:</span><span class="sxs-lookup"><span data-stu-id="abd09-107">The main features of this class are:</span></span>  
  
1.  <span data-ttu-id="abd09-108">*Archivierung Funktionalität*.</span><span class="sxs-lookup"><span data-stu-id="abd09-108">*Archival functionality*.</span></span> <span data-ttu-id="abd09-109">Die von dieser Klasse generierten Protokolldateien heißen gemäß dem Basisnamen und dem Datum wird zusammen mit einer Zahl in die Protokolldatei von aufeinander folgenden Versionen des Protokolls zu unterscheiden.</span><span class="sxs-lookup"><span data-stu-id="abd09-109">The log files generated by this class are named according to the base name and the date, along with a number to distinguish the log file from successive versions of the log.</span></span> <span data-ttu-id="abd09-110">Neue Protokolldateien werden auf Basis bei Bedarf erstellt.</span><span class="sxs-lookup"><span data-stu-id="abd09-110">New log files are created on an as-needed basis.</span></span>  
  
     <span data-ttu-id="abd09-111">Die explizite Form des Dateinamens ist `baseName`[-`dateStamp`] [-`version`] .log, wobei:</span><span class="sxs-lookup"><span data-stu-id="abd09-111">The explicit form of the file name is `baseName`[-`dateStamp`][-`version`].log, where:</span></span>  
  
    -   <span data-ttu-id="abd09-112">Die `baseName` Teil ist der grundlegende Protokollnamen gemäß der <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="abd09-112">The `baseName` part is the fundamental log name, specified by the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A> property.</span></span>  
  
    -   <span data-ttu-id="abd09-113">Die `dateStamp` Teil hat das Format "YYYY-MM-DD" und wird angezeigt, wenn <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> ist <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily> oder <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly>.</span><span class="sxs-lookup"><span data-stu-id="abd09-113">The `dateStamp` part has the format "YYYY-MM-DD", and it is shown when <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> is <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily> or <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly>.</span></span>  
  
    -   <span data-ttu-id="abd09-114">Ggf. mehr als eine Protokolldatei mit dem gleichen `baseName` und `dateStamp`, `version` Webpart, ein positiver `Integer`, wird dem Dateinamen hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="abd09-114">If more than one log file is needed with the same `baseName` and `dateStamp`, the `version` part, a positive `Integer`, is added to the file name.</span></span>  
  
2.  <span data-ttu-id="abd09-115">*Mehrere Klasseninstanzen*.</span><span class="sxs-lookup"><span data-stu-id="abd09-115">*Multiple class instances*.</span></span> <span data-ttu-id="abd09-116">Wenn eine Instanz von der <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> Klasse schreibt in eine Datei, die verwendet wird:</span><span class="sxs-lookup"><span data-stu-id="abd09-116">If an instance of the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class writes to a file that is in use:</span></span>  
  
    -   <span data-ttu-id="abd09-117">Die Klasse gibt die Datei frei, wenn sie von einer anderen Instanz verwendet wird, wird die <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> Klasse im gleichen Prozess.</span><span class="sxs-lookup"><span data-stu-id="abd09-117">The class shares the file if it is being used by another instance of the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class in the same process.</span></span>  
  
    -   <span data-ttu-id="abd09-118">Die Klasse erstellt eine neue Protokolldatei mit den Namen des nächsten verfügbar, wenn die Datei von einem anderen Prozess verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="abd09-118">The class creates a new log file using the next available name if the file is being used by another process.</span></span>  
  
3.  <span data-ttu-id="abd09-119">*Threadsicherheit*.</span><span class="sxs-lookup"><span data-stu-id="abd09-119">*Thread safety*.</span></span> <span data-ttu-id="abd09-120">Die <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> -Klasse ist threadsicher.</span><span class="sxs-lookup"><span data-stu-id="abd09-120">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class is thread safe.</span></span> <span data-ttu-id="abd09-121">Dadurch können Sie problemlos in das Protokoll aus mehreren Threads Schreiben von Nachrichten ohne Verwendung von Sperren.</span><span class="sxs-lookup"><span data-stu-id="abd09-121">This allows you to safely write messages to the log from multiple threads without using locks.</span></span>  
  
 <span data-ttu-id="abd09-122">**Protokolldatei Speicherort**</span><span class="sxs-lookup"><span data-stu-id="abd09-122">**Log-File Location**</span></span>  
  
-   <span data-ttu-id="abd09-123">Die <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A> Eigenschaft akzeptiert einen <xref:Microsoft.VisualBasic.Logging.LogFileLocation> Enumeration eines üblichen Verzeichnisse an, die Protokolldatei geschrieben werden soll.</span><span class="sxs-lookup"><span data-stu-id="abd09-123">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A> property takes a <xref:Microsoft.VisualBasic.Logging.LogFileLocation> enumeration to specify one of the typical directories to write the log file to.</span></span>  
  
-   <span data-ttu-id="abd09-124">Um das Protokoll an einen anderen Speicherort zu schreiben, legen die <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A> Eigenschaft für diesen Speicherort.</span><span class="sxs-lookup"><span data-stu-id="abd09-124">To write the log to another location, set the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A> property to that location.</span></span>  
  
 <span data-ttu-id="abd09-125">**Name der Protokolldatei.**</span><span class="sxs-lookup"><span data-stu-id="abd09-125">**Log-File Name**</span></span>  
  
-   <span data-ttu-id="abd09-126">Der Basisname der Protokolldatei wird gemäß der <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="abd09-126">The base name for the log file is specified by the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A> property.</span></span>  
  
-   <span data-ttu-id="abd09-127">Name der aktuellen Protokolldatei gelesen werden kann, aus der <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="abd09-127">The current log file name can be read from the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> property.</span></span> <span data-ttu-id="abd09-128">Es wird über mehrere weitere Eigenschaften und den aktuellen Status der Protokolle im Dateisystem abgeleitet.</span><span class="sxs-lookup"><span data-stu-id="abd09-128">It is derived from several other properties and the current state of the logs in the file system.</span></span>  
  
 <span data-ttu-id="abd09-129">**Pflege**</span><span class="sxs-lookup"><span data-stu-id="abd09-129">**Log Maintenance**</span></span>  
  
-   <span data-ttu-id="abd09-130">Die mindesthäufigkeit für die Erstellung neuer Protokolldateien richtet sich nach der <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="abd09-130">The minimum frequency for creating new log files is determined by the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> property.</span></span> <span data-ttu-id="abd09-131">Wenn der Wert ist <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily> oder <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly>, eine neue Protokolldatei wird jedem Tag oder Woche mindestens einmal erstellt und einen Datumsstempel in den <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> Namen.</span><span class="sxs-lookup"><span data-stu-id="abd09-131">When the value is <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily> or <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly>, a new log file is created at least once every day or week, and a date stamp is incorporated into the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> name.</span></span>  
  
-   <span data-ttu-id="abd09-132">Die maximale Größe (in Bytes) der Protokolldatei richtet sich nach der <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="abd09-132">The maximum size (in bytes) of the log file is determined by the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A> property.</span></span> <span data-ttu-id="abd09-133">Wenn die Größe der Protokolldatei diese Größe überschreitet, werden zusätzliche Nachrichten, die in das Protokoll geschrieben verworfen und, je nach den <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> -Eigenschaft, eine Ausnahme ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="abd09-133">If the log file size exceeds this size, additional messages written to the log are discarded and, depending on the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> property, an exception is thrown.</span></span>  
  
-   <span data-ttu-id="abd09-134">Die <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A> Eigenschaft bestimmt, wie viel freier Speicherplatz (in Byte) verfügbar sein muss.</span><span class="sxs-lookup"><span data-stu-id="abd09-134">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A> property determines how much free space (in bytes) must be available.</span></span> <span data-ttu-id="abd09-135">So kann sichergestellt werden, die die <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> Klasse werden nicht alle verfügbaren Speicherplatz zu nutzen.</span><span class="sxs-lookup"><span data-stu-id="abd09-135">This helps ensure that the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class will not consume all available disk space.</span></span> <span data-ttu-id="abd09-136">Verwenden der <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> Eigenschaft zum Festlegen des Verhaltens von Protokoll schreibt, wenn stehen weniger als <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A> freien Bytes verfügbar.</span><span class="sxs-lookup"><span data-stu-id="abd09-136">Use the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> property to specify the behavior of log writes when there are less than <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A> bytes free.</span></span>  
  
 <span data-ttu-id="abd09-137">**Protokolldatei Ausgabeeinstellungen**</span><span class="sxs-lookup"><span data-stu-id="abd09-137">**Log-File Output Settings**</span></span>  
  
-   <span data-ttu-id="abd09-138">Die <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush%2A> Eigenschaft gibt an, ob der zugrunde liegende Stream nach jedem Schreibvorgang in die Protokolldatei automatisch geleert werden soll.</span><span class="sxs-lookup"><span data-stu-id="abd09-138">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush%2A> property specifies whether the underlying stream should be flushed automatically after each write to the log file.</span></span>  
  
-   <span data-ttu-id="abd09-139">Die <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Append%2A> Eigenschaft gibt an, ob Nachrichten in die aktuelle Protokolldatei anfügen, wenn die zugelassen oder in eine neue Protokolldatei schreiben.</span><span class="sxs-lookup"><span data-stu-id="abd09-139">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Append%2A> property specifies whether to append messages to the current log file, if allowed, or write them to a new log file.</span></span>  
  
-   <span data-ttu-id="abd09-140">Die <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A> Eigenschaft gibt die Zeichenfolge zum begrenzen die Felder in einer Lognachricht verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="abd09-140">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A> property specifies the string to use for delimiting the fields within a log message.</span></span>  
  
-   <span data-ttu-id="abd09-141">Die <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding%2A> Eigenschaft gibt an, die beim Erstellen einer neuen Protokolldatei zu verwendende Codierung.</span><span class="sxs-lookup"><span data-stu-id="abd09-141">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding%2A> property specifies the encoding to use when creating a new log file.</span></span>  
  
 <span data-ttu-id="abd09-142">**Protokolldatei Ausgabe**</span><span class="sxs-lookup"><span data-stu-id="abd09-142">**Log-File Output**</span></span>  
  
-   <span data-ttu-id="abd09-143">Die <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A> und <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent%2A> Methoden schreiben Nachrichten in der Protokolldatei gespeichert.</span><span class="sxs-lookup"><span data-stu-id="abd09-143">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A> and <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent%2A> methods write messages to the log file.</span></span> <span data-ttu-id="abd09-144">Diese Methoden vergleichen die <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> Eigenschaft zusammen mit der vorhandenen Protokolle mit den gleichen Basisnamen, um festzustellen, ob ein neues Protokoll erstellt werden soll.</span><span class="sxs-lookup"><span data-stu-id="abd09-144">These methods check the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> property, along with any existing logs with the same base name to determine if a new log should be created.</span></span>  
  
-   <span data-ttu-id="abd09-145">Die <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush%2A> Methode leert Nachrichten, die derzeit in den Ausgabepuffer in der Protokolldatei gespeichert.</span><span class="sxs-lookup"><span data-stu-id="abd09-145">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush%2A> method flushes any messages currently in the output buffer to the log file.</span></span>  
  
-   <span data-ttu-id="abd09-146">Die <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close%2A> Methode schließt die Protokolldatei, damit er von anderen Prozessen verwendet werden kann.</span><span class="sxs-lookup"><span data-stu-id="abd09-146">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close%2A> method closes the log file so that it can be used by other processes.</span></span>  
  
 <span data-ttu-id="abd09-147">**Aktivieren der Ausgabe**</span><span class="sxs-lookup"><span data-stu-id="abd09-147">**Enabling Output**</span></span>  
  
 <span data-ttu-id="abd09-148">Sie müssen die Ablaufverfolgungs- oder Debuggen verwenden Sie einen Ablaufverfolgungslistener aktivieren.</span><span class="sxs-lookup"><span data-stu-id="abd09-148">You must enable tracing or debugging to use a trace listener.</span></span> <span data-ttu-id="abd09-149">Die folgende Syntax ist compilerspezifisch.</span><span class="sxs-lookup"><span data-stu-id="abd09-149">The following syntax is compiler specific.</span></span> <span data-ttu-id="abd09-150">Wenn Sie den Compiler als c# oder Visual Basic verwenden, finden Sie in der Dokumentation für den Compiler.</span><span class="sxs-lookup"><span data-stu-id="abd09-150">If you use compilers other than C# or Visual Basic, refer to the documentation for your compiler.</span></span>  
  
-   <span data-ttu-id="abd09-151">Fügen Sie zum Aktivieren des Debuggens in C# geschrieben, die `/d:DEBUG` Flag an die Befehlszeile des Compilers beim Kompilieren des Codes, oder Sie fügen `#define DEBUG` an den Anfang der Datei.</span><span class="sxs-lookup"><span data-stu-id="abd09-151">To enable debugging in C#, add the `/d:DEBUG` flag to the compiler command line when you compile your code, or you can add `#define DEBUG` to the top of your file.</span></span> <span data-ttu-id="abd09-152">Fügen Sie in Visual Basic die `/d:DEBUG=True` -Kennzeichen an die Befehlszeile des Compilers.</span><span class="sxs-lookup"><span data-stu-id="abd09-152">In Visual Basic, add the `/d:DEBUG=True` flag to the compiler command line.</span></span>  
  
-   <span data-ttu-id="abd09-153">Fügen Sie zum Aktivieren der Ablaufverfolgung in c# die `/d:TRACE` Flag an die Befehlszeile des Compilers beim Kompilieren des Codes, oder fügen `#define TRACE` an den Anfang der Datei.</span><span class="sxs-lookup"><span data-stu-id="abd09-153">To enable tracing in C#, add the `/d:TRACE` flag to the compiler command line when you compile your code, or add `#define TRACE` to the top of your file.</span></span> <span data-ttu-id="abd09-154">Fügen Sie in Visual Basic die `/d:TRACE=True` -Kennzeichen an die Befehlszeile des Compilers.</span><span class="sxs-lookup"><span data-stu-id="abd09-154">In Visual Basic, add the `/d:TRACE=True` flag to the compiler command line.</span></span>  
  
 <span data-ttu-id="abd09-155">Bearbeiten Sie die Konfigurationsdatei für die Anwendung, zum Festlegen der Ebene des Listeners.</span><span class="sxs-lookup"><span data-stu-id="abd09-155">To set the level of your listener, edit the configuration file for your application.</span></span> <span data-ttu-id="abd09-156">In dieser Datei können Sie einen Listener hinzufügen und dessen Typ und Parameter festlegen, einen Listener zu entfernen oder deaktivieren die Listener, die zuvor von der Anwendung festgelegt.</span><span class="sxs-lookup"><span data-stu-id="abd09-156">Within this file, you can add a listener, set its type and set its parameters, remove a listener, or clear all the listeners previously set by the application.</span></span> <span data-ttu-id="abd09-157">Die Konfigurationsdatei sollte wie im folgenden Beispiel formatiert werden.</span><span class="sxs-lookup"><span data-stu-id="abd09-157">The configuration file should be formatted like the following example.</span></span>  
  
 <span data-ttu-id="abd09-158">Für dieses Beispiel ausführen müssen Sie den vollqualifizierten Assemblynamen bereitstellen.</span><span class="sxs-lookup"><span data-stu-id="abd09-158">For this example to run, you must provide the fully qualified assembly name.</span></span> <span data-ttu-id="abd09-159">Informationen zur Vorgehensweise zum Abrufen der vollqualifizierte Assemblyname finden Sie unter [Assemblynamen](~/docs/framework/app-domains/assembly-names.md).</span><span class="sxs-lookup"><span data-stu-id="abd09-159">For information about how to obtain the fully qualified assembly name, see [Assembly Names](~/docs/framework/app-domains/assembly-names.md).</span></span>  
  
```xml  
<configuration>  
    <system.diagnostics>  
        <sharedListeners>  
            <add name="FileLog"  
                type="Microsoft.VisualBasic.Logging.FileLogTraceListener,   
                      Microsoft.VisualBasic, Version=8.0.0.0,   
                      Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a,   
                      processorArchitecture=MSIL"   
                initializeData="FileLogWriter"/>  
        </sharedListeners>  
    </system.diagnostics>  
</configuration>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName" />
    <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
    <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)" />
    <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush" />
    <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="abd09-160">Initialisiert eine neue Instanz der <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" />-Klasse und legt den Namen fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abd09-160">Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> class and sets the name.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileLogTraceListener ();" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileLogTraceListener();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="abd09-161">Initialisiert eine neue Instanz der <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" />-Klasse mit dem Standardnamen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abd09-161">Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> class with the default name.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abd09-162">Diese Methode legt den Instanznamen, der die <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> Klasse auf FileLogTraceListener fest.</span><span class="sxs-lookup"><span data-stu-id="abd09-162">This method sets the instance name of the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class to FileLogTraceListener.</span></span>  
  
 <span data-ttu-id="abd09-163">Sie erreichen den Namen der Instanz über die <xref:System.Diagnostics.TraceListener.Name%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="abd09-163">You can access the instance name through the <xref:System.Diagnostics.TraceListener.Name%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Logging.Log" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileLogTraceListener (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileLogTraceListener(System::String ^ name);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="abd09-164">
            <see langword="String" />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="abd09-164">
              <see langword="String" />.</span>
          </span>
          <span data-ttu-id="abd09-165">Der Name des Instanzobjekts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abd09-165">The name of the instance object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="abd09-166">Initialisiert eine neue Instanz der <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" />-Klasse mit dem angegebenen Namen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abd09-166">Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> class with the supplied name.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abd09-167">Diese Methode legt den Instanznamen, der die <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> Klasse `name`.</span><span class="sxs-lookup"><span data-stu-id="abd09-167">This method sets the instance name of the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class to `name`.</span></span>  
  
 <span data-ttu-id="abd09-168">Sie erreichen den Instanznamen der <xref:System.Diagnostics.TraceListener.Name%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="abd09-168">You can access the instance name thought the <xref:System.Diagnostics.TraceListener.Name%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Logging.Log" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" />
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public bool Append { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Append" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Append" />
      <MemberSignature Language="VB.NET" Value="Public Property Append As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Append { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="abd09-169">Bestimmt, ob die Ausgabe an die aktuelle Datei angefügt oder in eine neue Datei geschrieben werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abd09-169">Determines whether to append the output to the current file or write it to a new file.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="abd09-170">Ein <see langword="Boolean" />-Wert, wobei <see langword="True" /> angibt, dass die Ausgabe an die aktuelle Datei angefügt wird, wohingegen die Ausgabe bei <see langword="False" /> in eine neue Datei geschrieben wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abd09-170">
              <see langword="Boolean" />, with <see langword="True" /> indicating that the output is appended to the current file, and <see langword="False" /> indicating that output is written to a new file.</span>
          </span>
          <span data-ttu-id="abd09-171">Die Standardeinstellung für diese Eigenschaft ist <see langword="True" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abd09-171">The default setting for this property is <see langword="True" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abd09-172">Wenn die <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Append%2A> Eigenschaft ist `False`, wird die Ausgabe in eine neue Datei geschrieben.</span><span class="sxs-lookup"><span data-stu-id="abd09-172">When the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Append%2A> property is `False`, the output is written to a new file.</span></span> <span data-ttu-id="abd09-173">Wenn die Eigenschaft den Wert `True`, die Ausgabe wird an die aktuelle Datei angefügt, es sei denn:</span><span class="sxs-lookup"><span data-stu-id="abd09-173">When the property is `True`, the output is appended to the current file, unless:</span></span>  
  
-   <span data-ttu-id="abd09-174">Die Ausgabedatei wird von einem anderen Prozess gesperrt.</span><span class="sxs-lookup"><span data-stu-id="abd09-174">The output file is locked by another process.</span></span> <span data-ttu-id="abd09-175">In diesem Fall wird eine neue Protokolldatei erstellt, mit einer Versionsnummer, die in vorhandenen der <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> Name.</span><span class="sxs-lookup"><span data-stu-id="abd09-175">In this situation, a new log file is created with a version number that is incorporated into the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> name.</span></span>  
  
-   <span data-ttu-id="abd09-176">Die aktuelle Dateigröße ist größer als die <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A> Eigenschaft ermöglicht.</span><span class="sxs-lookup"><span data-stu-id="abd09-176">The current file size is greater than what the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A> property allows.</span></span> <span data-ttu-id="abd09-177">In diesem Fall werden zusätzliche Nachrichten verworfen, und, je nachdem, auf die <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> -Eigenschaft, eine Ausnahme ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="abd09-177">In this situation, additional messages are discarded and, depending on the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> property, an exception is thrown.</span></span>  
  
-   <span data-ttu-id="abd09-178">Der Name der vorhandenen gemäß den vom angegebenen protokollerstellung Zeitplan nicht mehr aktuell ist die <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="abd09-178">The existing file name is out of date according to the log-creation schedule specified by the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> property.</span></span> <span data-ttu-id="abd09-179">In diesem Fall wird eine neue Protokolldatei erstellt, und der Datumsstempel in den <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> Namen.</span><span class="sxs-lookup"><span data-stu-id="abd09-179">In this situation, a new log file is created and the date stamp is incorporated into the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> name.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule" />
      </Docs>
    </Member>
    <Member MemberName="AutoFlush">
      <MemberSignature Language="C#" Value="public bool AutoFlush { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoFlush" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoFlush As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoFlush { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="abd09-180">Gibt an, ob beim Schreiben in den Protokolldateistream der Puffer entleert wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abd09-180">Indicates whether or not the writing to the log file stream flushes the buffer.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="abd09-181">Ein <see langword="Boolean" />-Wert, wobei <see langword="True" /> angibt, dass der Stream nach jedem Schreibvorgang entleert wird. Andernfalls werden die Protokolleinträge im Puffer gespeichert und können effizienter geschrieben werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abd09-181">
              <see langword="Boolean" />, with <see langword="True" /> indicating that the stream is flushed after every write; otherwise the log entries are buffered and written more efficiently.</span>
          </span>
          <span data-ttu-id="abd09-182">Die Standardeinstellung für diese Eigenschaft ist <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abd09-182">The default setting for this property is <see langword="False" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abd09-183">Die `False` Einstellung für die <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush%2A> Eigenschaft bietet die beste Leistung für die meisten Anwendungen, da es effizienter, mehrere Nachrichten gleichzeitig in die Protokolldatei geschrieben wird.</span><span class="sxs-lookup"><span data-stu-id="abd09-183">The `False` setting for the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush%2A> property provides the best performance for most applications, because it is more efficient to write multiple messages to the log file at one time.</span></span> <span data-ttu-id="abd09-184">Sie können die <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush%2A> Methode, um alle Nachrichten derzeit in der Protokolldatei zu leeren Ausgabe des Puffers.</span><span class="sxs-lookup"><span data-stu-id="abd09-184">You can use the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush%2A> method to flush any messages currently in the log file's output buffer.</span></span> <span data-ttu-id="abd09-185">Sie können auch die <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close%2A> -Methode, die implizit den Stream entleert vor dem Schließen der Protokolldatei.</span><span class="sxs-lookup"><span data-stu-id="abd09-185">You can also use the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close%2A> method, which implicitly flushes the stream before closing the log file.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush" />
        <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close" />
      </Docs>
    </Member>
    <Member MemberName="BaseFileName">
      <MemberSignature Language="C#" Value="public string BaseFileName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BaseFileName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName" />
      <MemberSignature Language="VB.NET" Value="Public Property BaseFileName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ BaseFileName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="abd09-186">Ruft den Basisnamen für die Protokolldateien ab, der zum Erstellen des vollständigen Protokolldateinamens verwendet wird, oder legt diesen fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abd09-186">Gets or sets the base name for the log files, which is used to create the full log-file name.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="abd09-187">
            <see langword="String" />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="abd09-187">
              <see langword="String" />.</span>
          </span>
          <span data-ttu-id="abd09-188">Der Basisname für die Protokolldateien.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abd09-188">The base name for the log files.</span>
          </span>
          <span data-ttu-id="abd09-189">Der Standardwert ist der Produktname der Anwendung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abd09-189">The default is the application's product name.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abd09-190">Die <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A> Eigenschaft bestimmt den Basisnamen für die Protokolldateien der <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> schreibt-Klasse auf.</span><span class="sxs-lookup"><span data-stu-id="abd09-190">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A> property determines the base name for the log files that the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class writes to.</span></span>  
  
 <span data-ttu-id="abd09-191">Die <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> Eigenschaft ermöglicht es den Namen der aktuellen vollständigen Protokolldatei.</span><span class="sxs-lookup"><span data-stu-id="abd09-191">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> property gives the current full log-file name.</span></span> <span data-ttu-id="abd09-192">Es wird gemäß den Pfad des Protokolls, den Basisnamen, das Datum und eine Zahl zur Unterscheidung von verschiedenen Versionen des Protokolls generiert.</span><span class="sxs-lookup"><span data-stu-id="abd09-192">It is generated according to the log path, the base name, the date, and a number to distinguish it from different versions of the log.</span></span> <span data-ttu-id="abd09-193">Neue Protokolldateien werden auf Basis bei Bedarf erstellt.</span><span class="sxs-lookup"><span data-stu-id="abd09-193">New log files are created on an as-needed basis.</span></span>  
  
 <span data-ttu-id="abd09-194">Die explizite Form der Name der Protokolldatei voll ist `path` \\ `baseName`[-`dateStamp`] [-`iteration`] .log, wobei</span><span class="sxs-lookup"><span data-stu-id="abd09-194">The explicit form of the full log file name is `path`\\`baseName`[-`dateStamp`][-`iteration`].log, where</span></span>  
  
-   <span data-ttu-id="abd09-195">Die `path` Teil richtet sich nach der <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A> Eigenschaft und, wenn dieser Eigenschaftswert, um festgelegt ist <xref:Microsoft.VisualBasic.Logging.LogFileLocation.Custom>die <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="abd09-195">The `path` part is determined by the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A> property and, if that property value is set to <xref:Microsoft.VisualBasic.Logging.LogFileLocation.Custom>, the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A> property.</span></span>  
  
-   <span data-ttu-id="abd09-196">Die `baseName` Teil ist der grundlegende Protokollnamen gemäß der <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="abd09-196">The `baseName` part is the fundamental log name, specified by the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A> property.</span></span>  
  
-   <span data-ttu-id="abd09-197">Die `dateStamp` Teil hat das Format "YYYY-MM-DD" und wird angezeigt, wenn <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> festgelegt ist, um <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily> oder <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly>.</span><span class="sxs-lookup"><span data-stu-id="abd09-197">The `dateStamp` part has the format "YYYY-MM-DD", and it is shown when <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> is set to <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily> or <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly>.</span></span>  
  
-   <span data-ttu-id="abd09-198">Ggf. mehr als eine Protokolldatei mit dem gleichen `baseName` und `dateStamp`, `iteration` Webpart, ein positiver `Integer`, wird dem Dateinamen hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="abd09-198">If more than one log file is needed with the same `baseName` and `dateStamp`, the `iteration` part, a positive `Integer`, is added to the file name.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location" />
        <altmember cref="F:Microsoft.VisualBasic.Logging.LogFileLocation.Custom" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="abd09-199">Schließt den der aktuellen Protokolldatei zugrunde liegenden Stream und gibt alle Ressourcen frei, die dem aktuellen Stream zugeordnet sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abd09-199">Closes the underlying stream for the current log file and releases any resources associated with the current stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abd09-200">Sie müssen nicht Aufrufen der <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close%2A> Methode explizit, da die <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> Klasse verwaltet den zugrunde liegenden Stream.</span><span class="sxs-lookup"><span data-stu-id="abd09-200">You do not need to call the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close%2A> method explicitly, because the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class manages the underlying steam.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomLocation">
      <MemberSignature Language="C#" Value="public string CustomLocation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CustomLocation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation" />
      <MemberSignature Language="VB.NET" Value="Public Property CustomLocation As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CustomLocation { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="abd09-201">Ruft das Verzeichnis der Protokolldateien ab oder legt dieses fest, wenn die <see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location" />-Eigenschaft auf <see cref="F:Microsoft.VisualBasic.Logging.LogFileLocation.Custom" /> festgelegt ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abd09-201">Gets or sets the log file directory when the <see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location" /> property is set to <see cref="F:Microsoft.VisualBasic.Logging.LogFileLocation.Custom" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="abd09-202">Ein <see langword="String" />, der den Namen des Protokolldateiverzeichnisses angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abd09-202">
              <see langword="String" />, which is the name of the log-file directory.</span>
          </span>
          <span data-ttu-id="abd09-203">Die Standardeinstellung für diese Eigenschaft ist das Anwendungsdatenverzeichnis des Benutzers.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abd09-203">The default setting for this property is the user's directory for application data.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abd09-204">Wenn die <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A> -Eigenschaft gesetzt ist, wird auch die <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A> Eigenschaft, um <xref:Microsoft.VisualBasic.Logging.LogFileLocation.Custom>.</span><span class="sxs-lookup"><span data-stu-id="abd09-204">When the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A> property is set, it also sets the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A> property to <xref:Microsoft.VisualBasic.Logging.LogFileLocation.Custom>.</span></span>  
  
 <span data-ttu-id="abd09-205">Die <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A> -Eigenschaft löst eine Ausnahme aus, wenn das Verzeichnis nicht aufgelöst werden kann.</span><span class="sxs-lookup"><span data-stu-id="abd09-205">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A> property will throw an exception if the directory cannot be resolved.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location" />
      </Docs>
    </Member>
    <Member MemberName="Delimiter">
      <MemberSignature Language="C#" Value="public string Delimiter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Delimiter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter" />
      <MemberSignature Language="VB.NET" Value="Public Property Delimiter As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Delimiter { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="abd09-206">Ruft das Trennzeichen ab, das zum Begrenzen der Felder in einer Protokollmeldung verwendet wird, oder legt dieses fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abd09-206">Gets or sets the delimiter used to delimit fields within a log message.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="abd09-207">Ein <see langword="String" />, der das für die Felder in einer Protokollmeldung verwendete Trennzeichen ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abd09-207">
              <see langword="String" />, which is the delimiter used for fields within a log message.</span>
          </span>
          <span data-ttu-id="abd09-208">Die Standardeinstellung für diese Eigenschaft ist das Tabstoppzeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abd09-208">The default setting for this property is the TAB character.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abd09-209">Die <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A> Eigenschaft können Sie das Standardtrennzeichen zu ändern.</span><span class="sxs-lookup"><span data-stu-id="abd09-209">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A> property allows you to change the default delimiter.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DiskSpaceExhaustedBehavior">
      <MemberSignature Language="C#" Value="public Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption DiskSpaceExhaustedBehavior { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption DiskSpaceExhaustedBehavior" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior" />
      <MemberSignature Language="VB.NET" Value="Public Property DiskSpaceExhaustedBehavior As DiskSpaceExhaustedOption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::VisualBasic::Logging::DiskSpaceExhaustedOption DiskSpaceExhaustedBehavior { Microsoft::VisualBasic::Logging::DiskSpaceExhaustedOption get(); void set(Microsoft::VisualBasic::Logging::DiskSpaceExhaustedOption value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="abd09-210">Bestimmt die Vorgehensweise, wenn beim Schreiben in die Protokolldatei weniger freier Speicherplatz vorhanden ist, als die <see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace" />-Eigenschaft angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abd09-210">Determines what to do when writing to the log file and there is less free disk space available than specified by the <see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="abd09-211">
            <see cref="T:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption" />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="abd09-211">
              <see cref="T:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption" />.</span>
          </span>
          <span data-ttu-id="abd09-212">Bestimmt die Vorgehensweise, wenn beim Schreiben in die Protokolldatei weniger freier Speicherplatz vorhanden ist, als die <see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace" />-Eigenschaft angibt, oder wenn die Größe der Protokolldatei den höchstzulässigen Wert der <see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize" />-Eigenschaft überschreitet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abd09-212">Determines what to do when attempting to write to the log file and there is less free disk space available than specified by the <see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace" /> property, or if the log file size is greater than what the <see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize" /> property allows.</span>
          </span>
          <span data-ttu-id="abd09-213">Der Standardwert ist <see cref="F:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption.DiscardMessages" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abd09-213">The default value is <see cref="F:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption.DiscardMessages" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abd09-214">Wenn die <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> -Eigenschaftensatz auf <xref:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption.DiscardMessages>, die protokollmeldungen werden automatisch verworfen werden, wenn nicht genügend reservierte Speicherplatz vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="abd09-214">When the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> property is set to <xref:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption.DiscardMessages>, the log messages are silently discarded if there is not enough reserved disk space.</span></span> <span data-ttu-id="abd09-215">Dies ist das Standardverhalten, und es wird verhindert, dass einfache Anwendungen fehlschlägt, wenn der Datenträger zu voll abruft.</span><span class="sxs-lookup"><span data-stu-id="abd09-215">This is the default behavior, and it prevents simple applications from failing if the disk gets too full.</span></span>  
  
 <span data-ttu-id="abd09-216">Robustere Anwendungen können festlegen, die <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> Eigenschaft <xref:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption.ThrowException>, und fügen `Try...Catch` -Blöcke für Code, der in das Protokoll schreibt.</span><span class="sxs-lookup"><span data-stu-id="abd09-216">More robust applications can set the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> property to <xref:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption.ThrowException>, and add `Try...Catch` blocks around all code that writes to the log.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="abd09-217">Bei <see langword="True" /> werden sowohl verwaltete als auch nicht verwaltete Ressourcen, bei <see langword="False" /> nur nicht verwaltete Ressourcen freigegeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abd09-217">
              <see langword="True" /> releases both managed and unmanaged resources; <see langword="False" /> releases only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="abd09-218">Schließt den zugrunde liegenden Stream und gibt optional die verwalteten Ressourcen frei.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abd09-218">Closes the underlying stream and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abd09-219">Wenn der `disposing`-Parameter `True` ist, gibt diese Methode sämtliche Ressourcen frei, die für verwaltete Objekte reserviert sind, auf die dieser <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> verweist.</span><span class="sxs-lookup"><span data-stu-id="abd09-219">When the `disposing` parameter is `True`, this method releases all resources held by any managed objects that this <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> references.</span></span> <span data-ttu-id="abd09-220">Diese Methode ruft die `Dispose`-Methode aller Objekte auf, auf die verwiesen wird.</span><span class="sxs-lookup"><span data-stu-id="abd09-220">This method invokes the `Dispose` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="abd09-221">
            <para>
              <see langword="Dispose" /> kann von anderen Objekten mehrmals aufgerufen werden. Beim Überschreiben von <see langword="Dispose" /> müssen Sie darauf achten, nicht auf Objekte zu verweisen, die durch einen früheren Aufruf von <see langword="Dispose" /> freigegeben wurden.  Diese Methode ruft die <see langword="Dispose" /> Methode der Basisklasse, <see langword="Dispose" />.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="abd09-221">
              <para>
                <see langword="Dispose" /> can be called multiple times by other objects. When overriding <see langword="Dispose" />, be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.  This method calls the <see langword="Dispose" /> method of the base class, <see langword="Dispose" />.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Encoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding Encoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding Encoding" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding" />
      <MemberSignature Language="VB.NET" Value="Public Property Encoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Encoding ^ Encoding { System::Text::Encoding ^ get(); void set(System::Text::Encoding ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="abd09-222">Ruft die Codierung ab, die beim Erstellen einer neuen Protokolldatei verwendet werden soll, oder legt diese fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abd09-222">Gets or sets the encoding to use when creating a new log file.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="abd09-223">
            <see cref="T:System.Text.Encoding" />, die Codierung, die beim Erstellen einer neuen Protokolldatei verwendet werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abd09-223">
              <see cref="T:System.Text.Encoding" />, which is the encoding to use when creating a new log file.</span>
          </span>
          <span data-ttu-id="abd09-224">Der Standardwert dieser Eigenschaft ist <see cref="T:System.Text.UTF8Encoding" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abd09-224">The default value of this property is <see cref="T:System.Text.UTF8Encoding" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abd09-225">Beim Anfügen von Text an eine vorhandene Protokolldatei die Codierung für diese Datei anstatt durch die angegebene Codierung verwendet die <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="abd09-225">When appending text to an existing log file, the encoding for that file is used instead of the encoding specified by the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.Encoding" />
        <altmember cref="T:System.Text.UTF8Encoding" />
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="abd09-226">Entleert den zugrunde liegenden Stream, der in die aktuelle Protokolldatei schreibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abd09-226">Flushes the underlying stream that writes to the current log file.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abd09-227">Verwenden der <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush%2A> Methode, um alle gepufferten Daten in der aktuellen Protokolldatei zu schreiben.</span><span class="sxs-lookup"><span data-stu-id="abd09-227">Use the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush%2A> method to write all buffered data to the current log file.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FullLogFileName">
      <MemberSignature Language="C#" Value="public string FullLogFileName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FullLogFileName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FullLogFileName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FullLogFileName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="abd09-228">Ruft den vollständigen Namen der aktuellen Protokolldatei ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abd09-228">Gets the current full log-file name.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="abd09-229">Ein <see langword="String" />, der vollständige Name der aktuellen Protokolldatei.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abd09-229">
              <see langword="String" />, which is the current full log-file name.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abd09-230">Die <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> Eigenschaft ermöglicht es den Namen der aktuellen vollständigen Protokolldatei.</span><span class="sxs-lookup"><span data-stu-id="abd09-230">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> property gives the current full log-file name.</span></span> <span data-ttu-id="abd09-231">Es wird gemäß den Pfad des Protokolls, den Basisnamen, das Datum und eine Zahl zur Unterscheidung von verschiedenen Versionen des Protokolls generiert.</span><span class="sxs-lookup"><span data-stu-id="abd09-231">It is generated according to the log path, the base name, the date, and a number to distinguish it from different versions of the log.</span></span> <span data-ttu-id="abd09-232">Neue Protokolldateien werden auf Basis bei Bedarf erstellt.</span><span class="sxs-lookup"><span data-stu-id="abd09-232">New log files are created on an as-needed basis.</span></span>  
  
 <span data-ttu-id="abd09-233">Die explizite Form der der vollständige Dateiname des Protokolls wird `path` \\ `baseName`[-`dateStamp`] [-`iteration`] .log, wobei:</span><span class="sxs-lookup"><span data-stu-id="abd09-233">The explicit form of the full log-file name is `path`\\`baseName`[-`dateStamp`][-`iteration`].log, where:</span></span>  
  
-   <span data-ttu-id="abd09-234">Die `path` Teil richtet sich nach der <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A> Eigenschaft und, wenn dieser Eigenschaftswert, um festgelegt ist <xref:Microsoft.VisualBasic.Logging.LogFileLocation.Custom>die <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="abd09-234">The `path` part is determined by the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A> property and, if that property value is set to <xref:Microsoft.VisualBasic.Logging.LogFileLocation.Custom>, the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A> property.</span></span>  
  
-   <span data-ttu-id="abd09-235">Die `baseName` Teil ist der grundlegende Protokollnamen gemäß der <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="abd09-235">The `baseName` part is the fundamental log name, specified by the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A> property.</span></span>  
  
-   <span data-ttu-id="abd09-236">Die `dateStamp` Teil hat das Format JJJJ-MM-TT und wird angezeigt, wenn <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> ist <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily> oder <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly>.</span><span class="sxs-lookup"><span data-stu-id="abd09-236">The `dateStamp` part has the format YYYY-MM-DD, and it is shown when <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> is <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily> or <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly>.</span></span>  
  
-   <span data-ttu-id="abd09-237">Ggf. mehr als eine Protokolldatei mit dem gleichen `baseName` und `dateStamp`, `iteration` Webpart, ein positiver `Integer`, wird dem Dateinamen hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="abd09-237">If more than one log file is needed with the same `baseName` and `dateStamp`, the `iteration` part, a positive `Integer`, is added to the file name.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location" />
        <altmember cref="F:Microsoft.VisualBasic.Logging.LogFileLocation.Custom" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule" />
      </Docs>
    </Member>
    <Member MemberName="GetSupportedAttributes">
      <MemberSignature Language="C#" Value="protected override string[] GetSupportedAttributes ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance string[] GetSupportedAttributes() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.GetSupportedAttributes" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetSupportedAttributes () As String()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override cli::array &lt;System::String ^&gt; ^ GetSupportedAttributes();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="abd09-238">Ruft die vom Ablaufverfolgungslistener unterstützten benutzerdefinierten XML-Konfigurationsattribute ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abd09-238">Gets the custom XML configuration attributes supported by the trace listener.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="abd09-239">Ein <see langword="String" />-Array, das die von diesem Listener erkannten XML-Konfigurationsattribute enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abd09-239">
              <see langword="String" /> array containing the XML configuration attributes recognized by this listener.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abd09-240">Die benutzerdefinierten Attribute für die <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> können verwendet werden, in der XML-Konfigurationsdatei zum Steuern des Verhaltens einer Instanz von der <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> Klasse.</span><span class="sxs-lookup"><span data-stu-id="abd09-240">The custom attributes for the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> can be used in the XML configuration file for controlling the behavior of an instance of the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class.</span></span> <span data-ttu-id="abd09-241">Andere Attribute verwenden, führt dazu, dass eine Konfigurationsausnahme.</span><span class="sxs-lookup"><span data-stu-id="abd09-241">Using any other attribute causes a configuration exception.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Diagnostics.TraceSource.GetSupportedAttributes" />
      </Docs>
    </Member>
    <Member MemberName="IncludeHostName">
      <MemberSignature Language="C#" Value="public bool IncludeHostName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeHostName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName" />
      <MemberSignature Language="VB.NET" Value="Public Property IncludeHostName As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IncludeHostName { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="abd09-242">Gibt an, ob der Hostname des protokollierenden Computers in die Ausgabe aufgenommen werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abd09-242">Indicates whether or not the host name of the logging machine should be included in the output.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="abd09-243">
            <see langword="Boolean" />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="abd09-243">
              <see langword="Boolean" />.</span>
          </span>
          <span data-ttu-id="abd09-244">Verwenden Sie <see langword="True" />, um den Hostbezeichner aufzunehmen, andernfalls <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abd09-244">Use <see langword="True" /> if the host identifier should be included; otherwise use <see langword="False" />.</span>
          </span>
          <span data-ttu-id="abd09-245">Der Standardwert ist <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abd09-245">The default value is <see langword="False" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abd09-246">Verwenden Sie die Eigenschaft so konfigurieren Sie das Verhalten der <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A> und <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent%2A> Methoden.</span><span class="sxs-lookup"><span data-stu-id="abd09-246">Use the property to configure the behavior of the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A> and <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Location">
      <MemberSignature Language="C#" Value="public Microsoft.VisualBasic.Logging.LogFileLocation Location { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.VisualBasic.Logging.LogFileLocation Location" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location" />
      <MemberSignature Language="VB.NET" Value="Public Property Location As LogFileLocation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::VisualBasic::Logging::LogFileLocation Location { Microsoft::VisualBasic::Logging::LogFileLocation get(); void set(Microsoft::VisualBasic::Logging::LogFileLocation value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.Logging.LogFileLocation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="abd09-247">Ruft den Speicherort für die Protokolldateien ab, oder legt diesen fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abd09-247">Gets or sets location for the log files.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="abd09-248">
            <see cref="T:Microsoft.VisualBasic.Logging.LogFileLocation" />, gibt den Speicherort für die Protokolldatei an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abd09-248">
              <see cref="T:Microsoft.VisualBasic.Logging.LogFileLocation" />, which is the location for the log file.</span>
          </span>
          <span data-ttu-id="abd09-249">Der Standardwert ist <see cref="F:Microsoft.VisualBasic.Logging.LogFileLocation.LocalUserApplicationDirectory" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abd09-249">The default value is <see cref="F:Microsoft.VisualBasic.Logging.LogFileLocation.LocalUserApplicationDirectory" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abd09-250">Verwenden der <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A> -Eigenschaft zum Festlegen des Pfads des Protokolls auf einen der vordefinierten Pfade bestimmt, indem die <xref:Microsoft.VisualBasic.Logging.LogFileLocation> Enumerationswerte.</span><span class="sxs-lookup"><span data-stu-id="abd09-250">Use the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A> property to set the log path to one of the predefined paths, determined by the <xref:Microsoft.VisualBasic.Logging.LogFileLocation> enumeration values.</span></span>  
  
|<span data-ttu-id="abd09-251">**Location-Wert**</span><span class="sxs-lookup"><span data-stu-id="abd09-251">**Location value**</span></span>|<span data-ttu-id="abd09-252">**Pfad**</span><span class="sxs-lookup"><span data-stu-id="abd09-252">**Path**</span></span>|  
|------------------------|--------------|  
|<xref:Microsoft.VisualBasic.Logging.LogFileLocation.CommonApplicationDirectory>|<span data-ttu-id="abd09-253">Der Pfad für die Anwendungsdaten, die für alle Benutzer, mit dem Format freigegeben werden:</span><span class="sxs-lookup"><span data-stu-id="abd09-253">The path for the application data that is shared among all users, with the format:</span></span><br /><br /> `BasePath`\\`CompanyName`\\`ProductName`\\`ProductVersion`<br /><br /> <span data-ttu-id="abd09-254">Ein häufig angegebener Wert für `BasePath` ist:</span><span class="sxs-lookup"><span data-stu-id="abd09-254">A typical value for `BasePath` is:</span></span><br /><br /> <span data-ttu-id="abd09-255">C:\Documents and Einstellungen\All Einstellungen\Alle Daten</span><span class="sxs-lookup"><span data-stu-id="abd09-255">C:\Documents and Settings\All Users\Application Data</span></span><br /><br /> <span data-ttu-id="abd09-256">Die Werte der `CompanyName`, `ProductName`, und `ProductVersion` stammen aus der Assembly.</span><span class="sxs-lookup"><span data-stu-id="abd09-256">The values of `CompanyName`, `ProductName`, and `ProductVersion` come from the assembly.</span></span>|  
|<xref:Microsoft.VisualBasic.Logging.LogFileLocation.ExecutableDirectory>|<span data-ttu-id="abd09-257">Der Pfad für die ausführbare Datei, die die Anwendung gestartet hat.</span><span class="sxs-lookup"><span data-stu-id="abd09-257">The path for the executable file that started the application.</span></span>|  
|<xref:Microsoft.VisualBasic.Logging.LogFileLocation.LocalUserApplicationDirectory>|<span data-ttu-id="abd09-258">Der Pfad für die Anwendungsdaten eines Benutzers, mit dem Format:</span><span class="sxs-lookup"><span data-stu-id="abd09-258">The path for the application data of a user, with the format:</span></span><br /><br /> `BasePath`\\`CompanyName`\\`ProductName`\\`ProductVersion`<br /><br /> <span data-ttu-id="abd09-259">Ein häufig angegebener Wert für `BasePath` ist:</span><span class="sxs-lookup"><span data-stu-id="abd09-259">A typical value for `BasePath` is:</span></span><br /><br /> <span data-ttu-id="abd09-260">C:\Dokumente und Einstellungen\\`username`\Anwendungsdaten</span><span class="sxs-lookup"><span data-stu-id="abd09-260">C:\Documents and Settings\\`username`\Application Data</span></span><br /><br /> <span data-ttu-id="abd09-261">Die Werte der `CompanyName`, `ProductName`, und `ProductVersion` stammen aus der Assembly.</span><span class="sxs-lookup"><span data-stu-id="abd09-261">The values of `CompanyName`, `ProductName`, and `ProductVersion` come form the assembly.</span></span>|  
|<xref:Microsoft.VisualBasic.Logging.LogFileLocation.TempDirectory>|<span data-ttu-id="abd09-262">Der Pfad des temporären Ordners des aktuellen Systems.</span><span class="sxs-lookup"><span data-stu-id="abd09-262">The path of the current system's temporary folder.</span></span>|  
|<xref:Microsoft.VisualBasic.Logging.LogFileLocation.Custom>|<span data-ttu-id="abd09-263">Wenn die Zeichenfolge durch angegebene <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A> ist nicht leer ist, und klicken Sie dann als Pfad verwenden; verwenden Sie andernfalls den Pfad für die Anwendungsdaten eines Benutzers.</span><span class="sxs-lookup"><span data-stu-id="abd09-263">If the string specified by <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A> is not empty, then use it as the path; otherwise use the path for the application data of a user.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Logging.LogFileLocation" />
      </Docs>
    </Member>
    <Member MemberName="LogFileCreationSchedule">
      <MemberSignature Language="C#" Value="public Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption LogFileCreationSchedule { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption LogFileCreationSchedule" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule" />
      <MemberSignature Language="VB.NET" Value="Public Property LogFileCreationSchedule As LogFileCreationScheduleOption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::VisualBasic::Logging::LogFileCreationScheduleOption LogFileCreationSchedule { Microsoft::VisualBasic::Logging::LogFileCreationScheduleOption get(); void set(Microsoft::VisualBasic::Logging::LogFileCreationScheduleOption value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="abd09-264">Bestimmt das Datum, das in die Namen der Protokolldateien eingefügt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abd09-264">Determines which date to include in the names of the log files.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="abd09-265">
            <see cref="T:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption" />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="abd09-265">
              <see cref="T:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption" />.</span>
          </span>
          <span data-ttu-id="abd09-266">Dies gibt das Datum an, das in die Namen der Protokolldateien eingefügt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abd09-266">This indicates which date to include in the log-file names.</span>
          </span>
          <span data-ttu-id="abd09-267">Der Standardwert ist <see cref="F:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.None" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abd09-267">The default value is <see cref="F:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.None" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abd09-268">Zuweisen eines der <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption> -Enumerationswerte zum die <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> Eigenschaft, um das Datum, das die Namen der Protokolldateien einschließt anzugeben.</span><span class="sxs-lookup"><span data-stu-id="abd09-268">Assign one of the <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption> enumeration values to the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> property to specify which date to include in the names of the log files.</span></span>  
  
 <span data-ttu-id="abd09-269">Das Format des Datums ist JJJJ-MM-TT.</span><span class="sxs-lookup"><span data-stu-id="abd09-269">The format of the date is YYYY-MM-DD.</span></span> <span data-ttu-id="abd09-270">Weitere Informationen zum Format der Name der Protokolldatei finden Sie unter <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>.</span><span class="sxs-lookup"><span data-stu-id="abd09-270">For more information on the format of the log file name, see <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>.</span></span>  
  
|<span data-ttu-id="abd09-271">**LogFileCreationSchedule-Wert**</span><span class="sxs-lookup"><span data-stu-id="abd09-271">**LogFileCreationSchedule value**</span></span>|<span data-ttu-id="abd09-272">**Das Datum in den Protokolldateinamen**</span><span class="sxs-lookup"><span data-stu-id="abd09-272">**Date in the log file name**</span></span>|  
|---------------------------------------|-----------------------------------|  
|<xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily>|<span data-ttu-id="abd09-273">Schließt das aktuelle Datum in den Namen der Protokolldatei ein.</span><span class="sxs-lookup"><span data-stu-id="abd09-273">Include the current date in the log file name.</span></span>|  
|<xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.None>|<span data-ttu-id="abd09-274">Schließt kein Datum in den Namen der Protokolldatei ein.</span><span class="sxs-lookup"><span data-stu-id="abd09-274">Do not include the date in the log file name.</span></span>|  
|<xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly>|<span data-ttu-id="abd09-275">Schließt den ersten Tag der laufenden Woche in den Namen der Protokolldatei ein.</span><span class="sxs-lookup"><span data-stu-id="abd09-275">Include the first day of the current week in the log file name.</span></span><br /><br /> <span data-ttu-id="abd09-276">Die Woche beginnt am Samstag.</span><span class="sxs-lookup"><span data-stu-id="abd09-276">The week starts on Saturday.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName" />
      </Docs>
    </Member>
    <Member MemberName="MaxFileSize">
      <MemberSignature Language="C#" Value="public long MaxFileSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaxFileSize" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxFileSize As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MaxFileSize { long get(); void set(long value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="abd09-277">Ruft die höchstzulässige Größe der Protokolldatei (in Bytes) ab oder legt diese fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abd09-277">Gets or sets the maximum allowed size of the log file, in bytes.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="abd09-278">
            <see langword="Long" />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="abd09-278">
              <see langword="Long" />.</span>
          </span>
          <span data-ttu-id="abd09-279">Dies ist die höchstzulässige Protokolldateigröße, in Bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abd09-279">This is the maximum allowed log-file size, in bytes.</span>
          </span>
          <span data-ttu-id="abd09-280">Der Standardwert ist 5000000.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abd09-280">The default value is 5000000.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abd09-281">Verwenden Sie diese Eigenschaft, um sicherzustellen, dass die Protokolldateien nicht zu groß werden.</span><span class="sxs-lookup"><span data-stu-id="abd09-281">Use this property to make sure that the log files do not grow too large.</span></span>  
  
 <span data-ttu-id="abd09-282">Wenn die Größe (in Byte) Protokolldatei ist größer als der Wert dieser Eigenschaft bei der <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> -Klasse versucht, eine Meldung im Ereignisprotokoll zu schreiben, wird die Nachricht verworfen, und der Fehler ist, ob eine automatische oder eine Ausnahme wird ausgelöst, abhängig vom Wert der <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A>Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="abd09-282">If the log file size (in bytes) is greater than the value of this property, then when the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class attempts to write a message to the log, the message is discarded and the failure is either silent or an exception is thrown depending on the value of the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> property.</span></span> <span data-ttu-id="abd09-283">Hingegen ist die Nachricht in das Protokoll geschrieben, wenn die Menge des freien Speicherplatzes (in Bytes) ist kleiner als <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A>.</span><span class="sxs-lookup"><span data-stu-id="abd09-283">Otherwise, the message is written to the log, if the amount of free disk space (in bytes) is less than <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="abd09-284">Tritt ein, wenn die Eigenschaft wird auf einen Wert unter 1000 festgelegt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abd09-284">When this property is set to a value less than 1000.</span>
          </span>
        </exception>
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName" />
      </Docs>
    </Member>
    <Member MemberName="ReserveDiskSpace">
      <MemberSignature Language="C#" Value="public long ReserveDiskSpace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 ReserveDiskSpace" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace" />
      <MemberSignature Language="VB.NET" Value="Public Property ReserveDiskSpace As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long ReserveDiskSpace { long get(); void set(long value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="abd09-285">Ruft den freien Speicherplatz in Bytes ab, der benötigt wird, um Meldungen in die Protokolldatei zu schreiben, oder legt diesen fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abd09-285">Gets or sets the amount of free disk space, in bytes, necessary before messages can be written to the log file.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="abd09-286">
            <see langword="Long" />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="abd09-286">
              <see langword="Long" />.</span>
          </span>
          <span data-ttu-id="abd09-287">Dies ist die erforderliche Menge an freiem Speicherplatz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abd09-287">This is the amount of free disk space necessary.</span>
          </span>
          <span data-ttu-id="abd09-288">Der Standardwert ist 10000000.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abd09-288">The default value is 10000000.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abd09-289">Verwenden Sie diese Eigenschaft, um sicherzustellen, dass die Protokolldateien den Datenträger nicht vollständig aufgefüllt.</span><span class="sxs-lookup"><span data-stu-id="abd09-289">Use this property to make sure that the log files do not completely fill the disk.</span></span>  
  
 <span data-ttu-id="abd09-290">Wenn Speicherplatz, der den Umfang des freien Speicherplatzes (in Byte) ist kleiner als der Wert dieser Eigenschaft, wenn die <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> -Klasse versucht, eine Meldung im Ereignisprotokoll zu schreiben, wird die Nachricht verworfen, und der Fehler ist, ob eine automatische oder eine Ausnahme wird ausgelöst, abhängig vom Wert der < C2 > <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A>  Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="abd09-290">If the amount of free disk space (in bytes) is less than the value of this property, then when the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class attempts to write a message to the log, the message is discarded and the failure is either silent or an exception is thrown depending on the value of the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> property.</span></span> <span data-ttu-id="abd09-291">Andernfalls wird die Nachricht in das Protokoll geschrieben, ist die Größe der Protokolldatei (in Bytes) größer als <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A>.</span><span class="sxs-lookup"><span data-stu-id="abd09-291">Otherwise, the message is written to the log, if the log file size (in bytes) is greater than <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="abd09-292">Tritt ein, wenn die Eigenschaft wird auf einen Wert unter 0 festgelegt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abd09-292">When this property is set to a value less than 0.</span>
          </span>
        </exception>
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior" />
        <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="TraceData">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="abd09-293">Schreibt Ablaufverfolgungsdaten in die Ausgabedatei.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abd09-293">Writes trace data to the output file.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abd09-294"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A> Methoden dürfen nicht von Anwendungscode aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="abd09-294"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A> methods are not intended to be called by application code.</span></span> <span data-ttu-id="abd09-295">Diese Methoden werden aufgerufen, von einem Mitglied der <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, und <xref:System.Diagnostics.TraceSource> Klassen zum Schreiben von auszugebenden Ablaufverfolgungsdaten.</span><span class="sxs-lookup"><span data-stu-id="abd09-295">These methods are called by members of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data to output.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="TraceData">
      <MemberSignature Language="C#" Value="public override void TraceData (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceData(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub TraceData (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceData(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, System::Object ^ data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="eventCache">
          <span data-ttu-id="abd09-296">Ein <see cref="T:System.Diagnostics.TraceEventCache" />-Objekt mit der aktuellen Prozess-ID, Thread-ID und den aktuellen Stapelüberwachungsinformationen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abd09-296">A <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information.</span>
          </span>
        </param>
        <param name="source">
          <span data-ttu-id="abd09-297">Der Name der Ablaufverfolgungsquelle, die diese Methode aufgerufen hat.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abd09-297">A name of the trace source that invoked this method.</span>
          </span>
        </param>
        <param name="eventType">
          <span data-ttu-id="abd09-298">Einer der <see cref="T:System.Diagnostics.TraceEventType" />-Enumerationswerte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abd09-298">One of the <see cref="T:System.Diagnostics.TraceEventType" /> enumeration values.</span>
          </span>
        </param>
        <param name="id">
          <span data-ttu-id="abd09-299">Ein numerischer Bezeichner für das Ereignis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abd09-299">A numeric identifier for the event.</span>
          </span>
        </param>
        <param name="data">
          <span data-ttu-id="abd09-300">Die auszugebenden Ablaufverfolgungsdaten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abd09-300">The trace data to emit.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="abd09-301">Schreibt Ablaufverfolgungsinformationen, ein Datenobjekt und Ereignisinformationen in die Ausgabedatei oder den Stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abd09-301">Writes trace information, a data object, and event information to the output file or stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abd09-302">Diese Methode:</span><span class="sxs-lookup"><span data-stu-id="abd09-302">This method:</span></span>  
  
1.  <span data-ttu-id="abd09-303">Formatiert die Daten und dem angegebenen Kontext Informationen für die Ausgabe an.</span><span class="sxs-lookup"><span data-stu-id="abd09-303">Formats the data and context information for output.</span></span>  
  
2.  <span data-ttu-id="abd09-304">Eine neue Protokolldatei erstellt, bei Bedarf.</span><span class="sxs-lookup"><span data-stu-id="abd09-304">Creates a new log file, if necessary.</span></span>  
  
3.  <span data-ttu-id="abd09-305">Schreibt die Informationen in der Protokolldatei gespeichert.</span><span class="sxs-lookup"><span data-stu-id="abd09-305">Writes the information to the log file.</span></span>  
  
 <span data-ttu-id="abd09-306">Weitere Informationen zum Erstellen von neuen Protokolldateien finden Sie unter <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>.</span><span class="sxs-lookup"><span data-stu-id="abd09-306">For more information on creating new log files, see <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>.</span></span>  
  
 <span data-ttu-id="abd09-307">In der folgenden Tabelle sind die Ausgabefelder "in der Reihenfolge aufgeführt.</span><span class="sxs-lookup"><span data-stu-id="abd09-307">The following table lists the output fields in the order they appear.</span></span> <span data-ttu-id="abd09-308">Die Felder werden durch die Zeichenfolge begrenzt, die die <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A> Eigenschaft gibt an, und gefolgt von einem Zeilenabschluss.</span><span class="sxs-lookup"><span data-stu-id="abd09-308">The fields are delimited by the string that the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A> property specifies, and are followed by a line terminator.</span></span>  
  
|<span data-ttu-id="abd09-309">**Feld**</span><span class="sxs-lookup"><span data-stu-id="abd09-309">**Field**</span></span>|<span data-ttu-id="abd09-310">**Ausgabe-Bedingung**</span><span class="sxs-lookup"><span data-stu-id="abd09-310">**Output condition**</span></span>|<span data-ttu-id="abd09-311">**Beschreibung**</span><span class="sxs-lookup"><span data-stu-id="abd09-311">**Description**</span></span>|  
|---------------|--------------------------|---------------------|  
|`source`|<span data-ttu-id="abd09-312">Immer</span><span class="sxs-lookup"><span data-stu-id="abd09-312">Always</span></span>|<span data-ttu-id="abd09-313">Der Wert von `name`.</span><span class="sxs-lookup"><span data-stu-id="abd09-313">The value of `name`.</span></span>|  
|`severity`|<span data-ttu-id="abd09-314">Immer</span><span class="sxs-lookup"><span data-stu-id="abd09-314">Always</span></span>|<span data-ttu-id="abd09-315">Die Enumeration Wertnamen des `eventType`.</span><span class="sxs-lookup"><span data-stu-id="abd09-315">The enumeration-value name of `eventType`.</span></span>|  
|`id`|<span data-ttu-id="abd09-316">Immer</span><span class="sxs-lookup"><span data-stu-id="abd09-316">Always</span></span>|<span data-ttu-id="abd09-317">Eine Zeichenfolgendarstellung von `id`.</span><span class="sxs-lookup"><span data-stu-id="abd09-317">The string representation of `id`.</span></span>|  
|`message`|<span data-ttu-id="abd09-318">Immer</span><span class="sxs-lookup"><span data-stu-id="abd09-318">Always</span></span>|<span data-ttu-id="abd09-319">Eine Zeichenfolgendarstellung von `data`.</span><span class="sxs-lookup"><span data-stu-id="abd09-319">The string representation of `data`.</span></span>|  
|`callStack`|<span data-ttu-id="abd09-320">Wenn die <xref:System.Diagnostics.TraceOptions.Callstack> Flag wird festgelegt, der <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="abd09-320">When the <xref:System.Diagnostics.TraceOptions.Callstack> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="abd09-321">Die <xref:System.Diagnostics.TraceEventCache.Callstack%2A> Eigenschaft `eventCache`.</span><span class="sxs-lookup"><span data-stu-id="abd09-321">The <xref:System.Diagnostics.TraceEventCache.Callstack%2A> property of `eventCache`.</span></span>|  
|`CorrelationID`|<span data-ttu-id="abd09-322">Wenn die <xref:System.Diagnostics.TraceOptions.LogicalOperationStack> Flag wird festgelegt, der <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="abd09-322">When the <xref:System.Diagnostics.TraceOptions.LogicalOperationStack> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="abd09-323">Die <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> Eigenschaft `eventCache`.</span><span class="sxs-lookup"><span data-stu-id="abd09-323">The <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> property of `eventCache`.</span></span>|  
|`DateTime`|<span data-ttu-id="abd09-324">Wenn die <xref:System.Diagnostics.TraceOptions.DateTime> Flag wird festgelegt, der <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="abd09-324">When the <xref:System.Diagnostics.TraceOptions.DateTime> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="abd09-325">Die Zeichenfolgendarstellung der <xref:System.Diagnostics.TraceEventCache.DateTime%2A> Eigenschaft `eventCache`.</span><span class="sxs-lookup"><span data-stu-id="abd09-325">The string representation of the <xref:System.Diagnostics.TraceEventCache.DateTime%2A> property of `eventCache`.</span></span> <span data-ttu-id="abd09-326">Die invariante Kultur wird für die zeichenfolgenkonvertierung verwendet.</span><span class="sxs-lookup"><span data-stu-id="abd09-326">The invariant culture is used for the string conversion.</span></span>|  
|`ProcessID`|<span data-ttu-id="abd09-327">Wenn die <xref:System.Diagnostics.TraceOptions.ProcessId> Flag wird festgelegt, der <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="abd09-327">When the <xref:System.Diagnostics.TraceOptions.ProcessId> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="abd09-328">Die Zeichenfolgendarstellung der <xref:System.Diagnostics.TraceEventCache.ProcessId%2A> Eigenschaft `eventCache`.</span><span class="sxs-lookup"><span data-stu-id="abd09-328">The string representation of the <xref:System.Diagnostics.TraceEventCache.ProcessId%2A> property of `eventCache`.</span></span> <span data-ttu-id="abd09-329">Die invariante Kultur wird für die zeichenfolgenkonvertierung verwendet.</span><span class="sxs-lookup"><span data-stu-id="abd09-329">The invariant culture is used for the string conversion.</span></span>|  
|`ThreadID`|<span data-ttu-id="abd09-330">Wenn die <xref:System.Diagnostics.TraceOptions.ThreadId> Flag wird festgelegt, der <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="abd09-330">When the <xref:System.Diagnostics.TraceOptions.ThreadId> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="abd09-331">Die <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> Eigenschaft `eventCache`.</span><span class="sxs-lookup"><span data-stu-id="abd09-331">The <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> property of `eventCache`.</span></span>|  
|`Timestamp`|<span data-ttu-id="abd09-332">Wenn die <xref:System.Diagnostics.TraceOptions.Timestamp> Flag wird festgelegt, der <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="abd09-332">When the <xref:System.Diagnostics.TraceOptions.Timestamp> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="abd09-333">Die Zeichenfolgendarstellung der <xref:System.Diagnostics.TraceEventCache.Timestamp%2A> Eigenschaft `eventCache`.</span><span class="sxs-lookup"><span data-stu-id="abd09-333">The string representation of the <xref:System.Diagnostics.TraceEventCache.Timestamp%2A> property of `eventCache`.</span></span> <span data-ttu-id="abd09-334">Die invariante Kultur wird für die zeichenfolgenkonvertierung verwendet.</span><span class="sxs-lookup"><span data-stu-id="abd09-334">The invariant culture is used for the string conversion.</span></span>|  
|`HostName`|<span data-ttu-id="abd09-335">Wenn die <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A> Eigenschaft ist `True`.</span><span class="sxs-lookup"><span data-stu-id="abd09-335">When the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A> property is `True`.</span></span>|<span data-ttu-id="abd09-336">Der Name des Computers.</span><span class="sxs-lookup"><span data-stu-id="abd09-336">The name of the computer.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName" />
        <altmember cref="P:System.Diagnostics.TraceListener.TraceOutputOptions" />
        <altmember cref="T:System.Diagnostics.TraceEventCache" />
        <altmember cref="T:System.Diagnostics.TraceEventType" />
      </Docs>
    </Member>
    <Member MemberName="TraceData">
      <MemberSignature Language="C#" Value="public override void TraceData (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, params object[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceData(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, object[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub TraceData (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, ParamArray data As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceData(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, ... cli::array &lt;System::Object ^&gt; ^ data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="data" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="eventCache">
          <span data-ttu-id="abd09-337">Ein <see cref="T:System.Diagnostics.TraceEventCache" />-Objekt mit der aktuellen Prozess-ID, Thread-ID und den aktuellen Stapelüberwachungsinformationen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abd09-337">A <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information.</span>
          </span>
        </param>
        <param name="source">
          <span data-ttu-id="abd09-338">Der Name der Ablaufverfolgungsquelle, die diese Methode aufgerufen hat.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abd09-338">The name of the trace source that invoked this method.</span>
          </span>
        </param>
        <param name="eventType">
          <span data-ttu-id="abd09-339">Einer der <see cref="T:System.Diagnostics.TraceEventType" />-Enumerationswerte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abd09-339">One of the <see cref="T:System.Diagnostics.TraceEventType" /> enumeration values.</span>
          </span>
        </param>
        <param name="id">
          <span data-ttu-id="abd09-340">Ein numerischer Bezeichner für das Ereignis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abd09-340">A numeric identifier for the event.</span>
          </span>
        </param>
        <param name="data">
          <span data-ttu-id="abd09-341">Ein Objektarray, das in Form von Daten ausgegeben werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abd09-341">An array of objects to emit as data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="abd09-342">Schreibt Ablaufverfolgungsinformationen, ein Array von Datenobjekten und Ereignisinformationen in die Ausgabedatei oder den Stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abd09-342">Writes trace information, an array of data objects, and event information to the output file or stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abd09-343">Diese Methode:</span><span class="sxs-lookup"><span data-stu-id="abd09-343">This method:</span></span>  
  
1.  <span data-ttu-id="abd09-344">Formatiert die Daten und dem angegebenen Kontext Informationen für die Ausgabe,</span><span class="sxs-lookup"><span data-stu-id="abd09-344">Formats the data and context information for output,</span></span>  
  
2.  <span data-ttu-id="abd09-345">Eine neue Protokolldatei erstellt, bei Bedarf,</span><span class="sxs-lookup"><span data-stu-id="abd09-345">Creates a new log file, if necessary,</span></span>  
  
3.  <span data-ttu-id="abd09-346">Schreibt die Informationen in der Protokolldatei gespeichert.</span><span class="sxs-lookup"><span data-stu-id="abd09-346">Writes the information to the log file.</span></span>  
  
 <span data-ttu-id="abd09-347">Weitere Informationen zum Erstellen von neuen Protokolldateien finden Sie unter <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>.</span><span class="sxs-lookup"><span data-stu-id="abd09-347">For more information on creating new log files, see <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>.</span></span>  
  
 <span data-ttu-id="abd09-348">In dieser Tabelle sind die Ausgabefelder "in der Reihenfolge aufgeführt.</span><span class="sxs-lookup"><span data-stu-id="abd09-348">This table lists the output fields in the order they appear.</span></span> <span data-ttu-id="abd09-349">Die Felder werden durch die Zeichenfolge begrenzt, die die <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A> Eigenschaft gibt an, und gefolgt von einem Zeilenabschluss.</span><span class="sxs-lookup"><span data-stu-id="abd09-349">The fields are delimited by the string that the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A> property specifies, and are followed by a line terminator.</span></span>  
  
|<span data-ttu-id="abd09-350">**Feld**</span><span class="sxs-lookup"><span data-stu-id="abd09-350">**Field**</span></span>|<span data-ttu-id="abd09-351">**Ausgabe-Bedingung**</span><span class="sxs-lookup"><span data-stu-id="abd09-351">**Output condition**</span></span>|<span data-ttu-id="abd09-352">**Beschreibung**</span><span class="sxs-lookup"><span data-stu-id="abd09-352">**Description**</span></span>|  
|---------------|--------------------------|---------------------|  
|`source`|<span data-ttu-id="abd09-353">Immer</span><span class="sxs-lookup"><span data-stu-id="abd09-353">Always</span></span>|<span data-ttu-id="abd09-354">Der Wert von `name`.</span><span class="sxs-lookup"><span data-stu-id="abd09-354">The value of `name`.</span></span>|  
|`severity`|<span data-ttu-id="abd09-355">Immer</span><span class="sxs-lookup"><span data-stu-id="abd09-355">Always</span></span>|<span data-ttu-id="abd09-356">Die Enumeration Wertnamen des `eventType`.</span><span class="sxs-lookup"><span data-stu-id="abd09-356">The enumeration-value name of `eventType`.</span></span>|  
|`id`|<span data-ttu-id="abd09-357">Immer</span><span class="sxs-lookup"><span data-stu-id="abd09-357">Always</span></span>|<span data-ttu-id="abd09-358">Eine Zeichenfolgendarstellung von `id`.</span><span class="sxs-lookup"><span data-stu-id="abd09-358">The string representation of `id`.</span></span>|  
|`message`|<span data-ttu-id="abd09-359">Immer</span><span class="sxs-lookup"><span data-stu-id="abd09-359">Always</span></span>|<span data-ttu-id="abd09-360">Die Zeichenfolge besteht die Zeichenfolgendarstellung für jedes Element im `data`, jeweils getrennt durch <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A>.</span><span class="sxs-lookup"><span data-stu-id="abd09-360">The string consisting of the string representation of each element in `data`, each separated by <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A>.</span></span>|  
|`callStack`|<span data-ttu-id="abd09-361">Wenn die <xref:System.Diagnostics.TraceOptions.Callstack> Flag wird festgelegt, der <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="abd09-361">When the <xref:System.Diagnostics.TraceOptions.Callstack> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="abd09-362">Die <xref:System.Diagnostics.TraceEventCache.Callstack%2A> Eigenschaft `eventCache`.</span><span class="sxs-lookup"><span data-stu-id="abd09-362">The <xref:System.Diagnostics.TraceEventCache.Callstack%2A> property of `eventCache`.</span></span>|  
|`CorrelationID`|<span data-ttu-id="abd09-363">Wenn die <xref:System.Diagnostics.TraceOptions.LogicalOperationStack> Flag wird festgelegt, der <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="abd09-363">When the <xref:System.Diagnostics.TraceOptions.LogicalOperationStack> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="abd09-364">Die <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> Eigenschaft `eventCache`.</span><span class="sxs-lookup"><span data-stu-id="abd09-364">The <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> property of `eventCache`.</span></span>|  
|`DateTime`|<span data-ttu-id="abd09-365">Wenn die <xref:System.Diagnostics.TraceOptions.DateTime> Flag wird festgelegt, der <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="abd09-365">When the <xref:System.Diagnostics.TraceOptions.DateTime> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="abd09-366">Die Zeichenfolgendarstellung der <xref:System.Diagnostics.TraceEventCache.DateTime%2A> Eigenschaft `eventCache`.</span><span class="sxs-lookup"><span data-stu-id="abd09-366">The string representation of the <xref:System.Diagnostics.TraceEventCache.DateTime%2A> property of `eventCache`.</span></span> <span data-ttu-id="abd09-367">Die invariante Kultur wird für die zeichenfolgenkonvertierung verwendet.</span><span class="sxs-lookup"><span data-stu-id="abd09-367">The invariant culture is used for the string conversion.</span></span>|  
|`ProcessID`|<span data-ttu-id="abd09-368">Wenn die <xref:System.Diagnostics.TraceOptions.ProcessId> Flag wird festgelegt, der <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="abd09-368">When the <xref:System.Diagnostics.TraceOptions.ProcessId> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="abd09-369">Die Zeichenfolgendarstellung der <xref:System.Diagnostics.TraceEventCache.ProcessId%2A> Eigenschaft `eventCache`.</span><span class="sxs-lookup"><span data-stu-id="abd09-369">The string representation of the <xref:System.Diagnostics.TraceEventCache.ProcessId%2A> property of `eventCache`.</span></span> <span data-ttu-id="abd09-370">Die invariante Kultur wird für die zeichenfolgenkonvertierung verwendet.</span><span class="sxs-lookup"><span data-stu-id="abd09-370">The invariant culture is used for the string conversion.</span></span>|  
|`ThreadID`|<span data-ttu-id="abd09-371">Wenn die <xref:System.Diagnostics.TraceOptions.ThreadId> Flag wird festgelegt, der <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="abd09-371">When the <xref:System.Diagnostics.TraceOptions.ThreadId> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="abd09-372">Die <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> Eigenschaft `eventCache`.</span><span class="sxs-lookup"><span data-stu-id="abd09-372">The <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> property of `eventCache`.</span></span>|  
|`Timestamp`|<span data-ttu-id="abd09-373">Wenn die <xref:System.Diagnostics.TraceOptions.Timestamp> Flag wird festgelegt, der <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="abd09-373">When the <xref:System.Diagnostics.TraceOptions.Timestamp> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="abd09-374">Die Zeichenfolgendarstellung der <xref:System.Diagnostics.TraceEventCache.Timestamp%2A> Eigenschaft `eventCache`.</span><span class="sxs-lookup"><span data-stu-id="abd09-374">The string representation of the <xref:System.Diagnostics.TraceEventCache.Timestamp%2A> property of `eventCache`.</span></span> <span data-ttu-id="abd09-375">Die invariante Kultur wird für die zeichenfolgenkonvertierung verwendet.</span><span class="sxs-lookup"><span data-stu-id="abd09-375">The invariant culture is used for the string conversion.</span></span>|  
|`HostName`|<span data-ttu-id="abd09-376">Wenn die <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A> Eigenschaft ist `True`.</span><span class="sxs-lookup"><span data-stu-id="abd09-376">When the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A> property is `True`.</span></span>|<span data-ttu-id="abd09-377">Der Name des Computers.</span><span class="sxs-lookup"><span data-stu-id="abd09-377">The name of the computer.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName" />
        <altmember cref="P:System.Diagnostics.TraceListener.TraceOutputOptions" />
        <altmember cref="T:System.Diagnostics.TraceEventCache" />
        <altmember cref="T:System.Diagnostics.TraceEventType" />
      </Docs>
    </Member>
    <MemberGroup MemberName="TraceEvent">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="abd09-378">Schreibt Ablaufverfolgungs- und Ereignisdaten in die Ausgabedatei oder den Ausgabestream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abd09-378">Writes trace and event information to the output file or stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abd09-379"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent%2A> Methoden dürfen nicht von Anwendungscode aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="abd09-379"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent%2A> methods are not intended to be called by application code.</span></span> <span data-ttu-id="abd09-380">Diese Methoden werden aufgerufen, von einem Mitglied der <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, und <xref:System.Diagnostics.TraceSource> Klassen zum Schreiben von auszugebenden Ablaufverfolgungsdaten.</span><span class="sxs-lookup"><span data-stu-id="abd09-380">These methods are called by members of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data to output.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="TraceEvent">
      <MemberSignature Language="C#" Value="public override void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceEvent(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub TraceEvent (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceEvent(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, System::String ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventCache">
          <span data-ttu-id="abd09-381">Ein <see cref="T:System.Diagnostics.TraceEventCache" />-Objekt mit der aktuellen Prozess-ID, Thread-ID und den aktuellen Stapelüberwachungsinformationen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abd09-381">A <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information.</span>
          </span>
        </param>
        <param name="source">
          <span data-ttu-id="abd09-382">Der Name der Ablaufverfolgungsquelle, die diese Methode aufgerufen hat.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abd09-382">A name of the trace source that invoked this method.</span>
          </span>
        </param>
        <param name="eventType">
          <span data-ttu-id="abd09-383">Einer der <see cref="T:System.Diagnostics.TraceEventType" />-Enumerationswerte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abd09-383">One of the <see cref="T:System.Diagnostics.TraceEventType" /> enumeration values.</span>
          </span>
        </param>
        <param name="id">
          <span data-ttu-id="abd09-384">Ein numerischer Bezeichner für das Ereignis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abd09-384">A numeric identifier for the event.</span>
          </span>
        </param>
        <param name="message">
          <span data-ttu-id="abd09-385">Eine zu schreibende Meldung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abd09-385">A message to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="abd09-386">Schreibt Ablaufverfolgungsinformationen, eine Meldung und Ereignisinformationen in die Ausgabedatei oder den Stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abd09-386">Writes trace information, a message and event information to the output file or stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abd09-387">Diese Methode:</span><span class="sxs-lookup"><span data-stu-id="abd09-387">This method:</span></span>  
  
1.  <span data-ttu-id="abd09-388">Formatiert die Daten und dem angegebenen Kontext Informationen für die Ausgabe an.</span><span class="sxs-lookup"><span data-stu-id="abd09-388">Formats the data and context information for output.</span></span>  
  
2.  <span data-ttu-id="abd09-389">Eine neue Protokolldatei erstellt, bei Bedarf.</span><span class="sxs-lookup"><span data-stu-id="abd09-389">Creates a new log file, if necessary.</span></span>  
  
3.  <span data-ttu-id="abd09-390">Schreibt die Informationen in der Protokolldatei gespeichert.</span><span class="sxs-lookup"><span data-stu-id="abd09-390">Writes the information to the log file.</span></span>  
  
 <span data-ttu-id="abd09-391">Weitere Informationen zum Erstellen von neuen Protokolldateien finden Sie unter <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>.</span><span class="sxs-lookup"><span data-stu-id="abd09-391">For more information on creating new log files, see <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>.</span></span>  
  
 <span data-ttu-id="abd09-392">Diese Tabelle enthält die Ausgabefelder in der Reihenfolge, in der sie angezeigt werden.</span><span class="sxs-lookup"><span data-stu-id="abd09-392">This table lists the output fields in the order in which they appear.</span></span> <span data-ttu-id="abd09-393">Die Felder werden durch die Zeichenfolge begrenzt, die die <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A> Eigenschaft gibt an, und gefolgt von einem Zeilenabschluss.</span><span class="sxs-lookup"><span data-stu-id="abd09-393">The fields are delimited by the string that the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A> property specifies, and are followed by a line terminator.</span></span>  
  
|<span data-ttu-id="abd09-394">**Feld**</span><span class="sxs-lookup"><span data-stu-id="abd09-394">**Field**</span></span>|<span data-ttu-id="abd09-395">**Ausgabe-Bedingung**</span><span class="sxs-lookup"><span data-stu-id="abd09-395">**Output condition**</span></span>|<span data-ttu-id="abd09-396">**Beschreibung**</span><span class="sxs-lookup"><span data-stu-id="abd09-396">**Description**</span></span>|  
|---------------|--------------------------|---------------------|  
|`source`|<span data-ttu-id="abd09-397">Immer.</span><span class="sxs-lookup"><span data-stu-id="abd09-397">Always.</span></span>|<span data-ttu-id="abd09-398">Der Wert von `name`.</span><span class="sxs-lookup"><span data-stu-id="abd09-398">The value of `name`.</span></span>|  
|`severity`|<span data-ttu-id="abd09-399">Immer.</span><span class="sxs-lookup"><span data-stu-id="abd09-399">Always.</span></span>|<span data-ttu-id="abd09-400">Die Enumeration Wertnamen des `eventType`.</span><span class="sxs-lookup"><span data-stu-id="abd09-400">The enumeration-value name of `eventType`.</span></span>|  
|`id`|<span data-ttu-id="abd09-401">Immer.</span><span class="sxs-lookup"><span data-stu-id="abd09-401">Always.</span></span>|<span data-ttu-id="abd09-402">Eine Zeichenfolgendarstellung von `id`.</span><span class="sxs-lookup"><span data-stu-id="abd09-402">The string representation of `id`.</span></span>|  
|`message`|<span data-ttu-id="abd09-403">Immer.</span><span class="sxs-lookup"><span data-stu-id="abd09-403">Always.</span></span>|<span data-ttu-id="abd09-404">Der Wert von `message`.</span><span class="sxs-lookup"><span data-stu-id="abd09-404">The value of `message`.</span></span>|  
|`callStack`|<span data-ttu-id="abd09-405">Wenn die <xref:System.Diagnostics.TraceOptions.Callstack> Flag wird festgelegt, der <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="abd09-405">When the <xref:System.Diagnostics.TraceOptions.Callstack> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="abd09-406">Die <xref:System.Diagnostics.TraceEventCache.Callstack%2A> Eigenschaft `eventCache`.</span><span class="sxs-lookup"><span data-stu-id="abd09-406">The <xref:System.Diagnostics.TraceEventCache.Callstack%2A> property of `eventCache`.</span></span>|  
|`CorrelationID`|<span data-ttu-id="abd09-407">Wenn die <xref:System.Diagnostics.TraceOptions.LogicalOperationStack> Flag wird festgelegt, der <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="abd09-407">When the <xref:System.Diagnostics.TraceOptions.LogicalOperationStack> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="abd09-408">Die <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> Eigenschaft `eventCache`.</span><span class="sxs-lookup"><span data-stu-id="abd09-408">The <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> property of `eventCache`.</span></span>|  
|`DateTime`|<span data-ttu-id="abd09-409">Wenn die <xref:System.Diagnostics.TraceOptions.DateTime> Flag wird festgelegt, der <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="abd09-409">When the <xref:System.Diagnostics.TraceOptions.DateTime> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="abd09-410">Die Zeichenfolgendarstellung der <xref:System.Diagnostics.TraceEventCache.DateTime%2A> Eigenschaft `eventCache`.</span><span class="sxs-lookup"><span data-stu-id="abd09-410">The string representation of the <xref:System.Diagnostics.TraceEventCache.DateTime%2A> property of `eventCache`.</span></span> <span data-ttu-id="abd09-411">Die invariante Kultur wird für die zeichenfolgenkonvertierung verwendet.</span><span class="sxs-lookup"><span data-stu-id="abd09-411">The invariant culture is used for the string conversion.</span></span>|  
|`ProcessID`|<span data-ttu-id="abd09-412">Wenn die <xref:System.Diagnostics.TraceOptions.ProcessId> Flag wird festgelegt, der <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="abd09-412">When the <xref:System.Diagnostics.TraceOptions.ProcessId> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="abd09-413">Die Zeichenfolgendarstellung der <xref:System.Diagnostics.TraceEventCache.ProcessId%2A> Eigenschaft `eventCache`.</span><span class="sxs-lookup"><span data-stu-id="abd09-413">The string representation of the <xref:System.Diagnostics.TraceEventCache.ProcessId%2A> property of `eventCache`.</span></span> <span data-ttu-id="abd09-414">Die invariante Kultur wird für die zeichenfolgenkonvertierung verwendet.</span><span class="sxs-lookup"><span data-stu-id="abd09-414">The invariant culture is used for the string conversion.</span></span>|  
|`ThreadID`|<span data-ttu-id="abd09-415">Wenn die <xref:System.Diagnostics.TraceOptions.ThreadId> Flag wird festgelegt, der <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="abd09-415">When the <xref:System.Diagnostics.TraceOptions.ThreadId> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="abd09-416">Die <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> Eigenschaft `eventCache`.</span><span class="sxs-lookup"><span data-stu-id="abd09-416">The <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> property of `eventCache`.</span></span>|  
|`Timestamp`|<span data-ttu-id="abd09-417">Wenn die <xref:System.Diagnostics.TraceOptions.Timestamp> Flag wird festgelegt, der <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="abd09-417">When the <xref:System.Diagnostics.TraceOptions.Timestamp> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="abd09-418">Die Zeichenfolgendarstellung der <xref:System.Diagnostics.TraceEventCache.Timestamp%2A> Eigenschaft `eventCache`.</span><span class="sxs-lookup"><span data-stu-id="abd09-418">The string representation of the <xref:System.Diagnostics.TraceEventCache.Timestamp%2A> property of `eventCache`.</span></span> <span data-ttu-id="abd09-419">Die invariante Kultur wird für die zeichenfolgenkonvertierung verwendet.</span><span class="sxs-lookup"><span data-stu-id="abd09-419">The invariant culture is used for the string conversion.</span></span>|  
|`HostName`|<span data-ttu-id="abd09-420">Wenn die <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A> Eigenschaft ist `True`.</span><span class="sxs-lookup"><span data-stu-id="abd09-420">When the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A> property is `True`.</span></span>|<span data-ttu-id="abd09-421">Der Name des Computers.</span><span class="sxs-lookup"><span data-stu-id="abd09-421">The name of the computer.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName" />
        <altmember cref="P:System.Diagnostics.TraceListener.TraceOutputOptions" />
        <altmember cref="T:System.Diagnostics.TraceEventCache" />
        <altmember cref="T:System.Diagnostics.TraceEventType" />
      </Docs>
    </Member>
    <Member MemberName="TraceEvent">
      <MemberSignature Language="C#" Value="public override void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, string format, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceEvent(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, string format, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub TraceEvent (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, format As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceEvent(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="eventCache">
          <span data-ttu-id="abd09-422">Ein <see cref="T:System.Diagnostics.TraceEventCache" />-Objekt mit der aktuellen Prozess-ID, Thread-ID und den aktuellen Stapelüberwachungsinformationen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abd09-422">A <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information.</span>
          </span>
        </param>
        <param name="source">
          <span data-ttu-id="abd09-423">Der Name der Ablaufverfolgungsquelle, die diese Methode aufgerufen hat.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abd09-423">A name of the trace source that invoked this method.</span>
          </span>
        </param>
        <param name="eventType">
          <span data-ttu-id="abd09-424">Einer der <see cref="T:System.Diagnostics.TraceEventType" />-Enumerationswerte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abd09-424">One of the <see cref="T:System.Diagnostics.TraceEventType" /> enumeration values.</span>
          </span>
        </param>
        <param name="id">
          <span data-ttu-id="abd09-425">Ein numerischer Bezeichner für das Ereignis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abd09-425">A numeric identifier for the event.</span>
          </span>
        </param>
        <param name="format">
          <span data-ttu-id="abd09-426">Eine Formatzeichenfolge mit 0 oder mehr Formatelementen, die Objekten im <c>args</c>-Array entsprechen</span>
          <span class="sxs-lookup">
            <span data-stu-id="abd09-426">A format string that contains zero or more format items, which correspond to objects in the <c>args</c> array.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="abd09-427">Ein <see langword="Object" />-Array mit 0 oder mehr zu formatierenden Objekten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abd09-427">An <see langword="Object" /> array containing zero or more objects to format.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="abd09-428">Schreibt Ablaufverfolgungsinformationen, ein formatiertes Array von Objekten und Ereignisinformationen in die Ausgabedatei oder den Stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abd09-428">Writes trace information, a formatted array of objects, and event information to the output file or stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abd09-429">Diese Methode:</span><span class="sxs-lookup"><span data-stu-id="abd09-429">This method:</span></span>  
  
1.  <span data-ttu-id="abd09-430">Formatiert die Daten und dem angegebenen Kontext Informationen für die Ausgabe an.</span><span class="sxs-lookup"><span data-stu-id="abd09-430">Formats the data and context information for output.</span></span>  
  
2.  <span data-ttu-id="abd09-431">Erstellt ein neues eine neue Protokolldatei bei Bedarf.</span><span class="sxs-lookup"><span data-stu-id="abd09-431">Creates a new a new log file, if necessary.</span></span>  
  
3.  <span data-ttu-id="abd09-432">Schreibt die Informationen in der Protokolldatei gespeichert.</span><span class="sxs-lookup"><span data-stu-id="abd09-432">Writes the information to the log file.</span></span>  
  
 <span data-ttu-id="abd09-433">Weitere Informationen zum Erstellen der neuen Protokolldatei finden Sie unter <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>.</span><span class="sxs-lookup"><span data-stu-id="abd09-433">For more information on creating new log file, see <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>.</span></span>  
  
 <span data-ttu-id="abd09-434">Diese Tabelle enthält die Ausgabefelder in der Reihenfolge, in der sie angezeigt werden.</span><span class="sxs-lookup"><span data-stu-id="abd09-434">This table lists the output fields in the order in which they appear.</span></span> <span data-ttu-id="abd09-435">Die Felder werden durch die Zeichenfolge begrenzt, die die <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A> Eigenschaft gibt an, und gefolgt von einem Zeilenabschluss.</span><span class="sxs-lookup"><span data-stu-id="abd09-435">The fields are delimited by the string that the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A> property specifies, and followed by a line terminator.</span></span>  
  
|<span data-ttu-id="abd09-436">**Feld**</span><span class="sxs-lookup"><span data-stu-id="abd09-436">**Field**</span></span>|<span data-ttu-id="abd09-437">**Ausgabe-Bedingung**</span><span class="sxs-lookup"><span data-stu-id="abd09-437">**Output condition**</span></span>|<span data-ttu-id="abd09-438">**Beschreibung**</span><span class="sxs-lookup"><span data-stu-id="abd09-438">**Description**</span></span>|  
|---------------|--------------------------|---------------------|  
|`source`|<span data-ttu-id="abd09-439">Immer</span><span class="sxs-lookup"><span data-stu-id="abd09-439">Always</span></span>|<span data-ttu-id="abd09-440">Der Wert von `name`.</span><span class="sxs-lookup"><span data-stu-id="abd09-440">The value of `name`.</span></span>|  
|`severity`|<span data-ttu-id="abd09-441">Immer</span><span class="sxs-lookup"><span data-stu-id="abd09-441">Always</span></span>|<span data-ttu-id="abd09-442">Die Enumeration Wertnamen des `eventType`.</span><span class="sxs-lookup"><span data-stu-id="abd09-442">The enumeration-value name of `eventType`.</span></span>|  
|`id`|<span data-ttu-id="abd09-443">Immer</span><span class="sxs-lookup"><span data-stu-id="abd09-443">Always</span></span>|<span data-ttu-id="abd09-444">Eine Zeichenfolgendarstellung von `id`.</span><span class="sxs-lookup"><span data-stu-id="abd09-444">The string representation of `id`.</span></span>|  
|`message`|<span data-ttu-id="abd09-445">Immer</span><span class="sxs-lookup"><span data-stu-id="abd09-445">Always</span></span>|<span data-ttu-id="abd09-446">Die Daten in `args` mit formatiert die `format` Zeichenfolge und mit der invarianten Kultur für zeichenfolgenkonvertierungen.</span><span class="sxs-lookup"><span data-stu-id="abd09-446">The data in `args` formatted with the `format` string and using the invariant culture for string conversions.</span></span>|  
|`callStack`|<span data-ttu-id="abd09-447">Wenn die <xref:System.Diagnostics.TraceOptions.Callstack> Flag wird festgelegt, der <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="abd09-447">When the <xref:System.Diagnostics.TraceOptions.Callstack> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="abd09-448">Die <xref:System.Diagnostics.TraceEventCache.Callstack%2A> Eigenschaft `eventCache`.</span><span class="sxs-lookup"><span data-stu-id="abd09-448">The <xref:System.Diagnostics.TraceEventCache.Callstack%2A> property of `eventCache`.</span></span>|  
|`CorrelationID`|<span data-ttu-id="abd09-449">Wenn die <xref:System.Diagnostics.TraceOptions.LogicalOperationStack> Flag wird festgelegt, der <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="abd09-449">When the <xref:System.Diagnostics.TraceOptions.LogicalOperationStack> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="abd09-450">Die <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> Eigenschaft `eventCache`.</span><span class="sxs-lookup"><span data-stu-id="abd09-450">The <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> property of `eventCache`.</span></span>|  
|`DateTime`|<span data-ttu-id="abd09-451">Wenn die <xref:System.Diagnostics.TraceOptions.DateTime> Flag wird festgelegt, der <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="abd09-451">When the <xref:System.Diagnostics.TraceOptions.DateTime> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="abd09-452">Die Zeichenfolgendarstellung der <xref:System.Diagnostics.TraceEventCache.DateTime%2A> Eigenschaft `eventCache`.</span><span class="sxs-lookup"><span data-stu-id="abd09-452">The string representation of the <xref:System.Diagnostics.TraceEventCache.DateTime%2A> property of `eventCache`.</span></span> <span data-ttu-id="abd09-453">Die invariante Kultur wird für die zeichenfolgenkonvertierung verwendet.</span><span class="sxs-lookup"><span data-stu-id="abd09-453">The invariant culture is used for the string conversion.</span></span>|  
|`ProcessID`|<span data-ttu-id="abd09-454">Wenn die <xref:System.Diagnostics.TraceOptions.ProcessId> Flag wird festgelegt, der <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="abd09-454">When the <xref:System.Diagnostics.TraceOptions.ProcessId> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="abd09-455">Die Zeichenfolgendarstellung der <xref:System.Diagnostics.TraceEventCache.ProcessId%2A> Eigenschaft `eventCache`.</span><span class="sxs-lookup"><span data-stu-id="abd09-455">The string representation of the <xref:System.Diagnostics.TraceEventCache.ProcessId%2A> property of `eventCache`.</span></span> <span data-ttu-id="abd09-456">Die invariante Kultur wird für die zeichenfolgenkonvertierung verwendet.</span><span class="sxs-lookup"><span data-stu-id="abd09-456">The invariant culture is used for the string conversion.</span></span>|  
|`ThreadID`|<span data-ttu-id="abd09-457">Wenn die <xref:System.Diagnostics.TraceOptions.ThreadId> Flag wird festgelegt, der <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="abd09-457">When the <xref:System.Diagnostics.TraceOptions.ThreadId> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="abd09-458">Die <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> Eigenschaft `eventCache`.</span><span class="sxs-lookup"><span data-stu-id="abd09-458">The <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> property of `eventCache`.</span></span>|  
|`Timestamp`|<span data-ttu-id="abd09-459">Wenn die <xref:System.Diagnostics.TraceOptions.Timestamp> Flag wird festgelegt, der <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="abd09-459">When the <xref:System.Diagnostics.TraceOptions.Timestamp> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="abd09-460">Die Zeichenfolgendarstellung der <xref:System.Diagnostics.TraceEventCache.Timestamp%2A> Eigenschaft `eventCache`.</span><span class="sxs-lookup"><span data-stu-id="abd09-460">The string representation of the <xref:System.Diagnostics.TraceEventCache.Timestamp%2A> property of `eventCache`.</span></span> <span data-ttu-id="abd09-461">Die invariante Kultur wird für die zeichenfolgenkonvertierung verwendet.</span><span class="sxs-lookup"><span data-stu-id="abd09-461">The invariant culture is used for the string conversion.</span></span>|  
|`HostName`|<span data-ttu-id="abd09-462">Wenn die <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A> Eigenschaft ist `True`.</span><span class="sxs-lookup"><span data-stu-id="abd09-462">When the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A> property is `True`.</span></span>|<span data-ttu-id="abd09-463">Der Name des Computers.</span><span class="sxs-lookup"><span data-stu-id="abd09-463">The name of the computer.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName" />
        <altmember cref="P:System.Diagnostics.TraceListener.TraceOutputOptions" />
        <altmember cref="T:System.Diagnostics.TraceEventCache" />
        <altmember cref="T:System.Diagnostics.TraceEventType" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Write(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(System::String ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="abd09-464">
            <see langword="String" />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="abd09-464">
              <see langword="String" />.</span>
          </span>
          <span data-ttu-id="abd09-465">Die benutzerdefinierte Meldung, die geschrieben werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abd09-465">The custom message to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="abd09-466">Schreibt eine wörtliche Meldung ohne weitere Kontextinformationen auf den Datenträger.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abd09-466">Writes a verbatim message to disk, without any additional context information.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abd09-467">Die <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Write%2A> -Methode schreibt eine bestimmte Nachricht in der Protokolldatei gespeichert, ohne weitere Kontextinformationen.</span><span class="sxs-lookup"><span data-stu-id="abd09-467">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Write%2A> method writes a specific message to the log file, without any additional context information.</span></span>  
  
 <span data-ttu-id="abd09-468">Wenden Sie eines der der <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A> Methoden, die Kontextinformationen in die Protokollausgabe aufgenommen.</span><span class="sxs-lookup"><span data-stu-id="abd09-468">Use the one of the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A> methods to include the context information in the log output.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName" />
        <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.WriteLine(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(System::String ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="abd09-469">
            <see langword="String" />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="abd09-469">
              <see langword="String" />.</span>
          </span>
          <span data-ttu-id="abd09-470">Die benutzerdefinierte Meldung, die geschrieben werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abd09-470">The custom message to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="abd09-471">Schreibt eine wörtliche Meldung ohne weitere Kontextinformationen, gefolgt vom aktuellen Zeilenabschlusszeichen, in die Datei</span>
          <span class="sxs-lookup">
            <span data-stu-id="abd09-471">Writes a verbatim message to disk, followed by the current line terminator, without any additional context information.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abd09-472">Die <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.WriteLine%2A> -Methode schreibt eine bestimmte Nachricht in der Protokolldatei gespeichert, ohne weitere Kontextinformationen.</span><span class="sxs-lookup"><span data-stu-id="abd09-472">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.WriteLine%2A> method writes a specific message to the log file, without any additional context information.</span></span>  
  
 <span data-ttu-id="abd09-473">Wenden Sie eines der der <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A> Methoden, die Kontextinformationen in die Protokollausgabe aufgenommen.</span><span class="sxs-lookup"><span data-stu-id="abd09-473">Use the one of the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A> methods to include the context information in the log output.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName" />
        <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)" />
      </Docs>
    </Member>
  </Members>
</Type>