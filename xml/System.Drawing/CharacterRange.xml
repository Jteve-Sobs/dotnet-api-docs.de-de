<Type Name="CharacterRange" FullName="System.Drawing.CharacterRange">
  <Metadata><Meta Name="ms.openlocfilehash" Value="72f9c6f56df33d975beb5b767b88a0c159c93989" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86819637" /></Metadata><TypeSignature Language="C#" Value="public struct CharacterRange" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit CharacterRange extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.CharacterRange" />
  <TypeSignature Language="VB.NET" Value="Public Structure CharacterRange" />
  <TypeSignature Language="C++ CLI" Value="public value class CharacterRange" />
  <TypeSignature Language="F#" Value="type CharacterRange = struct" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Drawing.Common</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.1</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Gibt einen Bereich von Zeichenpositionen in einer Zeichenfolge an.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie ein erstellt <xref:System.Drawing.CharacterRange> und verwendet wird, um einen Teil einer Zeichenfolge hervorzuheben. Dieses Beispiel ist für die Verwendung mit Windows Forms konzipiert. Fügen Sie das Beispiel in ein Formular ein, und nennen Sie die- `HighlightACharacterRange` Methode, wenn Sie das-Ereignis des Formulars verarbeiten und <xref:System.Windows.Forms.Control.Paint> `e` als übergeben <xref:System.Windows.Forms.PaintEventArgs> .  
  
 [!code-cpp[System.Drawing.CharacterRangeExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.CharacterRangeExample/CPP/form1.cpp#1)]
 [!code-csharp[System.Drawing.CharacterRangeExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.CharacterRangeExample/CS/form1.cs#1)]
 [!code-vb[System.Drawing.CharacterRangeExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.CharacterRangeExample/VB/form1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CharacterRange (int First, int Length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 First, int32 Length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.CharacterRange.#ctor(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (First As Integer, Length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CharacterRange(int First, int Length);" />
      <MemberSignature Language="F#" Value="new System.Drawing.CharacterRange : int * int -&gt; System.Drawing.CharacterRange" Usage="new System.Drawing.CharacterRange (First, Length)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="First" Type="System.Int32" />
        <Parameter Name="Length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="First">Die Position des ersten Zeichens in dem Bereich. Wenn <paramref name="First" /> z. B. auf 0 festgelegt ist, ist die erste Position des Bereichs die Position 0 in der Zeichenfolge.</param>
        <param name="Length">Die Anzahl der Positionen im Bereich.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Drawing.CharacterRange" />-Struktur, die in einer Zeichenfolge einen Bereich von Zeichenpositionen angibt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie ein erstellt <xref:System.Drawing.CharacterRange> und verwendet wird, um einen Teil einer Zeichenfolge hervorzuheben. Dieses Beispiel ist für die Verwendung mit Windows Forms konzipiert. Fügen Sie das Beispiel in ein Formular ein, und nennen Sie die- `HighlightACharacterRange` Methode, wenn Sie das-Ereignis des Formulars verarbeiten und <xref:System.Windows.Forms.Control.Paint> `e` als übergeben <xref:System.Windows.Forms.PaintEventArgs> .  
  
 [!code-cpp[System.Drawing.CharacterRangeExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.CharacterRangeExample/CPP/form1.cpp#1)]
 [!code-csharp[System.Drawing.CharacterRangeExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.CharacterRangeExample/CS/form1.cs#1)]
 [!code-vb[System.Drawing.CharacterRangeExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.CharacterRangeExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.CharacterRange.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="characterRange.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="obj">Das auf Gleichheit zu prüfende Objekt.</param>
        <summary>Ruft einen Wert ab, der angibt, ob dieses Objekt dem angegebenen Objekt entspricht.</summary>
        <returns><see langword="true" />, um anzugeben, dass das angegebene Objekt eine Instanz mit dem gleichen <see cref="P:System.Drawing.CharacterRange.First" />-Wert und <see cref="P:System.Drawing.CharacterRange.Length" />-Wert wie diese Instanz ist, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können auch verwenden <xref:System.Drawing.CharacterRange.op_Equality%2A> , um auf Gleichheit zu prüfen.  
  
   
  
## Examples  
 Im folgenden Beispiel wird die Verwendung der <xref:System.Drawing.CharacterRange.Equals%2A>-Methode veranschaulicht. Fügen Sie es in ein Windows Form ein, um dieses Beispiel auszuführen. Behandeln Sie das- <xref:System.Windows.Forms.Control.Paint> Ereignis des Formulars, und wenden Sie die `CharacterRangeEquality2` -Methode aus der <xref:System.Windows.Forms.Control.Paint> Ereignis Behandlungsmethode an, indem Sie `e` als übergeben <xref:System.Windows.Forms.PaintEventArgs> .  
  
 [!code-csharp[System.Drawing.MiscWhidbeySnippets#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.MiscWhidbeySnippets/CS/Form1.cs#2)]
 [!code-vb[System.Drawing.MiscWhidbeySnippets#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.MiscWhidbeySnippets/VB/Form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="First">
      <MemberSignature Language="C#" Value="public int First { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 First" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.CharacterRange.First" />
      <MemberSignature Language="VB.NET" Value="Public Property First As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int First { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.First : int with get, set" Usage="System.Drawing.CharacterRange.First" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Position des ersten Zeichens dieses <see cref="T:System.Drawing.CharacterRange" /> in der Zeichenfolge ab oder legt diese fest.</summary>
        <value>Die erste Position dieses <see cref="T:System.Drawing.CharacterRange" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.CharacterRange.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="characterRange.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt den Hashcode für diese Instanz zurück.</summary>
        <returns>Eine 32-Bit-Ganzzahl mit Vorzeichen, die den Hashcode für diese Instanz darstellt.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.ValueType.GetHashCode" />
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public int Length { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Length" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.CharacterRange.Length" />
      <MemberSignature Language="VB.NET" Value="Public Property Length As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Length { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Length : int with get, set" Usage="System.Drawing.CharacterRange.Length" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Anzahl von Positionen in diesem <see cref="T:System.Drawing.CharacterRange" /> ab oder legt diese fest.</summary>
        <value>Die Anzahl der Positionen in diesem <see cref="T:System.Drawing.CharacterRange" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Drawing.CharacterRange cr1, System.Drawing.CharacterRange cr2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Drawing.CharacterRange cr1, valuetype System.Drawing.CharacterRange cr2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.CharacterRange.op_Equality(System.Drawing.CharacterRange,System.Drawing.CharacterRange)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (cr1 As CharacterRange, cr2 As CharacterRange) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Drawing::CharacterRange cr1, System::Drawing::CharacterRange cr2);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Drawing.CharacterRange * System.Drawing.CharacterRange -&gt; bool" Usage="cr1 = cr2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cr1" Type="System.Drawing.CharacterRange" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="cr2" Type="System.Drawing.CharacterRange" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="cr1">Ein <see cref="T:System.Drawing.CharacterRange" /> für die Gleichheitsüberprüfung.</param>
        <param name="cr2">Ein <see cref="T:System.Drawing.CharacterRange" /> für die Gleichheitsüberprüfung.</param>
        <summary>Vergleicht zwei <see cref="T:System.Drawing.CharacterRange" />-Objekte. Ruft einen Wert ab, der angibt, ob der <see cref="P:System.Drawing.CharacterRange.First" />-Wert und <see cref="P:System.Drawing.CharacterRange.Length" />-Wert der beiden <see cref="T:System.Drawing.CharacterRange" />-Objekte gleich sind.</summary>
        <returns><see langword="true" />, um anzugeben, dass die beiden <see cref="T:System.Drawing.CharacterRange" />-Objekte über den gleichen <see cref="P:System.Drawing.CharacterRange.First" />-Wert und <see cref="P:System.Drawing.CharacterRange.Length" />-Wert verfügen, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mithilfe der-Methode können Sie auch auf Gleichheit testen <xref:System.Drawing.CharacterRange.Equals%2A> .  
  
 Die äquivalente Methode für diesen Operator ist. <xref:System.Drawing.CharacterRange.Equals%28System.Object%29?displayProperty=nameWithType>  
  
## Examples  
 Im folgenden Beispiel wird die Verwendung des- <xref:System.Drawing.CharacterRange.op_Equality%2A> Operators veranschaulicht. Fügen Sie es in ein Windows Form ein, um dieses Beispiel auszuführen. Behandeln Sie das- <xref:System.Windows.Forms.Control.Paint> Ereignis des Formulars, und wenden Sie die `CharacterRangeEquality1` -Methode aus der <xref:System.Windows.Forms.Control.Paint> Ereignis Behandlungsmethode an, indem Sie `e` als übergeben <xref:System.Windows.Forms.PaintEventArgs> .  
  
 [!code-csharp[System.Drawing.MiscWhidbeySnippets#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.MiscWhidbeySnippets/CS/Form1.cs#1)]
 [!code-vb[System.Drawing.MiscWhidbeySnippets#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.MiscWhidbeySnippets/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Drawing.CharacterRange cr1, System.Drawing.CharacterRange cr2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Drawing.CharacterRange cr1, valuetype System.Drawing.CharacterRange cr2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.CharacterRange.op_Inequality(System.Drawing.CharacterRange,System.Drawing.CharacterRange)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (cr1 As CharacterRange, cr2 As CharacterRange) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Drawing::CharacterRange cr1, System::Drawing::CharacterRange cr2);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Drawing.CharacterRange * System.Drawing.CharacterRange -&gt; bool" Usage="System.Drawing.CharacterRange.op_Inequality (cr1, cr2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cr1" Type="System.Drawing.CharacterRange" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="cr2" Type="System.Drawing.CharacterRange" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="cr1">Ein <see cref="T:System.Drawing.CharacterRange" />, der auf Ungleichheit geprüft werden soll.</param>
        <param name="cr2">Ein <see cref="T:System.Drawing.CharacterRange" />, der auf Ungleichheit geprüft werden soll.</param>
        <summary>Vergleicht zwei <see cref="T:System.Drawing.CharacterRange" />-Objekte. Ruft einen Wert ab, der angibt, ob der <see cref="P:System.Drawing.CharacterRange.First" />-Wert oder der <see cref="P:System.Drawing.CharacterRange.Length" />-Wert der beiden <see cref="T:System.Drawing.CharacterRange" />-Objekte ungleich ist.</summary>
        <returns><see langword="true" />, um anzugeben, dass sich der <see cref="P:System.Drawing.CharacterRange.First" />-Wert oder <see cref="P:System.Drawing.CharacterRange.Length" />-Wert der beiden <see cref="T:System.Drawing.CharacterRange" />-Objekte unterscheidet, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die- <xref:System.Drawing.CharacterRange.op_Inequality%2A> Methode gibt das Gegenteil der- <xref:System.Drawing.CharacterRange.op_Equality%2A> Methode zurück.  
  
 Die äquivalente Methode für diesen Operator ist. <xref:System.Drawing.CharacterRange.Equals%28System.Object%29?displayProperty=nameWithType>  
  
## Examples  
 Im folgenden Beispiel wird die Verwendung der <xref:System.Drawing.CharacterRange.op_Inequality%2A>-Methode veranschaulicht. Fügen Sie es in ein Windows Form ein, um dieses Beispiel auszuführen. Behandeln Sie das- <xref:System.Windows.Forms.Control.Paint> Ereignis des Formulars, und wenden Sie die `CharacterRangeInequality` -Methode aus der <xref:System.Windows.Forms.Control.Paint> Ereignis Behandlungsmethode an, indem Sie `e` als übergeben <xref:System.Windows.Forms.PaintEventArgs> .  
  
 [!code-csharp[System.Drawing.MiscWhidbeySnippets#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.MiscWhidbeySnippets/CS/Form1.cs#3)]
 [!code-vb[System.Drawing.MiscWhidbeySnippets#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.MiscWhidbeySnippets/VB/Form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Drawing.CharacterRange.Equals(System.Object)" />
        <altmember cref="M:System.Drawing.CharacterRange.op_Equality(System.Drawing.CharacterRange,System.Drawing.CharacterRange)" />
      </Docs>
    </Member>
  </Members>
</Type>
