<Type Name="Bitmap" FullName="System.Drawing.Bitmap">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="618fdd187a99f0f129c4259d65123bd617d9f2e4" />
    <Meta Name="ms.sourcegitcommit" Value="d40b35262cbc997b79bf76da3a39ccf59b738efc" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="12/05/2018" />
    <Meta Name="ms.locfileid" Value="52913845" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class Bitmap : System.Drawing.Image" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit Bitmap extends System.Drawing.Image" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.Bitmap" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Bitmap&#xA;Inherits Image" />
  <TypeSignature Language="C++ CLI" Value="public ref class Bitmap sealed : System::Drawing::Image" />
  <TypeSignature Language="F#" Value="type Bitmap = class&#xA;    inherit Image" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Drawing.Common</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.1</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Drawing.Image</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Editor("System.Drawing.Design.BitmapEditor, System.Drawing.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.ComponentModel.Editor("System.Drawing.Design.BitmapEditor, System.Drawing.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Editor("System.Drawing.Design.BitmapEditor, System.Drawing.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Kapselt eine GDI+-Bitmap, die aus den Pixeldaten für eine Grafik und deren Attributen besteht. Eine <see cref="T:System.Drawing.Bitmap" /> wird für die Arbeit mit Bildern verwendet, die durch Pixeldaten definiert sind.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Eine Bitmap, die aus den Pixeldaten für eine Grafik und deren Attributen besteht aus. Es gibt viele Standardformate in zu eine Bitmap in einer Datei speichern. [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] unterstützt die folgenden Dateiformate: BMP, GIF, EXIF, JPG, PNG und TIFF. Weitere Informationen zu den unterstützten Formaten finden Sie unter [Typen von Bitmaps](~/docs/framework/winforms/advanced/types-of-bitmaps.md).  
  
 Sie können Bilder aus Dateien, Streams und anderen Quellen erstellen, mit einer der der <xref:System.Drawing.Bitmap.%23ctor%2A> Konstruktoren und speichern Sie sie in einen Stream oder das Dateisystem mit dem <xref:System.Drawing.Image.Save%2A> Methode. Bilder werden gezeichnet, auf dem Bildschirm oder in den Speicher mithilfe der <xref:System.Drawing.Graphics.DrawImage%2A> Methode der <xref:System.Drawing.Graphics> Objekt. Eine Liste der Themen zum Arbeiten mit Bilddateien, finden Sie unter [arbeiten mit Bildern, Bitmaps, Symbolen und Metadateien](~/docs/framework/winforms/advanced/working-with-images-bitmaps-icons-and-metafiles.md).  
  
> [!NOTE]
>  Die <xref:System.Drawing.Bitmap> Klasse kann über Anwendungsdomänen hinweg nicht zugegriffen werden. Beispielsweise wird bei der Erstellung eines dynamisches <xref:System.AppDomain> und verschiedene Pinsel, Stifte und Bitmaps in dieser Domäne, und übergeben Sie diese Objekte an die Domäne des Hauptfensters der Anwendung erstellen möchten, können Sie erfolgreich die Stifte und Pinsel verwenden. Allerdings Aufrufen der <xref:System.Drawing.Graphics.DrawImage%2A> Methode, um die gemarshallten zeichnen <xref:System.Drawing.Bitmap>, erhalten Sie die folgende Ausnahme.  
>   
>  Feld "native Image" kann nicht für Typ "System.Drawing.Image" gefunden werden.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie ein neues erstellen <xref:System.Drawing.Bitmap> aus einer Datei, mit der <xref:System.Drawing.Bitmap.GetPixel%2A> und <xref:System.Drawing.Bitmap.SetPixel%2A> Methoden zum Neueinfärben des Bilds. Darüber hinaus verwendet er die <xref:System.Drawing.Image.PixelFormat%2A>, <xref:System.Drawing.Image.Width%2A>, und <xref:System.Drawing.Image.Height%2A> Eigenschaften.  
  
 Dieses Beispiel wurde entworfen, um mit einer Windows Forms verwendet werden, enthalten eine <xref:System.Windows.Forms.Label>, <xref:System.Windows.Forms.PictureBox>, und <xref:System.Windows.Forms.Button> mit dem Namen `Label1`, `PictureBox1`, und `Button1`bzw. Fügen Sie den Code in das Formular, und ordnen die `Button1_Click` -Methode mit der Schaltfläche <xref:System.Windows.Forms.Control.Click> Ereignis.  
  
 [!code-cpp[System.Drawing.ImageExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ImageExample/CPP/form1.cpp#1)]
 [!code-csharp[System.Drawing.ImageExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ImageExample/CS/form1.cs#1)]
 [!code-vb[System.Drawing.ImageExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ImageExample/VB/form1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.PictureBox" />
    <related type="Article" href="https://msdn.microsoft.com/library/7152b45b-a55c-49bc-8c78-ae002a844f71">Bilder, Bitmaps und Metadateien</related>
    <related type="Article" href="https://msdn.microsoft.com/library/a626d701-bd99-4fd8-b92f-7b8f794e042b">Arbeiten mit Bildern, Bitmaps, Symbolen und Metadateien</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Drawing.Bitmap" />-Klasse.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Bitmap (System.Drawing.Image original);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Image original) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.#ctor(System.Drawing.Image)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (original As Image)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Bitmap(System::Drawing::Image ^ original);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Bitmap : System.Drawing.Image -&gt; System.Drawing.Bitmap" Usage="new System.Drawing.Bitmap original" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="original" Type="System.Drawing.Image" />
      </Parameters>
      <Docs>
        <param name="original">Der <see cref="T:System.Drawing.Image" />, aus dem die neue <see cref="T:System.Drawing.Bitmap" /> erstellt werden soll.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Drawing.Bitmap" />-Klasse aus dem angegebenen vorhandenen Bild.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Bitmap (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.#ctor(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Bitmap(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Bitmap : System.IO.Stream -&gt; System.Drawing.Bitmap" Usage="new System.Drawing.Bitmap stream" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">Der zum Laden des Bildes verwendete Datenstream.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Drawing.Bitmap" />-Klasse aus dem angegebenen Stream.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie müssen den Stream geöffnet lassen, für die Lebensdauer der <xref:System.Drawing.Bitmap>.  
  
 Aufgrund einer Einschränkung des der [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] Decoder ein <xref:System.ArgumentException?displayProperty=nameWithType> wird ausgelöst, wenn Sie eine Bitmap aus eine PNG-Bild-Datei mit einer einzelnen Dimension größer als 65.535 Pixel erstellen.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie eine Bitmap aus einem Datenstrom geladen wird.  
  
 In diesem Beispiel wird mit Windows Forms verwendet werden soll. Erstellen Sie ein Formular, enthält eine <xref:System.Windows.Forms.PictureBox> mit dem Namen `PictureBox1`. Fügen Sie den Code in das Formular, und rufen die `InitializeStreamBitmap` Methode aus dem Konstruktor des Formulars oder <xref:System.Windows.Forms.Form.Load> Ereignisbehandlungsmethode.  
  
 [!code-cpp[System.Drawing.BitmapMembers#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.BitmapMembers/CPP/form1.cpp#2)]
 [!code-csharp[System.Drawing.BitmapMembers#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.BitmapMembers/CS/form1.cs#2)]
 [!code-vb[System.Drawing.BitmapMembers#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.BitmapMembers/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="stream" /> enthält keine Bilddaten oder ist <see langword="null" />.  
  
- oder -  
 <paramref name="stream" /> enthält eine eindimensionale PNG-Bilddatei, deren Umfang 65.535 Pixel überschreitet.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/6be085a2-2c13-47c8-b80a-c18b32777d8d">Bitmaptypen</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Bitmap (string filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string filename) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (filename As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Bitmap(System::String ^ filename);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Bitmap : string -&gt; System.Drawing.Bitmap" Usage="new System.Drawing.Bitmap filename" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filename">Der Dateiname und Pfad der Bitmapdatei.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Drawing.Bitmap" />-Klasse aus der angegebenen Datei.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Name und Pfad können relativ zu der Anwendung oder ein absoluter Pfad sein. Verwenden Sie diesen Konstruktor, um Bilder mit den folgenden Dateiformaten zu öffnen: BMP, GIF, EXIF, JPG, PNG und TIFF. Weitere Informationen zu den unterstützten Formaten finden Sie unter [Typen von Bitmaps](~/docs/framework/winforms/advanced/types-of-bitmaps.md). Die Datei bleibt gesperrt, bis die <xref:System.Drawing.Bitmap> verworfen wird.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.FileNotFoundException">Die angegebene Datei wurde nicht gefunden.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/6be085a2-2c13-47c8-b80a-c18b32777d8d">Bitmaptypen</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Bitmap (System.Drawing.Image original, System.Drawing.Size newSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Image original, valuetype System.Drawing.Size newSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.#ctor(System.Drawing.Image,System.Drawing.Size)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (original As Image, newSize As Size)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Bitmap(System::Drawing::Image ^ original, System::Drawing::Size newSize);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Bitmap : System.Drawing.Image * System.Drawing.Size -&gt; System.Drawing.Bitmap" Usage="new System.Drawing.Bitmap (original, newSize)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="original" Type="System.Drawing.Image" />
        <Parameter Name="newSize" Type="System.Drawing.Size" />
      </Parameters>
      <Docs>
        <param name="original">Der <see cref="T:System.Drawing.Image" />, aus dem die neue <see cref="T:System.Drawing.Bitmap" /> erstellt werden soll.</param>
        <param name="newSize">Die <see cref="T:System.Drawing.Size" />-Struktur, die die Größe der neuen <see cref="T:System.Drawing.Bitmap" /> darstellt.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Drawing.Bitmap" />-Klasse aus dem angegebenen vorhandenen Bild, skaliert auf die angegebene Größe.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Exception">Fehler bei diesem Vorgang.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Bitmap (int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 width, int32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.#ctor(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (width As Integer, height As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Bitmap(int width, int height);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Bitmap : int * int -&gt; System.Drawing.Bitmap" Usage="new System.Drawing.Bitmap (width, height)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="width">Die Breite der neuen <see cref="T:System.Drawing.Bitmap" /> in Pixel.</param>
        <param name="height">Die Höhe der neuen <see cref="T:System.Drawing.Bitmap" /> in Pixel.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Drawing.Bitmap" />-Klasse mit der angegebenen Größe.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Konstruktor erstellt ein <xref:System.Drawing.Bitmap> mit einem <xref:System.Drawing.Imaging.PixelFormat> Enumerationswert der <xref:System.Drawing.Imaging.PixelFormat.Format32bppArgb>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">Fehler bei diesem Vorgang.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Bitmap (System.IO.Stream stream, bool useIcm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream, bool useIcm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.#ctor(System.IO.Stream,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Bitmap(System::IO::Stream ^ stream, bool useIcm);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Bitmap : System.IO.Stream * bool -&gt; System.Drawing.Bitmap" Usage="new System.Drawing.Bitmap (stream, useIcm)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="useIcm" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="stream">Der zum Laden des Bildes verwendete Datenstream.</param>
        <param name="useIcm">
          <see langword="true" />, wenn für diese <see cref="T:System.Drawing.Bitmap" /> Farbkorrektur verwendet werden soll, andernfalls <see langword="false" />.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Drawing.Bitmap" />-Klasse aus dem angegebenen Stream.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie müssen den Stream geöffnet lassen, für die Lebensdauer der <xref:System.Drawing.Bitmap>.  
  
 Aufgrund einer Einschränkung des der [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] Decoder ein <xref:System.ArgumentException?displayProperty=nameWithType> wird ausgelöst, wenn Sie eine Bitmap aus eine PNG-Bild-Datei mit einer einzelnen Dimension größer als 65.535 Pixel erstellen.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="stream" /> enthält keine Bilddaten oder ist <see langword="null" />.  
  
- oder -  
 <paramref name="stream" /> enthält eine eindimensionale PNG-Bilddatei, deren Umfang 65.535 Pixel überschreitet.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/6be085a2-2c13-47c8-b80a-c18b32777d8d">Bitmaptypen</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Bitmap (string filename, bool useIcm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string filename, bool useIcm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.#ctor(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (filename As String, useIcm As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Bitmap(System::String ^ filename, bool useIcm);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Bitmap : string * bool -&gt; System.Drawing.Bitmap" Usage="new System.Drawing.Bitmap (filename, useIcm)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
        <Parameter Name="useIcm" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="filename">Der Name der Bitmapdatei.</param>
        <param name="useIcm">
          <see langword="true" />, wenn für diese <see cref="T:System.Drawing.Bitmap" /> Farbkorrektur verwendet werden soll, andernfalls <see langword="false" />.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Drawing.Bitmap" />-Klasse aus der angegebenen Datei.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diesen Konstruktor, um Bilder mit den folgenden Dateiformaten zu öffnen: BMP, GIF, EXIF, JPG, PNG und TIFF. Weitere Informationen zu den unterstützten Formaten finden Sie unter [Typen von Bitmaps](~/docs/framework/winforms/advanced/types-of-bitmaps.md). Die Datei bleibt gesperrt, bis die <xref:System.Drawing.Bitmap> verworfen wird.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie eine neue Bitmap aus einer Datei zu erstellen. Im Beispiel wird die <xref:System.Drawing.Bitmap.GetPixel%2A> und <xref:System.Drawing.Bitmap.SetPixel%2A> Methoden zum Neueinfärben des Bilds. Darüber hinaus verwendet er die <xref:System.Drawing.Image.PixelFormat%2A> Eigenschaft.  
  
 Dieses Beispiel wurde entworfen, um mit einem Windows-Formular verwendet werden, enthalten eine <xref:System.Windows.Forms.Label>, <xref:System.Windows.Forms.PictureBox> und <xref:System.Windows.Forms.Button> mit dem Namen `Label1`, `PictureBox1` und `Button1`bzw. Fügen Sie den Code in das Formular, und ordnen die `Button1_Click` -Methode mit der Schaltfläche <xref:System.Windows.Forms.Control.Click> Ereignis.  
  
 [!code-cpp[System.Drawing.ImageExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ImageExample/CPP/form1.cpp#1)]
 [!code-csharp[System.Drawing.ImageExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ImageExample/CS/form1.cs#1)]
 [!code-vb[System.Drawing.ImageExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ImageExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">für den Aufruf von nicht verwaltetem Code. Verwandte Enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <related type="Article" href="https://msdn.microsoft.com/library/6be085a2-2c13-47c8-b80a-c18b32777d8d">Bitmaptypen</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Bitmap (Type type, string resource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type, string resource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.#ctor(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Bitmap(Type ^ type, System::String ^ resource);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Bitmap : Type * string -&gt; System.Drawing.Bitmap" Usage="new System.Drawing.Bitmap (type, resource)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="resource" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">Die Klasse, mit der die Ressource extrahiert wird.</param>
        <param name="resource">Der Name der Ressource.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Drawing.Bitmap" />-Klasse aus einer angegebenen Ressource.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Konstruktor den Namespace des angegebenen Typs mit den Namen der Ressource kombiniert und sucht nach einer Übereinstimmung im Assemblymanifest. Sie können z. B. übergeben, der <xref:System.Windows.Forms.Button> Typ und `Button.bmp` dieser Konstruktor, und es sieht für eine Ressource mit dem Namen `System.Windows.Forms.Button.bmp`.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie eine Bitmap von einem Typ erstellt, und wie Sie mit der <xref:System.Drawing.Image.Save%2A> Methode. Um dieses Beispiel auszuführen, fügen Sie den Code in eine Windows Form aus. Behandeln Sie das <xref:System.Windows.Forms.Control.Paint> Ereignis, und rufen die `ConstructFromResourceSaveAsGif` Methode auf und übergibt `e` als <xref:System.Windows.Forms.PaintEventArgs>  
  
 [!code-cpp[System.Drawing.BmpCtorAndSave#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.BmpCtorAndSave/cpp/form1.cpp#1)]
 [!code-csharp[System.Drawing.BmpCtorAndSave#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.BmpCtorAndSave/CS/form1.cs#1)]
 [!code-vb[System.Drawing.BmpCtorAndSave#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.BmpCtorAndSave/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6be085a2-2c13-47c8-b80a-c18b32777d8d">Bitmaptypen</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Bitmap (System.Drawing.Image original, int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Image original, int32 width, int32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.#ctor(System.Drawing.Image,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (original As Image, width As Integer, height As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Bitmap(System::Drawing::Image ^ original, int width, int height);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Bitmap : System.Drawing.Image * int * int -&gt; System.Drawing.Bitmap" Usage="new System.Drawing.Bitmap (original, width, height)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="original" Type="System.Drawing.Image" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="original">Der <see cref="T:System.Drawing.Image" />, aus dem die neue <see cref="T:System.Drawing.Bitmap" /> erstellt werden soll.</param>
        <param name="width">Die Breite der neuen <see cref="T:System.Drawing.Bitmap" /> in Pixel.</param>
        <param name="height">Die Höhe der neuen <see cref="T:System.Drawing.Bitmap" /> in Pixel.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Drawing.Bitmap" />-Klasse aus dem angegebenen vorhandenen Bild, skaliert auf die angegebene Größe.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Exception">Fehler bei diesem Vorgang.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Bitmap (int width, int height, System.Drawing.Graphics g);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 width, int32 height, class System.Drawing.Graphics g) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.#ctor(System.Int32,System.Int32,System.Drawing.Graphics)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (width As Integer, height As Integer, g As Graphics)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Bitmap(int width, int height, System::Drawing::Graphics ^ g);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Bitmap : int * int * System.Drawing.Graphics -&gt; System.Drawing.Bitmap" Usage="new System.Drawing.Bitmap (width, height, g)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="g" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="width">Die Breite der neuen <see cref="T:System.Drawing.Bitmap" /> in Pixel.</param>
        <param name="height">Die Höhe der neuen <see cref="T:System.Drawing.Bitmap" /> in Pixel.</param>
        <param name="g">Das <see cref="T:System.Drawing.Graphics" />-Objekt, das die Auflösung für die neue <see cref="T:System.Drawing.Bitmap" /> angibt.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Drawing.Bitmap" />-Klasse mit der angegebenen Größe und der Auflösung des angegebenen <see cref="T:System.Drawing.Graphics" />-Objekts.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die neue <xref:System.Drawing.Bitmap> , diese Methode erstellt akzeptiert die horizontale und vertikale Auflösung aus der <xref:System.Drawing.Graphics.DpiX%2A> und <xref:System.Drawing.Graphics.DpiY%2A> Eigenschaften `g`bzw.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="g" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Bitmap (int width, int height, System.Drawing.Imaging.PixelFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 width, int32 height, valuetype System.Drawing.Imaging.PixelFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.#ctor(System.Int32,System.Int32,System.Drawing.Imaging.PixelFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (width As Integer, height As Integer, format As PixelFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Bitmap(int width, int height, System::Drawing::Imaging::PixelFormat format);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Bitmap : int * int * System.Drawing.Imaging.PixelFormat -&gt; System.Drawing.Bitmap" Usage="new System.Drawing.Bitmap (width, height, format)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="format" Type="System.Drawing.Imaging.PixelFormat" />
      </Parameters>
      <Docs>
        <param name="width">Die Breite der neuen <see cref="T:System.Drawing.Bitmap" /> in Pixel.</param>
        <param name="height">Die Höhe der neuen <see cref="T:System.Drawing.Bitmap" /> in Pixel.</param>
        <param name="format">Das Pixelformat für die neue <see cref="T:System.Drawing.Bitmap" />. Dies muss einen Wert angeben, der mit <c>Format</c> beginnt.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Drawing.Bitmap" />-Klasse mit der angegebenen Größe und dem angegebenen Format.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">Ein <see cref="T:System.Drawing.Imaging.PixelFormat" />-Wert wird angegeben, dessen Name nicht mit *Format* beginnt. Die Angabe von <see cref="F:System.Drawing.Imaging.PixelFormat.Gdi" /> verursacht z. B. eine <see cref="T:System.ArgumentException" />, <see cref="F:System.Drawing.Imaging.PixelFormat.Format48bppRgb" /> hingegen nicht.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Bitmap (int width, int height, int stride, System.Drawing.Imaging.PixelFormat format, IntPtr scan0);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 width, int32 height, int32 stride, valuetype System.Drawing.Imaging.PixelFormat format, native int scan0) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.#ctor(System.Int32,System.Int32,System.Int32,System.Drawing.Imaging.PixelFormat,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (width As Integer, height As Integer, stride As Integer, format As PixelFormat, scan0 As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Bitmap(int width, int height, int stride, System::Drawing::Imaging::PixelFormat format, IntPtr scan0);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Bitmap : int * int * int * System.Drawing.Imaging.PixelFormat * nativeint -&gt; System.Drawing.Bitmap" Usage="new System.Drawing.Bitmap (width, height, stride, format, scan0)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="stride" Type="System.Int32" />
        <Parameter Name="format" Type="System.Drawing.Imaging.PixelFormat" />
        <Parameter Name="scan0" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="width">Die Breite der neuen <see cref="T:System.Drawing.Bitmap" /> in Pixel.</param>
        <param name="height">Die Höhe der neuen <see cref="T:System.Drawing.Bitmap" /> in Pixel.</param>
        <param name="stride">Ganze Zahl, die den Byteoffset zwischen dem Anfang einer Scanzeile und der nächsten angibt. Dabei handelt es sich normalerweise (aber nicht zwingend) um die Anzahl von Bytes im Pixelformat (z. B. 2 für 16 Bits pro Pixel) multipliziert mit der Breite der Bitmap. Der an diesen Parameter übergebene Wert muss ein Vielfaches von vier sein.</param>
        <param name="format">Das Pixelformat für die neue <see cref="T:System.Drawing.Bitmap" />. Dies muss einen Wert angeben, der mit <c>Format</c> beginnt.</param>
        <param name="scan0">Zeiger auf ein Array von Bytes, das die Pixeldaten enthält.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Drawing.Bitmap" />-Klasse mit der angegebenen Größe, dem Pixelformat und den Pixeldaten.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Aufrufer ist verantwortlich für das zuordnen und Freigeben des Arbeitsspeichers, die gemäß der `scan0` Parameter. Jedoch der Arbeitsspeicher nicht freigegeben werden sollten erst die zugehörigen <xref:System.Drawing.Bitmap> veröffentlicht wird.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie mit der <xref:System.Drawing.Bitmap.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Drawing.Imaging.PixelFormat%2CSystem.IntPtr%29> Konstruktor. In diesem Beispiel wird mit Windows Forms verwendet werden soll, und erfordert eine <xref:System.Windows.Forms.PaintEventArgs> -Parameter, der ein Parameter ist von der <xref:System.Windows.Forms.Control.Paint> Ereignis.  
  
 [!code-csharp[System.Drawing.MiscExamples#Constructor](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.MiscExamples/CS/form1.cs#constructor)]
 [!code-vb[System.Drawing.MiscExamples#Constructor](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.MiscExamples/VB/form1.vb#constructor)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Ein <see cref="T:System.Drawing.Imaging.PixelFormat" />-Wert wird angegeben, dessen Name nicht mit *Format* beginnt. Die Angabe von <see cref="F:System.Drawing.Imaging.PixelFormat.Gdi" /> verursacht z. B. eine <see cref="T:System.ArgumentException" />, <see cref="F:System.Drawing.Imaging.PixelFormat.Format48bppRgb" /> hingegen nicht.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">für den Aufruf von nicht verwaltetem Code. Verwandte Enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="Clone">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Erstellt eine Kopie des Abschnitts dieser <see cref="T:System.Drawing.Bitmap" />, die mit einem angegebenen <see cref="T:System.Drawing.Imaging.PixelFormat" /> definiert wird.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Drawing.Bitmap Clone (System.Drawing.Rectangle rect, System.Drawing.Imaging.PixelFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Drawing.Bitmap Clone(valuetype System.Drawing.Rectangle rect, valuetype System.Drawing.Imaging.PixelFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.Clone(System.Drawing.Rectangle,System.Drawing.Imaging.PixelFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone (rect As Rectangle, format As PixelFormat) As Bitmap" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Bitmap ^ Clone(System::Drawing::Rectangle rect, System::Drawing::Imaging::PixelFormat format);" />
      <MemberSignature Language="F#" Value="override this.Clone : System.Drawing.Rectangle * System.Drawing.Imaging.PixelFormat -&gt; System.Drawing.Bitmap" Usage="bitmap.Clone (rect, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Bitmap</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
        <Parameter Name="format" Type="System.Drawing.Imaging.PixelFormat" />
      </Parameters>
      <Docs>
        <param name="rect">Definiert den zu kopierenden Bereich dieser <see cref="T:System.Drawing.Bitmap" />. Die Koordinaten sind relativ zu dieser <see cref="T:System.Drawing.Bitmap" />.</param>
        <param name="format">Das Pixelformat für die neue <see cref="T:System.Drawing.Bitmap" />. Dies muss einen Wert angeben, der mit <c>Format</c> beginnt.</param>
        <summary>Erstellt eine Kopie des Abschnitts dieser <see cref="T:System.Drawing.Bitmap" />, die durch die <see cref="T:System.Drawing.Rectangle" />-Struktur definiert wird, mit einer angegebenen <see cref="T:System.Drawing.Imaging.PixelFormat" />-Enumeration.</summary>
        <returns>Das neue <see cref="T:System.Drawing.Bitmap" />, das von dieser Methode erstellt wird.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Codebeispiel wird für die Verwendung mit Windows Forms konzipiert und erfordert <xref:System.Windows.Forms.PaintEventArgs> `e`, ein Parameter von der <xref:System.Windows.Forms.Control.Paint> -Ereignishandler. Der Code führt die folgenden Aktionen aus:  
  
-   Erstellt eine <xref:System.Drawing.Bitmap> aus einer Datei.  
  
-   Klonen ein Teils davon <xref:System.Drawing.Bitmap>.  
  
-   Zeichnet den geklonten Bereich auf dem Bildschirm an.  
  
 [!code-cpp[System.Drawing.ClassicBitmapExamples#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CPP/form1.cpp#1)]
 [!code-csharp[System.Drawing.ClassicBitmapExamples#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CS/form1.cs#1)]
 [!code-vb[System.Drawing.ClassicBitmapExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OutOfMemoryException">
          <paramref name="rect" /> ist außerhalb der Quellbitmapgrenzen.</exception>
        <exception cref="T:System.ArgumentException">Die Höhe oder die Breite von <paramref name="rect" /> ist 0.  
  
- oder -  
Ein <see cref="T:System.Drawing.Imaging.PixelFormat" />-Wert wird angegeben, dessen Name nicht mit *Format* beginnt. Die Angabe von <see cref="F:System.Drawing.Imaging.PixelFormat.Gdi" /> verursacht z. B. eine <see cref="T:System.ArgumentException" />, <see cref="F:System.Drawing.Imaging.PixelFormat.Format48bppRgb" /> hingegen nicht.</exception>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Drawing.Bitmap Clone (System.Drawing.RectangleF rect, System.Drawing.Imaging.PixelFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Drawing.Bitmap Clone(valuetype System.Drawing.RectangleF rect, valuetype System.Drawing.Imaging.PixelFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.Clone(System.Drawing.RectangleF,System.Drawing.Imaging.PixelFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone (rect As RectangleF, format As PixelFormat) As Bitmap" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Bitmap ^ Clone(System::Drawing::RectangleF rect, System::Drawing::Imaging::PixelFormat format);" />
      <MemberSignature Language="F#" Value="override this.Clone : System.Drawing.RectangleF * System.Drawing.Imaging.PixelFormat -&gt; System.Drawing.Bitmap" Usage="bitmap.Clone (rect, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Bitmap</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.RectangleF" />
        <Parameter Name="format" Type="System.Drawing.Imaging.PixelFormat" />
      </Parameters>
      <Docs>
        <param name="rect">Definiert den zu kopierenden Bereich dieser <see cref="T:System.Drawing.Bitmap" />.</param>
        <param name="format">Gibt die <see cref="T:System.Drawing.Imaging.PixelFormat" />-Enumeration für die Ziel-<see cref="T:System.Drawing.Bitmap" /> an.</param>
        <summary>Erstellt eine Kopie des Abschnitts dieser <see cref="T:System.Drawing.Bitmap" />, die mit einer angegebenen <see cref="T:System.Drawing.Imaging.PixelFormat" />-Enumeration definiert wird.</summary>
        <returns>Die <see cref="T:System.Drawing.Bitmap" />, die von dieser Methode erstellt wird.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Codebeispiel wird für die Verwendung mit Windows Forms konzipiert und erfordert <xref:System.Windows.Forms.PaintEventArgs> `e`, ein Parameter von der <xref:System.Windows.Forms.Control.Paint> -Ereignishandler. Der Code führt die folgenden Aktionen aus:  
  
-   Erstellt eine <xref:System.Drawing.Bitmap> aus einer Datei.  
  
-   Klonen ein Teils davon <xref:System.Drawing.Bitmap>.  
  
-   Zeichnet den geklonten Bereich auf dem Bildschirm an.  
  
 [!code-cpp[System.Drawing.ClassicBitmapExamples#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CPP/form1.cpp#2)]
 [!code-csharp[System.Drawing.ClassicBitmapExamples#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CS/form1.cs#2)]
 [!code-vb[System.Drawing.ClassicBitmapExamples#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OutOfMemoryException">
          <paramref name="rect" /> ist außerhalb der Quellbitmapgrenzen.</exception>
        <exception cref="T:System.ArgumentException">Die Höhe oder die Breite von <paramref name="rect" /> ist 0.</exception>
      </Docs>
    </Member>
    <Member MemberName="FromHicon">
      <MemberSignature Language="C#" Value="public static System.Drawing.Bitmap FromHicon (IntPtr hicon);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Drawing.Bitmap FromHicon(native int hicon) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.FromHicon(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromHicon (hicon As IntPtr) As Bitmap" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Bitmap ^ FromHicon(IntPtr hicon);" />
      <MemberSignature Language="F#" Value="static member FromHicon : nativeint -&gt; System.Drawing.Bitmap" Usage="System.Drawing.Bitmap.FromHicon hicon" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Bitmap</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hicon" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="hicon">Ein Handle für ein Symbol.</param>
        <summary>Erstellt eine <see cref="T:System.Drawing.Bitmap" /> aus einem Windows-Handle für ein Symbol.</summary>
        <returns>Die <see cref="T:System.Drawing.Bitmap" />, die von dieser Methode erstellt wird.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Codebeispiel wird für die Verwendung mit Windows Forms konzipiert und erfordert <xref:System.Windows.Forms.PaintEventArgs> `e`, ein Parameter von der <xref:System.Windows.Forms.Control.Paint> -Ereignishandler. Der Code führt die folgenden Aktionen aus:  
  
-   Ruft das Handle für ein vorhandenes Symbol-Image ab.  
  
-   Erstellt eine <xref:System.Drawing.Bitmap> anhand des Handles.  
  
-   Zeichnet die <xref:System.Drawing.Bitmap> auf dem Bildschirm.  
  
 [!code-cpp[System.Drawing.ClassicBitmapExamples#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CPP/form1.cpp#3)]
 [!code-csharp[System.Drawing.ClassicBitmapExamples#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CS/form1.cs#3)]
 [!code-vb[System.Drawing.ClassicBitmapExamples#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">für den Aufruf von nicht verwaltetem Code. Verwandte Enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="FromResource">
      <MemberSignature Language="C#" Value="public static System.Drawing.Bitmap FromResource (IntPtr hinstance, string bitmapName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Drawing.Bitmap FromResource(native int hinstance, string bitmapName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.FromResource(System.IntPtr,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromResource (hinstance As IntPtr, bitmapName As String) As Bitmap" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Bitmap ^ FromResource(IntPtr hinstance, System::String ^ bitmapName);" />
      <MemberSignature Language="F#" Value="static member FromResource : nativeint * string -&gt; System.Drawing.Bitmap" Usage="System.Drawing.Bitmap.FromResource (hinstance, bitmapName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Bitmap</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hinstance" Type="System.IntPtr" />
        <Parameter Name="bitmapName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="hinstance">Ein Handle für eine Instanz der ausführbaren Datei, die die Ressource enthält.</param>
        <param name="bitmapName">Eine Zeichenfolge, die den Namen der Ressourcenbitmap enthält.</param>
        <summary>Erstellt eine <see cref="T:System.Drawing.Bitmap" /> aus der angegebenen Windows-Ressource.</summary>
        <returns>Die <see cref="T:System.Drawing.Bitmap" />, die von dieser Methode erstellt wird.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Bitmap.FromResource%2A> erfordert die Sicherheitsberechtigung zur nicht verwalteten Code aufrufen. Eine verwaltete Alternative zum Erstellen einer Bitmap aus einer eingebetteten Ressource, finden Sie unter <xref:System.Drawing.Bitmap.%23ctor%28System.Type%2CSystem.String%29?displayProperty=nameWithType>. <xref:System.Drawing.Bitmap.FromResource%2A> funktioniert nur mit Bitmaps, die Ressourcen in eine DLL-Datei benannt sind.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">für den Aufruf von nicht verwaltetem Code. Verwandte Enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetHbitmap">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Erstellt ein GDI-Bitmapobjekt aus einem GDI+-<see cref="T:System.Drawing.Bitmap" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetHbitmap">
      <MemberSignature Language="C#" Value="public IntPtr GetHbitmap ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance native int GetHbitmap() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.GetHbitmap" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHbitmap () As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IntPtr GetHbitmap();" />
      <MemberSignature Language="F#" Value="member this.GetHbitmap : unit -&gt; nativeint" Usage="bitmap.GetHbitmap " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netcore-2.1;dotnet-plat-ext-2.1;netcore-2.2;dotnet-plat-ext-2.2">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Erstellt ein [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)]-Bitmapobjekt aus dieser <see cref="T:System.Drawing.Bitmap" />.</summary>
        <returns>Ein Handle für das von dieser Methode erstellte [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)]-Bitmapobjekt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie sind verantwortlich für das Aufrufen der [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] `DeleteObject` Methode, um den Arbeitsspeicher freizugeben der [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] Bitmap-Objekt. Weitere Informationen zu GDI-Bitmaps, finden Sie unter [Bitmaps](https://go.microsoft.com/fwlink/?LinkId=205685) in der Windows-GDI-Dokumentation.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt, wie Sie die <xref:System.Drawing.Bitmap.GetHbitmap%2A>-Methode verwenden.  
  
 [!code-cpp[System.Drawing.ClassicBitmapExamples#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CPP/form1.cpp#4)]
 [!code-csharp[System.Drawing.ClassicBitmapExamples#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CS/form1.cs#4)]
 [!code-vb[System.Drawing.ClassicBitmapExamples#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Die Höhe oder Breite der Bitmap ist größer als <see cref="F:System.Int16.MaxValue" />.</exception>
        <exception cref="T:System.Exception">Fehler bei diesem Vorgang.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">für den Aufruf von nicht verwaltetem Code. Verwandte Enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="GetHbitmap">
      <MemberSignature Language="C#" Value="public IntPtr GetHbitmap (System.Drawing.Color background);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance native int GetHbitmap(valuetype System.Drawing.Color background) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.GetHbitmap(System.Drawing.Color)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHbitmap (background As Color) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IntPtr GetHbitmap(System::Drawing::Color background);" />
      <MemberSignature Language="F#" Value="member this.GetHbitmap : System.Drawing.Color -&gt; nativeint" Usage="bitmap.GetHbitmap background" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netcore-2.1;dotnet-plat-ext-2.1;netcore-2.2;dotnet-plat-ext-2.2">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="background" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="background">Eine <see cref="T:System.Drawing.Color" />-Struktur, die die Hintergrundfarbe angibt. Dieser Parameter wird ignoriert, wenn die Bitmap nicht transparent ist.</param>
        <summary>Erstellt ein [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)]-Bitmapobjekt aus dieser <see cref="T:System.Drawing.Bitmap" />.</summary>
        <returns>Ein Handle für das von dieser Methode erstellte [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)]-Bitmapobjekt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie sind verantwortlich für das Aufrufen der [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] `DeleteObject` Methode, um den Arbeitsspeicher freizugeben der [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] Bitmap-Objekt. Weitere Informationen zu GDI-Bitmaps, finden Sie unter [Bitmaps](https://go.microsoft.com/fwlink/?LinkId=205685) in der Windows-GDI-Dokumentation.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie mit der <xref:System.Drawing.Bitmap.GetHbitmap%2A>-Methode veranschaulicht.  
  
 [!code-cpp[System.Drawing.ClassicBitmapExamples#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CPP/form1.cpp#5)]
 [!code-csharp[System.Drawing.ClassicBitmapExamples#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CS/form1.cs#5)]
 [!code-vb[System.Drawing.ClassicBitmapExamples#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Die Höhe oder Breite der Bitmap ist größer als <see cref="F:System.Int16.MaxValue" />.</exception>
        <exception cref="T:System.Exception">Fehler bei diesem Vorgang.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">für den Aufruf von nicht verwaltetem Code. Verwandte Enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="GetHicon">
      <MemberSignature Language="C#" Value="public IntPtr GetHicon ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance native int GetHicon() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.GetHicon" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHicon () As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IntPtr GetHicon();" />
      <MemberSignature Language="F#" Value="member this.GetHicon : unit -&gt; nativeint" Usage="bitmap.GetHicon " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netcore-2.1;dotnet-plat-ext-2.1;netcore-2.2;dotnet-plat-ext-2.2">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt das Handle für ein Symbol zurück.</summary>
        <returns>Ein Windows-Handle für ein Symbol mit einem Bild, das mit der <see cref="T:System.Drawing.Bitmap" /> übereinstimmt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zunächst müssen ein Symbol aus dem Handle erstellt die gleiche Größe wie die ursprüngliche Bitmap ab.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird für die Verwendung mit Windows Forms konzipiert und erfordert <xref:System.Windows.Forms.PaintEventArgs> `e`, ein Parameter von der <xref:System.Windows.Forms.Control.Paint> -Ereignishandler. Der Code führt die folgenden Aktionen aus:  
  
-   Erstellt eine <xref:System.Drawing.Bitmap>.  
  
-   Zeichnet das Objekt auf dem Bildschirm an.  
  
-   Ruft ein Symbolhandle für die <xref:System.Drawing.Bitmap>.  
  
-   Legt die <xref:System.Windows.Forms.Form.Icon%2A?displayProperty=nameWithType> Attribut des Formulars ein Symbol aus dem Handle erstellt wurde.  
  
 [!code-cpp[System.Drawing.ClassicBitmapExamples#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CPP/form1.cpp#6)]
 [!code-csharp[System.Drawing.ClassicBitmapExamples#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CS/form1.cs#6)]
 [!code-vb[System.Drawing.ClassicBitmapExamples#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/VB/form1.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">Fehler bei diesem Vorgang.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">für den Aufruf von nicht verwaltetem Code. Verwandte Enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="GetPixel">
      <MemberSignature Language="C#" Value="public System.Drawing.Color GetPixel (int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.Color GetPixel(int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.GetPixel(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPixel (x As Integer, y As Integer) As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Color GetPixel(int x, int y);" />
      <MemberSignature Language="F#" Value="member this.GetPixel : int * int -&gt; System.Drawing.Color" Usage="bitmap.GetPixel (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x">Die x-Koordinate des abzurufenden Pixels.</param>
        <param name="y">Die y-Koordinate des abzurufenden Pixels.</param>
        <summary>Ruft die Farbe des angegebenen Pixels in dieser <see cref="T:System.Drawing.Bitmap" /> ab.</summary>
        <returns>Eine <see cref="T:System.Drawing.Color" />-Struktur, die die Farbe des angegebenen Pixels darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Codebeispiel wird für die Verwendung mit Windows Forms konzipiert und erfordert <xref:System.Windows.Forms.PaintEventArgs> `e`, ein Parameter von der <xref:System.Windows.Forms.Control.Paint> -Ereignishandler. Der Code Ruft die Farbe eines Pixels in einer Bitmap und füllt dann ein Rechteck mit dieser Farbe.  
  
 [!code-cpp[System.Drawing.ClassicBitmapExamples#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CPP/form1.cpp#7)]
 [!code-csharp[System.Drawing.ClassicBitmapExamples#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CS/form1.cs#7)]
 [!code-vb[System.Drawing.ClassicBitmapExamples#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/VB/form1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="x" /> ist kleiner als 0 oder größer oder gleich <see cref="P:System.Drawing.Image.Width" />.  
  
- oder -  
 <paramref name="y" /> ist kleiner als 0 oder größer oder gleich <see cref="P:System.Drawing.Image.Height" />.</exception>
        <exception cref="T:System.Exception">Fehler bei diesem Vorgang.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="LockBits">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Sperrt eine <see cref="T:System.Drawing.Bitmap" /> im Systemspeicher.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="LockBits">
      <MemberSignature Language="C#" Value="public System.Drawing.Imaging.BitmapData LockBits (System.Drawing.Rectangle rect, System.Drawing.Imaging.ImageLockMode flags, System.Drawing.Imaging.PixelFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Drawing.Imaging.BitmapData LockBits(valuetype System.Drawing.Rectangle rect, valuetype System.Drawing.Imaging.ImageLockMode flags, valuetype System.Drawing.Imaging.PixelFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.LockBits(System.Drawing.Rectangle,System.Drawing.Imaging.ImageLockMode,System.Drawing.Imaging.PixelFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Function LockBits (rect As Rectangle, flags As ImageLockMode, format As PixelFormat) As BitmapData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Imaging::BitmapData ^ LockBits(System::Drawing::Rectangle rect, System::Drawing::Imaging::ImageLockMode flags, System::Drawing::Imaging::PixelFormat format);" />
      <MemberSignature Language="F#" Value="member this.LockBits : System.Drawing.Rectangle * System.Drawing.Imaging.ImageLockMode * System.Drawing.Imaging.PixelFormat -&gt; System.Drawing.Imaging.BitmapData" Usage="bitmap.LockBits (rect, flags, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Imaging.BitmapData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
        <Parameter Name="flags" Type="System.Drawing.Imaging.ImageLockMode" />
        <Parameter Name="format" Type="System.Drawing.Imaging.PixelFormat" />
      </Parameters>
      <Docs>
        <param name="rect">Eine <see cref="T:System.Drawing.Rectangle" />-Struktur, die den zu zeichnenden Teil der <see cref="T:System.Drawing.Bitmap" /> angibt.</param>
        <param name="flags">Eine <see cref="T:System.Drawing.Imaging.ImageLockMode" />-Enumeration, die die Zugriffsebene (Lesen/Schreiben) für die <see cref="T:System.Drawing.Bitmap" /> angibt.</param>
        <param name="format">Eine <see cref="T:System.Drawing.Imaging.PixelFormat" />-Enumeration, die das Datenformat dieser <see cref="T:System.Drawing.Bitmap" /> angibt.</param>
        <summary>Sperrt eine <see cref="T:System.Drawing.Bitmap" /> im Systemspeicher.</summary>
        <returns>Ein <see cref="T:System.Drawing.Imaging.BitmapData" /> mit den Informationen über den Sperrvorgang.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Drawing.Bitmap.LockBits%2A> Methode, um einer vorhandenen Bitmap im Arbeitsspeicher zu sperren, sodass es programmgesteuert geändert werden kann. Können Sie die Farbe eines Bilds mit Ändern der <xref:System.Drawing.Bitmap.SetPixel%2A> -Methode, obwohl die <xref:System.Drawing.Bitmap.LockBits%2A> Methode bietet eine bessere Leistung für umfangreiche Änderungen.  
  
 Die <xref:System.Drawing.Imaging.BitmapData> gibt die Attribute der <xref:System.Drawing.Bitmap>, z. B. Größe, Pixelformat, die Startadresse der Pixeldaten im Arbeitsspeicher und die Länge der einzelnen Scanzeilen (Schritt).  
  
 Beim Aufrufen dieser Methode sollten Sie verwenden ein Mitglied der <xref:System.Drawing.Imaging.PixelFormat?displayProperty=nameWithType> -Enumeration, die einen Wert für die bestimmten Bits pro Pixel (BPP) enthält. Mithilfe von <xref:System.Drawing.Imaging.PixelFormat?displayProperty=nameWithType> Werte z. B. <xref:System.Drawing.Imaging.PixelFormat.Indexed> und <xref:System.Drawing.Imaging.PixelFormat.Gdi> löst eine <xref:System.ArgumentException?displayProperty=nameWithType>. Übergeben das falsche Format für eine Bitmap löst außerdem eine <xref:System.ArgumentException?displayProperty=nameWithType>.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie mit der <xref:System.Drawing.Image.PixelFormat%2A>, <xref:System.Drawing.Image.Height%2A>, <xref:System.Drawing.Image.Width%2A>, und <xref:System.Drawing.Imaging.BitmapData.Scan0%2A> Eigenschaften; das <xref:System.Drawing.Bitmap.LockBits%2A> und <xref:System.Drawing.Bitmap.UnlockBits%2A> -Methoden und die <xref:System.Drawing.Imaging.ImageLockMode> Enumeration. In diesem Beispiel wird mit Windows Forms verwendet werden soll. In diesem Beispiel dient nicht ordnungsgemäß mit allen Pixelformate, sondern geben Sie ein Beispiel zur Verwendung der <xref:System.Drawing.Bitmap.LockBits%2A> Methode. Um dieses Beispiel auszuführen, fügen Sie ihn in ein Formular, und behandeln Sie das <xref:System.Windows.Forms.Control.Paint> Ereignis durch Aufrufen der `LockUnlockBitsExample` Methode auf und übergibt `e` als <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-cpp[System.Drawing.BitmapMembers#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.BitmapMembers/CPP/form1.cpp#5)]
 [!code-csharp[System.Drawing.BitmapMembers#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.BitmapMembers/CS/form1.cs#5)]
 [!code-vb[System.Drawing.BitmapMembers#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.BitmapMembers/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <see cref="T:System.Drawing.Imaging.PixelFormat" /> ist kein in Bit pro Pixel angegebener Wert.  
  
- oder -  
Für eine Bitmap wurde ein falsches <see cref="T:System.Drawing.Imaging.PixelFormat" /> übergeben.</exception>
        <exception cref="T:System.Exception">Fehler bei diesem Vorgang.</exception>
      </Docs>
    </Member>
    <Member MemberName="LockBits">
      <MemberSignature Language="C#" Value="public System.Drawing.Imaging.BitmapData LockBits (System.Drawing.Rectangle rect, System.Drawing.Imaging.ImageLockMode flags, System.Drawing.Imaging.PixelFormat format, System.Drawing.Imaging.BitmapData bitmapData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Drawing.Imaging.BitmapData LockBits(valuetype System.Drawing.Rectangle rect, valuetype System.Drawing.Imaging.ImageLockMode flags, valuetype System.Drawing.Imaging.PixelFormat format, class System.Drawing.Imaging.BitmapData bitmapData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.LockBits(System.Drawing.Rectangle,System.Drawing.Imaging.ImageLockMode,System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.BitmapData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Imaging::BitmapData ^ LockBits(System::Drawing::Rectangle rect, System::Drawing::Imaging::ImageLockMode flags, System::Drawing::Imaging::PixelFormat format, System::Drawing::Imaging::BitmapData ^ bitmapData);" />
      <MemberSignature Language="F#" Value="member this.LockBits : System.Drawing.Rectangle * System.Drawing.Imaging.ImageLockMode * System.Drawing.Imaging.PixelFormat * System.Drawing.Imaging.BitmapData -&gt; System.Drawing.Imaging.BitmapData" Usage="bitmap.LockBits (rect, flags, format, bitmapData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Imaging.BitmapData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
        <Parameter Name="flags" Type="System.Drawing.Imaging.ImageLockMode" />
        <Parameter Name="format" Type="System.Drawing.Imaging.PixelFormat" />
        <Parameter Name="bitmapData" Type="System.Drawing.Imaging.BitmapData" />
      </Parameters>
      <Docs>
        <param name="rect">Eine Rectangle-Struktur, die den zu sperrenden Bereich der <see cref="T:System.Drawing.Bitmap" /> angibt.</param>
        <param name="flags">Einer der <see cref="T:System.Drawing.Imaging.ImageLockMode" />-Werte, der die Zugriffsebene (Lesen/Schreiben) für die <see cref="T:System.Drawing.Bitmap" /> angibt.</param>
        <param name="format">Einer der <see cref="T:System.Drawing.Imaging.PixelFormat" />-Werte, der das Datenformat der <see cref="T:System.Drawing.Bitmap" /> angibt.</param>
        <param name="bitmapData">Ein <see cref="T:System.Drawing.Imaging.BitmapData" /> mit den Informationen über den Sperrvorgang.</param>
        <summary>Sperrt eine <see cref="T:System.Drawing.Bitmap" /> im Systemspeicher.</summary>
        <returns>Ein <see cref="T:System.Drawing.Imaging.BitmapData" /> mit den Informationen über den Sperrvorgang.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Drawing.Bitmap.LockBits%2A> Methode, um einer vorhandenen Bitmap im Arbeitsspeicher zu sperren, sodass es programmgesteuert geändert werden kann. Können Sie die Farbe eines Bilds mit Ändern der <xref:System.Drawing.Bitmap.SetPixel%2A> -Methode, obwohl die <xref:System.Drawing.Bitmap.LockBits%2A> Methode bietet eine bessere Leistung für umfangreiche Änderungen.  
  
 Beim Aufrufen dieser Methode sollten Sie verwenden ein Mitglied der <xref:System.Drawing.Imaging.PixelFormat?displayProperty=nameWithType> -Enumeration, die einen Wert für die bestimmten Bits pro Pixel (BPP) enthält. Mithilfe von <xref:System.Drawing.Imaging.PixelFormat?displayProperty=nameWithType> Werte, z. B. <xref:System.Drawing.Imaging.PixelFormat.Indexed> und <xref:System.Drawing.Imaging.PixelFormat.Gdi>, löst eine <xref:System.ArgumentException?displayProperty=nameWithType>. Übergeben das falsche Format für eine Bitmap löst außerdem eine <xref:System.ArgumentException?displayProperty=nameWithType>.  
  
 Diese Version von der <xref:System.Drawing.Bitmap.LockBits%2A> Methode mit verwendet werden soll eine `flags` Wert <xref:System.Drawing.Imaging.ImageLockMode.UserInputBuffer?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Der <see cref="T:System.Drawing.Imaging.PixelFormat" />-Wert ist kein in Bit pro Pixel angegebener Wert.  
  
- oder -  
Für eine Bitmap wurde ein falsches <see cref="T:System.Drawing.Imaging.PixelFormat" /> übergeben.</exception>
        <exception cref="T:System.Exception">Fehler bei diesem Vorgang.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="MakeTransparent">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Macht die standardmäßige transparente Farbe für diese <see cref="T:System.Drawing.Bitmap" /> transparent.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="MakeTransparent">
      <MemberSignature Language="C#" Value="public void MakeTransparent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MakeTransparent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.MakeTransparent" />
      <MemberSignature Language="VB.NET" Value="Public Sub MakeTransparent ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MakeTransparent();" />
      <MemberSignature Language="F#" Value="member this.MakeTransparent : unit -&gt; unit" Usage="bitmap.MakeTransparent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Macht die standardmäßige transparente Farbe für diese <see cref="T:System.Drawing.Bitmap" /> transparent.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Systempalette definiert eine Farbe als transparent oder alpha, die Standardfarbe. Auf diese Weise wird die standardmäßige transparente Farbe für dieses transparent <xref:System.Drawing.Bitmap>. Wenn keine transparente Farbe, wird das System angegeben wird <xref:System.Drawing.Color.LightGray%2A> die transparente Farbe ist.  
  
 Beim Aufruf <xref:System.Drawing.Bitmap.MakeTransparent%2A>, wird die Bitmap konvertiert werden die <xref:System.Drawing.Imaging.PixelFormat.Format32bppArgb> zu formatieren, da dieses Formats einen alpha-Kanal unterstützt.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird für die Verwendung mit Windows Forms konzipiert und erfordert <xref:System.Windows.Forms.PaintEventArgs> `e`, ein Parameter von der <xref:System.Windows.Forms.Control.Paint> -Ereignishandler. Der Code legt die transparente Farbe des System-Standard für `myBitmap`, und klicken Sie dann zeichnet die <xref:System.Drawing.Bitmap> auf dem Bildschirm.  
  
 [!code-cpp[System.Drawing.ClassicBitmapExamples#8](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CPP/form1.cpp#8)]
 [!code-csharp[System.Drawing.ClassicBitmapExamples#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CS/form1.cs#8)]
 [!code-vb[System.Drawing.ClassicBitmapExamples#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/VB/form1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Das Bildformat der <see cref="T:System.Drawing.Bitmap" /> ist ein Symbolformat.</exception>
        <exception cref="T:System.Exception">Fehler bei diesem Vorgang.</exception>
      </Docs>
    </Member>
    <Member MemberName="MakeTransparent">
      <MemberSignature Language="C#" Value="public void MakeTransparent (System.Drawing.Color transparentColor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MakeTransparent(valuetype System.Drawing.Color transparentColor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.MakeTransparent(System.Drawing.Color)" />
      <MemberSignature Language="VB.NET" Value="Public Sub MakeTransparent (transparentColor As Color)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MakeTransparent(System::Drawing::Color transparentColor);" />
      <MemberSignature Language="F#" Value="member this.MakeTransparent : System.Drawing.Color -&gt; unit" Usage="bitmap.MakeTransparent transparentColor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transparentColor" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="transparentColor">Die <see cref="T:System.Drawing.Color" />-Struktur, die die Farbe darstellt, die transparent werden soll.</param>
        <summary>Bewirkt, dass die angegebene Farbe für diese <see cref="T:System.Drawing.Bitmap" /> transparent wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Beim Aufruf <xref:System.Drawing.Bitmap.MakeTransparent%2A>, wird die Bitmap konvertiert werden die <xref:System.Drawing.Imaging.PixelFormat.Format32bppArgb> zu formatieren, da dieses Formats einen alpha-Kanal unterstützt.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird für die Verwendung mit Windows Forms konzipiert und erfordert <xref:System.Windows.Forms.PaintEventArgs> `e`, ein Parameter von der <xref:System.Windows.Forms.Control.Paint> -Ereignishandler. Der Code führt die folgenden Aktionen aus:  
  
-   Ruft die Farbe eines Pixels in einem <xref:System.Drawing.Bitmap>.  
  
-   Bewirkt, dass die entsprechende Farbe transparent für die Bitmap.  
  
-   Zeichnet die <xref:System.Drawing.Bitmap> auf dem Bildschirm.  
  
 [!code-cpp[System.Drawing.ClassicBitmapExamples#9](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CPP/form1.cpp#9)]
 [!code-csharp[System.Drawing.ClassicBitmapExamples#9](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CS/form1.cs#9)]
 [!code-vb[System.Drawing.ClassicBitmapExamples#9](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/VB/form1.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Das Bildformat der <see cref="T:System.Drawing.Bitmap" /> ist ein Symbolformat.</exception>
        <exception cref="T:System.Exception">Fehler bei diesem Vorgang.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetPixel">
      <MemberSignature Language="C#" Value="public void SetPixel (int x, int y, System.Drawing.Color color);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetPixel(int32 x, int32 y, valuetype System.Drawing.Color color) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.SetPixel(System.Int32,System.Int32,System.Drawing.Color)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetPixel(int x, int y, System::Drawing::Color color);" />
      <MemberSignature Language="F#" Value="member this.SetPixel : int * int * System.Drawing.Color -&gt; unit" Usage="bitmap.SetPixel (x, y, color)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="color" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="x">Die X-Koordinate des festzulegenden Pixels.</param>
        <param name="y">Die Y-Koordinate des festzulegenden Pixels.</param>
        <param name="color">Eine <see cref="T:System.Drawing.Color" />-Struktur, die die Farbe darstellt, die dem angegebenen Pixel zugewiesen werden soll.</param>
        <summary>Legt die Farbe des angegebenen Pixels in dieser <see cref="T:System.Drawing.Bitmap" /> fest.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwendung <xref:System.Drawing.Bitmap.SetPixel%2A> Methode, um die Farbe eines einzelnen Pixels programmgesteuert in einem Bild fest. Sie können ein Bild auch programmgesteuert ändern, mit der <xref:System.Drawing.Bitmap.LockBits%2A> Methode. In der Regel für umfangreiche Änderungen der <xref:System.Drawing.Bitmap.LockBits%2A> Methode bietet eine bessere Leistung.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird für die Verwendung mit Windows Forms konzipiert und erfordert <xref:System.Windows.Forms.PaintEventArgs> `e`, ein Parameter von der <xref:System.Windows.Forms.Control.Paint> -Ereignishandler. Der Code führt die folgenden Aktionen aus:  
  
-   Erstellt eine <xref:System.Drawing.Bitmap>.  
  
-   Legt die Farbe jedes Pixels in der Bitmap auf Schwarz fest.  
  
-   Die Bitmap gezeichnet.  
  
 [!code-cpp[System.Drawing.ClassicBitmapExamples#10](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CPP/form1.cpp#10)]
 [!code-csharp[System.Drawing.ClassicBitmapExamples#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CS/form1.cs#10)]
 [!code-vb[System.Drawing.ClassicBitmapExamples#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/VB/form1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">Fehler bei diesem Vorgang.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetResolution">
      <MemberSignature Language="C#" Value="public void SetResolution (float xDpi, float yDpi);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetResolution(float32 xDpi, float32 yDpi) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.SetResolution(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetResolution (xDpi As Single, yDpi As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetResolution(float xDpi, float yDpi);" />
      <MemberSignature Language="F#" Value="member this.SetResolution : single * single -&gt; unit" Usage="bitmap.SetResolution (xDpi, yDpi)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xDpi" Type="System.Single" />
        <Parameter Name="yDpi" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="xDpi">Die horizontale Auflösung der <see cref="T:System.Drawing.Bitmap" /> in dpi (dots per inch, Punkt pro Zoll).</param>
        <param name="yDpi">Die vertikale Auflösung der <see cref="T:System.Drawing.Bitmap" /> in dpi (dots per inch, Punkt pro Zoll).</param>
        <summary>Legt die Auflösung für diese <see cref="T:System.Drawing.Bitmap" /> fest.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diese Methode, um die gewünschte Auflösung auf eine neu erstellte Bitmap festzulegen. Das Ändern der Auflösung des Bilds wird die physische Größe nicht geändert werden.  
  
   
  
## Examples  
 Der folgende Beispielcode zeigt, wie Sie mit der <xref:System.Drawing.Bitmap.SetResolution%2A> Methode.  
  
 [!code-csharp[System.Drawing.Misc3#SetResolution](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Misc3/CS/Form1.cs#setresolution)]
 [!code-vb[System.Drawing.Misc3#SetResolution](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Misc3/VB/Form1.vb#setresolution)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">Fehler bei diesem Vorgang.</exception>
      </Docs>
    </Member>
    <Member MemberName="UnlockBits">
      <MemberSignature Language="C#" Value="public void UnlockBits (System.Drawing.Imaging.BitmapData bitmapdata);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UnlockBits(class System.Drawing.Imaging.BitmapData bitmapdata) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.UnlockBits(System.Drawing.Imaging.BitmapData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UnlockBits(System::Drawing::Imaging::BitmapData ^ bitmapdata);" />
      <MemberSignature Language="F#" Value="member this.UnlockBits : System.Drawing.Imaging.BitmapData -&gt; unit" Usage="bitmap.UnlockBits bitmapdata" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bitmapdata" Type="System.Drawing.Imaging.BitmapData" />
      </Parameters>
      <Docs>
        <param name="bitmapdata">Ein <see cref="T:System.Drawing.Imaging.BitmapData" />, das die Informationen über den Sperrvorgang angibt.</param>
        <summary>Hebt die Sperre dieser <see cref="T:System.Drawing.Bitmap" /> im Systemspeicher auf.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Drawing.Imaging.BitmapData> gibt die Attribute der <xref:System.Drawing.Bitmap>, z. B. Größe, Pixelformat, die Startadresse der Pixeldaten im Arbeitsspeicher und die Länge der einzelnen Scanzeilen (Schritt).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie mit der <xref:System.Drawing.Image.PixelFormat%2A>, <xref:System.Drawing.Image.Height%2A>, <xref:System.Drawing.Image.Width%2A>, und <xref:System.Drawing.Imaging.BitmapData.Scan0%2A> Eigenschaften; das <xref:System.Drawing.Bitmap.LockBits%2A> und <xref:System.Drawing.Bitmap.UnlockBits%2A> -Methoden und die <xref:System.Drawing.Imaging.ImageLockMode> Enumeration. In diesem Beispiel dient nicht ordnungsgemäß mit allen Pixelformate, sondern geben Sie ein Beispiel zur Verwendung der <xref:System.Drawing.Bitmap.LockBits%2A> Methode. In diesem Beispiel wird mit Windows Forms verwendet werden soll. Um dieses Beispiel auszuführen, fügen Sie ihn in ein Formular, und behandeln Sie das <xref:System.Windows.Forms.Control.Paint> Ereignis durch Aufrufen der `LockUnlockBitsExample` Methode auf und übergibt `e` als <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-cpp[System.Drawing.BitmapMembers#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.BitmapMembers/CPP/form1.cpp#5)]
 [!code-csharp[System.Drawing.BitmapMembers#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.BitmapMembers/CS/form1.cs#5)]
 [!code-vb[System.Drawing.BitmapMembers#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.BitmapMembers/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">Fehler bei diesem Vorgang.</exception>
      </Docs>
    </Member>
  </Members>
</Type>