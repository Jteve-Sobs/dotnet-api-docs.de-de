<Type Name="StringFormatFlags" FullName="System.Drawing.StringFormatFlags">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e35c964f626a77f257fa54641ca079f4777a7b02" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30408094" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum StringFormatFlags" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed StringFormatFlags extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.StringFormatFlags" />
  <TypeSignature Language="VB.NET" Value="Public Enum StringFormatFlags" />
  <TypeSignature Language="C++ CLI" Value="public enum class StringFormatFlags" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Flags</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Gibt die Anzeige- und Layoutinformationen für Textzeichenfolgen an.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.StringFormatFlags> wird verwendet, durch die <xref:System.Drawing.StringFormat> Klasse.  
  
> [!NOTE]
>  Das Feld FitBlackBox irreführenden und sein Verhalten ist ähnlich wie die `NoFitBlackBox` -Feld in der ursprünglichen GDI +-Implementierung.  
  
   
  
## Examples  
 Das folgende Codebeispiel veranschaulicht die folgenden Elemente:  
  
-   <xref:System.Drawing.Rectangle.%23ctor%2A>  
  
-   <xref:System.Drawing.StringFormat.%23ctor%2A>  
  
-   <xref:System.Drawing.StringFormat.%23ctor%2A>  
  
-   <xref:System.Drawing.StringFormat.Alignment%2A>  
  
-   <xref:System.Drawing.StringFormat.LineAlignment%2A>  
  
-   <xref:System.Drawing.StringAlignment>  
  
-   <xref:System.Drawing.StringFormatFlags>  
  
 In diesem Beispiel dient, die mit Windows Forms verwendet werden. Fügen Sie den Code in ein Formular, und rufen die `ShowLineAndAlignment` Methode beim Verarbeiten des Formulars <xref:System.Windows.Forms.Control.Paint> Ereignis, und übergeben Sie `e` als <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-cpp[System.Drawing.Misc2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Misc2/CPP/form1.cpp#1)]
 [!code-csharp[System.Drawing.Misc2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Misc2/CS/form1.cs#1)]
 [!code-vb[System.Drawing.Misc2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Misc2/VB/form1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="DirectionRightToLeft">
      <MemberSignature Language="C#" Value="DirectionRightToLeft" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Drawing.StringFormatFlags DirectionRightToLeft = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Drawing.StringFormatFlags.DirectionRightToLeft" />
      <MemberSignature Language="VB.NET" Value="DirectionRightToLeft" />
      <MemberSignature Language="C++ CLI" Value="DirectionRightToLeft" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.StringFormatFlags</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Der Text wird von rechts nach links angezeigt.</summary>
      </Docs>
    </Member>
    <Member MemberName="DirectionVertical">
      <MemberSignature Language="C#" Value="DirectionVertical" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Drawing.StringFormatFlags DirectionVertical = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Drawing.StringFormatFlags.DirectionVertical" />
      <MemberSignature Language="VB.NET" Value="DirectionVertical" />
      <MemberSignature Language="C++ CLI" Value="DirectionVertical" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.StringFormatFlags</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Der Text ist vertikal ausgerichtet.</summary>
      </Docs>
    </Member>
    <Member MemberName="DisplayFormatControl">
      <MemberSignature Language="C#" Value="DisplayFormatControl" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Drawing.StringFormatFlags DisplayFormatControl = int32(32)" />
      <MemberSignature Language="DocId" Value="F:System.Drawing.StringFormatFlags.DisplayFormatControl" />
      <MemberSignature Language="VB.NET" Value="DisplayFormatControl" />
      <MemberSignature Language="C++ CLI" Value="DisplayFormatControl" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.StringFormatFlags</ReturnType>
      </ReturnValue>
      <MemberValue>32</MemberValue>
      <Docs>
        <summary>Steuerzeichen, z. B. die Markierung für die Leserichtung von links nach rechts, werden in der Ausgabe durch ein Symbol angezeigt.</summary>
      </Docs>
    </Member>
    <Member MemberName="FitBlackBox">
      <MemberSignature Language="C#" Value="FitBlackBox" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Drawing.StringFormatFlags FitBlackBox = int32(4)" />
      <MemberSignature Language="DocId" Value="F:System.Drawing.StringFormatFlags.FitBlackBox" />
      <MemberSignature Language="VB.NET" Value="FitBlackBox" />
      <MemberSignature Language="C++ CLI" Value="FitBlackBox" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.StringFormatFlags</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>Teile von Zeichen dürfen aus dem Layoutrechteck der Zeichenfolge herausragen. Standardmäßig werden Zeichen neu angeordnet, um einen Überhang zu vermeiden.</summary>
      </Docs>
    </Member>
    <Member MemberName="LineLimit">
      <MemberSignature Language="C#" Value="LineLimit" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Drawing.StringFormatFlags LineLimit = int32(8192)" />
      <MemberSignature Language="DocId" Value="F:System.Drawing.StringFormatFlags.LineLimit" />
      <MemberSignature Language="VB.NET" Value="LineLimit" />
      <MemberSignature Language="C++ CLI" Value="LineLimit" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.StringFormatFlags</ReturnType>
      </ReturnValue>
      <MemberValue>8192</MemberValue>
      <Docs>
        <summary>Im Formatierungsrechteck erfolgt ein Layout ausschließlich für vollständige Linien. Je nachdem, welches Ereignis zuerst eintritt, wird in der Standardeinstellung das Layout beendet, wenn das Ende des Textes erreicht ist oder als Ergebnis des Abschneidens keine Linien mehr sichtbar sind. Beachten Sie, dass in den Standardeinstellungen die letzte Zeile teilweise durch ein Formatierungsrechteck verborgen sein kann, das kein ganzzahliges Vielfaches der Zeilenhöhe ist. Um sicherzustellen, dass ausschließlich vollständige Zeilen angezeigt werden, geben Sie diesen Wert an, und stellen Sie ein Formatierungsrechteck bereit, das mindestens so hoch wie die Zeilenhöhe ist.</summary>
      </Docs>
    </Member>
    <Member MemberName="MeasureTrailingSpaces">
      <MemberSignature Language="C#" Value="MeasureTrailingSpaces" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Drawing.StringFormatFlags MeasureTrailingSpaces = int32(2048)" />
      <MemberSignature Language="DocId" Value="F:System.Drawing.StringFormatFlags.MeasureTrailingSpaces" />
      <MemberSignature Language="VB.NET" Value="MeasureTrailingSpaces" />
      <MemberSignature Language="C++ CLI" Value="MeasureTrailingSpaces" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.StringFormatFlags</ReturnType>
      </ReturnValue>
      <MemberValue>2048</MemberValue>
      <Docs>
        <summary>Schließt das nachgestellte Leerzeichen am Ende jeder Zeile ein. In der Standardeinstellung schließt das von der <see cref="Overload:System.Drawing.Graphics.MeasureString" />-Methode zurückgegebene Begrenzungsrechteck Leerzeichen am Ende jeder Zeile aus. Legen Sie dieses Flag fest, um diese Leerzeichen in die Abmessung einzuschließen.</summary>
      </Docs>
    </Member>
    <Member MemberName="NoClip">
      <MemberSignature Language="C#" Value="NoClip" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Drawing.StringFormatFlags NoClip = int32(16384)" />
      <MemberSignature Language="DocId" Value="F:System.Drawing.StringFormatFlags.NoClip" />
      <MemberSignature Language="VB.NET" Value="NoClip" />
      <MemberSignature Language="C++ CLI" Value="NoClip" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.StringFormatFlags</ReturnType>
      </ReturnValue>
      <MemberValue>16384</MemberValue>
      <Docs>
        <summary>Überhängende Symbolbereiche und Text außerhalb des Formatierungsrechtecks dürfen angezeigt werden. In der Standardeinstellung werden Text und Symbolbereiche außerhalb des Formatierungsrechtecks abgeschnitten.</summary>
      </Docs>
    </Member>
    <Member MemberName="NoFontFallback">
      <MemberSignature Language="C#" Value="NoFontFallback" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Drawing.StringFormatFlags NoFontFallback = int32(1024)" />
      <MemberSignature Language="DocId" Value="F:System.Drawing.StringFormatFlags.NoFontFallback" />
      <MemberSignature Language="VB.NET" Value="NoFontFallback" />
      <MemberSignature Language="C++ CLI" Value="NoFontFallback" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.StringFormatFlags</ReturnType>
      </ReturnValue>
      <MemberValue>1024</MemberValue>
      <Docs>
        <summary>Fallback zu alternativen Schriftarten für Zeichen, die in der angeforderten Schriftart nicht unterstützt werden. Sämtliche fehlenden Zeichen werden mit dem Symbol für fehlende Zeichen der Schriftart dargestellt, i. d. R. mit einem offenen Rechteck.</summary>
      </Docs>
    </Member>
    <Member MemberName="NoWrap">
      <MemberSignature Language="C#" Value="NoWrap" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Drawing.StringFormatFlags NoWrap = int32(4096)" />
      <MemberSignature Language="DocId" Value="F:System.Drawing.StringFormatFlags.NoWrap" />
      <MemberSignature Language="VB.NET" Value="NoWrap" />
      <MemberSignature Language="C++ CLI" Value="NoWrap" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.StringFormatFlags</ReturnType>
      </ReturnValue>
      <MemberValue>4096</MemberValue>
      <Docs>
        <summary>Textumbruch zwischen Zeilen, wenn die Formatierung innerhalb eines Rechtecks deaktiviert ist. Dieses Flag wird generiert, wenn ein Punkt anstelle eines Rechtecks übergeben wird, oder wenn das angegebene Rechteck die Zeilenlänge 0 hat.</summary>
      </Docs>
    </Member>
  </Members>
</Type>