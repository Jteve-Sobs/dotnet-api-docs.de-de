<Type Name="ImageConverter" FullName="System.Drawing.ImageConverter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="99874aee71f95b997aed8da5cae427a08e6f7917" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="37657057" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ImageConverter : System.ComponentModel.TypeConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ImageConverter extends System.ComponentModel.TypeConverter" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.ImageConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class ImageConverter&#xA;Inherits TypeConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class ImageConverter : System::ComponentModel::TypeConverter" />
  <TypeSignature Language="F#" Value="type ImageConverter = class&#xA;    inherit TypeConverter" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.TypeConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="bec15-101">
        <see cref="T:System.Drawing.ImageConverter" /> ist eine Klasse, mit der <see cref="T:System.Drawing.Image" />-Objekte in andere Datentypen konvertiert werden können.</span>
      <span class="sxs-lookup">
        <span data-stu-id="bec15-101">
          <see cref="T:System.Drawing.ImageConverter" /> is a class that can be used to convert <see cref="T:System.Drawing.Image" /> objects from one data type to another.</span>
      </span>
      <span data-ttu-id="bec15-102">Greifen Sie auf diese Klasse über das <see cref="T:System.ComponentModel.TypeDescriptor" />-Objekt zu.</span>
      <span class="sxs-lookup">
        <span data-stu-id="bec15-102">Access this class through the <see cref="T:System.ComponentModel.TypeDescriptor" /> object.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ImageConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.ImageConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ImageConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="bec15-103">Initialisiert eine neue Instanz der <see cref="T:System.Drawing.ImageConverter" />-Klasse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bec15-103">Initializes a new instance of the <see cref="T:System.Drawing.ImageConverter" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.ImageConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertFrom (context As ITypeDescriptorContext, sourceType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ sourceType);" />
      <MemberSignature Language="F#" Value="abstract member CanConvertFrom : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool&#xA;override this.CanConvertFrom : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="imageConverter.CanConvertFrom (context, sourceType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="bec15-104">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bec15-104">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="sourceType">
          <span data-ttu-id="bec15-105">Ein <see cref="T:System.Type" />, der den Ausgangstyp der Konvertierung angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bec15-105">A <see cref="T:System.Type" /> that specifies the type you want to convert from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bec15-106">Bestimmt, ob dieser <see cref="T:System.Drawing.ImageConverter" /> eine Instanz eines angegebenen Typs in ein <see cref="T:System.Drawing.Image" /> unter Verwendung des angegebenen Kontexts konvertieren kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bec15-106">Determines whether this <see cref="T:System.Drawing.ImageConverter" /> can convert an instance of a specified type to an <see cref="T:System.Drawing.Image" />, using the specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bec15-107">Diese Methode gibt <see langword="true" /> zurück, wenn dieser <see cref="T:System.Drawing.ImageConverter" /> die Konvertierung ausführen kann, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bec15-107">This method returns <see langword="true" /> if this <see cref="T:System.Drawing.ImageConverter" /> can perform the conversion; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bec15-108">Diese Methode gibt `true` nur, wenn `sourceType` entspricht in ein Bytearray.</span><span class="sxs-lookup"><span data-stu-id="bec15-108">This method returns `true` only if `sourceType` is equal to a byte array.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertTo">
      <MemberSignature Language="C#" Value="public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.ImageConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertTo (context As ITypeDescriptorContext, destinationType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="abstract member CanConvertTo : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool&#xA;override this.CanConvertTo : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="imageConverter.CanConvertTo (context, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="bec15-109">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bec15-109">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="destinationType">
          <span data-ttu-id="bec15-110">Ein <see cref="T:System.Type" />, der den Zieltyp der Konvertierung angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bec15-110">A <see cref="T:System.Type" /> that specifies the type you want to convert to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bec15-111">Bestimmt, ob dieser <see cref="T:System.Drawing.ImageConverter" /> ein <see cref="T:System.Drawing.Image" /> in eine Instanz eines angegebenen Typs unter Verwendung des angegebenen Kontexts konvertieren kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bec15-111">Determines whether this <see cref="T:System.Drawing.ImageConverter" /> can convert an <see cref="T:System.Drawing.Image" /> to an instance of a specified type, using the specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bec15-112">Diese Methode gibt <see langword="true" /> zurück, wenn dieser <see cref="T:System.Drawing.ImageConverter" /> die Konvertierung ausführen kann, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bec15-112">This method returns <see langword="true" /> if this <see cref="T:System.Drawing.ImageConverter" /> can perform the conversion; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bec15-113">Diese Methode gibt `true` nur, wenn `sourceType` entspricht einem Bytearray oder Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="bec15-113">This method returns `true` only if `sourceType` is equal to a byte array or string.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.ImageConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertFrom (context As ITypeDescriptorContext, culture As CultureInfo, value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member ConvertFrom : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj -&gt; obj&#xA;override this.ConvertFrom : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj -&gt; obj" Usage="imageConverter.ConvertFrom (context, culture, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="bec15-114">Ein <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, der einen Formatierungskontext bereitstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bec15-114">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="bec15-115">Eine <see cref="T:System.Globalization.CultureInfo" /> mit Informationen über eine bestimmte Kultur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bec15-115">A <see cref="T:System.Globalization.CultureInfo" /> that holds information about a specific culture.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="bec15-116">Der zu konvertierende <see cref="T:System.Object" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bec15-116">The <see cref="T:System.Object" /> to be converted.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bec15-117">Konvertiert ein angegebenes Objekt in ein <see cref="T:System.Drawing.Image" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bec15-117">Converts a specified object to an <see cref="T:System.Drawing.Image" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bec15-118">Wenn diese Methode erfolgreich abgeschlossen wird, gibt sie das <see cref="T:System.Drawing.Image" /> zurück, das durch die Konvertierung des angegebenen Objekts erstellt wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bec15-118">If this method succeeds, it returns the <see cref="T:System.Drawing.Image" /> that it created by converting the specified object.</span>
          </span>
          <span data-ttu-id="bec15-119">Andernfalls wird eine Ausnahme ausgelöst.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bec15-119">Otherwise, it throws an exception.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="bec15-120">Die Konvertierung kann nicht vollständig durchgeführt werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bec15-120">The conversion cannot be completed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.ImageConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertTo (context As ITypeDescriptorContext, culture As CultureInfo, value As Object, destinationType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="abstract member ConvertTo : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj * Type -&gt; obj&#xA;override this.ConvertTo : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj * Type -&gt; obj" Usage="imageConverter.ConvertTo (context, culture, value, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="bec15-121">Ein Formatierungskontext.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bec15-121">A formatter context.</span>
          </span>
          <span data-ttu-id="bec15-122">Dieses Objekt kann zum Abrufen weiterer Informationen über die Umgebung verwendet werden, aus der dieser Konverter aufgerufen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bec15-122">This object can be used to get more information about the environment this converter is being called from.</span>
          </span>
          <span data-ttu-id="bec15-123">Der Wert hierfür kann <see langword="null" /> sein. Eine Überprüfung ist daher ratsam.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bec15-123">This may be <see langword="null" />, so you should always check.</span>
          </span>
          <span data-ttu-id="bec15-124">Außerdem kann für die Eigenschaften des Kontextobjekts ebenfalls <see langword="null" /> zurückgegeben werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bec15-124">Also, properties on the context object may also return <see langword="null" />.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="bec15-125">Ein <see cref="T:System.Globalization.CultureInfo" />-Objekt, das die von einer bestimmten Kultur verwendeten Formatierungskonventionen angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bec15-125">A <see cref="T:System.Globalization.CultureInfo" /> object that specifies formatting conventions used by a particular culture.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="bec15-126">Die zu konvertierende <see cref="T:System.Drawing.Image" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bec15-126">The <see cref="T:System.Drawing.Image" /> to convert.</span>
          </span>
        </param>
        <param name="destinationType">
          <span data-ttu-id="bec15-127">Der <see cref="T:System.Type" />, in den <see cref="T:System.Drawing.Image" /> konvertiert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bec15-127">The <see cref="T:System.Type" /> to convert the <see cref="T:System.Drawing.Image" /> to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bec15-128">Konvertiert ein <see cref="T:System.Drawing.Image" /> (oder ein Objekt, das in ein <see cref="T:System.Drawing.Image" /> umgewandelt werden kann) in den angegebenen Typ.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bec15-128">Converts an <see cref="T:System.Drawing.Image" /> (or an object that can be cast to an <see cref="T:System.Drawing.Image" />) to the specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bec15-129">Diese Methode gibt das konvertierte Objekt zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bec15-129">This method returns the converted object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bec15-130">Die am häufigsten verwendete typkonvertierung besteht darin, und von einem Zeichenfolgentyp.</span><span class="sxs-lookup"><span data-stu-id="bec15-130">The most common type conversion is to and from a string type.</span></span> <span data-ttu-id="bec15-131">Die Standardimplementierung Ruft die <xref:System.Object.ToString%2A> -Methode des Objekts, wenn das Objekt gültig ist und der Zieltyp String ist.</span><span class="sxs-lookup"><span data-stu-id="bec15-131">The default implementation calls the <xref:System.Object.ToString%2A> method of the object if the object is valid and if the destination type is string.</span></span> <span data-ttu-id="bec15-132">Wenn diese Methode das angegebene Objekt in den Zieltyp konvertieren kann, löst eine <xref:System.NotSupportedException> Ausnahme.</span><span class="sxs-lookup"><span data-stu-id="bec15-132">If this method cannot convert the specified object to the destination type, it throws a <xref:System.NotSupportedException> exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="bec15-133">Die Konvertierung kann nicht vollständig durchgeführt werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bec15-133">The conversion cannot be completed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.PropertyDescriptorCollection GetProperties (System.ComponentModel.ITypeDescriptorContext context, object value, Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ComponentModel.PropertyDescriptorCollection GetProperties(class System.ComponentModel.ITypeDescriptorContext context, object value, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.ImageConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetProperties (context As ITypeDescriptorContext, value As Object, attributes As Attribute()) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::ComponentModel::PropertyDescriptorCollection ^ GetProperties(System::ComponentModel::ITypeDescriptorContext ^ context, System::Object ^ value, cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberSignature Language="F#" Value="abstract member GetProperties : System.ComponentModel.ITypeDescriptorContext * obj * Attribute[] -&gt; System.ComponentModel.PropertyDescriptorCollection&#xA;override this.GetProperties : System.ComponentModel.ITypeDescriptorContext * obj * Attribute[] -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="imageConverter.GetProperties (context, value, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="attributes" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="bec15-134">Ein Typdeskriptor, mit dem zusätzlicher Kontext bereitgestellt werden kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bec15-134">A type descriptor through which additional context can be provided.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="bec15-135">Der Wert des Objekts, für das die Eigenschaften abgerufen werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bec15-135">The value of the object to get the properties for.</span>
          </span>
        </param>
        <param name="attributes">
          <span data-ttu-id="bec15-136">Ein Array von <see cref="T:System.Attribute" />-Objekten, die die Eigenschaften beschreiben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bec15-136">An array of <see cref="T:System.Attribute" /> objects that describe the properties.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bec15-137">Ruft die Gruppe von Eigenschaften für diesen Typ ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bec15-137">Gets the set of properties for this type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bec15-138">Die Gruppe von Eigenschaften, die für diesen Datentyp verfügbar gemacht werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bec15-138">The set of properties that should be exposed for this data type.</span>
          </span>
          <span data-ttu-id="bec15-139">Wenn keine Eigenschaften verfügbar gemacht werden sollen, wird <see langword="null" /> zurückgegeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bec15-139">If no properties should be exposed, this can return <see langword="null" />.</span>
          </span>
          <span data-ttu-id="bec15-140">Die Standardimplementierung gibt immer <see langword="null" /> zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bec15-140">The default implementation always returns <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bec15-141">Standardmäßig gibt ein Typ keine Eigenschaften zurück.</span><span class="sxs-lookup"><span data-stu-id="bec15-141">By default, a type does not return any properties.</span></span> <span data-ttu-id="bec15-142">Eine einfache Implementierung dieser Methode ruft die <xref:System.ComponentModel.TypeConverter.GetProperties%2A> -Methode für den richtigen Datentyp.</span><span class="sxs-lookup"><span data-stu-id="bec15-142">An easy implementation of this method calls the <xref:System.ComponentModel.TypeConverter.GetProperties%2A> method for the correct data type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPropertiesSupported">
      <MemberSignature Language="C#" Value="public override bool GetPropertiesSupported (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetPropertiesSupported(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.ImageConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetPropertiesSupported (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool GetPropertiesSupported(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member GetPropertiesSupported : System.ComponentModel.ITypeDescriptorContext -&gt; bool&#xA;override this.GetPropertiesSupported : System.ComponentModel.ITypeDescriptorContext -&gt; bool" Usage="imageConverter.GetPropertiesSupported context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="bec15-143">Ein Typdeskriptor, mit dem zusätzlicher Kontext bereitgestellt werden kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bec15-143">A type descriptor through which additional context can be provided.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bec15-144">Gibt an, ob dieses Objekt Eigenschaften unterstützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bec15-144">Indicates whether this object supports properties.</span>
          </span>
          <span data-ttu-id="bec15-145">Die Standardeinstellung ist <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bec15-145">By default, this is <see langword="false" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bec15-146">Diese Methode gibt <see langword="true" /> zurück, wenn die <see cref="Overload:System.Drawing.ImageConverter.GetProperties" />-Methode aufgerufen werden muss, um die Eigenschaften dieses Objekts zu ermitteln.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bec15-146">This method returns <see langword="true" /> if the <see cref="Overload:System.Drawing.ImageConverter.GetProperties" /> method should be called to find the properties of this object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>