<Type Name="Graphics+DrawImageAbort" FullName="System.Drawing.Graphics+DrawImageAbort">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="35191dcdd6ab7cd9ac0c224311d412a2f575d2cc" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36489136" />
  </Metadata>
  <TypeSignature Language="C#" Value="public delegate bool Graphics.DrawImageAbort(IntPtr callbackdata);" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi sealed Graphics/DrawImageAbort extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.Graphics.DrawImageAbort" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Function Graphics.DrawImageAbort(callbackdata As IntPtr) As Boolean " />
  <TypeSignature Language="C++ CLI" Value="public: delegate bool Graphics::DrawImageAbort(IntPtr callbackdata);" />
  <TypeSignature Language="F#" Value="type Graphics.DrawImageAbort = delegate of nativeint -&gt; bool" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="callbackdata" Type="System.IntPtr" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Boolean</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="callbackdata">
      <span data-ttu-id="527e6-101">Interner Zeiger, der die Daten für die Rückrufmethode angibt.</span>
      <span class="sxs-lookup">
        <span data-stu-id="527e6-101">Internal pointer that specifies data for the callback method.</span>
      </span>
      <span data-ttu-id="527e6-102">Dieser Parameter wird nicht von allen <see cref="Overload:System.Drawing.Graphics.DrawImage" />-Überladungen übergeben.</span>
      <span class="sxs-lookup">
        <span data-stu-id="527e6-102">This parameter is not passed by all <see cref="Overload:System.Drawing.Graphics.DrawImage" /> overloads.</span>
      </span>
      <span data-ttu-id="527e6-103">Sie können feststellen, dass dieser nicht vorhanden ist, wenn der Wert <see cref="F:System.IntPtr.Zero" /> ist.</span>
      <span class="sxs-lookup">
        <span data-stu-id="527e6-103">You can test for its absence by checking for the value <see cref="F:System.IntPtr.Zero" />.</span>
      </span>
    </param>
    <summary>
      <span data-ttu-id="527e6-104">Stellt eine Rückrufmethode bereit, mit der bestimmt wird, wann die <see cref="Overload:System.Drawing.Graphics.DrawImage" />-Methode die Ausführung vorzeitig abbrechen und aufhören soll, ein Bild zu zeichnen.</span>
      <span class="sxs-lookup">
        <span data-stu-id="527e6-104">Provides a callback method for deciding when the <see cref="Overload:System.Drawing.Graphics.DrawImage" /> method should prematurely cancel execution and stop drawing an image.</span>
      </span>
    </summary>
    <returns>
      <span data-ttu-id="527e6-105">Diese Methode gibt <see langword="true" /> zurück, wenn die <see cref="Overload:System.Drawing.Graphics.DrawImage" />-Methode die Ausführung vorzeitig abbrechen soll.</span>
      <span class="sxs-lookup">
        <span data-stu-id="527e6-105">This method returns <see langword="true" /> if it decides that the <see cref="Overload:System.Drawing.Graphics.DrawImage" /> method should prematurely stop execution.</span>
      </span>
      <span data-ttu-id="527e6-106">Andernfalls wird <see langword="false" /> zurückgegeben, um anzugeben, dass die <see cref="Overload:System.Drawing.Graphics.DrawImage" />-Methode die Ausführung fortsetzen soll.</span>
      <span class="sxs-lookup">
        <span data-stu-id="527e6-106">Otherwise it returns <see langword="false" /> to indicate that the <see cref="Overload:System.Drawing.Graphics.DrawImage" /> method should continue execution.</span>
      </span>
    </returns>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="527e6-107">Diese Methode wird verwendet, in Verbindung mit der <xref:System.Drawing.Graphics.DrawImage%2A> Methode der <xref:System.Drawing.Graphics> Klasse.</span><span class="sxs-lookup"><span data-stu-id="527e6-107">This method is used in conjunction with the <xref:System.Drawing.Graphics.DrawImage%2A> method of the <xref:System.Drawing.Graphics> class.</span></span> <span data-ttu-id="527e6-108">Bestimmte Überladungen der <xref:System.Drawing.Graphics.DrawImage%2A> -Methode rufen eine anwendungsdefinierten Rückrufmethode dieses Typs, um herauszufinden, ob die Überladungen beendet werden soll, oder Fortsetzen der Ausführung.</span><span class="sxs-lookup"><span data-stu-id="527e6-108">Certain overloads of the <xref:System.Drawing.Graphics.DrawImage%2A> method call an application-defined callback method of this type to find out if the overloads should stop or continue execution.</span></span>  
  
 <span data-ttu-id="527e6-109">Während der Ausführung der relevanten <xref:System.Drawing.Graphics.DrawImage%2A> Überladungen häufig Aufrufen dieser Rückrufmethode, um herauszufinden, wenn sie das angegebene Image zeichnen beendet werden soll, oder wenn sie zeichnen das Image fortgesetzt werden soll.</span><span class="sxs-lookup"><span data-stu-id="527e6-109">During execution, the relevant <xref:System.Drawing.Graphics.DrawImage%2A> overloads frequently call this callback method to find out if they should stop drawing the specified image or if they should continue drawing the image.</span></span> <span data-ttu-id="527e6-110">Die <xref:System.Drawing.Graphics.DrawImageAbort> Rückrufmethode kann bestimmen, ob um den Vorgang fortzusetzen, oder nicht auf Grundlage eines ausgewählten Algorithmus, die darin enthaltenen, optional mit den Daten übergeben t.</span><span class="sxs-lookup"><span data-stu-id="527e6-110">The <xref:System.Drawing.Graphics.DrawImageAbort> callback method can determine whether to continue or not based on a chosen algorithm included in it, optionally using the data passed to it by the callbackdata parameter.</span></span> <span data-ttu-id="527e6-111">Z. B. ein Algorithmus zu ermitteln, ob das Bild außerhalb des Bildschirms ein Bildlauf durchgeführt hat und signalisieren möglicherweise die <xref:System.Drawing.Graphics.DrawImage%2A> Methode zum Beenden der Zeichnung.</span><span class="sxs-lookup"><span data-stu-id="527e6-111">For example, an algorithm might determine if the image has scrolled off the screen and signal a cancellation to the <xref:System.Drawing.Graphics.DrawImage%2A> method to stop drawing.</span></span>  
  
 <span data-ttu-id="527e6-112">Eine Benutzerdeklaration dieser Methode für die Ereignisbehandlung müssen die gleichen Parameter wie die <xref:System.Drawing.Graphics.DrawImageAbort> Deklaration zu delegieren.</span><span class="sxs-lookup"><span data-stu-id="527e6-112">A user declaration of this event-handling method must have the same parameters as the <xref:System.Drawing.Graphics.DrawImageAbort> delegate declaration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="527e6-113">In diesem Beispiel wird eine eher einfache Implementierung von der <xref:System.Drawing.Graphics.DrawImageAbort> delegieren.</span><span class="sxs-lookup"><span data-stu-id="527e6-113">This example is a simplistic implementation of the <xref:System.Drawing.Graphics.DrawImageAbort> delegate.</span></span> <span data-ttu-id="527e6-114">Er lediglich überprüft, ob die <xref:System.Drawing.Graphics.DrawImage%2A> Methode hat er Daten mit dem Callbackdata-Parameter übergeben.</span><span class="sxs-lookup"><span data-stu-id="527e6-114">It merely checks to see if the <xref:System.Drawing.Graphics.DrawImage%2A> method has passed it data using the callbackdata parameter.</span></span> <span data-ttu-id="527e6-115">(Einige <xref:System.Drawing.Graphics.DrawImage%2A> Überladungen müssen nur eine `DrawImageAbort` Parameter und keine Daten übergeben; einige Überladungen haben beide `DrawImageAbort` und `callbackdata` Parameter und Daten übergeben werden können.) Wenn keine Daten übergeben wurde, gibt es `true` auf, um die aufrufende signalisieren <xref:System.Drawing.Graphics.DrawImage%2A> Methode, dass das Zeichnen abgebrochen werden soll.</span><span class="sxs-lookup"><span data-stu-id="527e6-115">(Some <xref:System.Drawing.Graphics.DrawImage%2A> overloads have only a `DrawImageAbort` parameter and pass no data; some overloads have both `DrawImageAbort` and `callbackdata` parameters and can pass data.) If no data was passed, it returns `true` to signal to the calling <xref:System.Drawing.Graphics.DrawImage%2A> method that it should cancel the drawing.</span></span> <span data-ttu-id="527e6-116">Wenn Daten übergeben wurde, gibt es `false` signalisiert, dass zeichnen fortgesetzt werden soll.</span><span class="sxs-lookup"><span data-stu-id="527e6-116">If data was passed, it returns `false` to signal that drawing should continue.</span></span>  
  
 <span data-ttu-id="527e6-117">Eine realistische Implementierung dieses Rückrufs würde der tatsächlichen Prüfung abbrechen oder Fortsetzen der Ausführung einiger Kriterien umfassen.</span><span class="sxs-lookup"><span data-stu-id="527e6-117">A realistic implementation of this callback would involve the actual scrutiny of some criteria to cancel or continue the execution.</span></span>  
  
```vb  
Private Function DrawImageCallback(callBackData As IntPtr) As Boolean  
     ' Test for call that passes callBackData parameter.  
     If callBackData.Equals(IntPtr.Zero) Then  
         ' If no callBackData passed, abort DrawImage method.  
         Return True  
     Else  
         ' If callBackData passed, continue DrawImage method.  
         Return False  
     End If  
 End Function 'DrawImageCallback  
```  
  
```csharp  
// Define DrawImageAbort callback method.  
 private bool DrawImageCallback(IntPtr callbackdata)  
 {  
    // Test for call that passes callBackData parameter.  
    if(callbackdata==IntPtr.Zero)  
    {  
       // If no callbackdata passed, cancel DrawImage method.  
       return true;  
    }  
    else  
    {  
       // If callbackdata passed, continue DrawImage method.  
       return false;  
    }  
 }  
```  
  
 ]]></format>
    </remarks>
  </Docs>
</Type>