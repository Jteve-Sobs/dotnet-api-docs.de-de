<Type Name="Graphics+DrawImageAbort" FullName="System.Drawing.Graphics+DrawImageAbort">
  <Metadata><Meta Name="ms.openlocfilehash" Value="32b7da5b1dd1abc559cb9769b54c47f9c310e841" /><Meta Name="ms.sourcegitcommit" Value="220917117f9d774aaa482439aa7324e39dc1f5b6" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="02/25/2019" /><Meta Name="ms.locfileid" Value="56766680" /></Metadata><TypeSignature Language="C#" Value="public delegate bool Graphics.DrawImageAbort(IntPtr callbackdata);" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi sealed Graphics/DrawImageAbort extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.Graphics.DrawImageAbort" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Function Graphics.DrawImageAbort(callbackdata As IntPtr) As Boolean " />
  <TypeSignature Language="C++ CLI" Value="public: delegate bool Graphics::DrawImageAbort(IntPtr callbackdata);" />
  <TypeSignature Language="F#" Value="type Graphics.DrawImageAbort = delegate of nativeint -&gt; bool" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Drawing.Common</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.1</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Parameters>
    <Parameter Name="callbackdata" Type="System.IntPtr" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Boolean</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="callbackdata">Interner Zeiger, der die Daten für die Rückrufmethode angibt. Dieser Parameter wird nicht von allen <see cref="Overload:System.Drawing.Graphics.DrawImage" />-Überladungen übergeben. Sie können feststellen, dass dieser nicht vorhanden ist, wenn der Wert <see cref="F:System.IntPtr.Zero" /> ist.</param>
    <summary>Stellt eine Rückrufmethode bereit, mit der bestimmt wird, wann die <see cref="Overload:System.Drawing.Graphics.DrawImage" />-Methode die Ausführung vorzeitig abbrechen und aufhören soll, ein Bild zu zeichnen.</summary>
    <returns>Diese Methode gibt <see langword="true" /> zurück, wenn die <see cref="Overload:System.Drawing.Graphics.DrawImage" />-Methode die Ausführung vorzeitig abbrechen soll. Andernfalls wird <see langword="false" /> zurückgegeben, um anzugeben, dass die <see cref="Overload:System.Drawing.Graphics.DrawImage" />-Methode die Ausführung fortsetzen soll.</returns>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird verwendet, in Verbindung mit der <xref:System.Drawing.Graphics.DrawImage%2A> Methode der <xref:System.Drawing.Graphics> Klasse. Bestimmte Überladungen der <xref:System.Drawing.Graphics.DrawImage%2A> Methodenaufruf eine anwendungsdefinierte Callback-Methode dieses Typs, um herauszufinden, ob die Überladungen beendet werden soll, oder die Ausführung wird fortgesetzt.  
  
 Während der Ausführung der entsprechenden <xref:System.Drawing.Graphics.DrawImage%2A> Überladungen rufen häufig diese Callback-Methode, um herauszufinden, wenn sie das angegebene Bild zeichnen beendet werden soll, oder wenn sie das Bild gezeichnet fortgefahren werden soll. Die <xref:System.Drawing.Graphics.DrawImageAbort> Callback-Methode kann bestimmen, ob fortgesetzt oder nicht basierend auf einem ausgewählten Algorithmus, der diese enthalten, an sie übergebenen optional mit den Daten, t. Z. B. einen Algorithmus zu bestimmen, ob das Bild außerhalb des Bildschirms ein Bildlauf durchgeführt hat und einen Abbruch zu signalisieren kann die <xref:System.Drawing.Graphics.DrawImage%2A> Methode, um die Zeichnung zu beenden.  
  
 Eine Benutzerdeklaration dieser Methode für die Ereignisbehandlung müssen die gleichen Parameter wie die <xref:System.Drawing.Graphics.DrawImageAbort> Deklaration zu delegieren.  
  
   
  
## Examples  
 In diesem Beispiel wird eine vereinfachte Implementierung des der <xref:System.Drawing.Graphics.DrawImageAbort> delegieren. Es wird nur überprüft, finden Sie unter den <xref:System.Drawing.Graphics.DrawImage%2A> Methode hat er Daten mit dem Callbackdata-Parameter übergeben. (Einige <xref:System.Drawing.Graphics.DrawImage%2A> Überladung(en) gibt es nur eine `DrawImageAbort` Parameter und keine Daten übergeben; einige Überladungen haben beide `DrawImageAbort` und `callbackdata` Parameter und kann Daten übergeben.) Wenn keine Daten übergeben wurden, gibt es zurück `true` , um die aufrufende signalisieren <xref:System.Drawing.Graphics.DrawImage%2A> Methode, die das Zeichnen abgebrochen werden soll. Wenn die Daten übergeben wurden, gibt Sie zurück `false` zu signalisieren, dass zeichnen fortgesetzt werden soll.  
  
 Dieser Rückruf eine realistische Implementierung würde die Überprüfung dazu, ob einige Kriterien zum Abbrechen oder Fortsetzen der Ausführung betreffen.  
  
```vb  
Private Function DrawImageCallback(callBackData As IntPtr) As Boolean  
     ' Test for call that passes callBackData parameter.  
     If callBackData.Equals(IntPtr.Zero) Then  
         ' If no callBackData passed, abort DrawImage method.  
         Return True  
     Else  
         ' If callBackData passed, continue DrawImage method.  
         Return False  
     End If  
 End Function 'DrawImageCallback  
```  
  
```csharp  
// Define DrawImageAbort callback method.  
 private bool DrawImageCallback(IntPtr callbackdata)  
 {  
    // Test for call that passes callBackData parameter.  
    if(callbackdata==IntPtr.Zero)  
    {  
       // If no callbackdata passed, cancel DrawImage method.  
       return true;  
    }  
    else  
    {  
       // If callbackdata passed, continue DrawImage method.  
       return false;  
    }  
 }  
```  
  
 ]]></format>
    </remarks>
  </Docs>
</Type>