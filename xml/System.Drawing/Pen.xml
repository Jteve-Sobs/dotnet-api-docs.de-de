<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Pen.xml" source-language="en-US" target-language="de-DE">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5d37fac39a424f3b42adab08f5106dc3d3cc57f2f.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d37fac39a424f3b42adab08f5106dc3d3cc57f2f</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Drawing.Pen">
          <source>Defines an object used to draw lines and curves.</source>
          <target state="translated">Definiert ein Objekt, mit dem Linien und Kurven gezeichnet werden.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Drawing.Pen">
          <source>This class cannot be inherited.</source>
          <target state="translated">Diese Klasse kann nicht vererbt werden.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Pen">
          <source>A <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph> draws a line of specified width and style.</source>
          <target state="translated">Ein <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph> zeichnet eine Linie mit der angegebenen Breite und den Stil.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Pen">
          <source>Use the <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.DashStyle&gt;</ph> property to draw several varieties of dashed lines.</source>
          <target state="translated">Verwenden der <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.DashStyle&gt;</ph> Eigenschaft mehrere Varianten von gestrichelten Linien gezeichnet werden soll.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Pen">
          <source>The line drawn by a <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph> can be filled in a variety of fill styles, including solid colors and textures.</source>
          <target state="translated">Die Linie gezeichnet, die durch eine <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph> in einer Vielzahl von Stilen, einschließlich Volltonfarben und Struktur ausgefüllt werden kann.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Pen">
          <source>The fill style depends on brush or texture that is used as the fill object.</source>
          <target state="translated">Der Füllstil hängt davon ab, Pinsel oder der Struktur, die als Füllobjekt verwendet wird.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Pen">
          <source>The following code example demonstrates constructing a <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph> with a <ph id="ph2">&lt;xref:System.Drawing.Pen.Brush%2A&gt;</ph> and the effects of setting the <ph id="ph3">&lt;xref:System.Drawing.Pen.LineJoin%2A&gt;</ph> property on a <ph id="ph4">&lt;xref:System.Drawing.Pen&gt;</ph>.</source>
          <target state="translated">Das folgende Codebeispiel veranschaulicht das Erstellen eines eine <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph> mit einem <ph id="ph2">&lt;xref:System.Drawing.Pen.Brush%2A&gt;</ph> und Auswirkungen der Einstellung der <ph id="ph3">&lt;xref:System.Drawing.Pen.LineJoin%2A&gt;</ph> Eigenschaft auf eine <ph id="ph4">&lt;xref:System.Drawing.Pen&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Pen">
          <source>This example is designed to be used with Windows Forms.</source>
          <target state="translated">In diesem Beispiel dient, die mit Windows Forms verwendet werden.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Pen">
          <source>Paste the code into a form and call the <ph id="ph1">`ShowLineJoin`</ph> method when handling the form's <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event, passing <ph id="ph3">`e`</ph> as <ph id="ph4">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph>.</source>
          <target state="translated">Fügen Sie den Code in ein Formular, und rufen die <ph id="ph1">`ShowLineJoin`</ph> Methode beim Verarbeiten des Formulars <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> Ereignis, und übergeben Sie <ph id="ph3">`e`</ph> als <ph id="ph4">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="T:System.Drawing.Pen">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> class with the specified color.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>-Klasse mit der angegebenen Farbe.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.#ctor(System.Drawing.Brush)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Brush" /&gt;</ph> that determines the fill properties of this <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Drawing.Brush" /&gt;</ph>, der die Fülleigenschaften dieses <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> bestimmt.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.#ctor(System.Drawing.Brush)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> class with the specified <ph id="ph2">&lt;see cref="T:System.Drawing.Brush" /&gt;</ph>.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>-Klasse mit der angegebenen <ph id="ph2">&lt;see cref="T:System.Drawing.Brush" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.#ctor(System.Drawing.Brush)">
          <source>The <ph id="ph1">&lt;xref:System.Drawing.Pen.Brush%2A&gt;</ph> property determines how the <ph id="ph2">&lt;xref:System.Drawing.Pen&gt;</ph> draws lines.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Drawing.Pen.Brush%2A&gt;</ph> Eigenschaft bestimmt, wie die <ph id="ph2">&lt;xref:System.Drawing.Pen&gt;</ph> Linien gezeichnet.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.#ctor(System.Drawing.Brush)">
          <source>Lines are drawn as if they are filled rectangles, with the characteristics of the specified <ph id="ph1">&lt;xref:System.Drawing.Brush&gt;</ph>.</source>
          <target state="translated">Zeilen werden gezeichnet, als wären sie gefüllte Rechtecke mit den Eigenschaften des angegebenen <ph id="ph1">&lt;xref:System.Drawing.Brush&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.#ctor(System.Drawing.Brush)">
          <source>The <ph id="ph1">&lt;xref:System.Drawing.Pen.Width%2A&gt;</ph> property of the new <ph id="ph2">&lt;xref:System.Drawing.Pen&gt;</ph> is set to 1 (the default).</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Drawing.Pen.Width%2A&gt;</ph> -Eigenschaft der neuen <ph id="ph2">&lt;xref:System.Drawing.Pen&gt;</ph> auf 1 (Standard) festgelegt ist.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.#ctor(System.Drawing.Brush)">
          <source>The following code example demonstrates constructing a <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph> with a <ph id="ph2">&lt;xref:System.Drawing.Pen.Brush%2A&gt;</ph> and the effects of setting the <ph id="ph3">&lt;xref:System.Drawing.Pen.LineJoin%2A&gt;</ph> property on a <ph id="ph4">&lt;xref:System.Drawing.Pen&gt;</ph>.</source>
          <target state="translated">Das folgende Codebeispiel veranschaulicht das Erstellen eines eine <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph> mit einem <ph id="ph2">&lt;xref:System.Drawing.Pen.Brush%2A&gt;</ph> und Auswirkungen der Einstellung der <ph id="ph3">&lt;xref:System.Drawing.Pen.LineJoin%2A&gt;</ph> Eigenschaft auf eine <ph id="ph4">&lt;xref:System.Drawing.Pen&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.#ctor(System.Drawing.Brush)">
          <source>This example is designed to be used with Windows Forms.</source>
          <target state="translated">In diesem Beispiel dient, die mit Windows Forms verwendet werden.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.#ctor(System.Drawing.Brush)">
          <source>Paste the code into a form and call the <ph id="ph1">`ShowLineJoin`</ph> method when handling the form's <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event, passing <ph id="ph3">`e`</ph> as <ph id="ph4">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph>.</source>
          <target state="translated">Fügen Sie den Code in ein Formular, und rufen die <ph id="ph1">`ShowLineJoin`</ph> Methode beim Verarbeiten des Formulars <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> Ereignis, und übergeben Sie <ph id="ph3">`e`</ph> als <ph id="ph4">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.#ctor(System.Drawing.Brush)">
          <source><ph id="ph1">&lt;paramref name="brush" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="brush" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.#ctor(System.Drawing.Color)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph> structure that indicates the color of this <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">Eine <ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph>-Struktur, die die Farbe dieses <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> angibt.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.#ctor(System.Drawing.Color)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> class with the specified color.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>-Klasse mit der angegebenen Farbe.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.#ctor(System.Drawing.Color)">
          <source>The <ph id="ph1">&lt;xref:System.Drawing.Color&gt;</ph> property is set to the color specified by the <ph id="ph2">`color`</ph> parameter.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Drawing.Color&gt;</ph> Eigenschaft festgelegt ist, der die Farbe gemäß der <ph id="ph2">`color`</ph> Parameter.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.#ctor(System.Drawing.Color)">
          <source>The <ph id="ph1">&lt;xref:System.Drawing.Pen.Width%2A&gt;</ph> property is set to 1 (the default).</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Drawing.Pen.Width%2A&gt;</ph> Eigenschaft auf 1 (Standard) festgelegt ist.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.#ctor(System.Drawing.Brush,System.Single)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Brush" /&gt;</ph> that determines the characteristics of this <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Drawing.Brush" /&gt;</ph>, der die Merkmale dieses <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> bestimmt.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.#ctor(System.Drawing.Brush,System.Single)">
          <source>The width of the new <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">Die Breite des neuen <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.#ctor(System.Drawing.Brush,System.Single)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> class with the specified <ph id="ph2">&lt;see cref="T:System.Drawing.Brush" /&gt;</ph> and <ph id="ph3">&lt;see cref="P:System.Drawing.Pen.Width" /&gt;</ph>.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>-Klasse mit den angegebenen <ph id="ph2">&lt;see cref="T:System.Drawing.Brush" /&gt;</ph> und dem angegebenen <ph id="ph3">&lt;see cref="P:System.Drawing.Pen.Width" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.#ctor(System.Drawing.Brush,System.Single)">
          <source>The <ph id="ph1">&lt;xref:System.Drawing.Brush&gt;</ph> is set to the color specified in the <ph id="ph2">`brush`</ph> parameter, the <ph id="ph3">&lt;xref:System.Drawing.Pen.Width%2A&gt;</ph> property is set to the value specified in the <ph id="ph4">`width`</ph> parameter, and the units are set to <ph id="ph5">&lt;xref:System.Drawing.GraphicsUnit.World&gt;</ph>.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Drawing.Brush&gt;</ph> festgelegt ist, auf die angegebene Farbe der <ph id="ph2">`brush`</ph> Parameter, die <ph id="ph3">&lt;xref:System.Drawing.Pen.Width%2A&gt;</ph> Eigenschaft im angegebenen Wert festgelegt ist die <ph id="ph4">`width`</ph> Parameter und die Einheiten festgelegt <ph id="ph5">&lt;xref:System.Drawing.GraphicsUnit.World&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.#ctor(System.Drawing.Brush,System.Single)">
          <source>Note that the <ph id="ph1">`brush`</ph> parameter also specifies the <ph id="ph2">&lt;xref:System.Drawing.Color&gt;</ph> property of this <ph id="ph3">&lt;xref:System.Drawing.Pen&gt;</ph>.</source>
          <target state="translated">Beachten Sie, dass die <ph id="ph1">`brush`</ph> Parameter gibt auch an die <ph id="ph2">&lt;xref:System.Drawing.Color&gt;</ph> -Eigenschaft dieser <ph id="ph3">&lt;xref:System.Drawing.Pen&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.#ctor(System.Drawing.Brush,System.Single)">
          <source>A <ph id="ph1">`width`</ph> of 0 will result in the <ph id="ph2">&lt;xref:System.Drawing.Pen&gt;</ph> drawing as if the width were 1.</source>
          <target state="translated">Ein <ph id="ph1">`width`</ph> 0 führt die <ph id="ph2">&lt;xref:System.Drawing.Pen&gt;</ph> zeichnen, als wären die Breite 1.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.#ctor(System.Drawing.Brush,System.Single)">
          <source>The following code example creates a <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph> and demonstrates the effects of setting the <ph id="ph2">&lt;xref:System.Drawing.Pen.StartCap%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Drawing.Pen.EndCap%2A&gt;</ph> properties on a <ph id="ph4">&lt;xref:System.Drawing.Pen&gt;</ph>.</source>
          <target state="translated">Das folgende Codebeispiel erstellt eine <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph> und veranschaulicht die Auswirkungen der Einstellung der <ph id="ph2">&lt;xref:System.Drawing.Pen.StartCap%2A&gt;</ph> und <ph id="ph3">&lt;xref:System.Drawing.Pen.EndCap%2A&gt;</ph> Eigenschaften auf eine <ph id="ph4">&lt;xref:System.Drawing.Pen&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.#ctor(System.Drawing.Brush,System.Single)">
          <source>This example is designed to be used with Windows Forms.</source>
          <target state="translated">In diesem Beispiel dient, die mit Windows Forms verwendet werden.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.#ctor(System.Drawing.Brush,System.Single)">
          <source>Paste the code into a form and call the <ph id="ph1">`ShowStartAndEndCaps`</ph> method when handling the form's <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event, passing <ph id="ph3">`e`</ph> as <ph id="ph4">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph>.</source>
          <target state="translated">Fügen Sie den Code in ein Formular, und rufen die <ph id="ph1">`ShowStartAndEndCaps`</ph> Methode beim Verarbeiten des Formulars <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> Ereignis, und übergeben Sie <ph id="ph3">`e`</ph> als <ph id="ph4">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.#ctor(System.Drawing.Brush,System.Single)">
          <source><ph id="ph1">&lt;paramref name="brush" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="brush" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.#ctor(System.Drawing.Color,System.Single)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph> structure that indicates the color of this <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">Eine <ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph>-Struktur, die die Farbe dieses <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> angibt.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.#ctor(System.Drawing.Color,System.Single)">
          <source>A value indicating the width of this <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">Ein Wert, der die Breite dieses <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> angibt.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.#ctor(System.Drawing.Color,System.Single)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> class with the specified <ph id="ph2">&lt;see cref="T:System.Drawing.Color" /&gt;</ph> and <ph id="ph3">&lt;see cref="P:System.Drawing.Pen.Width" /&gt;</ph> properties.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>-Klasse mit der angegebenen <ph id="ph2">&lt;see cref="T:System.Drawing.Color" /&gt;</ph>-Eigenschaft und der angegebenen <ph id="ph3">&lt;see cref="P:System.Drawing.Pen.Width" /&gt;</ph>-Eigenschaft.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.#ctor(System.Drawing.Color,System.Single)">
          <source>The <ph id="ph1">&lt;xref:System.Drawing.Color&gt;</ph> property is set to the color specified by the <ph id="ph2">`color`</ph> parameter.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Drawing.Color&gt;</ph> Eigenschaft festgelegt ist, der die Farbe gemäß der <ph id="ph2">`color`</ph> Parameter.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.#ctor(System.Drawing.Color,System.Single)">
          <source>The <ph id="ph1">&lt;xref:System.Drawing.Pen.Width%2A&gt;</ph> property is set to the value specified in the <ph id="ph2">`width`</ph> parameter.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Drawing.Pen.Width%2A&gt;</ph> Eigenschaftensatz ist der Wert in der <ph id="ph2">`width`</ph> Parameter.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.#ctor(System.Drawing.Color,System.Single)">
          <source>A <ph id="ph1">`width`</ph> of 0 will result in the <ph id="ph2">&lt;xref:System.Drawing.Pen&gt;</ph> drawing as if the width were 1.</source>
          <target state="translated">Ein <ph id="ph1">`width`</ph> 0 führt die <ph id="ph2">&lt;xref:System.Drawing.Pen&gt;</ph> zeichnen, als wären die Breite 1.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.#ctor(System.Drawing.Color,System.Single)">
          <source>The following code example demonstrates creating a <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph> and the effects of setting the <ph id="ph2">&lt;xref:System.Drawing.Pen.DashCap%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Drawing.Pen.DashPattern%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Drawing.Graphics.SmoothingMode%2A&gt;</ph> properties.</source>
          <target state="translated">Das folgende Codebeispiel veranschaulicht das Erstellen einer <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph> und Auswirkungen der Einstellung der <ph id="ph2">&lt;xref:System.Drawing.Pen.DashCap%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Drawing.Pen.DashPattern%2A&gt;</ph>, und <ph id="ph4">&lt;xref:System.Drawing.Graphics.SmoothingMode%2A&gt;</ph> Eigenschaften.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.#ctor(System.Drawing.Color,System.Single)">
          <source>This example is designed to be used with Windows Forms.</source>
          <target state="translated">In diesem Beispiel dient, die mit Windows Forms verwendet werden.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.#ctor(System.Drawing.Color,System.Single)">
          <source>Paste the code into a form and call the <ph id="ph1">`ShowPensAndSmoothingMode`</ph> method when handling the form's <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event, passing e as <ph id="ph3">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph>.</source>
          <target state="translated">Fügen Sie den Code in ein Formular, und rufen die <ph id="ph1">`ShowPensAndSmoothingMode`</ph> Methode beim Verarbeiten des Formulars <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> Ereignis, und übergeben e als <ph id="ph3">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="P:System.Drawing.Pen.Alignment">
          <source>Gets or sets the alignment for this <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">Ruft die Ausrichtung für diesen <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> ab oder legt diese fest.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.Alignment">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.PenAlignment" /&gt;</ph> that represents the alignment for this <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.PenAlignment" /&gt;</ph>, das die Ausrichtung für diesen <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> darstellt.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.Alignment">
          <source>This property determines how the <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph> draws closed curves and polygons.</source>
          <target state="translated">Diese Eigenschaft bestimmt, wie die <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph> zeichnet geschlossene Kurven und Polygonen.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.Alignment">
          <source>The <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.PenAlignment&gt;</ph> enumeration specifies five values; however, only two values—<ph id="ph2">&lt;xref:System.Drawing.Drawing2D.PenAlignment.Center&gt;</ph> and <ph id="ph3">&lt;xref:System.Drawing.Drawing2D.PenAlignment.Inset&gt;</ph>—will change the appearance of a drawn line.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.PenAlignment&gt;</ph> -Enumeration gibt fünf Werte; allerdings nur zwei Werte –<ph id="ph2">&lt;xref:System.Drawing.Drawing2D.PenAlignment.Center&gt;</ph> und <ph id="ph3">&lt;xref:System.Drawing.Drawing2D.PenAlignment.Inset&gt;</ph>– ändert die Darstellung einer gezeichneten Linie.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.Alignment">
          <source><ph id="ph1">&lt;xref:System.Drawing.Drawing2D.PenAlignment.Center&gt;</ph> is the default value for this property and specifies that the width of the pen is centered on the outline of the curve or polygon.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Drawing.Drawing2D.PenAlignment.Center&gt;</ph> Der Standardwert für diese Eigenschaft ist, und gibt an, dass die Breite des Stifts auf dem die Kurve oder eines Polygons zentriert ist.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.Alignment">
          <source>A value of <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.PenAlignment.Inset&gt;</ph> for this property specifies that the width of the pen is inside the outline of the curve or polygon.</source>
          <target state="translated">Ein Wert von <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.PenAlignment.Inset&gt;</ph> für diese Eigenschaft gibt an, dass die Breite des Stifts innerhalb der Kurve oder Polygon ist.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.Alignment">
          <source>The other three values, <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.PenAlignment.Right&gt;</ph>, <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.PenAlignment.Left&gt;</ph>, and <ph id="ph3">&lt;xref:System.Drawing.Drawing2D.PenAlignment.Outset&gt;</ph>, will result in a pen that is centered.</source>
          <target state="translated">Die anderen drei Werte <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.PenAlignment.Right&gt;</ph>, <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.PenAlignment.Left&gt;</ph>, und <ph id="ph3">&lt;xref:System.Drawing.Drawing2D.PenAlignment.Outset&gt;</ph>, führt zu einem Stift, der zentriert ist.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.Alignment">
          <source>A <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph> that has its alignment set to <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.PenAlignment.Inset&gt;</ph> will yield unreliable results, sometimes drawing in the inset position and sometimes in the centered position.</source>
          <target state="translated">Ein <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph> , besitzt die Ausrichtung auf <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.PenAlignment.Inset&gt;</ph> wird zu unzuverlässigen Ergebnissen führen, manchmal Inset Position und in einigen Fällen Zentriert Position zeichnen.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.Alignment">
          <source>Also, an inset pen cannot be used to draw compound lines and cannot draw dashed lines with <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.DashCap.Triangle&gt;</ph> dash caps.</source>
          <target state="translated">Darüber hinaus ein Stift Inset kann nicht verwendet werden, um zusammengesetzte Linien zu zeichnen und kann nicht mit gestrichelte Linien gezeichnet <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.DashCap.Triangle&gt;</ph> Caps Bindestrich.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="P:System.Drawing.Pen.Alignment">
          <source>The specified value is not a member of <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.PenAlignment" /&gt;</ph>.</source>
          <target state="translated">Der angegebene Wert ist kein Member von <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.PenAlignment" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="P:System.Drawing.Pen.Alignment">
          <source>The <ph id="ph1">&lt;see cref="P:System.Drawing.Pen.Alignment" /&gt;</ph> property is set on an immutable <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>, such as those returned by the <ph id="ph3">&lt;see cref="T:System.Drawing.Pens" /&gt;</ph> class.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="P:System.Drawing.Pen.Alignment" /&gt;</ph>-Eigenschaft wird auf einen unveränderlichen <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> festgelegt, der z. B. von der <ph id="ph3">&lt;see cref="T:System.Drawing.Pens" /&gt;</ph>-Klasse zurückgegeben wird.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="P:System.Drawing.Pen.Brush">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.Drawing.Brush" /&gt;</ph> that determines attributes of this <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">Ruft den <ph id="ph1">&lt;see cref="T:System.Drawing.Brush" /&gt;</ph> ab, der die Attribute dieses <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> bestimmt, oder legt dieses fest.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.Brush">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Brush" /&gt;</ph> that determines attributes of this <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Drawing.Brush" /&gt;</ph>, der die Attribute dieses <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> bestimmt.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.Brush">
          <source>Assigning this property causes the pen to draw filled lines and curves.</source>
          <target state="translated">Diese Eigenschaft bewirkt, dass den Stift gefüllte Linien und Kurven gezeichnet werden soll.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.Brush">
          <source>It overrides the <ph id="ph1">&lt;xref:System.Drawing.Color&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Drawing.Pen&gt;</ph>.</source>
          <target state="translated">Es überschreibt die <ph id="ph1">&lt;xref:System.Drawing.Color&gt;</ph> Eigenschaft von der <ph id="ph2">&lt;xref:System.Drawing.Pen&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="P:System.Drawing.Pen.Brush">
          <source>The <ph id="ph1">&lt;see cref="P:System.Drawing.Pen.Brush" /&gt;</ph> property is set on an immutable <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>, such as those returned by the <ph id="ph3">&lt;see cref="T:System.Drawing.Pens" /&gt;</ph> class.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="P:System.Drawing.Pen.Brush" /&gt;</ph>-Eigenschaft wird auf einen unveränderlichen <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> festgelegt, der z. B. von der <ph id="ph3">&lt;see cref="T:System.Drawing.Pens" /&gt;</ph>-Klasse zurückgegeben wird.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.Clone">
          <source>Creates an exact copy of this <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">Erstellt eine genaue Kopie von dieser <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.Clone">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> that can be cast to a <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>, das in einen <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> umgewandelt werden kann.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.Clone">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">Im folgenden Codebeispiel wird für die Verwendung mit Windows Forms konzipiert und erfordert <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, einen Parameter von der <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> -Ereignishandler.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.Clone">
          <source>The code performs the following actions:</source>
          <target state="translated">Der Code führt die folgenden Aktionen aus:</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.Clone">
          <source>Creates a <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph>.</source>
          <target state="translated">Erstellt eine <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.Clone">
          <source>Creates a copy of that pen.</source>
          <target state="translated">Erstellt eine Kopie dieses Stifts.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.Clone">
          <source>Draws a line to the screen, using the copy of the pen.</source>
          <target state="translated">Zeichnet eine verbindende Linie auf dem Bildschirm mithilfe der Kopie des Stifts.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="P:System.Drawing.Pen.Color">
          <source>Gets or sets the color of this <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">Ruft die Farbe dieses <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> ab oder legt diese fest.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.Color">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph> structure that represents the color of this <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">Eine <ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph>-Struktur, die die Farbe dieses <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> darstellt.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="P:System.Drawing.Pen.Color">
          <source>The <ph id="ph1">&lt;see cref="P:System.Drawing.Pen.Color" /&gt;</ph> property is set on an immutable <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>, such as those returned by the <ph id="ph3">&lt;see cref="T:System.Drawing.Pens" /&gt;</ph> class.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="P:System.Drawing.Pen.Color" /&gt;</ph>-Eigenschaft wird auf einen unveränderlichen <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> festgelegt, der z. B. von der <ph id="ph3">&lt;see cref="T:System.Drawing.Pens" /&gt;</ph>-Klasse zurückgegeben wird.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="P:System.Drawing.Pen.CompoundArray">
          <source>Gets or sets an array of values that specifies a compound pen.</source>
          <target state="translated">Ruft ein Array von Werten ab, das einen Verbundstift angibt, oder legt dieses fest.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="P:System.Drawing.Pen.CompoundArray">
          <source>A compound pen draws a compound line made up of parallel lines and spaces.</source>
          <target state="translated">Ein Verbundstift zeichnet eine Verbundlinie, die aus parallelen Linien und Zwischenräumen besteht.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.CompoundArray">
          <source>An array of real numbers that specifies the compound array.</source>
          <target state="translated">Ein Array reeller Zahlen, das das Verbundarray angibt.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.CompoundArray">
          <source>The elements in the array must be in increasing order, not less than 0, and not greater than 1.</source>
          <target state="translated">Die Elemente des Arrays müssen aufsteigend sortiert und dürfen nicht kleiner als 0 und nicht größer als 1 sein.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.CompoundArray">
          <source>A compound line is made up of alternating parallel lines and spaces of varying widths.</source>
          <target state="translated">Eine Verbundlinie besteht aus parallelen Linien und Zwischenräumen der unterschiedlichen breiten abwechselnde.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.CompoundArray">
          <source>The values in the array specify the starting points of each component of the compound line relative to the pen's width.</source>
          <target state="translated">Die Werte im Array angeben, die Ausgangspunkte für jede Komponente der zusammengesetzten Zeile erfolgt relativ zur Breite des Stifts.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.CompoundArray">
          <source>The first value in the array specifies where the first component (a line) begins as a fraction of the distance across the width of the pen.</source>
          <target state="translated">Der erste Wert im Array gibt an, an der die erste Komponente (eine Zeile) über die Breite des Stifts als Bruchzahl Abstand beginnt.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.CompoundArray">
          <source>The second value in the array specifies the beginning of the next component (a space) as a fraction of the distance across the width of the pen.</source>
          <target state="translated">Der zweite Wert im Array gibt den Anfang der nächsten Komponente (Leerzeichen) als Bruchzahl Abstand über die Breite des Stifts an.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.CompoundArray">
          <source>The final value in the array specifies where the last component ends.</source>
          <target state="translated">Der endgültige Wert im Array gibt an, in die letzte Komponente endet.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.CompoundArray">
          <source>Suppose you want a pen to draw two parallel lines where the width of the first line is 20 percent of the pen's width, the width of the space that separates the two lines is 50 percent of the pen' s width, and the width of the second line is 30 percent of the pen's width.</source>
          <target state="translated">Angenommen, Sie ein Stiftes zum Zeichnen von zwei paralleler Linien möchten, in dem die Breite der ersten Zeile 20 Prozent der Breite des Stifts ist, wird die Breite des Speicherplatzes, der zwischen den beiden Linien 50 Prozent des Stifts "s, und die Breite der zweiten Zeile liegt bei 30 Prozent, der der Stiftbreite Breite.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.CompoundArray">
          <source>Start by creating a <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph> and an array of real numbers.</source>
          <target state="translated">Erstellen Sie zunächst eine <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph> und ein Array reeller Zahlen.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.CompoundArray">
          <source>Set the compound array by passing the array with the values 0.0, 0.2, 0.7, and 1.0 to this property.</source>
          <target state="translated">Legen Sie das Verbundarray durch Übergeben von Arrays mit den Werten 0,0, 0,2 0,7 und 1.0 an diese Eigenschaft an.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.CompoundArray">
          <source>Do not set this property if the <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph> has its <ph id="ph2">&lt;xref:System.Drawing.Pen.Alignment%2A&gt;</ph> property set to <ph id="ph3">&lt;xref:System.Drawing.Drawing2D.PenAlignment.Inset&gt;</ph>.</source>
          <target state="translated">Diese Eigenschaft nicht festgelegt, wenn die <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph> hat seine <ph id="ph2">&lt;xref:System.Drawing.Pen.Alignment%2A&gt;</ph> -Eigenschaftensatz auf <ph id="ph3">&lt;xref:System.Drawing.Drawing2D.PenAlignment.Inset&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="P:System.Drawing.Pen.CompoundArray">
          <source>The <ph id="ph1">&lt;see cref="P:System.Drawing.Pen.CompoundArray" /&gt;</ph> property is set on an immutable <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>, such as those returned by the <ph id="ph3">&lt;see cref="T:System.Drawing.Pens" /&gt;</ph> class.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="P:System.Drawing.Pen.CompoundArray" /&gt;</ph>-Eigenschaft wird auf einen unveränderlichen <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> festgelegt, der z. B. von der <ph id="ph3">&lt;see cref="T:System.Drawing.Pens" /&gt;</ph>-Klasse zurückgegeben wird.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="P:System.Drawing.Pen.CustomEndCap">
          <source>Gets or sets a custom cap to use at the end of lines drawn with this <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">Ruft ein benutzerdefiniertes Ende ab, das am Ende der mit diesem <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> gezeichneten Linien verwendet werden soll, oder legt dieses fest.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.CustomEndCap">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.CustomLineCap" /&gt;</ph> that represents the cap used at the end of lines drawn with this <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.CustomLineCap" /&gt;</ph>, das das Ende darstellt, das am Ende der mit diesem <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> gezeichneten Linien verwendet wird.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="P:System.Drawing.Pen.CustomEndCap">
          <source>The <ph id="ph1">&lt;see cref="P:System.Drawing.Pen.CustomEndCap" /&gt;</ph> property is set on an immutable <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>, such as those returned by the <ph id="ph3">&lt;see cref="T:System.Drawing.Pens" /&gt;</ph> class.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="P:System.Drawing.Pen.CustomEndCap" /&gt;</ph>-Eigenschaft wird auf einen unveränderlichen <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> festgelegt, der z. B. von der <ph id="ph3">&lt;see cref="T:System.Drawing.Pens" /&gt;</ph>-Klasse zurückgegeben wird.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="P:System.Drawing.Pen.CustomStartCap">
          <source>Gets or sets a custom cap to use at the beginning of lines drawn with this <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">Ruft ein benutzerdefiniertes Ende ab, das am Anfang der mit diesem <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> gezeichneten Linien verwendet werden soll, oder legt dieses fest.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.CustomStartCap">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.CustomLineCap" /&gt;</ph> that represents the cap used at the beginning of lines drawn with this <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.CustomLineCap" /&gt;</ph>, das das Ende darstellt, das am Anfang der mit diesem <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> gezeichneten Linien verwendet wird.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="P:System.Drawing.Pen.CustomStartCap">
          <source>The <ph id="ph1">&lt;see cref="P:System.Drawing.Pen.CustomStartCap" /&gt;</ph> property is set on an immutable <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>, such as those returned by the <ph id="ph3">&lt;see cref="T:System.Drawing.Pens" /&gt;</ph> class.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="P:System.Drawing.Pen.CustomStartCap" /&gt;</ph>-Eigenschaft wird auf einen unveränderlichen <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> festgelegt, der z. B. von der <ph id="ph3">&lt;see cref="T:System.Drawing.Pens" /&gt;</ph>-Klasse zurückgegeben wird.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="P:System.Drawing.Pen.DashCap">
          <source>Gets or sets the cap style used at the end of the dashes that make up dashed lines drawn with this <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">Ruft den Stil für die Enden ab, der für die Enden der gestrichelten Linien verwendet wird, die mit diesem <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> gezeichnet werden, oder legt diesen fest.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.DashCap">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.DashCap" /&gt;</ph> values that represents the cap style used at the beginning and end of the dashes that make up dashed lines drawn with this <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">Einer der <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.DashCap" /&gt;</ph>-Werte, der den Stil für die Enden darstellt, die am Anfang und Ende der mit diesem <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> gezeichneten gestrichelten Linien verwendet werden.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.DashCap">
          <source>Do not set this property to <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.DashCap.Triangle&gt;</ph> if the <ph id="ph2">&lt;xref:System.Drawing.Pen&gt;</ph> has its <ph id="ph3">&lt;xref:System.Drawing.Pen.Alignment%2A&gt;</ph> property set to <ph id="ph4">&lt;xref:System.Drawing.Drawing2D.PenAlignment.Inset&gt;</ph>.</source>
          <target state="translated">Legen Sie diese Eigenschaft nicht auf <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.DashCap.Triangle&gt;</ph> Wenn die <ph id="ph2">&lt;xref:System.Drawing.Pen&gt;</ph> hat seine <ph id="ph3">&lt;xref:System.Drawing.Pen.Alignment%2A&gt;</ph> -Eigenschaftensatz auf <ph id="ph4">&lt;xref:System.Drawing.Drawing2D.PenAlignment.Inset&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.DashCap">
          <source>The following code example demonstrates creating a <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph> and the effects of setting the <ph id="ph2">&lt;xref:System.Drawing.Pen.DashCap%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Drawing.Pen.DashPattern%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Drawing.Graphics.SmoothingMode%2A&gt;</ph> properties.</source>
          <target state="translated">Das folgende Codebeispiel veranschaulicht das Erstellen einer <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph> und Auswirkungen der Einstellung der <ph id="ph2">&lt;xref:System.Drawing.Pen.DashCap%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Drawing.Pen.DashPattern%2A&gt;</ph>, und <ph id="ph4">&lt;xref:System.Drawing.Graphics.SmoothingMode%2A&gt;</ph> Eigenschaften.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.DashCap">
          <source>This example is designed to be used with Windows Forms.</source>
          <target state="translated">In diesem Beispiel dient, die mit Windows Forms verwendet werden.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.DashCap">
          <source>Paste the code into a form and call the <ph id="ph1">`ShowPensAndSmoothingMode`</ph> method when handling the form's <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event, passing <ph id="ph3">`e`</ph> as <ph id="ph4">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph>.</source>
          <target state="translated">Fügen Sie den Code in ein Formular, und rufen die <ph id="ph1">`ShowPensAndSmoothingMode`</ph> Methode beim Verarbeiten des Formulars <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> Ereignis, und übergeben Sie <ph id="ph3">`e`</ph> als <ph id="ph4">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="P:System.Drawing.Pen.DashCap">
          <source>The specified value is not a member of <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.DashCap" /&gt;</ph>.</source>
          <target state="translated">Der angegebene Wert ist kein Member von <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.DashCap" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="P:System.Drawing.Pen.DashCap">
          <source>The <ph id="ph1">&lt;see cref="P:System.Drawing.Pen.DashCap" /&gt;</ph> property is set on an immutable <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>, such as those returned by the <ph id="ph3">&lt;see cref="T:System.Drawing.Pens" /&gt;</ph> class.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="P:System.Drawing.Pen.DashCap" /&gt;</ph>-Eigenschaft wird auf einen unveränderlichen <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> festgelegt, der z. B. von der <ph id="ph3">&lt;see cref="T:System.Drawing.Pens" /&gt;</ph>-Klasse zurückgegeben wird.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="P:System.Drawing.Pen.DashOffset">
          <source>Gets or sets the distance from the start of a line to the beginning of a dash pattern.</source>
          <target state="translated">Ruft den Abstand zwischen dem Anfang einer Zeile und dem Anfang eines Strichmusters ab oder legt diesen fest.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.DashOffset">
          <source>The distance from the start of a line to the beginning of a dash pattern.</source>
          <target state="translated">Der Abstand zwischen dem Anfang einer Zeile und dem Anfang eines Strichmusters.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="P:System.Drawing.Pen.DashOffset">
          <source>The <ph id="ph1">&lt;see cref="P:System.Drawing.Pen.DashOffset" /&gt;</ph> property is set on an immutable <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>, such as those returned by the <ph id="ph3">&lt;see cref="T:System.Drawing.Pens" /&gt;</ph> class.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="P:System.Drawing.Pen.DashOffset" /&gt;</ph>-Eigenschaft wird auf einen unveränderlichen <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> festgelegt, der z. B. von der <ph id="ph3">&lt;see cref="T:System.Drawing.Pens" /&gt;</ph>-Klasse zurückgegeben wird.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="P:System.Drawing.Pen.DashPattern">
          <source>Gets or sets an array of custom dashes and spaces.</source>
          <target state="translated">Ruft ein Array benutzerdefinierter Striche und Zwischenräume ab oder legt dieses fest.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.DashPattern">
          <source>An array of real numbers that specifies the lengths of alternating dashes and spaces in dashed lines.</source>
          <target state="translated">Ein Array reeller Zahlen, das die Länge der abwechselnden Striche und Zwischenräume in gestrichelten Linien angibt.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.DashPattern">
          <source>Assigning a value other than <ph id="ph1">`null`</ph> to this property will set the <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.DashStyle&gt;</ph> property for this <ph id="ph3">&lt;xref:System.Drawing.Pen&gt;</ph> to <ph id="ph4">&lt;xref:System.Drawing.Drawing2D.DashStyle.Custom&gt;</ph>.</source>
          <target state="translated">Zuweisen eines Werts außer <ph id="ph1">`null`</ph> auf diese Eigenschaft festgelegt wird die <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.DashStyle&gt;</ph> für diese Eigenschaft <ph id="ph3">&lt;xref:System.Drawing.Pen&gt;</ph> auf <ph id="ph4">&lt;xref:System.Drawing.Drawing2D.DashStyle.Custom&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.DashPattern">
          <source>The elements in the <ph id="ph1">`dashArray`</ph> array set the length of each dash and space in the dash pattern.</source>
          <target state="translated">Die Elemente in der <ph id="ph1">`dashArray`</ph> Array die Länge der einzelnen Bindestrich und Speicherplatz in der Strichmusters festgelegt.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.DashPattern">
          <source>The first element sets the length of a dash, the second element sets the length of a space, the third element sets the length of a dash, and so on.</source>
          <target state="translated">Das erste Element legt die Länge eines Strichs, das zweite Element legt die Länge eines Leerzeichens, das dritte Element definiert die Länge der einem Bindestrich und So weiter.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.DashPattern">
          <source>Consequently, each element should be a non-zero positive number.</source>
          <target state="translated">Daher muss jedes Element eine positive Zahl ungleich NULL sein.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.DashPattern">
          <source>The length of each dash and space in the dash pattern is the product of the element value in the array and the width of the <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph>.</source>
          <target state="translated">Die Länge der einzelnen Bindestrich und Speicherplatz in der Strichmusters ist das Produkt aus den Elementwert in das Array und die Breite der <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.DashPattern">
          <source>The following code example demonstrates the effects of setting the <ph id="ph1">&lt;xref:System.Drawing.Pen.DashCap%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Drawing.Pen.DashPattern%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Drawing.Graphics.SmoothingMode%2A&gt;</ph> properties.</source>
          <target state="translated">Im folgenden Codebeispiel wird veranschaulicht, die Auswirkungen der Einstellung der <ph id="ph1">&lt;xref:System.Drawing.Pen.DashCap%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Drawing.Pen.DashPattern%2A&gt;</ph>, und <ph id="ph3">&lt;xref:System.Drawing.Graphics.SmoothingMode%2A&gt;</ph> Eigenschaften.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.DashPattern">
          <source>This example is designed to be used with Windows Forms.</source>
          <target state="translated">In diesem Beispiel dient, die mit Windows Forms verwendet werden.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.DashPattern">
          <source>Paste the code into a form and call the <ph id="ph1">`ShowPensAndSmoothingMode`</ph> method when handling the form's <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event, passing <ph id="ph3">`e`</ph> as <ph id="ph4">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph>.</source>
          <target state="translated">Fügen Sie den Code in ein Formular, und rufen die <ph id="ph1">`ShowPensAndSmoothingMode`</ph> Methode beim Verarbeiten des Formulars <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> Ereignis, und übergeben Sie <ph id="ph3">`e`</ph> als <ph id="ph4">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="P:System.Drawing.Pen.DashPattern">
          <source>The <ph id="ph1">&lt;see cref="P:System.Drawing.Pen.DashPattern" /&gt;</ph> property is set on an immutable <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>, such as those returned by the <ph id="ph3">&lt;see cref="T:System.Drawing.Pens" /&gt;</ph> class.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="P:System.Drawing.Pen.DashPattern" /&gt;</ph>-Eigenschaft wird auf einen unveränderlichen <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> festgelegt, der z. B. von der <ph id="ph3">&lt;see cref="T:System.Drawing.Pens" /&gt;</ph>-Klasse zurückgegeben wird.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="P:System.Drawing.Pen.DashStyle">
          <source>Gets or sets the style used for dashed lines drawn with this <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">Ruft den Stil der mit diesem <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> gezeichneten gestrichelten Linien ab oder legt diesen fest.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.DashStyle">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.DashStyle" /&gt;</ph> that represents the style used for dashed lines drawn with this <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.DashStyle" /&gt;</ph>, der den Stil der mit diesem <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> gezeichneten gestrichelten Linien darstellt.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.DashStyle">
          <source>A value of <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.DashStyle.Custom&gt;</ph> for this property specifies that a custom pattern of dashes and spaces, defined by the <ph id="ph2">&lt;xref:System.Drawing.Pen.DashPattern%2A&gt;</ph> property, makes up lines drawn with this <ph id="ph3">&lt;xref:System.Drawing.Pen&gt;</ph>.</source>
          <target state="translated">Der Wert <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.DashStyle.Custom&gt;</ph> für diese Eigenschaft gibt an, dass ein benutzerdefiniertes Muster der Striche und Zwischenräume, definiert, die <ph id="ph2">&lt;xref:System.Drawing.Pen.DashPattern%2A&gt;</ph> Eigenschaft bildet dabei gezeichneten Linien <ph id="ph3">&lt;xref:System.Drawing.Pen&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.DashStyle">
          <source>If the value of this property is <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.DashStyle.Custom&gt;</ph> and the value of the <ph id="ph2">&lt;xref:System.Drawing.Pen.DashPattern%2A&gt;</ph> property is <ph id="ph3">`null`</ph>, the pen draws solid lines.</source>
          <target state="translated">Wenn der Wert dieser Eigenschaft ist <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.DashStyle.Custom&gt;</ph> und der Wert von der <ph id="ph2">&lt;xref:System.Drawing.Pen.DashPattern%2A&gt;</ph> Eigenschaft ist <ph id="ph3">`null`</ph>, zeichnet der Stift durchgezogene Linien.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="P:System.Drawing.Pen.DashStyle">
          <source>The <ph id="ph1">&lt;see cref="P:System.Drawing.Pen.DashStyle" /&gt;</ph> property is set on an immutable <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>, such as those returned by the <ph id="ph3">&lt;see cref="T:System.Drawing.Pens" /&gt;</ph> class.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="P:System.Drawing.Pen.DashStyle" /&gt;</ph>-Eigenschaft wird auf einen unveränderlichen <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> festgelegt, der z. B. von der <ph id="ph3">&lt;see cref="T:System.Drawing.Pens" /&gt;</ph>-Klasse zurückgegeben wird.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.Dispose">
          <source>Releases all resources used by this <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">Gibt alle von dieser <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> verwendeten Ressourcen frei.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.Dispose">
          <source>Calling <ph id="ph1">&lt;xref:System.Drawing.Pen.Dispose%2A&gt;</ph> allows the resources used by this <ph id="ph2">&lt;xref:System.Drawing.Brush&gt;</ph> to be reallocated for other purposes.</source>
          <target state="translated">Aufrufen von <ph id="ph1">&lt;xref:System.Drawing.Pen.Dispose%2A&gt;</ph> können die von diesem verwendeten Ressourcen <ph id="ph2">&lt;xref:System.Drawing.Brush&gt;</ph> neu für andere Zwecke reserviert werden.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.Dispose">
          <source>Call <ph id="ph1">&lt;xref:System.Drawing.Pen.Dispose%2A&gt;</ph> when you are finished using the <ph id="ph2">&lt;xref:System.Drawing.Pen&gt;</ph>.</source>
          <target state="translated">Rufen Sie <ph id="ph1">&lt;xref:System.Drawing.Pen.Dispose%2A&gt;</ph> auf, wenn Sie <ph id="ph2">&lt;xref:System.Drawing.Pen&gt;</ph> nicht mehr benötigen.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.Dispose">
          <source>The <ph id="ph1">&lt;xref:System.Drawing.Pen.Dispose%2A&gt;</ph> method leaves the <ph id="ph2">&lt;xref:System.Drawing.Pen&gt;</ph> in an unusable state.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Drawing.Pen.Dispose%2A&gt;</ph>-Methode bewirkt, dass <ph id="ph2">&lt;xref:System.Drawing.Pen&gt;</ph> nicht mehr verwendet werden kann.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.Dispose">
          <source>After calling <ph id="ph1">&lt;xref:System.Drawing.Pen.Dispose%2A&gt;</ph>, you must release all references to the <ph id="ph2">&lt;xref:System.Drawing.Pen&gt;</ph> so the garbage collector can reclaim the memory that the <ph id="ph3">&lt;xref:System.Drawing.Pen&gt;</ph> was occupying.</source>
          <target state="translated">Nach dem Aufruf <ph id="ph1">&lt;xref:System.Drawing.Pen.Dispose%2A&gt;</ph>, müssen Sie alle Verweise auf Freigeben der <ph id="ph2">&lt;xref:System.Drawing.Pen&gt;</ph> , damit der Garbage Collector den Arbeitsspeicher freigeben kann, die die <ph id="ph3">&lt;xref:System.Drawing.Pen&gt;</ph> belegt wurde.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.Dispose">
          <source>For more information, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Implementing a Dispose Method<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">Weitere Informationen finden Sie unter <bpt id="p1">[</bpt>Bereinigen von nicht verwalteten Ressourcen<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> und <bpt id="p2">[</bpt>Implementieren einer Dispose-Methode<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.Dispose">
          <source>Always call <ph id="ph1">&lt;xref:System.Drawing.Pen.Dispose%2A&gt;</ph> before you release your last reference to the <ph id="ph2">&lt;xref:System.Drawing.Pen&gt;</ph>.</source>
          <target state="translated">Rufen Sie immer <ph id="ph1">&lt;xref:System.Drawing.Pen.Dispose%2A&gt;</ph> auf, bevor Sie den letzten Verweis auf das <ph id="ph2">&lt;xref:System.Drawing.Pen&gt;</ph> freigeben.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.Dispose">
          <source>Otherwise, the resources it is using will not be freed until the garbage collector calls the <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph> object's <ph id="ph2">`Finalize`</ph> method.</source>
          <target state="translated">Andernfalls bleiben die verwendeten Ressourcen reserviert, bis die Garbage Collection die <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph>-Methode des <ph id="ph2">`Finalize`</ph>-Objekts aufruft.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.Dispose">
          <source>The following code example demonstrates the effects of setting the <ph id="ph1">&lt;xref:System.Drawing.Pen.Width%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Drawing.Pen.LineJoin%2A&gt;</ph> properties, and shows how to call the <ph id="ph3">&lt;xref:System.Drawing.Pen.Dispose%2A&gt;</ph> method for a <ph id="ph4">&lt;xref:System.Drawing.Pen&gt;</ph>.</source>
          <target state="translated">Im folgenden Codebeispiel wird veranschaulicht, die Auswirkungen der Einstellung der <ph id="ph1">&lt;xref:System.Drawing.Pen.Width%2A&gt;</ph> und <ph id="ph2">&lt;xref:System.Drawing.Pen.LineJoin%2A&gt;</ph> Eigenschaften, und zeigt, wie die <ph id="ph3">&lt;xref:System.Drawing.Pen.Dispose%2A&gt;</ph> Methode für eine <ph id="ph4">&lt;xref:System.Drawing.Pen&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.Dispose">
          <source>This example is designed to be used with Windows Forms.</source>
          <target state="translated">In diesem Beispiel dient, die mit Windows Forms verwendet werden.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.Dispose">
          <source>Paste the code into a form and call the <ph id="ph1">`ShowLineJoin`</ph> method when handling the form's <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event, passing <ph id="ph3">`e`</ph> as <ph id="ph4">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph>.</source>
          <target state="translated">Fügen Sie den Code in ein Formular, und rufen die <ph id="ph1">`ShowLineJoin`</ph> Methode beim Verarbeiten des Formulars <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> Ereignis, und übergeben Sie <ph id="ph3">`e`</ph> als <ph id="ph4">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="P:System.Drawing.Pen.EndCap">
          <source>Gets or sets the cap style used at the end of lines drawn with this <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">Ruft den Stil für die Enden der mit diesem <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> gezeichneten Linien ab oder legt diesen fest.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.EndCap">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.LineCap" /&gt;</ph> values that represents the cap style used at the end of lines drawn with this <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">Einer der <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.LineCap" /&gt;</ph>-Werte, der den Stil für die Enden der mit diesem <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> gezeichneten Linien darstellt.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.EndCap">
          <source>The following code example demonstrates the effects of setting the <ph id="ph1">&lt;xref:System.Drawing.Pen.StartCap%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Drawing.Pen.EndCap%2A&gt;</ph> properties on a <ph id="ph3">&lt;xref:System.Drawing.Pen&gt;</ph>.</source>
          <target state="translated">Im folgenden Codebeispiel wird veranschaulicht, die Auswirkungen der Einstellung der <ph id="ph1">&lt;xref:System.Drawing.Pen.StartCap%2A&gt;</ph> und <ph id="ph2">&lt;xref:System.Drawing.Pen.EndCap%2A&gt;</ph> Eigenschaften auf eine <ph id="ph3">&lt;xref:System.Drawing.Pen&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.EndCap">
          <source>This example is designed to be used with Windows Forms.</source>
          <target state="translated">In diesem Beispiel dient, die mit Windows Forms verwendet werden.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.EndCap">
          <source>Paste the code into a form and call the <ph id="ph1">`ShowStartAndEndCaps`</ph> method when handling the form's <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event, passing <ph id="ph3">`e`</ph> as <ph id="ph4">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph>.</source>
          <target state="translated">Fügen Sie den Code in ein Formular, und rufen die <ph id="ph1">`ShowStartAndEndCaps`</ph> Methode beim Verarbeiten des Formulars <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> Ereignis, und übergeben Sie <ph id="ph3">`e`</ph> als <ph id="ph4">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="P:System.Drawing.Pen.EndCap">
          <source>The specified value is not a member of <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.LineCap" /&gt;</ph>.</source>
          <target state="translated">Der angegebene Wert ist kein Member von <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.LineCap" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="P:System.Drawing.Pen.EndCap">
          <source>The <ph id="ph1">&lt;see cref="P:System.Drawing.Pen.EndCap" /&gt;</ph> property is set on an immutable <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>, such as those returned by the <ph id="ph3">&lt;see cref="T:System.Drawing.Pens" /&gt;</ph> class.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="P:System.Drawing.Pen.EndCap" /&gt;</ph>-Eigenschaft wird auf einen unveränderlichen <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> festgelegt, der z. B. von der <ph id="ph3">&lt;see cref="T:System.Drawing.Pens" /&gt;</ph>-Klasse zurückgegeben wird.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.Finalize">
          <source>Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</source>
          <target state="translated">Gibt einem Objekt Gelegenheit zu dem Versuch, Ressourcen freizugeben und andere Bereinigungen durchzuführen, bevor es von der Garbage Collection freigegeben wird.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="P:System.Drawing.Pen.LineJoin">
          <source>Gets or sets the join style for the ends of two consecutive lines drawn with this <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">Ruft die Verbindungsart für die Enden zweier aufeinander folgender Linien ab, die mit diesem <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> gezeichnet werden, oder legt diese fest.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.LineJoin">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.LineJoin" /&gt;</ph> that represents the join style for the ends of two consecutive lines drawn with this <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.LineJoin" /&gt;</ph>, das die Verbindungsart für die Enden zweier aufeinander folgender, mit diesem <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> gezeichneter Linien darstellt.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.LineJoin">
          <source>A line join is the common area that is formed by two lines whose ends meet or overlap.</source>
          <target state="translated">Ein Join Zeile ist der allgemeinen Bereich, der zwei Zeilen gebildet wird, deren Enden erfüllen oder sich überlappen.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.LineJoin">
          <source>There are three line join styles: miter, bevel, and round.</source>
          <target state="translated">Es gibt drei Linienarten Join: Linienverbindungsstile, abschrägungen und gerundet wird.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.LineJoin">
          <source>When you specify a line join style for a <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph> object, that join style will be applied to all the connected lines in any <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph> object drawn using that pen.The following illustration shows the results of the beveled line join example.</source>
          <target state="translated">Wenn Sie einen Linienverbindungsstil für eine <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph> -Objekt, dass auf alle miteinander verbundenen Linien in einem Linienverbindungsstil angewendet werden <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph> Objekt mit diesem Stift gezeichnet. Die folgende Abbildung zeigt die Ergebnisse des Beispiels Join abgeschrägte Zeile.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.LineJoin">
          <source><bpt id="p1">![</bpt>Pens<ept id="p1">]</ept><bpt id="p2">(~/add/media/pens5.gif "</bpt>Pens<ept id="p2">")</ept></source>
          <target state="translated"><bpt id="p1">![</bpt>Pens<ept id="p1">]</ept><bpt id="p2">(~/add/media/pens5.gif "</bpt>Pens<ept id="p2">")</ept></target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.LineJoin">
          <source>The following code example demonstrates the effects of setting the <ph id="ph1">&lt;xref:System.Drawing.Pen.Width%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Drawing.Pen.LineJoin%2A&gt;</ph> properties on a <ph id="ph3">&lt;xref:System.Drawing.Pen&gt;</ph>.</source>
          <target state="translated">Im folgenden Codebeispiel wird veranschaulicht, die Auswirkungen der Einstellung der <ph id="ph1">&lt;xref:System.Drawing.Pen.Width%2A&gt;</ph> und <ph id="ph2">&lt;xref:System.Drawing.Pen.LineJoin%2A&gt;</ph> Eigenschaften auf eine <ph id="ph3">&lt;xref:System.Drawing.Pen&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.LineJoin">
          <source>This example is designed to be used with Windows Forms.</source>
          <target state="translated">In diesem Beispiel dient, die mit Windows Forms verwendet werden.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.LineJoin">
          <source>Paste the code into a form and call the <ph id="ph1">`ShowLineJoin`</ph> method when handling the form's <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event, passing <ph id="ph3">`e`</ph> as <ph id="ph4">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> .</source>
          <target state="translated">Fügen Sie den Code in ein Formular, und rufen die <ph id="ph1">`ShowLineJoin`</ph> Methode beim Verarbeiten des Formulars <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> Ereignis, und übergeben Sie <ph id="ph3">`e`</ph> als <ph id="ph4">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> .</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="P:System.Drawing.Pen.LineJoin">
          <source>The <ph id="ph1">&lt;see cref="P:System.Drawing.Pen.LineJoin" /&gt;</ph> property is set on an immutable <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>, such as those returned by the <ph id="ph3">&lt;see cref="T:System.Drawing.Pens" /&gt;</ph> class.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="P:System.Drawing.Pen.LineJoin" /&gt;</ph>-Eigenschaft wird auf einen unveränderlichen <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> festgelegt, der z. B. von der <ph id="ph3">&lt;see cref="T:System.Drawing.Pens" /&gt;</ph>-Klasse zurückgegeben wird.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="P:System.Drawing.Pen.MiterLimit">
          <source>Gets or sets the limit of the thickness of the join on a mitered corner.</source>
          <target state="translated">Ruft die Stärkenbegrenzung für die Verbindung in einer angeschrägten Ecke ab oder legt diese fest.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.MiterLimit">
          <source>The limit of the thickness of the join on a mitered corner.</source>
          <target state="translated">Die Stärkenbegrenzung für die Verbindung in einer angeschrägten Ecke.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.MiterLimit">
          <source>The miter length is the distance from the intersection of the line walls on the inside of the join to the intersection of the line walls outside of the join.</source>
          <target state="translated">Spitz beträgt die Entfernung aus der Schnittmenge der Zeile Wände auf das Innere des Joins auf die Schnittmenge der Zeile Wände außerhalb der Join.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.MiterLimit">
          <source>The miter length can be large when the angle between two lines is small.</source>
          <target state="translated">Die Länge Spitz kann groß sein, bei der der Winkel zwischen zwei Zeilen klein ist.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.MiterLimit">
          <source>The miter limit is the maximum allowed ratio of miter length to stroke width.</source>
          <target state="translated">Der Grenzwert für den Winkel ist die maximale zulässige Verhältnis von Spitz lang ist, um die Konturbreite.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.MiterLimit">
          <source>The default value is 10.0f.</source>
          <target state="translated">Der Standardwert ist 10,0.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.MiterLimit">
          <source>If the miter length of the join of the intersection exceeds the limit of the join, then the join will be beveled to keep it within the limit of the join of the intersection.</source>
          <target state="translated">Überschreitet die Länge Spitz des Joins von der Schnittmenge der Grenzwert des Joins, wird der Join abgeschrägt werden, um innerhalb der Obergrenze des Joins von der Schnittmenge zu gewährleisten.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="P:System.Drawing.Pen.MiterLimit">
          <source>The <ph id="ph1">&lt;see cref="P:System.Drawing.Pen.MiterLimit" /&gt;</ph> property is set on an immutable <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>, such as those returned by the <ph id="ph3">&lt;see cref="T:System.Drawing.Pens" /&gt;</ph> class.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="P:System.Drawing.Pen.MiterLimit" /&gt;</ph>-Eigenschaft wird auf einen unveränderlichen <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> festgelegt, der z. B. von der <ph id="ph3">&lt;see cref="T:System.Drawing.Pens" /&gt;</ph>-Klasse zurückgegeben wird.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="T:System.Drawing.Pen">
          <source>Multiplies the transformation matrix for this <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> by the specified <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>.</source>
          <target state="translated">Multipliziert die Transformationsmatrix für diesen <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> mit der angegebenen <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.MultiplyTransform(System.Drawing.Drawing2D.Matrix)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> object by which to multiply the transformation matrix.</source>
          <target state="translated">Das <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>-Objekt, mit dem die Transformationsmatrix multipliziert wird.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.MultiplyTransform(System.Drawing.Drawing2D.Matrix)">
          <source>Multiplies the transformation matrix for this <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> by the specified <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>.</source>
          <target state="translated">Multipliziert die Transformationsmatrix für diesen <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> mit der angegebenen <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.MultiplyTransform(System.Drawing.Drawing2D.Matrix)">
          <source>This method prepends the multiplication matrix specified in the <ph id="ph1">`matrix`</ph> parameter to the transformation matrix for the multiplication operation.</source>
          <target state="translated">Diese Methode stellt die im angegebenen Multiplikation Matrix voran die <ph id="ph1">`matrix`</ph> Parameter auf die Transformationsmatrix für die Multiplikation.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.MultiplyTransform(System.Drawing.Drawing2D.Matrix)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">Im folgenden Codebeispiel wird für die Verwendung mit Windows Forms konzipiert und erfordert <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, einen Parameter von der <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> -Ereignishandler.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.MultiplyTransform(System.Drawing.Drawing2D.Matrix)">
          <source>The code performs the following actions:</source>
          <target state="translated">Der Code führt die folgenden Aktionen aus:</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.MultiplyTransform(System.Drawing.Drawing2D.Matrix)">
          <source>Creates a <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph>.</source>
          <target state="translated">Erstellt eine <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.MultiplyTransform(System.Drawing.Drawing2D.Matrix)">
          <source>Draws a line to the screen.</source>
          <target state="translated">Zeichnet eine verbindende Linie auf dem Bildschirm.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.MultiplyTransform(System.Drawing.Drawing2D.Matrix)">
          <source>Multiplies the transformation matrix of the pen by the specified matrix.</source>
          <target state="translated">Multipliziert die Transformationsmatrix des Stifts durch die angegebene Matrix.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.MultiplyTransform(System.Drawing.Drawing2D.Matrix)">
          <source>Draws a line with the transformed pen.</source>
          <target state="translated">Zeichnet eine Linie mit dem transformierten Stift.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> by which to multiply the transformation matrix.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>, mit der die Transformationsmatrix multipliziert wird.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)">
          <source>The order in which to perform the multiplication operation.</source>
          <target state="translated">Die Reihenfolge, in der die Multiplikation ausgeführt werden soll.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Multiplies the transformation matrix for this <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> by the specified <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> in the specified order.</source>
          <target state="translated">Multipliziert die Transformationsmatrix für diesen <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> mit der angegebenen <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> in der angegebenen Reihenfolge.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)">
          <source>This method uses the <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.MatrixOrder&gt;</ph> enumeration element (either prepend or append) specified by the <ph id="ph2">`order`</ph> parameter to carry out the multiplication operation.</source>
          <target state="translated">Diese Methode verwendet die <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.MatrixOrder&gt;</ph> Enumerationselement (vorangestellt oder angefügt) gemäß der <ph id="ph2">`order`</ph> Parameter, um die Multiplikation durchzuführen.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">Im folgenden Codebeispiel wird für die Verwendung mit Windows Forms konzipiert und erfordert <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, einen Parameter von der <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> -Ereignishandler.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)">
          <source>The code performs the following actions:</source>
          <target state="translated">Der Code führt die folgenden Aktionen aus:</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Creates a <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph>.</source>
          <target state="translated">Erstellt eine <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Draws a line to the screen.</source>
          <target state="translated">Zeichnet eine verbindende Linie auf dem Bildschirm.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Multiplies the transformation matrix of the pen by the specified matrix.</source>
          <target state="translated">Multipliziert die Transformationsmatrix des Stifts durch die angegebene Matrix.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Draws a line with the transformed pen.</source>
          <target state="translated">Zeichnet eine Linie mit dem transformierten Stift.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="P:System.Drawing.Pen.PenType">
          <source>Gets the style of lines drawn with this <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">Ruft den Stil der mit diesem <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> gezeichneten Linien ab.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.PenType">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.PenType" /&gt;</ph> enumeration that specifies the style of lines drawn with this <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">Eine <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.PenType" /&gt;</ph>-Enumeration, die den Stil der mit diesem <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> gezeichneten Linien angibt.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.PenType">
          <source>A <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph> can draw solid lines, filled lines, or textured lines, depending on the style specified by a member of the <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.PenType&gt;</ph> enumeration.</source>
          <target state="translated">Ein <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph> können durchgezogene Linien, gefüllte Zeilen oder strukturierte Linien, je nach der von einem Mitglied des angegebenen Formats zeichnen die <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.PenType&gt;</ph> Enumeration.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.ResetTransform">
          <source>Resets the geometric transformation matrix for this <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> to identity.</source>
          <target state="translated">Setzt die geometrische Transformationsmatrix für diesen <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> auf Identität zurück.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.ResetTransform">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">Im folgenden Codebeispiel wird für die Verwendung mit Windows Forms konzipiert und erfordert <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, einen Parameter von der <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> -Ereignishandler.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.ResetTransform">
          <source>The code performs the following actions:</source>
          <target state="translated">Der Code führt die folgenden Aktionen aus:</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.ResetTransform">
          <source>Creates a <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph>.</source>
          <target state="translated">Erstellt eine <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.ResetTransform">
          <source>Sets the transformation matrix of the pen to scale 2 times in the x-axis direction.</source>
          <target state="translated">Legt die Transformationsmatrix des Stifts um 2 Mal in Richtung der x-Achse skaliert.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.ResetTransform">
          <source>Draws a line to the screen.</source>
          <target state="translated">Zeichnet eine verbindende Linie auf dem Bildschirm.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.ResetTransform">
          <source>Resets the transformation matrix to identity.</source>
          <target state="translated">Setzt die Transformationsmatrix auf Identität zurück.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.ResetTransform">
          <source>Draws a second line to the screen.</source>
          <target state="translated">Zeichnet eine zweite Zeile auf dem Bildschirm an.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="T:System.Drawing.Pen">
          <source>Rotates the local geometric transformation by the specified angle.</source>
          <target state="translated">Dreht die lokale geometrische Transformation um den angegebenen Winkel.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="T:System.Drawing.Pen">
          <source>This method prepends the rotation to the transformation.</source>
          <target state="translated">Diese Methode stellt der Transformation die Drehung voran.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.RotateTransform(System.Single)">
          <source>The angle of rotation.</source>
          <target state="translated">Der Rotationswinkel.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.RotateTransform(System.Single)">
          <source>Rotates the local geometric transformation by the specified angle.</source>
          <target state="translated">Dreht die lokale geometrische Transformation um den angegebenen Winkel.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.RotateTransform(System.Single)">
          <source>This method prepends the rotation to the transformation.</source>
          <target state="translated">Diese Methode stellt der Transformation die Drehung voran.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.RotateTransform(System.Single)">
          <source>Because the shape of a pen is circular, a rotation does not have any visible effect unless the pen is scaled in the x- or y-axis direction.</source>
          <target state="translated">Da die Form eines Stiftes Ablauf zirkulär verläuft, ist eine Drehung im sind nicht betroffen sichtbar, wenn der Stift in die Richtung x- oder y-Achse skaliert wird.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.RotateTransform(System.Single)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">Im folgenden Codebeispiel wird für die Verwendung mit Windows Forms konzipiert und erfordert <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, einen Parameter von der <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> -Ereignishandler.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.RotateTransform(System.Single)">
          <source>The code performs the following actions:</source>
          <target state="translated">Der Code führt die folgenden Aktionen aus:</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.RotateTransform(System.Single)">
          <source>Creates a <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph>.</source>
          <target state="translated">Erstellt eine <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.RotateTransform(System.Single)">
          <source>Draws a rectangle using the pen.</source>
          <target state="translated">Zeichnet ein Rechteck mit dem Stift.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.RotateTransform(System.Single)">
          <source>Scales the pen by 2 times in the x-axis direction.</source>
          <target state="translated">Skaliert den Stift 2 multipliziert in Richtung der x-Achse an.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.RotateTransform(System.Single)">
          <source>Rotates the pen 90 degrees clockwise.</source>
          <target state="translated">Wird den Stift 90 Grad im Uhrzeigersinn gedreht.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.RotateTransform(System.Single)">
          <source>Draws a second rectangle to demonstrate the difference.</source>
          <target state="translated">Zeichnet ein zweite Rechteck aus, um den Unterschied zu veranschaulichen.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>The angle of rotation.</source>
          <target state="translated">Der Rotationswinkel.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.MatrixOrder" /&gt;</ph> that specifies whether to append or prepend the rotation matrix.</source>
          <target state="translated">Eine <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.MatrixOrder" /&gt;</ph>, die angibt, ob die Rotationsmatrix vorangestellt oder angefügt werden soll.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Rotates the local geometric transformation by the specified angle in the specified order.</source>
          <target state="translated">Dreht die lokale geometrische Transformation um den angegebenen Winkel in der angegebenen Reihenfolge.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Because the shape of a pen is circular, a rotation does not have any visible effect unless the pen is scaled in the x- or y-axis direction.</source>
          <target state="translated">Da die Form eines Stiftes Ablauf zirkulär verläuft, ist eine Drehung im sind nicht betroffen sichtbar, wenn der Stift in die Richtung x- oder y-Achse skaliert wird.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">Im folgenden Codebeispiel wird für die Verwendung mit Windows Forms konzipiert und erfordert <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, einen Parameter von der <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> -Ereignishandler.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>The code performs the following actions:</source>
          <target state="translated">Der Code führt die folgenden Aktionen aus:</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Creates a <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph>.</source>
          <target state="translated">Erstellt eine <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Scales the pen by 2 times in the x-axis direction.</source>
          <target state="translated">Skaliert den Stift 2 multipliziert in Richtung der x-Achse an.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Draws a rectangle using the pen.</source>
          <target state="translated">Zeichnet ein Rechteck mit dem Stift.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Rotates the pen 90 degrees clockwise.</source>
          <target state="translated">Wird den Stift 90 Grad im Uhrzeigersinn gedreht.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Draws a second rectangle to demonstrate the difference.</source>
          <target state="translated">Zeichnet ein zweite Rechteck aus, um den Unterschied zu veranschaulichen.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="T:System.Drawing.Pen">
          <source>Scales the local geometric transformation by the specified factors.</source>
          <target state="translated">Skaliert die lokale geometrische Transformation um die angegebenen Faktoren.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="T:System.Drawing.Pen">
          <source>This method prepends the scaling matrix to the transformation.</source>
          <target state="translated">Diese Methode stellt der Transformation die Skalierungsmatrix voran.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.ScaleTransform(System.Single,System.Single)">
          <source>The factor by which to scale the transformation in the x-axis direction.</source>
          <target state="translated">Der Faktor, um den die Transformation in Richtung der x-Achse skaliert werden soll.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.ScaleTransform(System.Single,System.Single)">
          <source>The factor by which to scale the transformation in the y-axis direction.</source>
          <target state="translated">Der Faktor, um den die Transformation in Richtung der y-Achse skaliert werden soll.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.ScaleTransform(System.Single,System.Single)">
          <source>Scales the local geometric transformation by the specified factors.</source>
          <target state="translated">Skaliert die lokale geometrische Transformation um die angegebenen Faktoren.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.ScaleTransform(System.Single,System.Single)">
          <source>This method prepends the scaling matrix to the transformation.</source>
          <target state="translated">Diese Methode stellt der Transformation die Skalierungsmatrix voran.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.ScaleTransform(System.Single,System.Single)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">Im folgenden Codebeispiel wird für die Verwendung mit Windows Forms konzipiert und erfordert <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, einen Parameter von der <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> -Ereignishandler.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.ScaleTransform(System.Single,System.Single)">
          <source>The code performs the following actions:</source>
          <target state="translated">Der Code führt die folgenden Aktionen aus:</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.ScaleTransform(System.Single,System.Single)">
          <source>Creates a <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph>.</source>
          <target state="translated">Erstellt eine <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.ScaleTransform(System.Single,System.Single)">
          <source>Draws a rectangle using the pen.</source>
          <target state="translated">Zeichnet ein Rechteck mit dem Stift.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.ScaleTransform(System.Single,System.Single)">
          <source>Scales the pen by 2 times in the x-axis direction.</source>
          <target state="translated">Skaliert den Stift 2 multipliziert in Richtung der x-Achse an.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.ScaleTransform(System.Single,System.Single)">
          <source>Draws a second rectangle to demonstrate the difference.</source>
          <target state="translated">Zeichnet ein zweite Rechteck aus, um den Unterschied zu veranschaulichen.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>The factor by which to scale the transformation in the x-axis direction.</source>
          <target state="translated">Der Faktor, um den die Transformation in Richtung der x-Achse skaliert werden soll.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>The factor by which to scale the transformation in the y-axis direction.</source>
          <target state="translated">Der Faktor, um den die Transformation in Richtung der y-Achse skaliert werden soll.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.MatrixOrder" /&gt;</ph> that specifies whether to append or prepend the scaling matrix.</source>
          <target state="translated">Eine <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.MatrixOrder" /&gt;</ph>, die angibt, ob die Skalierungsmatrix vorangestellt oder angefügt werden soll.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Scales the local geometric transformation by the specified factors in the specified order.</source>
          <target state="translated">Skaliert die lokale geometrische Transformation um die angegebenen Faktoren in der angegebenen Reihenfolge.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">Im folgenden Codebeispiel wird für die Verwendung mit Windows Forms konzipiert und erfordert <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, einen Parameter von der <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> -Ereignishandler.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>The code performs the following actions:</source>
          <target state="translated">Der Code führt die folgenden Aktionen aus:</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Creates a <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph>.</source>
          <target state="translated">Erstellt eine <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Draws a rectangle using the pen.</source>
          <target state="translated">Zeichnet ein Rechteck mit dem Stift.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Scales the pen by 2 times in the x-axis direction.</source>
          <target state="translated">Skaliert den Stift 2 multipliziert in Richtung der x-Achse an.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Draws a second rectangle to demonstrate the difference.</source>
          <target state="translated">Zeichnet ein zweite Rechteck aus, um den Unterschied zu veranschaulichen.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.SetLineCap(System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.DashCap)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.LineCap" /&gt;</ph> that represents the cap style to use at the beginning of lines drawn with this <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">Eine <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.LineCap" /&gt;</ph>, die den Stil der Enden darstellt, der für den Anfang der mit diesem <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> gezeichneten Linien verwendet werden soll.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.SetLineCap(System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.DashCap)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.LineCap" /&gt;</ph> that represents the cap style to use at the end of lines drawn with this <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">Eine <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.LineCap" /&gt;</ph>, die den Stil der Enden darstellt, der für das Ende der mit diesem <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> gezeichneten Linien verwendet werden soll.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.SetLineCap(System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.DashCap)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.LineCap" /&gt;</ph> that represents the cap style to use at the beginning or end of dashed lines drawn with this <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">Eine <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.LineCap" /&gt;</ph>, die den Stil für den Anfang oder das Ende der mit diesem <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> gezeichneten gestrichelten Linien darstellt.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.SetLineCap(System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.DashCap)">
          <source>Sets the values that determine the style of cap used to end lines drawn by this <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">Legt die Werte fest, die den Stil der Linienenden für mit diesem <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> gezeichnete Linien bestimmen.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.SetLineCap(System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.DashCap)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">Im folgenden Codebeispiel wird für die Verwendung mit Windows Forms konzipiert und erfordert <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, einen Parameter von der <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> -Ereignishandler.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.SetLineCap(System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.DashCap)">
          <source>The code creates a <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph> and sets it to draw arrow anchor caps at the beginning of lines:</source>
          <target state="translated">Der Code erstellt ein <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph> und legt diesen Pfeil Anker Großbuchstaben am Anfang des Linien gezeichnet werden soll:</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" uid="P:System.Drawing.Pen.StartCap">
          <source>Gets or sets the cap style used at the beginning of lines drawn with this <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">Ruft den Stil für die Enden am Anfang der mit diesem <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> gezeichneten Linien ab oder legt diesen fest.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.StartCap">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.LineCap" /&gt;</ph> values that represents the cap style used at the beginning of lines drawn with this <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">Einer der <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.LineCap" /&gt;</ph>-Werte, der den Stil für die Enden am Anfang der mit diesem <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> gezeichneten Linien darstellt.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.StartCap">
          <source>The following code example demonstrates the effects of setting the <ph id="ph1">&lt;xref:System.Drawing.Pen.StartCap%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Drawing.Pen.EndCap%2A&gt;</ph> properties on a <ph id="ph3">&lt;xref:System.Drawing.Pen&gt;</ph>.</source>
          <target state="translated">Im folgenden Codebeispiel wird veranschaulicht, die Auswirkungen der Einstellung der <ph id="ph1">&lt;xref:System.Drawing.Pen.StartCap%2A&gt;</ph> und <ph id="ph2">&lt;xref:System.Drawing.Pen.EndCap%2A&gt;</ph> Eigenschaften auf eine <ph id="ph3">&lt;xref:System.Drawing.Pen&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.StartCap">
          <source>This example is designed to be used with Windows Forms.</source>
          <target state="translated">In diesem Beispiel dient, die mit Windows Forms verwendet werden.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.StartCap">
          <source>Paste the code into a form and call the <ph id="ph1">`ShowStartAndEndCaps`</ph> method when handling the form's <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event, passing <ph id="ph3">`e`</ph> as <ph id="ph4">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph>.</source>
          <target state="translated">Fügen Sie den Code in ein Formular, und rufen die <ph id="ph1">`ShowStartAndEndCaps`</ph> Methode beim Verarbeiten des Formulars <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> Ereignis, und übergeben Sie <ph id="ph3">`e`</ph> als <ph id="ph4">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" uid="P:System.Drawing.Pen.StartCap">
          <source>The specified value is not a member of <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.LineCap" /&gt;</ph>.</source>
          <target state="translated">Der angegebene Wert ist kein Member von <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.LineCap" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" uid="P:System.Drawing.Pen.StartCap">
          <source>The <ph id="ph1">&lt;see cref="P:System.Drawing.Pen.StartCap" /&gt;</ph> property is set on an immutable <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>, such as those returned by the <ph id="ph3">&lt;see cref="T:System.Drawing.Pens" /&gt;</ph> class.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="P:System.Drawing.Pen.StartCap" /&gt;</ph>-Eigenschaft wird auf einen unveränderlichen <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> festgelegt, der z. B. von der <ph id="ph3">&lt;see cref="T:System.Drawing.Pens" /&gt;</ph>-Klasse zurückgegeben wird.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" uid="P:System.Drawing.Pen.Transform">
          <source>Gets or sets a copy of the geometric transformation for this <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">Ruft eine Kopie der geometrischen Transformation für diesen <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> ab oder legt diese fest.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.Transform">
          <source>A copy of the <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> that represents the geometric transformation for this <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">Eine Kopie der <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>, die die geometrische Transformation für diesen <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> darstellt.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.Transform">
          <source>This property defines an elliptical shape for the pen tip.</source>
          <target state="translated">Diese Eigenschaft definiert eine elliptische Form des Stifts Tipps an.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.Transform">
          <source>This ellipse is obtained from the default circular shape by applying the transformation matrix.</source>
          <target state="translated">Diese Ellipse wird von der Standardeinstellung Kreisform durch Anwenden der Transformationsmatrix abgerufen.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.Transform">
          <source>Note that the translation portion of the matrix is ignored.</source>
          <target state="translated">Beachten Sie, dass die Verschiebungskomponente der Matrix ignoriert wird.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.Transform">
          <source>Because the matrix returned and by the <ph id="ph1">&lt;xref:System.Drawing.Pen.Transform%2A&gt;</ph> property is a copy of the pen's geometric transform, you should dispose of the matrix when you no longer need it.</source>
          <target state="translated">Da die Matrix zurückgegeben und durch die <ph id="ph1">&lt;xref:System.Drawing.Pen.Transform%2A&gt;</ph> Eigenschaft ist eine Kopie der geometrischen Transformation des Stifts, sollten Sie die Matrix freigeben, wenn Sie nicht mehr benötigen.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" uid="P:System.Drawing.Pen.Transform">
          <source>The <ph id="ph1">&lt;see cref="P:System.Drawing.Pen.Transform" /&gt;</ph> property is set on an immutable <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>, such as those returned by the <ph id="ph3">&lt;see cref="T:System.Drawing.Pens" /&gt;</ph> class.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="P:System.Drawing.Pen.Transform" /&gt;</ph>-Eigenschaft wird auf einen unveränderlichen <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> festgelegt, der z. B. von der <ph id="ph3">&lt;see cref="T:System.Drawing.Pens" /&gt;</ph>-Klasse zurückgegeben wird.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" uid="T:System.Drawing.Pen">
          <source>Translates the local geometric transformation by the specified dimensions.</source>
          <target state="translated">Verschiebt die lokale geometrische Transformation um die angegebenen Abmessungen.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" uid="T:System.Drawing.Pen">
          <source>This method prepends the translation to the transformation.</source>
          <target state="translated">Diese Methode stellt der Transformation die Verschiebung voran.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.TranslateTransform(System.Single,System.Single)">
          <source>The value of the translation in x.</source>
          <target state="translated">Der Wert der Verschiebung in x-Richtung.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.TranslateTransform(System.Single,System.Single)">
          <source>The value of the translation in y.</source>
          <target state="translated">Der Wert der Verschiebung in y-Richtung.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.TranslateTransform(System.Single,System.Single)">
          <source>Translates the local geometric transformation by the specified dimensions.</source>
          <target state="translated">Verschiebt die lokale geometrische Transformation um die angegebenen Abmessungen.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.TranslateTransform(System.Single,System.Single)">
          <source>This method prepends the translation to the transformation.</source>
          <target state="translated">Diese Methode stellt der Transformation die Verschiebung voran.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>The value of the translation in x.</source>
          <target state="translated">Der Wert der Verschiebung in x-Richtung.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>The value of the translation in y.</source>
          <target state="translated">Der Wert der Verschiebung in y-Richtung.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>The order (prepend or append) in which to apply the translation.</source>
          <target state="translated">Die Reihenfolge (vorangestellt oder angefügt), in der die Schiebung angewendet wird.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Translates the local geometric transformation by the specified dimensions in the specified order.</source>
          <target state="translated">Verschiebt die lokale geometrische Transformation in der angegebenen Reihenfolge um die angegebenen Abmessungen.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" uid="P:System.Drawing.Pen.Width">
          <source>Gets or sets the width of this <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>, in units of the <ph id="ph2">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> object used for drawing.</source>
          <target state="translated">Ruft die Breite dieses <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> in Einheiten des zum Zeichnen verwendeten <ph id="ph2">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>-Objekts ab oder legt diese fest.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.Width">
          <source>The width of this <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">Die Breite dieses <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.Width">
          <source>You can access the unit of measure of the <ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph> object using its <ph id="ph2">&lt;xref:System.Drawing.Graphics.PageUnit%2A&gt;</ph> property.</source>
          <target state="translated">Sie können die Maßeinheit des zugreifen der <ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph> -Objekt mithilfe seiner <ph id="ph2">&lt;xref:System.Drawing.Graphics.PageUnit%2A&gt;</ph> Eigenschaft.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.Width">
          <source>The unit of measure is typically pixels.</source>
          <target state="translated">Die Maßeinheit ist i. d. r. Pixel.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.Width">
          <source>A <ph id="ph1">&lt;xref:System.Drawing.Pen.Width%2A&gt;</ph> of 0 will result in the <ph id="ph2">&lt;xref:System.Drawing.Pen&gt;</ph> drawing as if the <ph id="ph3">&lt;xref:System.Drawing.Pen.Width%2A&gt;</ph> were 1.</source>
          <target state="translated">Ein <ph id="ph1">&lt;xref:System.Drawing.Pen.Width%2A&gt;</ph> 0 führt die <ph id="ph2">&lt;xref:System.Drawing.Pen&gt;</ph> Zeichnen als wäre die <ph id="ph3">&lt;xref:System.Drawing.Pen.Width%2A&gt;</ph> 1 wurden.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.Width">
          <source>The following code example demonstrates the effects of setting the <ph id="ph1">&lt;xref:System.Drawing.Pen.Width%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Drawing.Pen.LineJoin%2A&gt;</ph> properties on a <ph id="ph3">&lt;xref:System.Drawing.Pen&gt;</ph>.</source>
          <target state="translated">Im folgenden Codebeispiel wird veranschaulicht, die Auswirkungen der Einstellung der <ph id="ph1">&lt;xref:System.Drawing.Pen.Width%2A&gt;</ph> und <ph id="ph2">&lt;xref:System.Drawing.Pen.LineJoin%2A&gt;</ph> Eigenschaften auf eine <ph id="ph3">&lt;xref:System.Drawing.Pen&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.Width">
          <source>This example is designed to be used with Windows Forms.</source>
          <target state="translated">In diesem Beispiel dient, die mit Windows Forms verwendet werden.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.Width">
          <source>Paste the code into a form and call the <ph id="ph1">`ShowLineJoin`</ph> method when handling the form's <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event, passing <ph id="ph3">`e`</ph> as <ph id="ph4">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph>.</source>
          <target state="translated">Fügen Sie den Code in ein Formular, und rufen die <ph id="ph1">`ShowLineJoin`</ph> Methode beim Verarbeiten des Formulars <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> Ereignis, und übergeben Sie <ph id="ph3">`e`</ph> als <ph id="ph4">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" uid="P:System.Drawing.Pen.Width">
          <source>The <ph id="ph1">&lt;see cref="P:System.Drawing.Pen.Width" /&gt;</ph> property is set on an immutable <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>, such as those returned by the <ph id="ph3">&lt;see cref="T:System.Drawing.Pens" /&gt;</ph> class.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="P:System.Drawing.Pen.Width" /&gt;</ph>-Eigenschaft wird auf einen unveränderlichen <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> festgelegt, der z. B. von der <ph id="ph3">&lt;see cref="T:System.Drawing.Pens" /&gt;</ph>-Klasse zurückgegeben wird.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>