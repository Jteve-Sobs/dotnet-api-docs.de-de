<Type Name="BufferedGraphics" FullName="System.Drawing.BufferedGraphics">
  <Metadata><Meta Name="ms.openlocfilehash" Value="385cd9f35c51508596737a223b79889e3e7131a1" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70454776" /></Metadata><TypeSignature Language="C#" Value="public sealed class BufferedGraphics : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit BufferedGraphics extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.BufferedGraphics" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class BufferedGraphics&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class BufferedGraphics sealed : IDisposable" />
  <TypeSignature Language="F#" Value="type BufferedGraphics = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Drawing.Common</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.1</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="eab92-101">Stellt einen Grafikpuffer für doppelte Pufferung bereit.</span><span class="sxs-lookup"><span data-stu-id="eab92-101">Provides a graphics buffer for double buffering.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eab92-102">Mit <xref:System.Drawing.BufferedGraphics> der-Klasse können Sie benutzerdefinierte doppelte Pufferung für Ihre Grafiken implementieren.</span><span class="sxs-lookup"><span data-stu-id="eab92-102">The <xref:System.Drawing.BufferedGraphics> class allows you to implement custom double buffering for your graphics.</span></span> <span data-ttu-id="eab92-103">Es stellt einen Wrapper für einen Grafik Puffer bereit, zusammen mit Methoden, die Sie zum Schreiben in den Puffer und zum Renderinginhalt auf einem Ausgabegerät verwenden können.</span><span class="sxs-lookup"><span data-stu-id="eab92-103">It provides a wrapper for a graphics buffer, along with methods that you can use to write to the buffer and render its contents to an output device.</span></span>  
  
 <span data-ttu-id="eab92-104">Grafiken, die doppelte Pufferung verwenden, können das Flimmern reduzieren oder eliminieren, das durch das Neuzeichnen einer Anzeige Oberfläche verursacht wird.</span><span class="sxs-lookup"><span data-stu-id="eab92-104">Graphics that use double buffering can reduce or eliminate flicker that is caused by redrawing a display surface.</span></span> <span data-ttu-id="eab92-105">Wenn Sie die doppelte Pufferung verwenden, werden aktualisierte Grafiken zuerst in einen Puffer im Arbeitsspeicher gezeichnet, und der Inhalt dieses Puffers wird dann schnell auf eine oder alle der angezeigten Oberfläche geschrieben.</span><span class="sxs-lookup"><span data-stu-id="eab92-105">When you use double buffering, updated graphics are first drawn to a buffer in memory, and the contents of this buffer are then quickly written to some or all of the displayed surface.</span></span> <span data-ttu-id="eab92-106">Dieses relativ kurze Überschreiben der angezeigten Grafiken verringert oder entfernt das Flimmern, das manchmal beim Aktualisieren von Grafiken auftritt.</span><span class="sxs-lookup"><span data-stu-id="eab92-106">This relatively brief overwrite of the displayed graphics typically reduces or eliminates the flicker that sometimes occurs when graphics are updated.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="eab92-107">Die einfachste Möglichkeit, die doppelte Pufferung zu verwenden, besteht <xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer> darin, das Steuerelement stilflag für <xref:System.Windows.Forms.Control.SetStyle%2A> ein Steuerelement mithilfe der-Methode festzulegen.</span><span class="sxs-lookup"><span data-stu-id="eab92-107">The simplest way to use double buffering is to set the <xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer> control style flag on a control using the <xref:System.Windows.Forms.Control.SetStyle%2A> method.</span></span> <span data-ttu-id="eab92-108">Wenn Sie <xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer> das Flag für ein Steuerelement festlegen, wird das gesamte zeichnen für das Steuerelement über einen Standard Grafik Puffer umgeleitet, ohne dass zusätzlicher Code erforderlich ist.</span><span class="sxs-lookup"><span data-stu-id="eab92-108">Setting the <xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer> flag for a control redirects all painting for the control through a default graphics buffer, without requiring any additional code.</span></span> <span data-ttu-id="eab92-109">Dieses Flag ist standardmäßig `true` auf festgelegt.</span><span class="sxs-lookup"><span data-stu-id="eab92-109">This flag is set to `true` by default.</span></span>  
  
 <span data-ttu-id="eab92-110">Die <xref:System.Drawing.BufferedGraphics> -Klasse verfügt über keinen öffentlichen Konstruktor und muss von der <xref:System.Drawing.BufferedGraphicsContext> für eine Anwendungsdomäne mithilfe Ihrer <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> -Methode erstellt werden.</span><span class="sxs-lookup"><span data-stu-id="eab92-110">The <xref:System.Drawing.BufferedGraphics> class has no public constructor and must be created by the <xref:System.Drawing.BufferedGraphicsContext> for an application domain using its <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> method.</span></span> <span data-ttu-id="eab92-111">Sie können den <xref:System.Drawing.BufferedGraphicsContext> für die aktuelle Anwendungsdomäne aus der statischen <xref:System.Drawing.BufferedGraphicsManager.Current%2A?displayProperty=nameWithType> -Eigenschaft abrufen.</span><span class="sxs-lookup"><span data-stu-id="eab92-111">You can retrieve the <xref:System.Drawing.BufferedGraphicsContext> for the current application domain from the static <xref:System.Drawing.BufferedGraphicsManager.Current%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="eab92-112">Die <xref:System.Drawing.BufferedGraphics.Graphics%2A> -Eigenschaft kann zum Zeichnen in den Grafik Puffer verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="eab92-112">The <xref:System.Drawing.BufferedGraphics.Graphics%2A> property can be used for drawing to the graphics buffer.</span></span> <span data-ttu-id="eab92-113">Diese Eigenschaft ermöglicht den Zugriff auf <xref:System.Drawing.Graphics> das-Objekt, das sich auf den Grafik Puffer <xref:System.Drawing.BufferedGraphics> bezieht, der diesem Objekt zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="eab92-113">This property provides access to the <xref:System.Drawing.Graphics> object that draws to the graphics buffer allocated for this <xref:System.Drawing.BufferedGraphics> object.</span></span>  
  
 <span data-ttu-id="eab92-114">Die <xref:System.Drawing.BufferedGraphics.Render%2A> -Methode ohne Argumente zeichnet den Inhalt des Grafik Puffers auf die Oberfläche, die beim Zuordnen des Puffers angegeben wurde.</span><span class="sxs-lookup"><span data-stu-id="eab92-114">The <xref:System.Drawing.BufferedGraphics.Render%2A> method with no arguments draws the contents of the graphics buffer to the surface specified when the buffer was allocated.</span></span> <span data-ttu-id="eab92-115">Andere über Ladungen der <xref:System.Drawing.BufferedGraphics.Render%2A> -Methode ermöglichen es Ihnen, ein <xref:System.Drawing.Graphics> -Objekt oder ein <xref:System.IntPtr> -Objekt anzugeben, das auf einen Gerätekontext zeigt, auf den der Inhalt des Grafik Puffers gezeichnet werden soll.</span><span class="sxs-lookup"><span data-stu-id="eab92-115">Other overloads of the <xref:System.Drawing.BufferedGraphics.Render%2A> method allow you to specify a <xref:System.Drawing.Graphics> object or an <xref:System.IntPtr> object that points to a device context to which to draw the contents of the graphics buffer.</span></span>  
  
 <span data-ttu-id="eab92-116">Weitere Informationen zum Zeichnen von doppelt gepufferten Grafiken finden Sie unter [doppelt gepufferte Grafiken](~/docs/framework/winforms/advanced/double-buffered-graphics.md).</span><span class="sxs-lookup"><span data-stu-id="eab92-116">For more information about drawing double-buffered graphics, see [Double Buffered Graphics](~/docs/framework/winforms/advanced/double-buffered-graphics.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eab92-117">Im folgenden Codebeispiel wird die Verwendung <xref:System.Drawing.BufferedGraphics> eines-Objekts zum Zeichnen von Grafiken mithilfe verschiedener Typen von Puffer Implementierungen veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="eab92-117">The following code example demonstrates using a <xref:System.Drawing.BufferedGraphics> object to draw graphics using several types of buffering implementations.</span></span> <span data-ttu-id="eab92-118">Wenn Sie auf das Formular klicken, wird ein Timer gestartet und beendet, der Draw-Aktualisierungen auslöst.</span><span class="sxs-lookup"><span data-stu-id="eab92-118">Clicking the form alternately starts and stops a timer that causes draw updates.</span></span> <span data-ttu-id="eab92-119">Mit den Draw-Aktualisierungen können Sie die Auswirkungen der doppelten Pufferung beobachten.</span><span class="sxs-lookup"><span data-stu-id="eab92-119">The draw updates allow you to observe the effect of double buffering.</span></span> <span data-ttu-id="eab92-120">Wenn Sie mit der rechten Maustaste auf das Formular klicken, werden die folgenden Zeichnungs Modi durchlaufen</span><span class="sxs-lookup"><span data-stu-id="eab92-120">Right-clicking the form cycles through the following drawing modes:</span></span>  
  
-   <span data-ttu-id="eab92-121">Das <xref:System.Windows.Forms.Control.Handle%2A> direkte Zeichnen von für einen <xref:System.Windows.Forms.Form>.</span><span class="sxs-lookup"><span data-stu-id="eab92-121">Drawing directly to the <xref:System.Windows.Forms.Control.Handle%2A> for a <xref:System.Windows.Forms.Form>.</span></span>  
  
-   <span data-ttu-id="eab92-122">Zeichnen durch Überschreiben <xref:System.Windows.Forms.Form.OnPaint%2A> der-Methode <xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer> mit dem Steuerelement Stil.</span><span class="sxs-lookup"><span data-stu-id="eab92-122">Drawing by overriding the <xref:System.Windows.Forms.Form.OnPaint%2A> method using the <xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer> control style.</span></span>  
  
-   <span data-ttu-id="eab92-123">Zeichnen durch Überschreiben <xref:System.Windows.Forms.Form.OnPaint%2A> der-Methode für die Formular Methode ohne <xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer> Verwendung des Steuerelement Stils.</span><span class="sxs-lookup"><span data-stu-id="eab92-123">Drawing by overriding the <xref:System.Windows.Forms.Form.OnPaint%2A> method for the form method without using the <xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer> control style.</span></span>  
  
 <span data-ttu-id="eab92-124">In jedem Modus wird Text gezeichnet, der den aktuellen Modus identifiziert und das Verhalten beschreibt, das auftritt, wenn die Maustaste gedrückt wird.</span><span class="sxs-lookup"><span data-stu-id="eab92-124">In each mode, text is drawn that identifies the current mode and describes the behavior that occurs when each mouse button is pressed.</span></span>  
  
 [!code-cpp[BufferedGraphicsExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/BufferedGraphicsExample/CPP/bufferingtest.cpp#1)]
 [!code-csharp[BufferedGraphicsExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/BufferedGraphicsExample/CS/bufferingtest.cs#1)]
 [!code-vb[BufferedGraphicsExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/BufferedGraphicsExample/VB/bufferingtest.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="eab92-125">Die <see cref="T:System.Drawing.BufferedGraphics" />-Klasse ist nicht threadsicher.</span><span class="sxs-lookup"><span data-stu-id="eab92-125">The <see cref="T:System.Drawing.BufferedGraphics" /> class is not thread safe.</span></span> <span data-ttu-id="eab92-126">Beim Zugriff auf einen Grafik Puffer aus separaten Threads ist es wichtig, einen Thread Zugriffs Steuerungsmechanismus zu verwenden, um Konflikte zu verhindern.</span><span class="sxs-lookup"><span data-stu-id="eab92-126">When accessing a graphics buffer from separate threads, it is important to use a thread-access control mechanism to prevent conflicts.</span></span></threadsafe>
    <related type="Article" href="~/docs/framework/winforms/advanced/double-buffered-graphics.md"><span data-ttu-id="eab92-127">Doppelt gepufferte Grafiken</span><span class="sxs-lookup"><span data-stu-id="eab92-127">Double Buffered Graphics</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.BufferedGraphics.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="bufferedGraphics.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="eab92-128">Gibt alle vom <see cref="T:System.Drawing.BufferedGraphics" />-Objekt verwendeten Ressourcen frei.</span><span class="sxs-lookup"><span data-stu-id="eab92-128">Releases all resources used by the <see cref="T:System.Drawing.BufferedGraphics" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eab92-129">Wird <xref:System.Drawing.BufferedGraphics.Dispose%2A> aufgerufen, wenn Sie die Verwendung <xref:System.Drawing.BufferedGraphics> des-Objekts abgeschlossen haben.</span><span class="sxs-lookup"><span data-stu-id="eab92-129">Call <xref:System.Drawing.BufferedGraphics.Dispose%2A> when you are finished using the <xref:System.Drawing.BufferedGraphics> object.</span></span> <span data-ttu-id="eab92-130">Die <xref:System.Drawing.BufferedGraphics.Dispose%2A> -Methode lässt <xref:System.Drawing.BufferedGraphics> das-Objekt in einen nicht verwendbaren Zustand.</span><span class="sxs-lookup"><span data-stu-id="eab92-130">The <xref:System.Drawing.BufferedGraphics.Dispose%2A> method leaves the <xref:System.Drawing.BufferedGraphics> object in an unusable state.</span></span> <span data-ttu-id="eab92-131">Nach dem <xref:System.Drawing.BufferedGraphics.Dispose%2A>Aufrufen von müssen Sie alle Verweise auf das <xref:System.Drawing.BufferedGraphics> -Objekt freigeben, damit der Garbage Collector den Speicher freigeben <xref:System.Drawing.BufferedGraphics> kann, den das Objekt belegt hat.</span><span class="sxs-lookup"><span data-stu-id="eab92-131">After calling <xref:System.Drawing.BufferedGraphics.Dispose%2A>, you must release all references to the <xref:System.Drawing.BufferedGraphics> object so the garbage collector can reclaim the memory that the <xref:System.Drawing.BufferedGraphics> object was occupying.</span></span> <span data-ttu-id="eab92-132">Weitere Informationen finden Sie unter [Bereinigen von nicht verwalteten Ressourcen](~/docs/standard/garbage-collection/unmanaged.md) und [Implementieren einer](~/docs/standard/garbage-collection/implementing-dispose.md)verwerfen-Methode.</span><span class="sxs-lookup"><span data-stu-id="eab92-132">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="eab92-133">Wird immer <xref:System.Drawing.BufferedGraphics.Dispose%2A> aufgerufen, bevor der letzte Verweis auf das <xref:System.Drawing.BufferedGraphics> Objekt freigegeben wird.</span><span class="sxs-lookup"><span data-stu-id="eab92-133">Always call <xref:System.Drawing.BufferedGraphics.Dispose%2A> before you release your last reference to the <xref:System.Drawing.BufferedGraphics> object.</span></span> <span data-ttu-id="eab92-134">Andernfalls bleiben die verwendeten Ressourcen reserviert, bis die Garbage Collection die <xref:System.Drawing.BufferedGraphics>-Methode des `Finalize`-Objekts aufruft.</span><span class="sxs-lookup"><span data-stu-id="eab92-134">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Drawing.BufferedGraphics> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/advanced/double-buffered-graphics.md"><span data-ttu-id="eab92-135">Doppelt gepufferte Grafiken</span><span class="sxs-lookup"><span data-stu-id="eab92-135">Double Buffered Graphics</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~BufferedGraphics ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.BufferedGraphics.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!BufferedGraphics ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="bufferedGraphics.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="eab92-136">Gibt einem Objekt Gelegenheit zu dem Versuch, Ressourcen freizugeben und andere Bereinigungen durchzuführen, bevor es von der Garbage Collection freigegeben wird.</span><span class="sxs-lookup"><span data-stu-id="eab92-136">Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Object.Finalize" />
      </Docs>
    </Member>
    <Member MemberName="Graphics">
      <MemberSignature Language="C#" Value="public System.Drawing.Graphics Graphics { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Graphics Graphics" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.BufferedGraphics.Graphics" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Graphics As Graphics" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Graphics ^ Graphics { System::Drawing::Graphics ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Graphics : System.Drawing.Graphics" Usage="System.Drawing.BufferedGraphics.Graphics" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Graphics</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eab92-137">Ruft ein <see cref="T:System.Drawing.Graphics" />-Objekt ab, das eine Ausgabe an den Grafikpuffer ausführt.</span><span class="sxs-lookup"><span data-stu-id="eab92-137">Gets a <see cref="T:System.Drawing.Graphics" /> object that outputs to the graphics buffer.</span></span></summary>
        <value><span data-ttu-id="eab92-138">Ein <see cref="T:System.Drawing.Graphics" />-Objekt, das eine Ausgabe an den Grafikpuffer ausführt.</span><span class="sxs-lookup"><span data-stu-id="eab92-138">A <see cref="T:System.Drawing.Graphics" /> object that outputs to the graphics buffer.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eab92-139">Diese Eigenschaft stellt ein <xref:System.Drawing.Graphics> -Objekt bereit, das sich auf den Grafik Puffer <xref:System.Drawing.BufferedGraphics> bezieht, der diesem-Objekt zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="eab92-139">This property provides a <xref:System.Drawing.Graphics> object that draws to the graphics buffer allocated for this <xref:System.Drawing.BufferedGraphics> object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Graphics" />
        <related type="Article" href="~/docs/framework/winforms/advanced/double-buffered-graphics.md"><span data-ttu-id="eab92-140">Doppelt gepufferte Grafiken</span><span class="sxs-lookup"><span data-stu-id="eab92-140">Double Buffered Graphics</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Render">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="eab92-141">Schreibt den Inhalt des Grafikpuffers.</span><span class="sxs-lookup"><span data-stu-id="eab92-141">Writes the contents of the graphics buffer.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="public void Render ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Render() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.BufferedGraphics.Render" />
      <MemberSignature Language="VB.NET" Value="Public Sub Render ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Render();" />
      <MemberSignature Language="F#" Value="member this.Render : unit -&gt; unit" Usage="bufferedGraphics.Render " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="eab92-142">Schreibt den Inhalt des Grafikpuffers an das Standardgerät.</span><span class="sxs-lookup"><span data-stu-id="eab92-142">Writes the contents of the graphics buffer to the default device.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eab92-143">Diese Methode schreibt den Inhalt des Grafik Puffers auf das Gerät, das durch Aufrufen <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> der-Methode <xref:System.Drawing.BufferedGraphicsContext> des zum Erstellen dieses <xref:System.Drawing.BufferedGraphics> -Objekts verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="eab92-143">This method writes the contents of the graphics buffer to the device specified by calling the <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> method of the <xref:System.Drawing.BufferedGraphicsContext> used to create this <xref:System.Drawing.BufferedGraphics> object.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/advanced/double-buffered-graphics.md"><span data-ttu-id="eab92-144">Doppelt gepufferte Grafiken</span><span class="sxs-lookup"><span data-stu-id="eab92-144">Double Buffered Graphics</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="public void Render (System.Drawing.Graphics target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Render(class System.Drawing.Graphics target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.BufferedGraphics.Render(System.Drawing.Graphics)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Render (target As Graphics)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Render(System::Drawing::Graphics ^ target);" />
      <MemberSignature Language="F#" Value="member this.Render : System.Drawing.Graphics -&gt; unit" Usage="bufferedGraphics.Render target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="eab92-145">Ein <see cref="T:System.Drawing.Graphics" />-Objekt, in das der Inhalt des Grafikpuffers geschrieben werden soll.</span><span class="sxs-lookup"><span data-stu-id="eab92-145">A <see cref="T:System.Drawing.Graphics" /> object to which to write the contents of the graphics buffer.</span></span></param>
        <summary><span data-ttu-id="eab92-146">Schreibt den Inhalt des Grafikpuffers in das angegebene <see cref="T:System.Drawing.Graphics" />-Objekt.</span><span class="sxs-lookup"><span data-stu-id="eab92-146">Writes the contents of the graphics buffer to the specified <see cref="T:System.Drawing.Graphics" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eab92-147">Diese Methode schreibt den Inhalt des Grafik Puffers in das angegebene <xref:System.Drawing.Graphics> -Objekt.</span><span class="sxs-lookup"><span data-stu-id="eab92-147">This method writes the contents of the graphics buffer to the specified <xref:System.Drawing.Graphics> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eab92-148">Das folgende Codebeispiel veranschaulicht das Rendern des Inhalts des Grafik Puffers in <xref:System.Drawing.Graphics> ein angegebenes Objekt.</span><span class="sxs-lookup"><span data-stu-id="eab92-148">The following code example demonstrates rendering the contents of the graphics buffer to a specified <xref:System.Drawing.Graphics> object.</span></span> <span data-ttu-id="eab92-149">Dieser Code ist Teil eines größeren Beispiels, das für die <xref:System.Drawing.BufferedGraphics> -Klasse bereitgestellt wird.</span><span class="sxs-lookup"><span data-stu-id="eab92-149">This code is part of a larger example provided for the <xref:System.Drawing.BufferedGraphics> class.</span></span>  
  
 [!code-cpp[BufferingExamples#5](~/samples/snippets/cpp/VS_Snippets_Winforms/BufferingExamples/CPP/bufferingexamples.cpp#5)]
 [!code-csharp[BufferingExamples#5](~/samples/snippets/csharp/VS_Snippets_Winforms/BufferingExamples/CS/bufferingexamples.cs#5)]
 [!code-vb[BufferingExamples#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/BufferingExamples/VB/bufferingexamples.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Graphics" />
        <related type="Article" href="~/docs/framework/winforms/advanced/double-buffered-graphics.md"><span data-ttu-id="eab92-150">Doppelt gepufferte Grafiken</span><span class="sxs-lookup"><span data-stu-id="eab92-150">Double Buffered Graphics</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="public void Render (IntPtr targetDC);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Render(native int targetDC) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.BufferedGraphics.Render(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Render (targetDC As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Render(IntPtr targetDC);" />
      <MemberSignature Language="F#" Value="member this.Render : nativeint -&gt; unit" Usage="bufferedGraphics.Render targetDC" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetDC" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="targetDC"><span data-ttu-id="eab92-151">Ein <see cref="T:System.IntPtr" />, der auf den Gerätekontext zeigt, auf den der Inhalt des Grafikpuffers geschrieben werden soll.</span><span class="sxs-lookup"><span data-stu-id="eab92-151">An <see cref="T:System.IntPtr" /> that points to the device context to which to write the contents of the graphics buffer.</span></span></param>
        <summary><span data-ttu-id="eab92-152">Schreibt den Inhalt des Grafikpuffers auf den Gerätekontext, der dem angegebenen <see cref="T:System.IntPtr" />-Handle zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="eab92-152">Writes the contents of the graphics buffer to the device context associated with the specified <see cref="T:System.IntPtr" /> handle.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eab92-153">Diese Methode schreibt den Inhalt des Grafik Puffers in den Gerätekontext, der dem angegebenen <xref:System.IntPtr> Handle zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="eab92-153">This method writes the contents of the graphics buffer to the device context associated with the specified <xref:System.IntPtr> handle.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eab92-154">Im folgenden Codebeispiel wird veranschaulicht, wie der Inhalt des Grafik Puffers `grafx` in einem angegebenen Gerätekontext dargestellt wird.</span><span class="sxs-lookup"><span data-stu-id="eab92-154">The following code example demonstrates how to render the contents of the graphics buffer `grafx` to a specified device context.</span></span> <span data-ttu-id="eab92-155">Dieser Code ist Teil eines größeren Beispiels, das für die <xref:System.Drawing.BufferedGraphics> -Klasse bereitgestellt wird.</span><span class="sxs-lookup"><span data-stu-id="eab92-155">This code is part of a larger example provided for the <xref:System.Drawing.BufferedGraphics> class.</span></span>  
  
 [!code-cpp[BufferingExamples#6](~/samples/snippets/cpp/VS_Snippets_Winforms/BufferingExamples/CPP/bufferingexamples.cpp#6)]
 [!code-csharp[BufferingExamples#6](~/samples/snippets/csharp/VS_Snippets_Winforms/BufferingExamples/CS/bufferingexamples.cs#6)]
 [!code-vb[BufferingExamples#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/BufferingExamples/VB/bufferingexamples.vb#6)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="eab92-156">für den Zugriff auf nicht verwalteten Code.</span><span class="sxs-lookup"><span data-stu-id="eab92-156">for access to unmanaged code.</span></span> <span data-ttu-id="eab92-157">Verwandte Enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span><span class="sxs-lookup"><span data-stu-id="eab92-157">Related enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span></span></permission>
        <altmember cref="T:System.IntPtr" />
        <related type="Article" href="~/docs/framework/winforms/advanced/double-buffered-graphics.md"><span data-ttu-id="eab92-158">Doppelt gepufferte Grafiken</span><span class="sxs-lookup"><span data-stu-id="eab92-158">Double Buffered Graphics</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
