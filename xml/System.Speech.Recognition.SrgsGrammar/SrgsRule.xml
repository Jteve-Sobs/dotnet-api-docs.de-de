<Type Name="SrgsRule" FullName="System.Speech.Recognition.SrgsGrammar.SrgsRule">
  <Metadata><Meta Name="ms.openlocfilehash" Value="dd7e21e11a331738fa252188f7d40567f5c4c333" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86590319" /></Metadata><TypeSignature Language="C#" Value="public class SrgsRule" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit SrgsRule extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Speech.Recognition.SrgsGrammar.SrgsRule" />
  <TypeSignature Language="VB.NET" Value="Public Class SrgsRule" />
  <TypeSignature Language="C++ CLI" Value="public ref class SrgsRule" />
  <TypeSignature Language="F#" Value="type SrgsRule = class" />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Diagnostics.DebuggerDisplay("Rule={_id.ToString()} Scope={_scope.ToString()}")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerDisplay("Rule={_id.ToString()} Scope={_scope.ToString()}")&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Diagnostics.DebuggerTypeProxy(typeof(System.Speech.Recognition.SrgsGrammar.SrgsRule/SrgsRuleDebugDisplay))]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerTypeProxy(typeof(System.Speech.Recognition.SrgsGrammar.SrgsRule/SrgsRuleDebugDisplay))&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Serializable]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Serializable&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Stellt eine Grammatikregel dar.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie die- <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule> Klasse, um zur Laufzeit eine neue Regel zu erstellen oder um eine Regel in einem vorhandenen Grammatik-Stream oder einer vorhandenen Datei zur Laufzeit zu ändern.  
  
 Die Wörter und Ausdrücke, die von- <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule> Objekten in Grammatiken angegeben werden, die von- <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> Instanzen definiert werden, schränken die gesprochene Eingabe ein, die von der Erkennung identifiziert werden muss.  
  
 Ein- <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule> Objekt gibt die Reihenfolge an, in der Wörter und Ausdrücke gesprochen werden müssen, indem die Objekte, die Sie enthalten, angeordnet werden. Wörter und Ausdrücke innerhalb einer Regel werden von Objekten wie <xref:System.Speech.Recognition.SrgsGrammar.SrgsItem> , <xref:System.Speech.Recognition.SrgsGrammar.SrgsOneOf> , <xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef> und <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken> Elementen dargestellt. Verwenden Sie die- <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.Elements%2A> Eigenschaft für den Zugriff auf die Auflistung von untergeordneten Objekten, die ein- <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule> Objekt enthält.  
  
 Sie können bestimmen, ob ein <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule> in einem Regel Verweis aus einer Regel in einer externen Grammatik durch Festlegen der-Eigenschaft angegeben werden kann <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.Scope%2A> .  
  
 Es ist nicht zulässig, einen zu definieren <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule> , der leer ist oder nur Leerzeichen enthält.  
  
 Diese Klasse stellt das- `rule` Element dar, das in der [sprach Erkennungs Grammatik-Spezifikation (SRGS) 1,0](https://go.microsoft.com/fwlink/?LinkId=201761)(World Wide Web Consortium (W3C)) definiert ist. Weitere Informationen über das SRGS `rule` -Element und Details zur Unterstützung durch System. Speech finden Sie unter [rule-Element](https://msdn.microsoft.com/library/da67b4aa-0545-426a-a02f-1417b968021e).  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/office/developer/speech-technologies/hh361680(v%3doffice.14)">Erstellen von Grammatiken mithilfe von SrgsGrammar</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsRule" />-Klasse.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SrgsRule (string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.SrgsGrammar.SrgsRule.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (id As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SrgsRule(System::String ^ id);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.SrgsGrammar.SrgsRule : string -&gt; System.Speech.Recognition.SrgsGrammar.SrgsRule" Usage="new System.Speech.Recognition.SrgsGrammar.SrgsRule id" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id">Der Bezeichner der Regel.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsRule" />-Klasse und gibt den Bezeichner für die Regel an.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der- <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.%23ctor%2A> Konstruktor initialisiert die- <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.Id%2A> Eigenschaft. Der Bezeichner muss innerhalb einer gegebenen Grammatik eindeutig sein.  
  
 Der- <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.%23ctor%2A> Konstruktor löst <xref:System.FormatException> in den folgenden Situationen eine aus:  
  
-   `id`ist kein gültiger XML-Name, wie in [Extensible Markup Language (XML) 1,0 (Fünfte Edition)](https://www.w3.org/TR/REC-xml/)definiert. Um diese Definition zu umbenennen, muss ein gültiger XML-Name mit einem Buchstaben, einem Unterstrich ("_") oder einem Doppelpunkt (":") beginnen, gefolgt von NULL oder mehr namechtabzeichen (auch in der XML-Spezifikation definiert).  
  
-   `id`ist "Null" oder "void" oder "Garbage".  
  
-   `id`enthält mindestens ein ungültiges Regel-ID-Zeichen. Folgende Zeichen sind zulässig: "?", "*", "+", ' &#124; ', ' (', ') ', ' ^ ', ' $ ', '/', '; ', '. ', ' = ', ' \<', '> ', ' [', '] ', ' {', '} ', ' ', ' ', ' \\ \\ \t ', ' \r ' und ' \n '.  
  
   
  
## Examples  
 Im folgenden Beispiel wird eine Grammatik erstellt, die den Begriff "ein Land, das den World Cup gewonnen hat", gefolgt vom Namen eines Landes, das den World Cup gewonnen hat, erkennt. Im Beispiel wird ein <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule> -Objekt mit dem Namen erstellt, `winnerRule` und der Bezeichner wird als weitergeleitet `WorldCupWinner` <xref:System.String> . Das- <xref:System.Speech.Recognition.SrgsGrammar.SrgsOneOf> Objekt besteht aus einem Array neuer- <xref:System.Speech.Recognition.SrgsGrammar.SrgsItem> Objekte, die alternativen enthalten, die von der Regel erkannt werden.  
  
```csharp  
public void WorldSoccerWinners ()  
{  
  
  // Create an SrgsDocument, create a new rule  
  // and set its scope to public.  
  SrgsDocument document = new SrgsDocument();  
  SrgsRule winnerRule = new SrgsRule("WorldCupWinner");  
  winnerRule.Scope = SrgsRuleScope.Public;  
  
  // Add the introduction.  
  winnerRule.Elements.Add(new SrgsItem("A nation that has won the world cup is: "));  
  
  // Create the rule for the European nations.  
  SrgsOneOf oneOfEurope = new SrgsOneOf(new SrgsItem[] {new SrgsItem("England"),   
    new SrgsItem("France"), new SrgsItem("Germany"), new SrgsItem("Italy")});  
  SrgsRule ruleEurope = (new SrgsRule("EuropeanNations", new SrgsElement[] {oneOfEurope}));  
  
  // Create the rule for the South American nations.  
  SrgsOneOf oneOfSAmerica = new SrgsOneOf(new SrgsItem[] {new SrgsItem("Argentina"),   
    new SrgsItem("Brazil"), new SrgsItem("Uruguay")});  
  SrgsRule ruleSAmerica = (new SrgsRule("SouthAmericanNations", new SrgsElement[] {oneOfSAmerica}));  
  
  // Add references to winnerRule for ruleEurope and ruleSAmerica.  
  winnerRule.Elements.Add(new SrgsOneOf(new SrgsItem[] {(new SrgsItem   
    (new SrgsRuleRef(ruleEurope))), new SrgsItem(new SrgsRuleRef(ruleSAmerica))}));  
  
  // Add all the rules to the document and make winnerRule   
  // the root rule of the document.  
  document.Rules.Add(new SrgsRule[] {winnerRule, ruleEurope, ruleSAmerica});  
  document.Root = winnerRule;  
}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="id" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="id" /> ist leer.</exception>
        <exception cref="T:System.FormatException"><paramref name="id" /> ist kein gültiger Regelbezeichner.</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/office/developer/speech-technologies/hh361680(v%3doffice.14)">Erstellen von Grammatiken mithilfe von SrgsGrammar</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SrgsRule (string id, params System.Speech.Recognition.SrgsGrammar.SrgsElement[] elements);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string id, class System.Speech.Recognition.SrgsGrammar.SrgsElement[] elements) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.SrgsGrammar.SrgsRule.#ctor(System.String,System.Speech.Recognition.SrgsGrammar.SrgsElement[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (id As String, ParamArray elements As SrgsElement())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SrgsRule(System::String ^ id, ... cli::array &lt;System::Speech::Recognition::SrgsGrammar::SrgsElement ^&gt; ^ elements);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.SrgsGrammar.SrgsRule : string * System.Speech.Recognition.SrgsGrammar.SrgsElement[] -&gt; System.Speech.Recognition.SrgsGrammar.SrgsRule" Usage="new System.Speech.Recognition.SrgsGrammar.SrgsRule (id, elements)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="elements" Type="System.Speech.Recognition.SrgsGrammar.SrgsElement[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-3.0">
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="id">Der Bezeichner der Regel.</param>
        <param name="elements">Ein Array von <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsElement" />-Elementen.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsRule" />-Klasse aus einem Array von <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsElement" />-Objekten.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der- <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.%23ctor%2A> Konstruktor initialisiert die- <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.Id%2A> Eigenschaft. Der Bezeichner muss innerhalb einer gegebenen Grammatik eindeutig sein.  
  
 Der- <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.%23ctor%2A> Konstruktor löst <xref:System.FormatException> in den folgenden Situationen eine aus:  
  
-   `id`ist kein gültiger XML-Name, wie in [Extensible Markup Language (XML) 1,0 (Fünfte Edition)](https://www.w3.org/TR/REC-xml/)definiert. Um diese Definition zu umbenennen, muss ein gültiger XML-Name mit einem Buchstaben, einem Unterstrich ("_") oder einem Doppelpunkt (":") beginnen, gefolgt von NULL oder mehr namechtabzeichen (auch in der XML-Spezifikation definiert).  
  
-   `id`ist "Null" oder "void" oder "Garbage".  
  
-   `id`enthält mindestens ein ungültiges Regel-ID-Zeichen. Folgende Zeichen sind zulässig: "?", "*", "+", ' &#124; ', ' (', ') ', ' ^ ', ' $ ', '/', '; ', '. ', ' = ', ' \<', '> ', ' [', '] ', ' {', '} ', ' ', ' ', ' \\ \\ \t ', ' \r ' und ' \n '.  
  
   
  
## Examples  
 Im folgenden Beispiel wird eine Grammatik erstellt, die den Begriff "ein Land, das den World Cup gewonnen hat", gefolgt vom Namen eines Landes, das den World Cup gewonnen hat, erkennt. Im Beispiel wird eine öffentliche Regel mit dem Namen erstellt `WorldCupWinner` . Im Beispiel werden dann zwei <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule> -Objekte erstellt, `ruleEurope` und `ruleSAmerica` , wobei ein <xref:System.String> für den Regel Bezeichner und ein <xref:System.Speech.Recognition.SrgsGrammar.SrgsElement> Array mit einem-Objekt übergeben wird <xref:System.Speech.Recognition.SrgsGrammar.SrgsOneOf> . Anschließend werden im Beispiel Regel Verweise zu `ruleEurope` und `ruleSAmerica` aus der Regel hinzugefügt `WorldCupWinner` .  
  
```csharp  
public void WorldSoccerWinners ()  
{  
  // Create a grammar from an SRGSDocument, create a new rule  
  // and set its scope to public.  
  SrgsDocument srgsGrammar = new SrgsDocument ();  
  SrgsRule winnerRule = new SrgsRule ("WorldCupWinner");  
  winnerRule.Scope = SrgsRuleScope.Public;  
  
  // Add the introduction.  
  winnerRule.Elements.Add (new SrgsItem ("A nation that has won the world cup is"));  
  
  // Create the rule for the European nations.  
  SrgsOneOf oneOfEurope = new SrgsOneOf(new SrgsItem[] {new SrgsItem("England"), new SrgsItem("France"), new SrgsItem("Germany"), new SrgsItem("Italy")});  
  SrgsRule ruleEurope = (new SrgsRule("EuropeanNations", new SrgsElement[] {oneOfEurope}));  
  
  // Create the rule for the South American nations.  
  SrgsOneOf oneOfSAmerica = new SrgsOneOf(new SrgsItem[] {new SrgsItem("Argentina"), new SrgsItem("Brazil"), new SrgsItem("Uruguay")});  
  SrgsRule ruleSAmerica = (new SrgsRule("SouthAmericanNations", new SrgsElement[] {oneOfSAmerica}));  
  
  // Add references to winnerRule for ruleEurope and ruleSAmerica.  
  winnerRule.Elements.Add(new SrgsOneOf(new SrgsItem[] {(new SrgsItem (new SrgsRuleRef(ruleEurope))), new SrgsItem(new SrgsRuleRef(ruleSAmerica))}));  
  
  // Add all the rules to the grammar and make winnerRule  
  // the root rule of the grammar.  
  document.Rules.Add(new SrgsRule[] {winnerRule, ruleEurope, ruleSAmerica});  
  srgsGrammar.Root = winnerRule;  
}  
```  
  
 Die erstellte Grammatik weist das folgende Format auf.  
  
```xml  
<grammar version="1.0" xml:lang="en-US" xmlns="http://www.w3.org/2001/06/grammar" root="WorldCupWinner">  
    <rule id="WorldCupWinner" scope="public">  
        <item> A nation that has won the world cup is </item>  
        <one-of>  
            <item>  
                <ruleref uri="#EuropeanNations" />  
            </item>  
            <item>  
                <ruleref uri="#SouthAmericanNations" />  
            </item>  
        </one-of>  
    </rule>  
    <rule id="EuropeanNations">  
        <one-of>  
            <item> England </item>  
            <item> France </item>  
            <item> Germany </item>  
            <item> Italy </item>  
        </one-of>  
    </rule>  
    <rule id="SouthAmericanNations">  
        <one-of>  
            <item> Argentina </item>  
            <item> Brazil </item>  
            <item> Uruguay </item>  
        </one-of>  
    </rule>  
</grammar>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="id" /> ist <see langword="null" />.  
  
 <paramref name="elements" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="id" /> ist leer.</exception>
        <exception cref="T:System.FormatException"><paramref name="id" /> ist kein gültiger Regelbezeichner.</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/office/developer/speech-technologies/hh361680(v%3doffice.14)">Erstellen von Grammatiken mithilfe von SrgsGrammar</related>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Speech.Recognition.SrgsGrammar.SrgsElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.Speech.Recognition.SrgsGrammar.SrgsElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.SrgsGrammar.SrgsRule.Add(System.Speech.Recognition.SrgsGrammar.SrgsElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (element As SrgsElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::Speech::Recognition::SrgsGrammar::SrgsElement ^ element);" />
      <MemberSignature Language="F#" Value="member this.Add : System.Speech.Recognition.SrgsGrammar.SrgsElement -&gt; unit" Usage="srgsRule.Add element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Speech.Recognition.SrgsGrammar.SrgsElement" />
      </Parameters>
      <Docs>
        <param name="element">Ein Objekt, das von <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsElement" /> erbt und angibt, was erkannt werden kann.</param>
        <summary>Fügt einem <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsElement" />-Objekt ein <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsRule" />-Objekt hinzu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zu den typischen Ergänzungen eines <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule> Objekts <xref:System.Speech.Recognition.SrgsGrammar.SrgsItem> gehören <xref:System.Speech.Recognition.SrgsGrammar.SrgsOneOf> <xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef> die Objekte,, und, <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken> die angeben, welche Sprecher Sie sagen können. Ein gültiges Rule-Element muss mindestens einen Teil des erkennbaren Texts oder einen Regel Verweis enthalten. Weitere Informationen finden [Sie unter Erstellen von Grammatiken mithilfe von SrgsGrammar](https://docs.microsoft.com/previous-versions/office/developer/speech-technologies/hh361680(v%3doffice.14)) .  
  
 Ein <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule> -Objekt kann auch <xref:System.Speech.Recognition.SrgsGrammar.SrgsNameValueTag> -und- <xref:System.Speech.Recognition.SrgsGrammar.SrgsSemanticInterpretationTag> Objekte enthalten, die der Regel Semantik Werte und semantische Schlüssel hinzufügen. Die Spracherkennungs-Engine gibt die semantischen Informationen sowie den erkannten Ausdruck zurück, wenn der Ausdruck erkannt wird. Weitere Informationen finden Sie unter [Semantic Interpretation Markup](https://docs.microsoft.com/previous-versions/office/developer/speech-technologies/hh361595(v%3doffice.14)) .  
  
   
  
## Examples  
 Im folgenden Beispiel wird eine Grammatik erstellt, die den Begriff "ein Land, das den World Cup gewonnen hat", gefolgt vom Namen eines Landes, das den World Cup gewonnen hat, erkennt. Nachdem Sie das <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule> -Objekt erstellt `winnerRule` und ihm den Zeichen folgen Bezeichner erteilt `WorldCupWinner` haben, wird in diesem Beispiel die-Methode verwendet, <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.Add%2A> um die Zeichenfolge "ein Land, das den World Cup gewonnen hat" an die Regel anzufügen. Im Beispiel werden dann zwei zusätzliche Regeln erstellt: `ruleEurope` und `ruleSAmerica` . Durch die Verwendung der <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.Add%2A> -Methode fügt das Beispiel ein <xref:System.Speech.Recognition.SrgsGrammar.SrgsOneOf> -Objekt an die Regel an, die `WorldCupWinner` Regel Verweise auf `ruleEurope` und enthält `ruleSAmerica` .  
  
```csharp  
// Create an SrgsDocument, create a new rule  
// and set its scope to public.  
SrgsDocument document = new SrgsDocument();  
SrgsRule winnerRule = new SrgsRule("WorldCupWinner");  
winnerRule.Scope = SrgsRuleScope.Public;  
  
// Add the introduction.  
winnerRule.Elements.Add(new SrgsItem("A nation that has won the world cup is: "));  
  
// Create the rule for the European nations.  
SrgsOneOf oneOfEurope = new SrgsOneOf(new SrgsItem[] {new SrgsItem("England"), new SrgsItem("France"), new SrgsItem("Germany"), new SrgsItem("Italy")});  
SrgsRule ruleEurope = (new SrgsRule("EuropeanNations", new SrgsElement[] {oneOfEurope}));  
  
// Create the rule for the South American nations.  
SrgsOneOf oneOfSAmerica = new SrgsOneOf(new SrgsItem[] {new SrgsItem("Argentina"), new SrgsItem("Brazil"), new SrgsItem("Uruguay")});  
SrgsRule ruleSAmerica = (new SrgsRule("SouthAmericanNations", new SrgsElement[] {oneOfSAmerica}));  
  
// Add references to winnerRule for ruleEurope and ruleSAmerica.  
winnerRule.Elements.Add(new SrgsOneOf(new SrgsItem[] {(new SrgsItem (new SrgsRuleRef(ruleEurope))), new SrgsItem(new SrgsRuleRef(ruleSAmerica))}));  
  
// Add all the rules to the document and make winnerRule   
// the root rule of the document.  
document.Rules.Add(new SrgsRule[] {winnerRule, ruleEurope, ruleSAmerica});  
document.Root = winnerRule;  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="element" /> ist <see langword="null" />.</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/office/developer/speech-technologies/hh361680(v%3doffice.14)">Erstellen von Grammatiken mithilfe von SrgsGrammar</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/office/developer/speech-technologies/hh361595(v%3doffice.14)">Semantisches interpretierbar Markup</related>
      </Docs>
    </Member>
    <Member MemberName="BaseClass">
      <MemberSignature Language="C#" Value="public string BaseClass { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BaseClass" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.SrgsGrammar.SrgsRule.BaseClass" />
      <MemberSignature Language="VB.NET" Value="Public Property BaseClass As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ BaseClass { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BaseClass : string with get, set" Usage="System.Speech.Recognition.SrgsGrammar.SrgsRule.BaseClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Diese Eigenschaft wird derzeit nicht unterstützt.</summary>
        <value>Wird nicht unterstützt.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Elements">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.Speech.Recognition.SrgsGrammar.SrgsElement&gt; Elements { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class System.Speech.Recognition.SrgsGrammar.SrgsElement&gt; Elements" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.SrgsGrammar.SrgsRule.Elements" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Elements As Collection(Of SrgsElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::Speech::Recognition::SrgsGrammar::SrgsElement ^&gt; ^ Elements { System::Collections::ObjectModel::Collection&lt;System::Speech::Recognition::SrgsGrammar::SrgsElement ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Elements : System.Collections.ObjectModel.Collection&lt;System.Speech.Recognition.SrgsGrammar.SrgsElement&gt;" Usage="System.Speech.Recognition.SrgsGrammar.SrgsRule.Elements" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.Speech.Recognition.SrgsGrammar.SrgsElement&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Auflistung von <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsElement" />-Objekten in dieser <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsRule" />-Instanz ab.</summary>
        <value>Die Auflistung der Elemente in der Regel.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Elemente in einem <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule> -Objekt können aus <xref:System.Speech.Recognition.SrgsGrammar.SrgsItem> <xref:System.Speech.Recognition.SrgsGrammar.SrgsOneOf> -, <xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef> -,-, <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken> -, <xref:System.Speech.Recognition.SrgsGrammar.SrgsNameValueTag> -und- <xref:System.Speech.Recognition.SrgsGrammar.SrgsSemanticInterpretationTag> Objekten bestehen.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/office/developer/speech-technologies/hh361680(v%3doffice.14)">Erstellen von Grammatiken mithilfe von SrgsGrammar</related>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public string Id { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Id" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.SrgsGrammar.SrgsRule.Id" />
      <MemberSignature Language="VB.NET" Value="Public Property Id As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Id { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Id : string with get, set" Usage="System.Speech.Recognition.SrgsGrammar.SrgsRule.Id" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Bezeichner für die Regel ab oder legt ihn fest.</summary>
        <value>Der Bezeichner für die Regel.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Bezeichner für eine Regel ist eine Zeichenfolge, die den Namen der Regel enthält.  
  
 Ein Wert, der zum Festlegen von verwendet wird, <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.Id%2A> muss den folgenden Regeln entsprechen:  
  
-   Der Wert muss ein gültiger XML-Name sein, wie in [Extensible Markup Language (XML) 1,0 (Fünfte Edition)](https://www.w3.org/TR/REC-xml/)definiert. Um diese Definition zu umbenennen, muss ein gültiger XML-Name mit einem Buchstaben, einem Unterstrich ("_") oder einem Doppelpunkt (":") beginnen, gefolgt von NULL oder mehr namechtabzeichen (auch in der XML-Spezifikation definiert).  
  
-   Der Wert kann "Null" oder "void" oder "Garbage" lauten.  
  
-   Der Wert darf kein ungültiges Regel-ID-Zeichen enthalten. Folgende Zeichen sind zulässig: "?", "*", "+", ' &#124; ', ' (', ') ', ' ^ ', ' $ ', '/', '; ', '. ', ' = ', ' \<', '> ', ' [', '] ', ' {', '} ', ' ', ' ', ' \\ \\ \t ', ' \r ' und ' \n '.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">Es wird versucht, <see cref="P:System.Speech.Recognition.SrgsGrammar.SrgsRule.Id" /> auf einen ungültigen Wert festzulegen.</exception>
      </Docs>
    </Member>
    <Member MemberName="OnError">
      <MemberSignature Language="C#" Value="public string OnError { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnError" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.SrgsGrammar.SrgsRule.OnError" />
      <MemberSignature Language="VB.NET" Value="Public Property OnError As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnError { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.OnError : string with get, set" Usage="System.Speech.Recognition.SrgsGrammar.SrgsRule.OnError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Diese Eigenschaft wird derzeit nicht unterstützt.</summary>
        <value>Wird nicht unterstützt.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="public string OnInit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnInit" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.SrgsGrammar.SrgsRule.OnInit" />
      <MemberSignature Language="VB.NET" Value="Public Property OnInit As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnInit { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.OnInit : string with get, set" Usage="System.Speech.Recognition.SrgsGrammar.SrgsRule.OnInit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Diese Eigenschaft wird derzeit nicht unterstützt.</summary>
        <value>Wird nicht unterstützt.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnParse">
      <MemberSignature Language="C#" Value="public string OnParse { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnParse" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.SrgsGrammar.SrgsRule.OnParse" />
      <MemberSignature Language="VB.NET" Value="Public Property OnParse As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnParse { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.OnParse : string with get, set" Usage="System.Speech.Recognition.SrgsGrammar.SrgsRule.OnParse" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Diese Eigenschaft wird derzeit nicht unterstützt.</summary>
        <value>Wird nicht unterstützt.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnRecognition">
      <MemberSignature Language="C#" Value="public string OnRecognition { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnRecognition" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.SrgsGrammar.SrgsRule.OnRecognition" />
      <MemberSignature Language="VB.NET" Value="Public Property OnRecognition As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnRecognition { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.OnRecognition : string with get, set" Usage="System.Speech.Recognition.SrgsGrammar.SrgsRule.OnRecognition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Diese Eigenschaft wird derzeit nicht unterstützt.</summary>
        <value>Wird nicht unterstützt.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Scope">
      <MemberSignature Language="C#" Value="public System.Speech.Recognition.SrgsGrammar.SrgsRuleScope Scope { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Speech.Recognition.SrgsGrammar.SrgsRuleScope Scope" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.SrgsGrammar.SrgsRule.Scope" />
      <MemberSignature Language="VB.NET" Value="Public Property Scope As SrgsRuleScope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Speech::Recognition::SrgsGrammar::SrgsRuleScope Scope { System::Speech::Recognition::SrgsGrammar::SrgsRuleScope get(); void set(System::Speech::Recognition::SrgsGrammar::SrgsRuleScope value); };" />
      <MemberSignature Language="F#" Value="member this.Scope : System.Speech.Recognition.SrgsGrammar.SrgsRuleScope with get, set" Usage="System.Speech.Recognition.SrgsGrammar.SrgsRule.Scope" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.SrgsGrammar.SrgsRuleScope</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt fest, ob eine Regel für Erkennung aktiviert werden kann und wann die Regel durch andere Regeln referenziert werden kann.</summary>
        <value>Ein Wert, der den Bereich für die Regel festlegt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Standardwert für den Gültigkeitsbereich ist `Private` . Eine private Regel kann nur von einem Regel Verweis aus der Stamm Regel in der enthaltenden Grammatik oder einer anderen Regel, auf die von der Stamm Regel verwiesen wird, aktiviert werden. Auf eine private Regel kann nicht durch eine externe Grammatik verwiesen werden, es sei denn, die private Regel ist als Stamm Regel der enthaltenden Grammatik deklariert.  
  
 Wenn der Gültigkeitsbereich auf festgelegt ist `Public` , <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule> kann ein Objekt zum erkennen durch einen Verweis aus einem- <xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef> Objekt in der enthaltenden Grammatik oder einer Regel in einer externen Grammatik aktiviert werden.  
  
   
  
## Examples  
 Im folgenden Beispiel wird eine Grammatik erstellt, die den Begriff "ein Land, das den World Cup gewonnen hat", gefolgt vom Namen eines Landes, das den World Cup gewonnen hat, erkennt. Er erstellt eine öffentliche Regel mit `WorldCupWinner` dem Namen und legt den Gültigkeitsbereich dieser Regel auf Public fest.  
  
```csharp  
// Create an SrgsDocument, create a new rule and set its scope to public.  
SrgsDocument document = new SrgsDocument();  
SrgsRule winnerRule = new SrgsRule("WorldCupWinner");  
winnerRule.Scope = SrgsRuleScope.Public;  
  
// Add the introduction.  
winnerRule.Elements.Add(new SrgsItem("A nation that has won the world cup is: "));  
  
// Create the rule for the European nations.  
SrgsOneOf oneOfEurope = new SrgsOneOf(new SrgsItem[] {new SrgsItem("England"), new SrgsItem("France"), new SrgsItem("Germany"), new SrgsItem("Italy")});  
SrgsRule ruleEurope = (new SrgsRule("EuropeanNations", new SrgsElement[] {oneOfEurope}));  
  
// Create the rule for the South American nations.  
SrgsOneOf oneOfSAmerica = new SrgsOneOf(new SrgsItem[] {new SrgsItem("Argentina"), new SrgsItem("Brazil"), new SrgsItem("Uruguay")});  
SrgsRule ruleSAmerica = (new SrgsRule("SouthAmericanNations", new SrgsElement[] {oneOfSAmerica}));  
  
// Add references to winnerRule for ruleEurope and ruleSAmerica.  
winnerRule.Elements.Add(new SrgsOneOf(new SrgsItem[] {(new SrgsItem (new SrgsRuleRef(ruleEurope)), new SrgsItem(new SrgsRuleRef(ruleSAmerica)})));  
  
// Add all the rules to the document and make winnerRule   
// the root rule of the document.  
document.Rules.Add(new SrgsRule[] {winnerRule, ruleEurope, ruleSAmerica});  
document.Root = winnerRule;  
```  
  
 Die erstellte Grammatik weist das folgende Format auf.  
  
```xml  
<grammar version="1.0" xml:lang="en-US" xmlns="http://www.w3.org/2001/06/grammar" root="WorldCupWinner">  
    <rule id="WorldCupWinner" scope="public">  
        <item> A nation that has won the world cup is </item>  
        <one-of>  
            <item>  
                <ruleref uri="#EuropeanNations" />  
            </item>  
            <item>  
                <ruleref uri="#SouthAmericanNations" />  
            </item>  
        </one-of>  
    </rule>  
    <rule id="EuropeanNations">  
        <one-of>  
            <item> England< /item>  
            <item> France </item>  
            <item> Germany </item>  
            <item> Italy </item>  
        </one-of>  
    </rule>  
    <rule id="SouthAmericanNations">  
        <one-of>  
            <item> Argentina </item>  
            <item> Brazil </item>  
            <item> Uruguay </item>  
        </one-of>  
    </rule>  
</grammar>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/office/developer/speech-technologies/hh361680(v%3doffice.14)">Erstellen von Grammatiken mithilfe von SrgsGrammar</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?linkid=15143&amp;clcid=0x409">Spracherkennungs-Grammatik Angabe Version 1,0</related>
      </Docs>
    </Member>
    <Member MemberName="Script">
      <MemberSignature Language="C#" Value="public string Script { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Script" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.SrgsGrammar.SrgsRule.Script" />
      <MemberSignature Language="VB.NET" Value="Public Property Script As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Script { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Script : string with get, set" Usage="System.Speech.Recognition.SrgsGrammar.SrgsRule.Script" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Diese Eigenschaft wird derzeit nicht unterstützt.</summary>
        <value>Wird nicht unterstützt.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
