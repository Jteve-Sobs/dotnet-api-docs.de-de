<Type Name="SrgsRuleRef" FullName="System.Speech.Recognition.SrgsGrammar.SrgsRuleRef">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c4a912528876b27879d268e1fe58a4bec2e9f6a4" /><Meta Name="ms.sourcegitcommit" Value="1b924db57b3a1cf768d98c21f9b988d6966a0f2b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="03/06/2020" /><Meta Name="ms.locfileid" Value="78786743" /></Metadata><TypeSignature Language="C#" Value="public class SrgsRuleRef : System.Speech.Recognition.SrgsGrammar.SrgsElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit SrgsRuleRef extends System.Speech.Recognition.SrgsGrammar.SrgsElement" />
  <TypeSignature Language="DocId" Value="T:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef" />
  <TypeSignature Language="VB.NET" Value="Public Class SrgsRuleRef&#xA;Inherits SrgsElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class SrgsRuleRef : System::Speech::Recognition::SrgsGrammar::SrgsElement" />
  <TypeSignature Language="F#" Value="type SrgsRuleRef = class&#xA;    inherit SrgsElement" />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Speech.Recognition.SrgsGrammar.SrgsElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.ImmutableObject(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("{DebuggerDisplayString()}")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Stellt das Grammatikelement dar, das einen Verweis auf eine Regel angibt.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef>-Klasse ist besonders nützlich, wenn Sie ein <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule> Element wieder verwenden möchten, dessen Inhalt bereits definiert wurde. Durch die Wiederverwendung vorhandener Regeln können Sie komplexe Grammatiken schneller erstellen.  
  
 Sie können einen der Konstruktoren der <xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef>-Klasse verwenden, um auf ein <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule> Objekt oder ein `rule` Element zu verweisen, wenn Folgendes zutrifft:  
  
-   Das <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule>-Objekt befindet sich in der enthaltenden Grammatik, und der Wert seiner <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.Scope%2A>-Eigenschaft ist <xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleScope.Public> oder <xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleScope.Private>.  
  
-   Das `rule` Element befindet sich in einer externen Grammatik, und der Wert seines `scope` Attributs ist `public`.  
  
-   Das `rule`-Element befindet sich in einer externen Grammatik, der Wert seines `scope` Attributs ist `private`und wird als `root rule` der externen Grammatik deklariert.  
  
 Diese Klasse stellt das `ruleref`-Element dar, das in der World Wide Web Consortium (W3C) [Speech Recognition Grammar Specification (SRGS), Version 1,0](https://go.microsoft.com/fwlink/?LinkId=201761), definiert ist. Weitere Informationen über das SRGS `ruleref`-Element und Details zur Unterstützung durch System. Speech finden Sie unter [RuleRef-Element](https://msdn.microsoft.com/library/56eb0031-4908-4788-83ab-7c5e19aa4ac0).  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/office/developer/speech-technologies/hh361680(v%3doffice.14)">Erstellen von Grammatiken mithilfe von SrgsGrammar</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der Klasse <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SrgsRuleRef (System.Speech.Recognition.SrgsGrammar.SrgsRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Speech.Recognition.SrgsGrammar.SrgsRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rule As SrgsRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SrgsRuleRef(System::Speech::Recognition::SrgsGrammar::SrgsRule ^ rule);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.SrgsGrammar.SrgsRuleRef : System.Speech.Recognition.SrgsGrammar.SrgsRule -&gt; System.Speech.Recognition.SrgsGrammar.SrgsRuleRef" Usage="new System.Speech.Recognition.SrgsGrammar.SrgsRuleRef rule" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="rule" Type="System.Speech.Recognition.SrgsGrammar.SrgsRule" />
      </Parameters>
      <Docs>
        <param name="rule">Das Objekt, auf das verwiesen werden soll.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef" />-Klasse und gibt die Regel, auf die verwiesen werden soll.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Konstruktor erstellt einen Regel Verweis auf ein <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule> Objekt innerhalb der enthaltenden Grammatik. Um einen Regel Verweis auf ein `rule` Element in einer externen Grammatik Datei zu erstellen, verwenden Sie einen der folgenden Konstruktoren:  
  
-   <xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.%23ctor%2A>  
  
-   <xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.%23ctor%2A>  
  
-   <xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.%23ctor%2A>  
  
-   <xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.%23ctor%28System.Uri%2CSystem.String%2CSystem.String%2CSystem.String%29>  
  
   
  
## Examples  
 Im folgenden Beispiel wird eine Grammatik erstellt, die den Begriff "ein Land, das den World Cup gewonnen hat", gefolgt vom Namen eines Landes, das den World Cup gewonnen hat, erkennt. Nachdem Sie das <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule> Objekt `winnerRule` erstellt und ihm den Zeichen folgen Bezeichner `WorldCupWinner`gegeben haben, fügt das Beispiel die Zeichenfolge "A Nation, die den World Cup gewonnen hat" an die Regel an. Mit <xref:System.Speech.Recognition.SrgsGrammar.SrgsOneOf> Objekten erstellt das Beispiel dann eine Liste der europäischen Länder/Regionen und eine Liste mit den Ländern/Regionen, die sich in Südamerika befinden, und fügt jede Liste der jeweiligen Regel hinzu, `ruleEurope` oder `ruleSAmerica`. Im Beispiel werden dann Regel Verweise für `ruleEurope` und `ruleSAmerica` erstellt und der `WorldCupWinner` Regel hinzugefügt.  
  
```  
public void WorldSoccerWinners ()  
{  
  
  // Create an SrgsDocument, create a new rule  
  // and set its scope to public.  
  SrgsDocument document = new SrgsDocument();  
  SrgsRule winnerRule = new SrgsRule("WorldCupWinner");  
  winnerRule.Scope = SrgsRuleScope.Public;  
  
  // Add the introduction.  
  winnerRule.Elements.Add(new SrgsItem("A nation that has won the world cup is: "));  
  
  // Create the rule for the European nations.  
  SrgsOneOf oneOfEurope = new SrgsOneOf(new SrgsItem[] {new SrgsItem("England"),   
    new SrgsItem("France"), new SrgsItem("Germany"), new SrgsItem("Italy")});  
  SrgsRule ruleEurope = (new SrgsRule("EuropeanNations", new SrgsElement[] {oneOfEurope}));  
  
  // Create the rule for the South American nations.  
  SrgsOneOf oneOfSAmerica = new SrgsOneOf(new SrgsItem[] {new SrgsItem("Argentina"),   
    new SrgsItem("Brazil"), new SrgsItem("Uruguay")});  
  SrgsRule ruleSAmerica = (new SrgsRule("SouthAmericanNations", new SrgsElement[] {oneOfSAmerica}));  
  
  // Add references to winnerRule for ruleEurope and ruleSAmerica.  
  winnerRule.Elements.Add(new SrgsOneOf(new SrgsItem[] {(new SrgsItem   
    (new SrgsRuleRef(ruleEurope))), new SrgsItem(new SrgsRuleRef(ruleSAmerica))}));  
  
  // Add all the rules to the document and make winnerRule   
  // the root rule of the document.  
  document.Rules.Add(new SrgsRule[] {winnerRule, ruleEurope, ruleSAmerica});  
  document.Root = winnerRule;  
}  
```  
  
 Die erstellte Grammatik weist das folgende Format auf.  
  
```  
<grammar version="1.0" xml:lang="en-US" xmlns="http://www.w3.org/2001/06/grammar" root="WorldCupWinner">  
    <rule id="WorldCupWinner" scope="public">  
        <item> A nation that has won the world cup is </item>  
        <one-of>  
            <item>  
                <ruleref uri="#EuropeanNations" />  
            </item>  
            <item>  
                <ruleref uri="#SouthAmericanNations" />  
            </item>  
        </one-of>  
    </rule>  
    <rule id="EuropeanNations">  
        <one-of>  
            <item> England </item>  
            <item> France </item>  
            <item> Germany </item>  
            <item> Italy </item>  
        </one-of>  
    </rule>  
    <rule id="SouthAmericanNations">  
        <one-of>  
            <item> Argentina </item>  
            <item> Brazil </item>  
            <item> Uruguay </item>  
        </one-of>  
    </rule>  
</grammar>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="rule" /> ist <see langword="null" /></exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/office/developer/speech-technologies/hh361680(v%3doffice.14)">Erstellen von Grammatiken mithilfe von SrgsGrammar</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SrgsRuleRef (Uri uri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.#ctor(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (uri As Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SrgsRuleRef(Uri ^ uri);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.SrgsGrammar.SrgsRuleRef : Uri -&gt; System.Speech.Recognition.SrgsGrammar.SrgsRuleRef" Usage="new System.Speech.Recognition.SrgsGrammar.SrgsRuleRef uri" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="uri">Der Speicherort einer Grammatikdatei außerhalb der enthaltenen Grammatik.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef" />-Klasse und gibt den Speicherort der externen Grammatikdatei an, die referenziert werden soll.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Konstruktor erstellt einen Regel Verweis auf eine externe Grammatik Datei. Der URI kann auch den Bezeichner einer Regel enthalten, auf die verwiesen werden soll, z. b. `http://www.contoso.com/ExternalGrammar.grxml#targetRule`.  Wenn der `uri`-Parameter keinen Regel Bezeichner angibt, verweist der Regel Verweis auf die Stamm Regel der Ziel Grammatik. Um einen Regel Verweis auf ein <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule> Objekt innerhalb derselben Grammatik zu erstellen, verwenden Sie einen der folgenden Konstruktoren:  
  
-   <xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.%23ctor%2A>  
  
-   <xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.%23ctor%2A>  
  
-   <xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.%23ctor%2A>  
  
   
  
## Examples  
 Im folgenden Beispiel wird eine Grammatik für eine Anwendung erstellt, die Informationen über den Bus-Shuttle-Dienst zurückgibt. Die erste Methode, `GrammarUrlForRoute`, nimmt eine Zeichenfolge an, die eine Route angibt, und fügt Sie an eine Zeichenfolge an, die den Speicherort einer Grammatik angibt. Dadurch wird eine bestimmte Regel in der Grammatik angegeben. Die-Methode gibt eine `Uri` für diese Regel zurück.  
  
 Die zweite Methode (`CreateGrammarForRoute`) erstellt ein <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> Element mit dem Namen `grammar` mit einem Regel Verweis, der durch die `Uri` an ihn durch `GrammarUrlForRoute`an ihn übermittelt wird. Beachten Sie, dass die Variable mit dem Namen _route ein Member einer einschließenden Klasse ist.  
  
```  
private Uri GrammarUrlForRoute(string route)  
{  
  return new Uri("http://localhost/MyBus/MyBusLocations.grxml#LocationsForRoute" + route);  
}  
  
private SrgsDocument CreateGrammarForRoute()  
{  
  SrgsDocument grammar = new SrgsDocument();  
  grammar.Mode = SrgsGrammarMode.Voice;  
  SrgsRule rule = new SrgsRule("LocationsForRoute" + _route);  
  SrgsRuleRef ruleref = new SrgsRuleRef(GrammarUrlForRoute(_route));  
  
  SrgsSemanticInterpretationTag tag = new SrgsSemanticInterpretationTag ("$.Location = $$");  
  
  rule.Elements.Add(ruleref);  
  rule.Elements.Add(tag);  
  grammar.Rules.Add(rule);  
  grammar.Root = rule;  
  return grammar;  
}  
```  
  
> [!NOTE]
>  Die Variable mit dem Namen _`route` ist im vorangehenden Beispiel nicht deklariert und nicht definiert. Er sollte als <xref:System.String> deklariert werden und die Routennummer für eine bestimmte Busroute enthalten, bevor das vorangehende Beispiel kompiliert und ausgeführt wird.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="uri" /> ist <see langword="null" /></exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/office/developer/speech-technologies/hh361680(v%3doffice.14)">Erstellen von Grammatiken mithilfe von SrgsGrammar</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SrgsRuleRef (System.Speech.Recognition.SrgsGrammar.SrgsRule rule, string semanticKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Speech.Recognition.SrgsGrammar.SrgsRule rule, string semanticKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsRule,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rule As SrgsRule, semanticKey As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SrgsRuleRef(System::Speech::Recognition::SrgsGrammar::SrgsRule ^ rule, System::String ^ semanticKey);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.SrgsGrammar.SrgsRuleRef : System.Speech.Recognition.SrgsGrammar.SrgsRule * string -&gt; System.Speech.Recognition.SrgsGrammar.SrgsRuleRef" Usage="new System.Speech.Recognition.SrgsGrammar.SrgsRuleRef (rule, semanticKey)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="rule" Type="System.Speech.Recognition.SrgsGrammar.SrgsRule" />
        <Parameter Name="semanticKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="rule">Das Objekt, auf das verwiesen werden soll.</param>
        <param name="semanticKey">Der semantische Schlüssel.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef" />-Klasse, gibt die zu referenzierende Regel und eine Zeichenfolge an, die einen semantischen Schlüssel enthält.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Konstruktor erstellt einen Regel Verweis auf ein <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule> Objekt innerhalb der enthaltenden Grammatik. Um einen Regel Verweis auf ein `rule` Element in einer externen Grammatik Datei zu erstellen, verwenden Sie einen der folgenden Konstruktoren:  
  
-   <xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.%23ctor%2A>  
  
-   <xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.%23ctor%2A>  
  
-   <xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.%23ctor%2A>  
  
-   <xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.%23ctor%28System.Uri%2CSystem.String%2CSystem.String%2CSystem.String%29>  
  
   
  
## Examples  
 Im folgenden Beispiel wird eine Grammatik erstellt, um die Städte für einen Flug auszuwählen. Das Beispiel erstellt zwei <xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef>-Instanzen, von denen jede einen semantischen Schlüssel angibt. Beide Regel Verweise Zielen auf dasselbe <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule> Objekt mit dem Namen `cities`, aber markieren das Erkennungs Ergebnis aus dem Regel Verweis mit einem anderen semantischen Schlüssel. Der semantische Schlüssel identifiziert eine erkannte Stadt als Abflug Stadt oder ankunftsstadt für den Flug. Der-Handler für das <xref:System.Speech.Recognition.SpeechRecognitionEngine.SpeechRecognized>-Ereignis verwendet die Schlüssel zum Abrufen der Semantik Werte, die mithilfe <xref:System.Speech.Recognition.SrgsGrammar.SrgsNameValueTag.%23ctor%2A> aus dem Erkennungs Ergebnis erstellt wurden.  
  
```  
using System;  
using System.Speech.Recognition;  
using System.Speech.Recognition.SrgsGrammar;  
  
namespace SampleRecognition  
{  
  class Program  
  {  
    static void Main(string[] args)  
  
    // Initialize a SpeechRecognitionEngine object.  
    {  
      using (SpeechRecognitionEngine recognizer =  
         new SpeechRecognitionEngine(new System.Globalization.CultureInfo("en-US")))  
      {  
  
        // Build a rule with a list of cities, assign a semantic value to each city.  
        SrgsItem chi = new SrgsItem("Chicago");  
        chi.Add(new SrgsNameValueTag("ORD"));  
        SrgsItem bos = new SrgsItem("Boston");  
        bos.Add(new SrgsNameValueTag("BOS"));  
        SrgsItem mia = new SrgsItem("Miami");  
        mia.Add(new SrgsNameValueTag("MIA"));  
        SrgsItem dal = new SrgsItem("Dallas");  
        dal.Add(new SrgsNameValueTag("DFW"));  
  
        SrgsOneOf cities = new SrgsOneOf(new SrgsItem[] { chi, bos, mia, dal });  
        SrgsRule citiesRule = new SrgsRule("flightCities");  
        citiesRule.Add(cities);  
  
        // Build the root rule, add rule references to the cities rule.  
        SrgsRule flightBooker = new SrgsRule("bookFlight");  
        flightBooker.Add(new SrgsItem("I want to fly from"));  
        flightBooker.Add(new SrgsRuleRef(citiesRule, "departureCity"));  
        flightBooker.Add(new SrgsItem("to"));  
        flightBooker.Add(new SrgsRuleRef(citiesRule, "arrivalCity"));  
  
        // Build an SrgsDocument object from the flightBooker rule and add the cities rule.  
        SrgsDocument cityChooser = new SrgsDocument(flightBooker);  
        cityChooser.Rules.Add(citiesRule);  
  
        // Create a Grammar object from the SrgsDocument and load it to the recognizer.  
        Grammar departArrive = new Grammar(cityChooser);  
        departArrive.Name = ("Cities Grammar");  
        recognizer.LoadGrammarAsync(departArrive);  
  
        // Configure recognizer input.  
        recognizer.SetInputToDefaultAudioDevice();  
  
        // Attach a handler for the SpeechRecognized event.  
        recognizer.SpeechRecognized +=  
          new EventHandler<SpeechRecognizedEventArgs>(recognizer_SpeechRecognized);  
  
        // Start asynchronous recognition.  
        recognizer.RecognizeAsync();  
        Console.WriteLine("Starting asynchronous recognition...");  
  
        // Keep the console window open.  
        Console.ReadLine();  
      }  
    }  
  
    // Handle the SpeechRecognized event.  
    static void recognizer_SpeechRecognized(object sender, SpeechRecognizedEventArgs e)  
    {  
      Console.WriteLine("Speech recognized: " + e.Result.Text);  
      Console.WriteLine();  
      Console.WriteLine("Semantic results:");  
      Console.WriteLine("  The departure city is: " + e.Result.Semantics["departureCity"].Value);  
      Console.WriteLine("  The destination city is: " + e.Result.Semantics["arrivalCity"].Value);  
    }  
  }  
}  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/office/developer/speech-technologies/hh361680(v%3doffice.14)">Erstellen von Grammatiken mithilfe von SrgsGrammar</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SrgsRuleRef (Uri uri, string rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri uri, string rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.#ctor(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (uri As Uri, rule As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SrgsRuleRef(Uri ^ uri, System::String ^ rule);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.SrgsGrammar.SrgsRuleRef : Uri * string -&gt; System.Speech.Recognition.SrgsGrammar.SrgsRuleRef" Usage="new System.Speech.Recognition.SrgsGrammar.SrgsRuleRef (uri, rule)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
        <Parameter Name="rule" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uri">Der Speicherort einer Grammatikdatei außerhalb der enthaltenen Grammatik.</param>
        <param name="rule">Der Bezeichner der Regel, auf die zu verweisen ist.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef" />-Klasse, gibt den Speicherort der externen Grammatikdatei und den Bezeichner der zu referenzierenden Regel an.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Konstruktor erstellt einen Regel Verweis auf ein `rule` Element in einer externen Grammatik Datei. Um einen Regel Verweis auf ein <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule> Objekt innerhalb derselben Grammatik zu erstellen, verwenden Sie einen der folgenden Konstruktoren:  
  
-   <xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.%23ctor%2A>  
  
-   <xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.%23ctor%2A>  
  
-   <xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.%23ctor%2A>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="uri" /> ist <see langword="null" />  
  
 <paramref name="rule" /> ist <see langword="null" /></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="rule" /> ist leer.</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/office/developer/speech-technologies/hh361680(v%3doffice.14)">Erstellen von Grammatiken mithilfe von SrgsGrammar</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SrgsRuleRef (System.Speech.Recognition.SrgsGrammar.SrgsRule rule, string semanticKey, string parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Speech.Recognition.SrgsGrammar.SrgsRule rule, string semanticKey, string parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsRule,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rule As SrgsRule, semanticKey As String, parameters As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SrgsRuleRef(System::Speech::Recognition::SrgsGrammar::SrgsRule ^ rule, System::String ^ semanticKey, System::String ^ parameters);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.SrgsGrammar.SrgsRuleRef : System.Speech.Recognition.SrgsGrammar.SrgsRule * string * string -&gt; System.Speech.Recognition.SrgsGrammar.SrgsRuleRef" Usage="new System.Speech.Recognition.SrgsGrammar.SrgsRuleRef (rule, semanticKey, parameters)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="rule" Type="System.Speech.Recognition.SrgsGrammar.SrgsRule" />
        <Parameter Name="semanticKey" Type="System.String" />
        <Parameter Name="parameters" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="rule">Das Objekt, auf das verwiesen werden soll.</param>
        <param name="semanticKey">Der semantische Schlüssel.</param>
        <param name="parameters">Die Initialisierungsparameter für ein <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef" />-Objekt.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef" />-Klasse, gibt die zu referenzierende Regel, den Zeichenfolgenalias des semantischen Wörterbuchs und die Initialisierungsparameter an.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Konstruktor erstellt einen Regel Verweis auf ein <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule> Objekt innerhalb der enthaltenden Grammatik. Um einen Regel Verweis auf ein `rule` Element in einer externen Grammatik Datei zu erstellen, verwenden Sie einen der folgenden Konstruktoren:  
  
-   <xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.%23ctor%2A>  
  
-   <xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.%23ctor%2A>  
  
-   <xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.%23ctor%2A>  
  
-   <xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.%23ctor%28System.Uri%2CSystem.String%2CSystem.String%2CSystem.String%29>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/office/developer/speech-technologies/hh361680(v%3doffice.14)">Erstellen von Grammatiken mithilfe von SrgsGrammar</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SrgsRuleRef (Uri uri, string rule, string semanticKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri uri, string rule, string semanticKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.#ctor(System.Uri,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (uri As Uri, rule As String, semanticKey As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SrgsRuleRef(Uri ^ uri, System::String ^ rule, System::String ^ semanticKey);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.SrgsGrammar.SrgsRuleRef : Uri * string * string -&gt; System.Speech.Recognition.SrgsGrammar.SrgsRuleRef" Usage="new System.Speech.Recognition.SrgsGrammar.SrgsRuleRef (uri, rule, semanticKey)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
        <Parameter Name="rule" Type="System.String" />
        <Parameter Name="semanticKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uri">Der Speicherort einer Grammatikdatei außerhalb der enthaltenen Grammatik.</param>
        <param name="rule">Der Bezeichner der Regel, auf die zu verweisen ist.</param>
        <param name="semanticKey">Eine Aliaszeichenfolge für das semantische Wörterbuch.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef" />-Klasse, gibt den Speicherort der externen Grammatikdatei, den Bezeichner der Regel und den Zeichenfolgenalias des semantischen Wörterbuchs an.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Konstruktor erstellt einen Regel Verweis auf ein `rule` Element in einer externen Grammatik Datei. Um einen Regel Verweis auf ein <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule> Objekt innerhalb derselben Grammatik zu erstellen, verwenden Sie einen der folgenden Konstruktoren:  
  
-   <xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.%23ctor%2A>  
  
-   <xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.%23ctor%2A>  
  
-   <xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.%23ctor%2A>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="uri" /> ist <see langword="null" />  
  
 <paramref name="semanticKey" /> ist <see langword="null" /></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="semanticKey" /> ist leer.</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/office/developer/speech-technologies/hh361680(v%3doffice.14)">Erstellen von Grammatiken mithilfe von SrgsGrammar</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SrgsRuleRef (Uri uri, string rule, string semanticKey, string parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri uri, string rule, string semanticKey, string parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.#ctor(System.Uri,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (uri As Uri, rule As String, semanticKey As String, parameters As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SrgsRuleRef(Uri ^ uri, System::String ^ rule, System::String ^ semanticKey, System::String ^ parameters);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.SrgsGrammar.SrgsRuleRef : Uri * string * string * string -&gt; System.Speech.Recognition.SrgsGrammar.SrgsRuleRef" Usage="new System.Speech.Recognition.SrgsGrammar.SrgsRuleRef (uri, rule, semanticKey, parameters)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
        <Parameter Name="rule" Type="System.String" />
        <Parameter Name="semanticKey" Type="System.String" />
        <Parameter Name="parameters" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uri">Der Speicherort einer Grammatikdatei außerhalb der enthaltenen Grammatik.</param>
        <param name="rule">Der Bezeichner der Regel, auf die zu verweisen ist.</param>
        <param name="semanticKey">Der semantische Schlüssel.</param>
        <param name="parameters">Die Initialisierungsparameter für ein <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef" />-Objekt.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef" />-Klasse, gibt den Speicherort der externen Grammatikdatei, den Bezeichner der Regel, den Zeichenfolgenalias des semantischen Wörterbuchs sowie Initialisierungsparameter an.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Konstruktor erstellt einen Regel Verweis auf ein `rule` Element in einer externen Grammatik Datei. Um einen Regel Verweis auf ein <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule> Objekt innerhalb derselben Grammatik zu erstellen, verwenden Sie einen der folgenden Konstruktoren:  
  
-   <xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.%23ctor%2A>  
  
-   <xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.%23ctor%2A>  
  
-   <xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.%23ctor%2A>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/office/developer/speech-technologies/hh361680(v%3doffice.14)">Erstellen von Grammatiken mithilfe von SrgsGrammar</related>
      </Docs>
    </Member>
    <Member MemberName="Dictation">
      <MemberSignature Language="C#" Value="public static readonly System.Speech.Recognition.SrgsGrammar.SrgsRuleRef Dictation;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Speech.Recognition.SrgsGrammar.SrgsRuleRef Dictation" />
      <MemberSignature Language="DocId" Value="F:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.Dictation" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Dictation As SrgsRuleRef " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Speech::Recognition::SrgsGrammar::SrgsRuleRef ^ Dictation;" />
      <MemberSignature Language="F#" Value=" staticval mutable Dictation : System.Speech.Recognition.SrgsGrammar.SrgsRuleRef" Usage="System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.Dictation" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.SrgsGrammar.SrgsRuleRef</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Definiert eine Regel, die gesprochener Eingabe entspricht, wie durch das Diktatthema, das dieser Grammatik zugeordnet ist, definiert, .</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Garbage">
      <MemberSignature Language="C#" Value="public static readonly System.Speech.Recognition.SrgsGrammar.SrgsRuleRef Garbage;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Speech.Recognition.SrgsGrammar.SrgsRuleRef Garbage" />
      <MemberSignature Language="DocId" Value="F:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.Garbage" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Garbage As SrgsRuleRef " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Speech::Recognition::SrgsGrammar::SrgsRuleRef ^ Garbage;" />
      <MemberSignature Language="F#" Value=" staticval mutable Garbage : System.Speech.Recognition.SrgsGrammar.SrgsRuleRef" Usage="System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.Garbage" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.SrgsGrammar.SrgsRuleRef</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Definiert eine Regel, die jeder Sprache bis zur nächsten Regelabgleichung, dem nächsten Token oder bis zum Ende der gesprochenen Eingabe entsprechen kann.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MnemonicSpelling">
      <MemberSignature Language="C#" Value="public static readonly System.Speech.Recognition.SrgsGrammar.SrgsRuleRef MnemonicSpelling;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Speech.Recognition.SrgsGrammar.SrgsRuleRef MnemonicSpelling" />
      <MemberSignature Language="DocId" Value="F:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.MnemonicSpelling" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MnemonicSpelling As SrgsRuleRef " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Speech::Recognition::SrgsGrammar::SrgsRuleRef ^ MnemonicSpelling;" />
      <MemberSignature Language="F#" Value=" staticval mutable MnemonicSpelling : System.Speech.Recognition.SrgsGrammar.SrgsRuleRef" Usage="System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.MnemonicSpelling" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.SrgsGrammar.SrgsRuleRef</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt an, dass Spracheingabe buchstabierte Buchstaben eines Worts enthalten kann und dass buchstabierte Buchstaben als Wort erkannt werden.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Null">
      <MemberSignature Language="C#" Value="public static readonly System.Speech.Recognition.SrgsGrammar.SrgsRuleRef Null;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Speech.Recognition.SrgsGrammar.SrgsRuleRef Null" />
      <MemberSignature Language="DocId" Value="F:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.Null" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Null As SrgsRuleRef " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Speech::Recognition::SrgsGrammar::SrgsRuleRef ^ Null;" />
      <MemberSignature Language="F#" Value=" staticval mutable Null : System.Speech.Recognition.SrgsGrammar.SrgsRuleRef" Usage="System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.Null" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.SrgsGrammar.SrgsRuleRef</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Definiert eine Regel, der bei keiner Audioeingabe automatisch entsprochen wird.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Params">
      <MemberSignature Language="C#" Value="public string Params { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Params" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.Params" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Params As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Params { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Params : string" Usage="System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.Params" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Initialisierungsparameter für ein <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef" />-Element ab.</summary>
        <value>Die Initialisierungsparameter für ein <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef" />-Element.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SemanticKey">
      <MemberSignature Language="C#" Value="public string SemanticKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SemanticKey" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.SemanticKey" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SemanticKey As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SemanticKey { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SemanticKey : string" Usage="System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.SemanticKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine Aliaszeichenfolge für das semantische Wörterbuch ab.</summary>
        <value>Eine Aliaszeichenfolge für das semantische Wörterbuch.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Uri">
      <MemberSignature Language="C#" Value="public Uri Uri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Uri" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.Uri" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Uri As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ Uri { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Uri : Uri" Usage="System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.Uri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den URI für die Regel ab, auf die dieses <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef" />-Element verweist.</summary>
        <value>Der Speicherort der Regel, auf die zu verweisen ist.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Void">
      <MemberSignature Language="C#" Value="public static readonly System.Speech.Recognition.SrgsGrammar.SrgsRuleRef Void;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Speech.Recognition.SrgsGrammar.SrgsRuleRef Void" />
      <MemberSignature Language="DocId" Value="F:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.Void" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Void As SrgsRuleRef " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Speech::Recognition::SrgsGrammar::SrgsRuleRef ^ Void;" />
      <MemberSignature Language="F#" Value=" staticval mutable Void : System.Speech.Recognition.SrgsGrammar.SrgsRuleRef" Usage="System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.Void" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.SrgsGrammar.SrgsRuleRef</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Definiert eine Regel, dass nie gesprochene werden kann. Das Einfügen von VOID in eine Sequenz macht diese Sequenz automatisch unaussprechlich.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
