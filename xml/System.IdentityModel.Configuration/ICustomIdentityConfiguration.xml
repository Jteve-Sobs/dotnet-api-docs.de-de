<Type Name="ICustomIdentityConfiguration" FullName="System.IdentityModel.Configuration.ICustomIdentityConfiguration">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f20be372f72e1d729e951ac05d600435268163b7" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83946894" /></Metadata><TypeSignature Language="C#" Value="public interface ICustomIdentityConfiguration" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ICustomIdentityConfiguration" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Configuration.ICustomIdentityConfiguration" />
  <TypeSignature Language="VB.NET" Value="Public Interface ICustomIdentityConfiguration" />
  <TypeSignature Language="C++ CLI" Value="public interface class ICustomIdentityConfiguration" />
  <TypeSignature Language="F#" Value="type ICustomIdentityConfiguration = interface" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Definiert Methoden, die einer Klasse ermöglichen, benutzerdefinierte Konfiguration zu laden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klassen, die die <xref:System.IdentityModel.Configuration.ICustomIdentityConfiguration>-Schnittstelle implementieren, können die benutzerdefinierte Konfiguration aus XML laden.  
  
 Einige der WIF-Klassen (Windows Identity Foundation) implementieren die <xref:System.IdentityModel.Configuration.ICustomIdentityConfiguration>-Schnittstelle, um Ihnen die Möglichkeit zu geben, die benutzerdefinierte Konfiguration abgeleiteter Klassen aus einer Konfigurationsdatei zu definieren. Viele der WIF-Klassen stellen eine Basis Implementierung dieser Methode bereit, um die Standardkonfiguration für die Objekte bereitzustellen, die Sie darstellen.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="LoadCustomConfiguration">
      <MemberSignature Language="C#" Value="public void LoadCustomConfiguration (System.Xml.XmlNodeList nodeList);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LoadCustomConfiguration(class System.Xml.XmlNodeList nodeList) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Configuration.ICustomIdentityConfiguration.LoadCustomConfiguration(System.Xml.XmlNodeList)" />
      <MemberSignature Language="VB.NET" Value="Public Sub LoadCustomConfiguration (nodeList As XmlNodeList)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LoadCustomConfiguration(System::Xml::XmlNodeList ^ nodeList);" />
      <MemberSignature Language="F#" Value="abstract member LoadCustomConfiguration : System.Xml.XmlNodeList -&gt; unit" Usage="iCustomIdentityConfiguration.LoadCustomConfiguration nodeList" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nodeList" Type="System.Xml.XmlNodeList" />
      </Parameters>
      <Docs>
        <param name="nodeList">Die XML-Knoten, die die benutzerdefinierte Konfiguration enthalten. Jeder Knoten in der Liste ist vom Typ <see cref="T:System.Xml.XmlElement" />.</param>
        <summary>Lädt eine benutzerdefinierte Konfiguration aus XML. Diese Methode überschreiben, um die benutzerdefinierte Behandlung von Konfigurationselementen bereitzustellen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.IdentityModel.Configuration.ICustomIdentityConfiguration.LoadCustomConfiguration%2A>-Methode wird von der-Konfigurations Infrastruktur aufgerufen. Wenn diese Methode aufgerufen wird, enthält der `nodelist`-Parameter die untergeordneten Elemente der obersten Ebene des übergeordneten-Elements, das die Objektklasse aus der Konfigurationsdatei konfiguriert. Beispielsweise verfügt eine von <xref:System.IdentityModel.Tokens.IssuerNameRegistry>abgeleitete Klasse über die untergeordneten Elemente des [&lt;issuerNameRegistry-&gt;](/dotnet/framework/configure-apps/file-schema/windows-identity-foundation/issuernameregistry) Elements, die im `nodelist`-Parameter übergeben werden. Der `nodelist` besteht aus <xref:System.Xml.XmlElement> Objekten. Diese können je nach dem Konfigurations Schema, das für die konfigurierte Klasse definiert ist, über Attribute und untergeordnete Elemente verfügen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
