<Type Name="StronglyTypedResourceBuilder" FullName="System.Resources.Tools.StronglyTypedResourceBuilder">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6cb7e8367f7e7f8c8629ac6eaf5f43487397a997" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37640069" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class StronglyTypedResourceBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit StronglyTypedResourceBuilder extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Resources.Tools.StronglyTypedResourceBuilder" />
  <TypeSignature Language="VB.NET" Value="Public Class StronglyTypedResourceBuilder" />
  <TypeSignature Language="C++ CLI" Value="public ref class StronglyTypedResourceBuilder abstract sealed" />
  <TypeSignature Language="F#" Value="type StronglyTypedResourceBuilder = class" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Bietet Unterstützung für stark typisierte Ressourcen. Diese Klasse kann nicht vererbt werden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ressourcen werden in der Regel Code aus dem Inhalt innerhalb einer Anwendung trennen. Erstellen und nutzen diese Ressourcen erleichtert lokalisierbare Anwendungen zu entwickeln. In .NET Framework, Ressourcen in der Regel mithilfe von belegt die <xref:System.Resources.ResourceManager> -Klasse, die Methoden enthält, die Zugriff auf kulturspezifische Ressourcen zur Laufzeit bereitzustellen. Weitere Informationen zum Erstellen und Nutzen von Ressourcen finden Sie unter [Ressourcen in Desktop-Apps](http://msdn.microsoft.com/library/8ad495d4-2941-40cf-bf64-e82e85825890).  
  
 Ressource mit starker Typisierung-Unterstützung ist eine während der Kompilierung-Funktion, die Zugriff auf Ressourcen durch das Erstellen von Klassen, die enthalten einen Satz von statischen, schreibgeschützten kapselt (`get`) Eigenschaften. Dies bietet eine alternative Möglichkeit zum Nutzen von Ressourcen, statt die <xref:System.Resources.ResourceManager.GetString%2A?displayProperty=nameWithType> und <xref:System.Resources.ResourceManager.GetObject%2A?displayProperty=nameWithType> Methoden.  
  
 Die grundlegende Funktionalität für die Unterstützung von stark typisierten Ressourcen erfolgt über die <xref:System.Resources.Tools.StronglyTypedResourceBuilder> Klasse (als auch die `/str` Befehlszeilenoption in die [Resgen.exe (Resource File Generator)](~/docs/framework/tools/resgen-exe-resource-file-generator.md)). Die Ausgabe der <xref:System.Resources.Tools.StronglyTypedResourceBuilder.Create%2A> Methode ist eine Klasse, die stark typisierte Eigenschaften, die mit die Ressourcen übereinstimmen enthält, auf die der Eingabeparameter verweist. Diese Klasse stellt schreibgeschützten Zugriff auf die Ressourcen, die in der Datei, die Verarbeitung verfügbar sind.  
  
   
  
## Examples  
 Im folgenden Beispiel wird eine Klasse namens `DemoResources` , die (je nach dem Beispiel Quellcode) in c# oder Visual Basic geschrieben ist. Diese Klasse ist der `DemoApp` Namespace und verfügt über Eigenschaften, die das Bitmuster der ein Logo und den Namen einer Anwendung zurückgeben. Im Beispiel wird eine `CreateResourceFile` Methode zum Erstellen der erforderlichen resw-Datei und erfordert, dass eine Bitmapdatei, die mit dem Namen Logo.bmp im aktuellen Verzeichnis des Beispiels gefunden werden. Das Codebeispiel verwendet die folgenden Ressourcendatei, die mit dem Namen Bezeichnung Demo.resx verwendet:  
  
 [!code-csharp[System.Resources.Tools.StronglyTypedResourceBuilder.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.tools.stronglytypedresourcebuilder.class/cs/example1.cs#1)]
 [!code-vb[System.Resources.Tools.StronglyTypedResourceBuilder.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.tools.stronglytypedresourcebuilder.class/vb/example1.vb#1)]  
  
 Ihr Anwendungscode kann die Klasse dann wie folgt verwenden:  
  
 [!code-csharp[System.Resources.Tools.StronglyTypedResourceBuilder.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.tools.stronglytypedresourcebuilder.class/cs/demoresources.cs#2)]
 [!code-vb[System.Resources.Tools.StronglyTypedResourceBuilder.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.tools.stronglytypedresourcebuilder.class/vb/demoresources.vb#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="Create">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Generiert eine Klassendatei mit stark typisierten Eigenschaften, die den im Eingabeparameter angegebenen Ressourcen entsprechen.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.CodeDom.CodeCompileUnit Create (System.Collections.IDictionary resourceList, string baseName, string generatedCodeNamespace, System.CodeDom.Compiler.CodeDomProvider codeProvider, bool internalClass, out string[] unmatchable);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.CodeDom.CodeCompileUnit Create(class System.Collections.IDictionary resourceList, string baseName, string generatedCodeNamespace, class System.CodeDom.Compiler.CodeDomProvider codeProvider, bool internalClass, [out] string[]&amp; unmatchable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.Tools.StronglyTypedResourceBuilder.Create(System.Collections.IDictionary,System.String,System.String,System.CodeDom.Compiler.CodeDomProvider,System.Boolean,System.String[]@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (resourceList As IDictionary, baseName As String, generatedCodeNamespace As String, codeProvider As CodeDomProvider, internalClass As Boolean, ByRef unmatchable As String()) As CodeCompileUnit" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::CodeDom::CodeCompileUnit ^ Create(System::Collections::IDictionary ^ resourceList, System::String ^ baseName, System::String ^ generatedCodeNamespace, System::CodeDom::Compiler::CodeDomProvider ^ codeProvider, bool internalClass, [Runtime::InteropServices::Out] cli::array &lt;System::String ^&gt; ^ % unmatchable);" />
      <MemberSignature Language="F#" Value="static member Create : System.Collections.IDictionary * string * string * System.CodeDom.Compiler.CodeDomProvider * bool *  -&gt; System.CodeDom.CodeCompileUnit" Usage="System.Resources.Tools.StronglyTypedResourceBuilder.Create (resourceList, baseName, generatedCodeNamespace, codeProvider, internalClass, unmatchable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeCompileUnit</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceList" Type="System.Collections.IDictionary" />
        <Parameter Name="baseName" Type="System.String" />
        <Parameter Name="generatedCodeNamespace" Type="System.String" />
        <Parameter Name="codeProvider" Type="System.CodeDom.Compiler.CodeDomProvider" />
        <Parameter Name="internalClass" Type="System.Boolean" />
        <Parameter Name="unmatchable" Type="System.String[]&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="resourceList">Eine <see cref="T:System.Collections.IDictionary" />-Sammlung, wo jedes Wörterbucheintrags-Schlüssel/Wert-Paar der Name einer Ressource und der Wert der Ressource ist.</param>
        <param name="baseName">Der Name der zu generierenden Klasse.</param>
        <param name="generatedCodeNamespace">Der Namespace der zu generierenden Klasse.</param>
        <param name="codeProvider">Eine <see cref="T:System.CodeDom.Compiler.CodeDomProvider" />-Klasse, die die Sprache bereitstellt, in der die Klasse generiert wird.</param>
        <param name="internalClass">
          <see langword="true" /> zum Generieren einer internen Klasse; <see langword="false" /> zum Generieren einer öffentlichen Klasse.</param>
        <param name="unmatchable">Ein Array, das jeden Ressourcennamen enthält, für den eine Eigenschaft generiert werden kann. Eine Eigenschaft kann in der Regel nicht generiert werden, da der Ressourcenname kein gültiger Bezeichner ist.</param>
        <summary>Generiert eine Klassendatei mit stark typisierten Eigenschaften, die den Ressourcen entsprechen, auf die in der angegebenen Sammlung verwiesen wird.</summary>
        <returns>Ein <see cref="T:System.CodeDom.CodeCompileUnit" />-Container.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Resources.Tools.StronglyTypedResourceBuilder.Create%2A> Methode zum Generieren einer Klasse, die stellt einen stark typisierten, schreibgeschützten Wrapper für den Zugriff auf die Ressourcen, die in enthalten sind die `resourceList` Parameter.  
  
 Die <xref:System.Resources.Tools.StronglyTypedResourceBuilder> Klasse ignoriert alle Ressourcennamen, die mit den Zeichen "$" beginnt oder ">>". Die Ressourcennamen "Culture" und "ResourceManager" sind ungültige Bezeichner.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceList" />, <paramref name="basename" /> oder <paramref name="codeProvider" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Ein Ressourcenknotenname entspricht nicht seinem Schlüssel in <paramref name="resourceList" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.CodeDom.CodeCompileUnit Create (string resxFile, string baseName, string generatedCodeNamespace, System.CodeDom.Compiler.CodeDomProvider codeProvider, bool internalClass, out string[] unmatchable);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.CodeDom.CodeCompileUnit Create(string resxFile, string baseName, string generatedCodeNamespace, class System.CodeDom.Compiler.CodeDomProvider codeProvider, bool internalClass, [out] string[]&amp; unmatchable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.Tools.StronglyTypedResourceBuilder.Create(System.String,System.String,System.String,System.CodeDom.Compiler.CodeDomProvider,System.Boolean,System.String[]@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (resxFile As String, baseName As String, generatedCodeNamespace As String, codeProvider As CodeDomProvider, internalClass As Boolean, ByRef unmatchable As String()) As CodeCompileUnit" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::CodeDom::CodeCompileUnit ^ Create(System::String ^ resxFile, System::String ^ baseName, System::String ^ generatedCodeNamespace, System::CodeDom::Compiler::CodeDomProvider ^ codeProvider, bool internalClass, [Runtime::InteropServices::Out] cli::array &lt;System::String ^&gt; ^ % unmatchable);" />
      <MemberSignature Language="F#" Value="static member Create : string * string * string * System.CodeDom.Compiler.CodeDomProvider * bool *  -&gt; System.CodeDom.CodeCompileUnit" Usage="System.Resources.Tools.StronglyTypedResourceBuilder.Create (resxFile, baseName, generatedCodeNamespace, codeProvider, internalClass, unmatchable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeCompileUnit</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resxFile" Type="System.String" />
        <Parameter Name="baseName" Type="System.String" />
        <Parameter Name="generatedCodeNamespace" Type="System.String" />
        <Parameter Name="codeProvider" Type="System.CodeDom.Compiler.CodeDomProvider" />
        <Parameter Name="internalClass" Type="System.Boolean" />
        <Parameter Name="unmatchable" Type="System.String[]&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="resxFile">Der Name einer RESX-Datei, die als Eingabe verwendet wird.</param>
        <param name="baseName">Der Name der zu generierenden Klasse.</param>
        <param name="generatedCodeNamespace">Der Namespace der zu generierenden Klasse.</param>
        <param name="codeProvider">Eine <see cref="T:System.CodeDom.Compiler.CodeDomProvider" />-Klasse, die die Sprache bereitstellt, in der die Klasse generiert wird.</param>
        <param name="internalClass">
          <see langword="true" /> zum Generieren einer internen Klasse; <see langword="false" /> zum Generieren einer öffentlichen Klasse.</param>
        <param name="unmatchable">Ein <see cref="T:System.String" />-Array, das jeden Ressourcennamen enthält, für den eine Eigenschaft generiert werden kann. Eine Eigenschaft kann in der Regel nicht generiert werden, da der Ressourcenname kein gültiger Bezeichner ist.</param>
        <summary>Generiert eine Klassendatei mit stark typisierten Eigenschaften, die den Ressourcen in der angegebenen RESX-Datei entsprechen.</summary>
        <returns>Ein <see cref="T:System.CodeDom.CodeCompileUnit" />-Container.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Resources.Tools.StronglyTypedResourceBuilder.Create%2A> Methode zum Generieren einer Klasse, die stark typisierten, schreibgeschützten Zugriff auf Ressourcen, die bereitstellt in befinden die `resxFile` Parameter.  
  
 Die <xref:System.Resources.Tools.StronglyTypedResourceBuilder> Klasse ignoriert alle Ressourcennamen, die mit den Zeichen "$" beginnt oder ">>". Die Ressourcennamen "Culture" und "ResourceManager" sind ungültige Bezeichner.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="basename" /> oder <paramref name="codeProvider" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.CodeDom.CodeCompileUnit Create (System.Collections.IDictionary resourceList, string baseName, string generatedCodeNamespace, string resourcesNamespace, System.CodeDom.Compiler.CodeDomProvider codeProvider, bool internalClass, out string[] unmatchable);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.CodeDom.CodeCompileUnit Create(class System.Collections.IDictionary resourceList, string baseName, string generatedCodeNamespace, string resourcesNamespace, class System.CodeDom.Compiler.CodeDomProvider codeProvider, bool internalClass, [out] string[]&amp; unmatchable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.Tools.StronglyTypedResourceBuilder.Create(System.Collections.IDictionary,System.String,System.String,System.String,System.CodeDom.Compiler.CodeDomProvider,System.Boolean,System.String[]@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (resourceList As IDictionary, baseName As String, generatedCodeNamespace As String, resourcesNamespace As String, codeProvider As CodeDomProvider, internalClass As Boolean, ByRef unmatchable As String()) As CodeCompileUnit" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::CodeDom::CodeCompileUnit ^ Create(System::Collections::IDictionary ^ resourceList, System::String ^ baseName, System::String ^ generatedCodeNamespace, System::String ^ resourcesNamespace, System::CodeDom::Compiler::CodeDomProvider ^ codeProvider, bool internalClass, [Runtime::InteropServices::Out] cli::array &lt;System::String ^&gt; ^ % unmatchable);" />
      <MemberSignature Language="F#" Value="static member Create : System.Collections.IDictionary * string * string * string * System.CodeDom.Compiler.CodeDomProvider * bool *  -&gt; System.CodeDom.CodeCompileUnit" Usage="System.Resources.Tools.StronglyTypedResourceBuilder.Create (resourceList, baseName, generatedCodeNamespace, resourcesNamespace, codeProvider, internalClass, unmatchable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeCompileUnit</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceList" Type="System.Collections.IDictionary" />
        <Parameter Name="baseName" Type="System.String" />
        <Parameter Name="generatedCodeNamespace" Type="System.String" />
        <Parameter Name="resourcesNamespace" Type="System.String" />
        <Parameter Name="codeProvider" Type="System.CodeDom.Compiler.CodeDomProvider" />
        <Parameter Name="internalClass" Type="System.Boolean" />
        <Parameter Name="unmatchable" Type="System.String[]&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="resourceList">Eine <see cref="T:System.Collections.IDictionary" />-Sammlung, wo jedes Wörterbucheintrags-Schlüssel/Wert-Paar der Name einer Ressource und der Wert der Ressource ist.</param>
        <param name="baseName">Der Name der zu generierenden Klasse.</param>
        <param name="generatedCodeNamespace">Der Namespace der zu generierenden Klasse.</param>
        <param name="resourcesNamespace">Der Namespace der zu generierenden Ressource.</param>
        <param name="codeProvider">Ein <see cref="T:System.CodeDom.Compiler.CodeDomProvider" />-Objekt, das die Sprache bereitstellt, in der die Klasse generiert wird.</param>
        <param name="internalClass">
          <see langword="true" /> zum Generieren einer internen Klasse; <see langword="false" /> zum Generieren einer öffentlichen Klasse.</param>
        <param name="unmatchable">Ein <see cref="T:System.String" />-Array, das jeden Ressourcennamen enthält, für den eine Eigenschaft generiert werden kann. Eine Eigenschaft kann in der Regel nicht generiert werden, da der Ressourcenname kein gültiger Bezeichner ist.</param>
        <summary>Generiert eine Klassendatei mit stark typisierten Eigenschaften, die den Ressourcen entsprechen, auf die in der angegebenen Sammlung verwiesen wird.</summary>
        <returns>Ein <see cref="T:System.CodeDom.CodeCompileUnit" />-Container.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Überladung ermöglicht Ihnen die Verwendung der `resourcesNamespace` Parameter, um den Namespace für die generierten Ressourcen angeben. In diesem Fall wird der generierte Code wie folgt angezeigt:  
  
```  
System.Resources.ResourceManager rm = new System.Resources.ResourceManager("<resourceNamespace>.<baseName>",typeof(baseName).Assembly);  
```  
  
 In den meisten Fällen müssen Sie nicht, diese Methode vom Anwendungscode aus aufzurufen.  
  
 Die <xref:System.Resources.Tools.StronglyTypedResourceBuilder> Klasse ignoriert alle Ressourcennamen, die mit den Zeichen "$" beginnt oder ">>". Die Ressourcennamen "Culture" und "ResourceManager" sind ungültige Bezeichner.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceList" />, <paramref name="basename" /> oder <paramref name="codeProvider" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Ein Ressourcenknotenname entspricht nicht seinem Schlüssel in <paramref name="resourceList" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.CodeDom.CodeCompileUnit Create (string resxFile, string baseName, string generatedCodeNamespace, string resourcesNamespace, System.CodeDom.Compiler.CodeDomProvider codeProvider, bool internalClass, out string[] unmatchable);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.CodeDom.CodeCompileUnit Create(string resxFile, string baseName, string generatedCodeNamespace, string resourcesNamespace, class System.CodeDom.Compiler.CodeDomProvider codeProvider, bool internalClass, [out] string[]&amp; unmatchable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.Tools.StronglyTypedResourceBuilder.Create(System.String,System.String,System.String,System.String,System.CodeDom.Compiler.CodeDomProvider,System.Boolean,System.String[]@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (resxFile As String, baseName As String, generatedCodeNamespace As String, resourcesNamespace As String, codeProvider As CodeDomProvider, internalClass As Boolean, ByRef unmatchable As String()) As CodeCompileUnit" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::CodeDom::CodeCompileUnit ^ Create(System::String ^ resxFile, System::String ^ baseName, System::String ^ generatedCodeNamespace, System::String ^ resourcesNamespace, System::CodeDom::Compiler::CodeDomProvider ^ codeProvider, bool internalClass, [Runtime::InteropServices::Out] cli::array &lt;System::String ^&gt; ^ % unmatchable);" />
      <MemberSignature Language="F#" Value="static member Create : string * string * string * string * System.CodeDom.Compiler.CodeDomProvider * bool *  -&gt; System.CodeDom.CodeCompileUnit" Usage="System.Resources.Tools.StronglyTypedResourceBuilder.Create (resxFile, baseName, generatedCodeNamespace, resourcesNamespace, codeProvider, internalClass, unmatchable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeCompileUnit</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resxFile" Type="System.String" />
        <Parameter Name="baseName" Type="System.String" />
        <Parameter Name="generatedCodeNamespace" Type="System.String" />
        <Parameter Name="resourcesNamespace" Type="System.String" />
        <Parameter Name="codeProvider" Type="System.CodeDom.Compiler.CodeDomProvider" />
        <Parameter Name="internalClass" Type="System.Boolean" />
        <Parameter Name="unmatchable" Type="System.String[]&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="resxFile">Der Name einer RESX-Datei, die als Eingabe verwendet wird.</param>
        <param name="baseName">Der Name der zu generierenden Klasse.</param>
        <param name="generatedCodeNamespace">Der Namespace der zu generierenden Klasse.</param>
        <param name="resourcesNamespace">Der Namespace der zu generierenden Ressource.</param>
        <param name="codeProvider">Eine <see cref="T:System.CodeDom.Compiler.CodeDomProvider" />-Klasse, die die Sprache bereitstellt, in der die Klasse generiert wird.</param>
        <param name="internalClass">
          <see langword="true" /> zum Generieren einer internen Klasse; <see langword="false" /> zum Generieren einer öffentlichen Klasse.</param>
        <param name="unmatchable">Ein <see cref="T:System.String" />-Array, das jeden Ressourcennamen enthält, für den eine Eigenschaft generiert werden kann. Eine Eigenschaft kann in der Regel nicht generiert werden, da der Ressourcenname kein gültiger Bezeichner ist.</param>
        <summary>Generiert eine Klassendatei mit stark typisierten Eigenschaften, die den Ressourcen in der angegebenen RESX-Datei entsprechen.</summary>
        <returns>Ein <see cref="T:System.CodeDom.CodeCompileUnit" />-Container.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Resources.Tools.StronglyTypedResourceBuilder.Create%2A> Methode zum Generieren einer Klasse, die stark typisierten, schreibgeschützten Zugriff auf Ressourcen, die bereitstellt in befinden die `resxFile` Parameter.  
  
 Die <xref:System.Resources.Tools.StronglyTypedResourceBuilder> Klasse ignoriert alle Ressourcennamen, die mit den Zeichen "$" beginnt oder ">>". Die Ressourcennamen "Culture" und "ResourceManager" sind ungültige Bezeichner.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="basename" /> oder <paramref name="codeProvider" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="VerifyResourceName">
      <MemberSignature Language="C#" Value="public static string VerifyResourceName (string key, System.CodeDom.Compiler.CodeDomProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string VerifyResourceName(string key, class System.CodeDom.Compiler.CodeDomProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.Tools.StronglyTypedResourceBuilder.VerifyResourceName(System.String,System.CodeDom.Compiler.CodeDomProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function VerifyResourceName (key As String, provider As CodeDomProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ VerifyResourceName(System::String ^ key, System::CodeDom::Compiler::CodeDomProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member VerifyResourceName : string * System.CodeDom.Compiler.CodeDomProvider -&gt; string" Usage="System.Resources.Tools.StronglyTypedResourceBuilder.VerifyResourceName (key, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="provider" Type="System.CodeDom.Compiler.CodeDomProvider" />
      </Parameters>
      <Docs>
        <param name="key">Die zu überprüfende Zeichenfolge, ggf. in einen gültigen Ressourcennamen konvertiert.</param>
        <param name="provider">Ein <see cref="T:System.CodeDom.Compiler.CodeDomProvider" />-Objekt, das die zu verwendende Zielsprache angibt.</param>
        <summary>Generiert auf Grundlage der angegebenen Eingabezeichenfolge und des Codeanbieters eine gültige Ressourcenzeichenfolge.</summary>
        <returns>Ein gültiger Ressourcenname, der vom <paramref name="key" />-Parameter abgeleitet wurde. Alle ungültigen Token werden durch einen Unterstrich (_) ersetzt, oder <see langword="null" />, wenn die Zeichenfolge im Kontext der im <paramref name="provider" />-Parameter angegebenen Sprache noch immer ungültige Zeichen enthält.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die `key` Parameter ist eine gültige Zeichenfolge, wird diese Zeichenfolge zurückgegeben. Wenn die `key` -Parameter ist eine ungültige Zeichenfolge oder eine Zeichenfolge, ungültige Zeichen enthält, die <xref:System.Resources.Tools.StronglyTypedResourceBuilder.VerifyResourceName%2A> -Methode versucht, generieren eine gültige Zeichenfolge, die auf der Grundlage der `key` und `provider` Parameter. Wenn Sie eine gültige Zeichenfolge generiert werden kann, dass die Zeichenfolge zurückgegeben wird, andernfalls andernfalls `null` zurückgegeben wird.  
  
 Wenn die `key` Parameter ist eine leere Zeichenfolge (""), eine Zeichenfolge, die besteht aus einem einzelnen Unterstrich (_) wird zurückgegeben. Wenn die `key` Parameter ist keine leere Zeichenfolge, die <xref:System.Resources.Tools.StronglyTypedResourceBuilder.VerifyResourceName%2A> Methode vergleicht jedes Zeichens in die Zeichenfolge, die einen Satz von ungültigen Token basierend auf der angegebenen Sprache der `provider` Parameter. Alle ungültiges Zeichen in der Zeichenfolge wird durch einen Unterstrich ersetzt. Die Zeichen, die durch einen Unterstrich ersetzt werden, lauten wie folgt aus:  
  
 "" (Leerzeichen), U + 00A0 (geschütztes Leerzeichen), "." (Punkt), "," (Komma), ';' Semikolon (;), "&#124;", "~", "@", '#', '% s', "^", "&", "*", "+", "-", '/', '\\','\<"," > ','? "," [","] ", '(',')'," {","} "," "" (Anführungszeichen), ""(Apostroph),":", und "!".  
  
> [!NOTE]
>  Stark typisierte Ressourcen lassen sich nicht auf die Verwendung der Schlüsselwörter der Sprache (z. B. `if`, `for`usw.) als Ressourcenschlüsselnamen. Allerdings die <xref:System.CodeDom> Entwurfsmuster erlaubt die Verwendung von Programmiersprachen-Schlüsselwörter, indem Sie das Schlüsselwort mit einem Unterstrich voranstellen. Die <xref:System.Resources.Tools.StronglyTypedResourceBuilder.VerifyResourceName%2A> Methodenaufrufe der <xref:System.CodeDom.Compiler.ICodeGenerator.CreateValidIdentifier%2A> Methode, um dieses Muster zu erzwingen. Z. B. Wenn Sie einen Ressourcennamen verwenden, die entspricht ein Programmiersprachen-Schlüsselwort, z. B. `for`, der Name wird als `_for` in der generierten stark typisierte Ressourcenklasse.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="key" /> oder <paramref name="provider" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>