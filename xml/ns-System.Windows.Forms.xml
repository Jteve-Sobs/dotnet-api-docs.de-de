<Namespace Name="System.Windows.Forms">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ea5d7f2acac2d5ac7bcaae50e96e29437913a775" /><Meta Name="ms.sourcegitcommit" Value="8dc7427b3f8ede13c290b671feeb1dc33978e582" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="02/06/2020" /><Meta Name="ms.locfileid" Value="77043168" /></Metadata><Docs>
    <summary>Der <see cref="N:System.Windows.Forms" />-Namespace enthält Klassen zum Erstellen Windows-basierter Anwendungen, mit denen die Vorzüge der umfangreichen im Betriebssystem Microsoft Windows verfügbaren Benutzeroberflächenfunktionen optimal genutzt werden können.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In der folgenden Tabelle werden die Klassen in <xref:System.Windows.Forms> Namespace aufgeführt, die in Kategorien gruppiert sind.  
  
|Klassen Kategorie|Details|  
|--------------------|-------------|  
|-Steuerelement, Benutzer Steuerelement und Formular|Die meisten Klassen innerhalb des <xref:System.Windows.Forms>-Namespace werden von der <xref:System.Windows.Forms.Control>-Klasse abgeleitet. Die <xref:System.Windows.Forms.Control>-Klasse stellt die Basisfunktionalität für alle Steuerelemente bereit, die auf einem <xref:System.Windows.Forms.Form>angezeigt werden. Die <xref:System.Windows.Forms.Form>-Klasse stellt ein Fenster innerhalb einer Anwendung dar. Dies umfasst Dialogfelder, nicht modare Fenster und MDI-Client (Multiple Document Interface) und übergeordnete Fenster. Sie können auch eigene Steuerelemente erstellen, indem Sie von der <xref:System.Windows.Forms.UserControl>-Klasse ableiten.|  
|-Menüs und Symbolleisten|Windows Forms enthält einen umfangreichen Satz von Klassen zum Erstellen Ihrer eigenen benutzerdefinierten Symbolleisten und Menüs mit moderner Darstellung und Verhalten (Aussehen und Verhalten). <xref:System.Windows.Forms.ToolStrip>, <xref:System.Windows.Forms.MenuStrip>, <xref:System.Windows.Forms.ContextMenuStrip>und <xref:System.Windows.Forms.StatusStrip> können zum Erstellen von Symbolleisten, Menüleisten, Kontextmenüs und Status leisten verwendet werden.|  
|-Steuerelemente|Der <xref:System.Windows.Forms>-Namespace stellt eine Vielzahl von Steuerungs Klassen bereit, die Sie verwenden können, um umfangreiche Benutzeroberflächen zu erstellen. Einige Steuerelemente sind für die Dateneingabe innerhalb der Anwendung konzipiert, z. b. <xref:System.Windows.Forms.TextBox>-und <xref:System.Windows.Forms.ComboBox>-Steuerelemente. Andere Steuerelemente zeigen Anwendungsdaten an, z. b. <xref:System.Windows.Forms.Label> und <xref:System.Windows.Forms.ListView>. Der-Namespace bietet auch Steuerelemente zum Aufrufen von Befehlen innerhalb der Anwendung, z. b. <xref:System.Windows.Forms.Button>. Mit dem <xref:System.Windows.Forms.WebBrowser>-Steuerelement und den verwalteten HTML-Klassen, z. b. <xref:System.Windows.Forms.HtmlDocument>, können Sie HTML-Seiten in der verwalteten Windows Forms Anwendung anzeigen und bearbeiten. Das <xref:System.Windows.Forms.MaskedTextBox>-Steuerelement ist ein erweitertes Dateneingabe-Steuerelement, mit dem Sie Masken definieren können, die Benutzereingaben automatisch akzeptieren oder ablehnen. Darüber hinaus können Sie das <xref:System.Windows.Forms.PropertyGrid>-Steuerelement verwenden, um eigene Windows Forms-Designer zu erstellen, die die für den Designer sichtbaren Eigenschaften der Steuerelemente anzeigt.|  
|-Layout|Mehrere wichtige Klassen in Windows Forms helfen dabei, das Layout von Steuerelementen auf einer Anzeige Oberfläche, z. b. ein Formular oder Steuerelement, zu steuern. in <xref:System.Windows.Forms.FlowLayoutPanel> werden alle darin enthaltenen Steuerelemente auf serielle Weise festgelegt, und mit <xref:System.Windows.Forms.TableLayoutPanel> können Sie Zellen und Zeilen zum Anordnen von Steuerelementen in einem festgelegten Raster definieren. <xref:System.Windows.Forms.SplitContainer> dividiert die Anzeige Oberfläche in zwei oder mehr anpassbare Teile.|  
|-Daten und Datenbindung|Windows Forms definiert eine umfangreiche Architektur für die Bindung an Datenquellen, z. b. Datenbanken und XML-Dateien. Das <xref:System.Windows.Forms.DataGridView>-Steuerelement stellt eine anpassbare Tabelle zum Anzeigen von Daten bereit und ermöglicht das Anpassen von Zellen, Zeilen, Spalten und Rahmen. Das <xref:System.Windows.Forms.BindingNavigator> Steuerelement stellt eine standardisierte Methode dar, um Daten in einem Formular zu navigieren und mit Ihnen zu arbeiten. <xref:System.Windows.Forms.BindingNavigator> wird häufig mit dem <xref:System.Windows.Forms.BindingSource> Steuerelement gekoppelt, um Datensätze in einem Formular zu durchlaufen und mit Ihnen zu interagieren.|  
|-Komponenten|Neben Steuerelementen stellt der <xref:System.Windows.Forms>-Namespace andere Klassen bereit, die nicht von der <xref:System.Windows.Forms.Control>-Klasse abgeleitet sind, aber weiterhin visuelle Features für eine Windows-basierte Anwendung bereitstellen. Einige Klassen, z. b. <xref:System.Windows.Forms.ToolTip> und <xref:System.Windows.Forms.ErrorProvider>, erweitern die Funktionen oder stellen dem Benutzerinformationen zur Verfügung. Mit den <xref:System.Windows.Forms.Help>-und <xref:System.Windows.Forms.HelpProvider>-Klassen können Sie Hilfe Informationen für einen Benutzer Ihrer Anwendungen anzeigen.|  
|-Allgemeine Dialog Felder|Windows stellt mehrere allgemeine Dialogfelder bereit, die Sie verwenden können, um Ihrer Anwendung eine konsistente Benutzeroberfläche zur Verfügung zu stellen, wenn Sie Aufgaben wie das Öffnen und Speichern von Dateien, die Bearbeitung der Schriftart oder Textfarbe oder das Drucken ausführen. Die Klassen <xref:System.Windows.Forms.OpenFileDialog> und <xref:System.Windows.Forms.SaveFileDialog> bieten die Funktionalität zum Anzeigen eines Dialog Felds, in dem der Benutzer den Namen einer Datei suchen und eingeben kann, die geöffnet oder gespeichert werden soll. Die <xref:System.Windows.Forms.FontDialog> Klasse zeigt ein Dialogfeld an, in dem Sie die Elemente der von der Anwendung verwendeten <xref:System.Drawing.Font> ändern können. In den Klassen <xref:System.Windows.Forms.PageSetupDialog>, <xref:System.Windows.Forms.PrintPreviewDialog>und <xref:System.Windows.Forms.PrintDialog> werden Dialogfelder angezeigt, mit denen der Benutzer die Aspekte des Druckens von Dokumenten steuern kann. Weitere Informationen zum Drucken aus einer Windows-basierten Anwendung finden Sie im <xref:System.Drawing.Printing>-Namespace. Neben den allgemeinen Dialogfeldern stellt der <xref:System.Windows.Forms>-Namespace die <xref:System.Windows.Forms.MessageBox> Klasse zum Anzeigen eines Meldungs Felds bereit, mit dem Daten vom Benutzer angezeigt und abgerufen werden können.|  
  
 Es gibt mehrere Klassen innerhalb des <xref:System.Windows.Forms>-Namespace, die Unterstützung für die in der vorherigen Zusammenfassung erwähnten Klassen bieten. Beispiele für die unterstützenden Klassen sind Enumerationen, Ereignis Argument Klassen und Delegaten, die von Ereignissen innerhalb von Steuerelementen und Komponenten verwendet werden.  
  
> [!CAUTION]
>  Klassen innerhalb des Windows Forms-Namespace werden nicht für die Verwendung in einem Windows-Dienst unterstützt. Der Versuch, diese Klassen in einem Dienst zu verwenden, kann zu unerwarteten Problemen führen, wie z. b. verminderter Dienstleistung und Lauf Zeit Ausnahmen.  
>   
>  Wenn Sie .NET Framework Version 1,1 oder .NET Framework 1,0 verwenden und die Windows Forms Anwendung die visuellen Windows XP-Stile unterstützen muss, stellen Sie sicher, dass Sie die `FlatStyle`-Eigenschaft der Steuerelemente auf <xref:System.Windows.Forms.FlatStyle.System?displayProperty=nameWithType> festlegen und ein Manifest mit der ausführbaren Datei einschließen. Ein Manifest ist eine XML-Datei, die entweder als Ressource in der ausführbaren Datei der Anwendung oder als separate Datei enthalten ist, die sich im selben Verzeichnis wie die ausführbare Datei befindet. Ein Beispiel für ein Manifest finden Sie im Beispiel Abschnitt für die <xref:System.Windows.Forms.FlatStyle>-Enumeration. Standardmäßig sind visuelle Stile für die .NET Framework-Versionen 1,1, 1,2 und 2,0 aktiviert.  
  
 ]]></format>
    </remarks>
  </Docs>
</Namespace>