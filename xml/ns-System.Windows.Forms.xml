<Namespace Name="System.Windows.Forms">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="de3d7b337699f794b1d27959727821d8e228cf48" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="30737224" />
  </Metadata>
  <Docs>
    <summary>Der <see cref="N:System.Windows.Forms" />-Namespace enthält Klassen zum Erstellen Windows-basierter Anwendungen, mit denen die Vorzüge der umfangreichen im Betriebssystem Microsoft Windows verfügbaren Benutzeroberflächenfunktionen optimal genutzt werden können.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die folgende Tabelle zeigt die Klassen im <xref:System.Windows.Forms> Namespace in Kategorien unterteilt.  
  
|Klasse Kategorie|Details|  
|--------------------|-------------|  
|-Steuerelement, Benutzersteuerelement und Formular|Die meisten Klassen innerhalb der <xref:System.Windows.Forms> Namespace ableiten, aus der <xref:System.Windows.Forms.Control> Klasse. Die <xref:System.Windows.Forms.Control> -Klasse stellt die Basisfunktionalität für alle Steuerelemente, die auf eine <xref:System.Windows.Forms.Form>. Die <xref:System.Windows.Forms.Form> Klasse stellt ein Fenster in einer Anwendung dar. Dies schließt die Dialogfelder, nicht modale Fenster und (MDI, Multiple Document Interface)-Client und übergeordneten Windows. Sie können auch eigene Steuerelemente erstellen, durch Ableiten von der <xref:System.Windows.Forms.UserControl> Klasse.|  
|-Menüs und Symbolleisten|Windows Forms enthält einen umfangreichen Satz von Klassen zum Erstellen Ihrer eigenen benutzerdefinierten Symbolleisten und Menüs mit modernes Erscheinungsbild und Verhalten (Aussehen und Verhalten). <xref:System.Windows.Forms.ToolStrip>, <xref:System.Windows.Forms.MenuStrip>, <xref:System.Windows.Forms.ContextMenuStrip>, und <xref:System.Windows.Forms.StatusStrip> zum Erstellen von Symbolleisten, Menüs, Kontextmenüs und Statusleisten, verwendet werden können.|  
|-Steuerelemente|Die <xref:System.Windows.Forms> Namespace bietet eine Vielzahl von Klassen für Steuerelemente, die Sie zum Erstellen umfassender Benutzeroberflächen verwenden können. Einige Steuerelemente sind für die Dateneingabe innerhalb der Anwendung vorgesehen, z. B. <xref:System.Windows.Forms.TextBox> und <xref:System.Windows.Forms.ComboBox> Steuerelemente. Andere Steuerelemente zeigt Anwendungsdaten, z. B. <xref:System.Windows.Forms.Label> und <xref:System.Windows.Forms.ListView>. Der Namespace enthält auch Steuerelemente zum Aufrufen von Befehlen in der Anwendung, z. B. <xref:System.Windows.Forms.Button>. Die <xref:System.Windows.Forms.WebBrowser> Steuerelement und HTML-Klassen, z. B. verwaltet <xref:System.Windows.Forms.HtmlDocument>, können Sie anzeigen und Bearbeiten von HTML-Seiten in Ihrer verwalteten Windows Forms-Anwendung. Die <xref:System.Windows.Forms.MaskedTextBox> Steuerelement ist ein erweitertes-Eintrag-Steuerelement, das Sie Masken, die automatisch definieren kann akzeptieren oder ablehnen von Benutzereingaben. Darüber hinaus können Sie mithilfe der <xref:System.Windows.Forms.PropertyGrid> Steuerelement, um Ihre eigenen Windows Forms-Designer zu erstellen, die der Designer sichtbare Eigenschaften der Steuerelemente anzeigt.|  
|-Layout|Mehrere wichtige Klassen in Windows Forms-Steuerelement das Layout der Steuerelemente auf einer Anzeigeoberfläche, beispielsweise ein Formular oder Steuerelement Hilfe. <xref:System.Windows.Forms.FlowLayoutPanel> Ordnet alle darin seriell enthaltenen, Steuerelemente und <xref:System.Windows.Forms.TableLayoutPanel> können Sie Zellen und Zeilen für die Anordnung von Steuerelementen in einem festen Raster definieren. <xref:System.Windows.Forms.SplitContainer> unterteilt die Anzeigeoberfläche in zwei oder mehr anpassbaren Teile.|  
|-Daten und Datenbindung|Windows Forms definiert eine umfangreiche Architektur für die Bindung an Datenquellen wie Datenbanken und XML-Dateien. Die <xref:System.Windows.Forms.DataGridView> Steuerelement stellt eine anpassbare Tabelle zum Anzeigen von Daten bereit und ermöglicht Ihnen das Anpassen von Zellen, Zeilen, Spalten und Rahmen. Die <xref:System.Windows.Forms.BindingNavigator> -Steuerelement darstellt, eine standardisierte Möglichkeit zum Navigieren und die Arbeit mit Daten in ein Formular. <xref:System.Windows.Forms.BindingNavigator> wird häufig zusammen mit den <xref:System.Windows.Forms.BindingSource> Steuerung auf Daten in einem Formular durchlaufen und mit ihnen interagieren.|  
|-Komponenten|Neben der Steuerelemente die <xref:System.Windows.Forms> Namespace bietet andere Klassen, die nicht von abgeleitet sind die <xref:System.Windows.Forms.Control> Klasse jedoch weiterhin visual Features für eine Windows-basierte Anwendung bereitzustellen. Einige Klassen, z. B. <xref:System.Windows.Forms.ToolTip> und <xref:System.Windows.Forms.ErrorProvider>, erweitern die Funktionen oder Informationen für den Benutzer bereitstellen. Mit der <xref:System.Windows.Forms.Help> und <xref:System.Windows.Forms.HelpProvider> Klassen, Sie können Hilfeinformationen zu einem Benutzer Ihrer Anwendungen anzeigen.|  
|– Häufig verwendete Dialogfelder|Windows bietet mehrere Standarddialogfelder, die Sie verwenden können, um Ihre Anwendung eine einheitliche Benutzeroberfläche Geben Sie beim Ausführen von Aufgaben wie das Öffnen und Speichern von Dateien, die Schriftart und Farbe bearbeiten oder drucken. Die <xref:System.Windows.Forms.OpenFileDialog> und <xref:System.Windows.Forms.SaveFileDialog> Klassen bieten die Funktionalität, um ein Dialogfeld angezeigt, in dem den Benutzer suchen, und geben Sie den Namen einer Datei zu öffnen oder speichern können. Die <xref:System.Windows.Forms.FontDialog> Klasse zeigt ein Dialogfeld, um Elemente zu ändern. die <xref:System.Drawing.Font> , die von Ihrer Anwendung verwendet. Die <xref:System.Windows.Forms.PageSetupDialog>, <xref:System.Windows.Forms.PrintPreviewDialog>, und <xref:System.Windows.Forms.PrintDialog> Klassen anzeigen von Dialogfeldern, die dem Benutzer ermöglichen, die Kontrolle einiger Aspekte des Druckens von Dokumenten. Weitere Informationen über das Drucken aus einer Windows-basierten Anwendung finden Sie unter den <xref:System.Drawing.Printing> Namespace. Neben der Standarddialogfelder die <xref:System.Windows.Forms> -Namespace stellt die <xref:System.Windows.Forms.MessageBox> -Klasse für das Anzeigen eines Meldungsfelds, das Anzeigen und Abrufen von Daten aus der Benutzer kann.|  
  
 Es gibt mehrere Klassen innerhalb der <xref:System.Windows.Forms> Namespace, die Unterstützung für die Klassen, die in der vorherigen Zusammenfassung genannten bereitstellen. Beispiele für die unterstützenden Klassen sind Ereignisargumentklassen, Enumerationen und Delegaten, mit denen Ereignisse in Steuerelementen und Komponenten.  
  
> [!CAUTION]
>  Klassen in den Windows Forms-Namespace werden für die Verwendung in einem Windows-Dienst nicht unterstützt. Diese Klassen aus einem Dienst verwenden möchten, kann unerwartete Probleme, z. B. eingeschränkte Service-Leistung und Runtime-Ausnahmen führen.  
>   
>  Wenn Sie die .NET Framework, Version 1.1 verwenden oder .NET Framework 1.0, und Sie müssen die Windows Forms-Anwendung, die Unterstützung von visuellen Windows XP-Stilen vornehmen, stellen Sie sicher, dass Sie festlegen, die `FlatStyle` -Eigenschaft der Steuerelemente auf <xref:System.Windows.Forms.FlatStyle.System?displayProperty=nameWithType> und fügen Sie ein Manifest mit Ihrer die ausführbare Datei. Ein Manifest ist eine XML-Datei, die enthalten ist, entweder als eine Ressource in die ausführbare Datei der Anwendung oder als separate Datei, die sich im gleichen Verzeichnis wie die ausführbare Datei befindet. Ein Beispiel für ein Manifest finden Sie im Abschnitt "Beispiel" für die <xref:System.Windows.Forms.FlatStyle> Enumeration. Weitere Informationen dazu, wie Sie die visuellen Stile in Windows XP verfügbaren zu verwenden finden Sie unter "Mithilfe von Windows XP Visual Stile in die Benutzer-Schnittstelle Entwurf und Entwicklung" in der MSDN Library. Standardmäßig werden visuelle Stile für die .NET Framework-Versionen 1.1, 1.2 und 2.0 aktiviert.  
  
 ]]></format>
    </remarks>
  </Docs>
</Namespace>