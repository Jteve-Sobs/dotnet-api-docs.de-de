<Type Name="JumpList" FullName="System.Windows.Shell.JumpList">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a34dc3b4c5089fd168ebe9c317e67dd697492469" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69445935" /></Metadata><TypeSignature Language="C#" Value="public sealed class JumpList : System.ComponentModel.ISupportInitialize" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed JumpList extends System.Object implements class System.ComponentModel.ISupportInitialize" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Shell.JumpList" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class JumpList&#xA;Implements ISupportInitialize" />
  <TypeSignature Language="C++ CLI" Value="public ref class JumpList sealed : System::ComponentModel::ISupportInitialize" />
  <TypeSignature Language="F#" Value="type JumpList = class&#xA;    interface ISupportInitialize" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.ISupportInitialize</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Security.SecurityCritical</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Markup.ContentProperty("JumpItems")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Stellt eine Liste von Elementen und Aufgaben dar, die auf einer Windows 7-Taskleistenschaltfläche als Menü angezeigt werden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die [!INCLUDE[win7](~/includes/win7-md.md)] Taskleiste bietet erweiterte Funktionen zum direkten starten von Programmen über die Task leisten Schaltfläche mithilfe von Sprung Listen. Sprung Listen werden auch im [!INCLUDE[win7](~/includes/win7-md.md)] Startmenü verwendet. Um auf eine Sprung Liste zuzugreifen, klicken Sie mit der rechten Maustaste auf eine Task leisten Schaltfläche, oder klicken Sie auf den Pfeil neben einem Programm im Startmenü. Weitere Informationen zu Sprung Listen finden Sie im Abschnitt [Taskleiste](https://go.microsoft.com/fwlink/?LinkId=178478) der Windows-Benutzeroberflächen-Interaktions Richtlinien.  
  
 Die <xref:System.Windows.Shell.JumpList> -Klasse stellt einen verwalteten Wrapper für die Sprung Listen Funktionalität in [!INCLUDE[win7](~/includes/win7-md.md)] der Taskleiste bereit und verwaltet die Daten, [!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)] die an die Shell übermittelt werden. Die Funktionalität, die von <xref:System.Windows.Shell.JumpList> der-Klasse verfügbar gemacht wird, [!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)] ist in [!INCLUDE[win7](~/includes/win7-md.md)]-Versionen vor nicht verfügbar. Anwendungen, die die <xref:System.Windows.Shell.JumpList> -Klasse verwenden, werden in anderen [!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)]Versionen von ausgeführt, aber die Sprung Liste ist nicht verfügbar. Weitere Informationen zu den APIs für die Windows-Shell und die native Sprung Liste finden Sie unter [Task leisten Erweiterungen](https://go.microsoft.com/fwlink/?LinkId=178479).  
  
 Die folgende Abbildung zeigt die Sprung Liste für Windows-Media Player mit Elementen in den **Aufgaben** und **häufig** vorkommende Kategorien.  
  
 ![Windows Media Player-Sprung Liste] (~/add/media/wpfshell-jumplist.png "Windows Media Player-Sprung Liste")  
Windows Media Player-Sprungliste  
  
## <a name="configuring-a-jump-list"></a>Konfigurieren einer Sprung Liste  
 Sprung Listen können zwei Typen von Elementen enthalten: a <xref:System.Windows.Shell.JumpTask> <xref:System.Windows.Shell.JumpPath>und. Ein <xref:System.Windows.Shell.JumpTask> ist ein Link zu einem Programm, und <xref:System.Windows.Shell.JumpPath> eine ist ein Link zu einer Datei. Sie können Elemente in einer Sprung Liste visuell voneinander trennen, indem <xref:System.Windows.Shell.JumpTask> Sie eine erstellen, für <xref:System.Windows.Shell.JumpTask.Title%2A> die <xref:System.Windows.Shell.JumpItem.CustomCategory%2A> keine und angegeben ist. Diese leere <xref:System.Windows.Shell.JumpTask> wird in der Sprung Liste als horizontale Linie angezeigt.  
  
> [!NOTE]
>  Wenn der in einem <xref:System.Windows.Shell.JumpPath> angegebene Dateityp nicht bei der Anwendung registriert ist, wird die Datei nicht in der Sprung Liste angezeigt. Wenn Sie z. b. einen <xref:System.Windows.Shell.JumpPath> hinzufügen, der auf eine txt-Datei verweist, muss Ihre Anwendung registriert werden, damit txt-Dateien behandelt werden. Weitere Informationen finden Sie unter [Einführung in Dateizuordnungen](https://go.microsoft.com/fwlink/?LinkId=178480).  
  
 Sprungelemente werden in Kategorien in <xref:System.Windows.Shell.JumpList>eingefügt. Standardmäßig wird eine <xref:System.Windows.Shell.JumpItem> in der Kategorie **Tasks** angezeigt. Alternativ können Sie einen <xref:System.Windows.Shell.JumpItem.CustomCategory%2A> für den <xref:System.Windows.Shell.JumpItem>angeben.  
  
 <xref:System.Windows.Shell.JumpList> Durch <xref:System.Windows.Shell.JumpList.ShowFrequentCategory%2A> Festlegen der **** -Eigenschaftundder-EigenschaftkönnenSieangeben,obdiestandardmäßigenaktuellenundhäufigenKategorieninangezeigt<xref:System.Windows.Shell.JumpList.ShowRecentCategory%2A> werden. **** Der Inhalt dieser Kategorien wird von der [!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)] Shell verwaltet. Da diese Kategorien viel von denselben Daten enthalten können, zeigen Sie in der Regel eine oder die andere in <xref:System.Windows.Shell.JumpList>Ihrem an, aber nicht beides. [!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)]verwaltet automatisch zuletzt verwendete Elemente, wenn Sie über ein gemeinsames Datei Dialogfeld geöffnet oder zum Öffnen einer Anwendung über die Dateityp Zuordnung verwendet werden. Wenn auf ein Element über die Sprung Liste zugegriffen wird, können Sie die [!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)] Shell Benachrichtigen, um das Element der Kategorie **zuletzt** hinzuzufügen, <xref:System.Windows.Shell.JumpList.AddToRecentCategory%2A> indem Sie die-Methode aufrufen.  
  
## <a name="applying-a-jump-list-to-the-windows-shell"></a>Anwenden einer Sprung Liste auf die Windows-Shell  
 Sie können nicht direkt auf <xref:System.Windows.Shell.JumpList> die Sprung Liste der Shell zugreifen oder den Inhalt der-Klasse lesen. Stattdessen stellt die <xref:System.Windows.Shell.JumpList> -Klasse eine Darstellung einer Sprung Liste bereit, mit der Sie arbeiten und dann auf die [!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)] Shell anwenden können. In der Regel erstellen <xref:System.Windows.Shell.JumpList> Sie eine und legen Sie bei der ersten Anwendung der Anwendung einmal fest. Allerdings können Sie die <xref:System.Windows.Shell.JumpList> zur Laufzeit ändern oder ersetzen.  
  
 Wenn Sie die <xref:System.Windows.Shell.JumpList> Eigenschaften festgelegt haben, müssen Sie das <xref:System.Windows.Shell.JumpList> auf die Windows-Shell anwenden, bevor der Inhalt in der Task leisten-Sprung Liste angezeigt wird. Dies erfolgt automatisch, wenn der <xref:System.Windows.Shell.JumpList> erstmalig an eine Anwendung angefügt wird, entweder in XAML oder in einem <xref:System.Windows.Shell.JumpList.SetJumpList%2A> aufzurufenden-Methode. Wenn Sie den Inhalt <xref:System.Windows.Shell.JumpList> der zur Laufzeit ändern, müssen Sie die <xref:System.Windows.Shell.JumpList.Apply%2A> -Methode zum Übernehmen des aktuellen Inhalts auf die Windows-Shell verwenden.  
  
## <a name="setting-a-jump-list-in-xaml"></a>Festlegen einer Sprung Liste in XAML  
 Ein <xref:System.Windows.Shell.JumpList> -Objekt wird nicht automatisch an <xref:System.Windows.Application> ein-Objekt angefügt. Sie fügen eine <xref:System.Windows.Shell.JumpList> an ein <xref:System.Windows.Application> Objekt in XAML an, indem Sie die Syntax der angefügten Eigenschaft verwenden. Die <xref:System.Windows.Shell.JumpList> -Klasse implementiert <xref:System.ComponentModel.ISupportInitialize> die-Schnittstelle zur Unterstützung der <xref:System.Windows.Shell.JumpList>XAML-Deklaration von. Wenn der <xref:System.Windows.Shell.JumpList> in XAML deklariert und an den aktuellen <xref:System.Windows.Application>angefügt ist, wird er automatisch auf die [!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)] Shell angewendet, <xref:System.Windows.Shell.JumpList> wenn der initialisiert wird.  
  
## <a name="setting-and-modifying-a-jump-list-in-code"></a>Festlegen und Ändern einer Sprung Liste im Code  
 Sie fügen eine <xref:System.Windows.Shell.JumpList> an ein <xref:System.Windows.Application> -Objekt im Code an, indem <xref:System.Windows.Shell.JumpList.SetJumpList%2A> Sie die statische-Methode aufrufen. Dadurch wird auch <xref:System.Windows.Shell.JumpList> auf die [!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)] Shell angewendet.  
  
 Um einen <xref:System.Windows.Shell.JumpList> zur Laufzeit zu ändern, wird die <xref:System.Windows.Shell.JumpList.GetJumpList%2A> -Methode aufgerufen, um <xref:System.Windows.Shell.JumpList> den abzurufen, der gerade an <xref:System.Windows.Application>einen angefügt ist. Nachdem Sie die Eigenschaften <xref:System.Windows.Shell.JumpList>der geändert haben, müssen Sie die <xref:System.Windows.Shell.JumpList.Apply%2A> -Methode zum Übernehmen der Änderungen auf die Windows-Shell verwenden.  
  
> [!NOTE]
>  Normalerweise erstellen Sie <xref:System.Windows.Shell.JumpList> einen, der an den <xref:System.Windows.Application> angefügt und auf [!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)] die Shell angewendet wird. Sie können jedoch mehrere <xref:System.Windows.Shell.JumpList> -Objekte erstellen. Es kann jeweils nur eine auf der [!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)] Shell angewendet werden, und es kann jeweils <xref:System.Windows.Shell.JumpList> nur eine auf einmal zugeordnet werden. <xref:System.Windows.Application> <xref:System.Windows.Shell.JumpList> Der .NET Framework erfordert nicht, dass diese identisch <xref:System.Windows.Shell.JumpList>sind.  
  
> [!NOTE]
>  Diese Klasse enthält einen Link Aufruf auf Klassenebene, der für alle Elemente gilt. Eine <xref:System.Security.SecurityException> wird ausgelöst, wenn der unmittelbare Aufrufer nicht über die Berechtigung für volle Vertrauenswürdigkeit verfügt. Weitere Informationen zu Sicherheitsanforderungen finden Sie unter [Link](~/docs/framework/misc/link-demands.md) Aufrufe und [Vererbungs Anforderungen](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/x4yx82e6(v=vs.100)).  
  
   
  
## Examples  
 Das folgende Beispiel zeigt eine Anwendung mit einer Sprung Liste. Die Anwendung verfügt über drei Schaltflächen, mit denen Sie der aktuellen Sprung Liste einen Task hinzufügen, den Inhalt der Sprung Liste löschen und eine neue Sprung Liste auf die Anwendung anwenden können.  
  
 Im folgenden Beispiel wird gezeigt, wie ein <xref:System.Windows.Shell.JumpList> im Markup deklariert wird. Der <xref:System.Windows.Shell.JumpList> enthält zwei <xref:System.Windows.Shell.JumpTask> Verknüpfungen und <xref:System.Windows.Shell.JumpPath>eine. Das Anwenden <xref:System.Windows.Shell.JumpPath> von auf die Shell schlägt fehl, wenn die Anwendung nicht für die Verarbeitung der Dateinamenerweiterung ". txt" registriert ist.  
  
 [!code-xaml[Shell_JumpListSample#000](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/app.xaml#000)]  
  
 Das folgende Beispiel zeigt die Code-Behind-Seite `App.xaml`für. Dieser Code behandelt das <xref:System.Windows.Shell.JumpList.JumpItemsRejected> - <xref:System.Windows.Shell.JumpList.JumpItemsRemovedByUser> Ereignis und das-Ereignis.  
  
 [!code-csharp[Shell_JumpListSample#100](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/app.xaml.cs#100)]  
  
 Das folgende Beispiel zeigt das Markup, das zum Erstellen der Benutzeroberfläche der Anwendung verwendet wird.  
  
 [!code-xaml[Shell_JumpListSample#300](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/mainwindow.xaml#300)]  
  
 Das folgende Beispiel zeigt die Code-Behind-Seite `MainWindow.xaml`für. Dieser Code veranschaulicht das ändern, löschen und Erstellen eines <xref:System.Windows.Shell.JumpList> in prozeduralem Code. Bei der neuen Sprung Liste wird die statische <xref:System.Windows.Shell.JumpList.SetJumpList%2A> -Methode aufgerufen, um die <xref:System.Windows.Shell.JumpList> der aktuellen Anwendung zuzuordnen und die <xref:System.Windows.Shell.JumpList> auf die Windows-Shell anzuwenden.  
  
 [!code-csharp[Shell_JumpListSample#200](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/mainwindow.xaml.cs#200)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.Permissions.UIPermission">für den vollständigen Zugriff zum Ändern der Windows-Shell. Sicherheitsaktion: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />. Zugehörige Enumeration:<see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></permission>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Shell.JumpList" />-Klasse.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public JumpList ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Shell.JumpList.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; JumpList();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Shell.JumpList" />-Klasse.</summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer. Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public JumpList (System.Collections.Generic.IEnumerable&lt;System.Windows.Shell.JumpItem&gt; items, bool showFrequent, bool showRecent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.Shell.JumpItem&gt; items, bool showFrequent, bool showRecent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Shell.JumpList.#ctor(System.Collections.Generic.IEnumerable{System.Windows.Shell.JumpItem},System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (items As IEnumerable(Of JumpItem), showFrequent As Boolean, showRecent As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; JumpList(System::Collections::Generic::IEnumerable&lt;System::Windows::Shell::JumpItem ^&gt; ^ items, bool showFrequent, bool showRecent);" />
      <MemberSignature Language="F#" Value="new System.Windows.Shell.JumpList : seq&lt;System.Windows.Shell.JumpItem&gt; * bool * bool -&gt; System.Windows.Shell.JumpList" Usage="new System.Windows.Shell.JumpList (items, showFrequent, showRecent)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;System.Windows.Shell.JumpItem&gt;" />
        <Parameter Name="showFrequent" Type="System.Boolean" />
        <Parameter Name="showRecent" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="items">Die Auflistung von <see cref="T:System.Windows.Shell.JumpItem" />-Objekten, die in der Sprungliste angezeigt werden.</param>
        <param name="showFrequent">Ein Wert, der angibt, ob häufig verwendete Elemente in der Sprungliste angezeigt werden.</param>
        <param name="showRecent">Ein Wert, der angibt, ob zuletzt verwendete Elemente in der Sprungliste angezeigt werden.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Shell.JumpList" />-Klasse mit den angegebenen Parametern.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die **aktuelle** und **häufige** Kategorie enthalten häufig viele der gleichen sprungelemente. Daher wird in den Anwendungen normalerweise entweder die **aktuelle** oder die **häufig** verwendete Kategorie in der Sprung Liste angezeigt, aber nicht beides.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer. Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</permission>
        <altmember cref="P:System.Windows.Shell.JumpList.JumpItems" />
        <altmember cref="P:System.Windows.Shell.JumpList.ShowFrequentCategory" />
        <altmember cref="P:System.Windows.Shell.JumpList.ShowRecentCategory" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AddToRecentCategory">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Fügt der Kategorie **Aktuell** der Sprungliste das angegebene Element hinzu.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddToRecentCategory">
      <MemberSignature Language="C#" Value="public static void AddToRecentCategory (string itemPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddToRecentCategory(string itemPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Shell.JumpList.AddToRecentCategory(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddToRecentCategory (itemPath As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddToRecentCategory(System::String ^ itemPath);" />
      <MemberSignature Language="F#" Value="static member AddToRecentCategory : string -&gt; unit" Usage="System.Windows.Shell.JumpList.AddToRecentCategory itemPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="itemPath">Der Pfad, der der Sprungliste hinzugefügt werden soll.</param>
        <summary>Fügt der Kategorie **Aktuell** der Sprungliste den angegebenen Elementpfad hinzu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Inhalt der **aktuellen** Kategorie wird von der Windows-Shell verwaltet. Um zuletzt verwendete Elemente in der Sprung Liste anzuzeigen, legen Sie <xref:System.Windows.Shell.JumpList.ShowRecentCategory%2A> die- `true`Eigenschaft auf fest.  
  
 Sie können die <xref:System.Windows.Shell.JumpList.AddToRecentCategory%28System.String%29> -Methode aufzurufen, um anzufordern, dass die Windows-Shell der Liste **zuletzt** verwendete Elemente einen Element Pfad hinzufügt. Wenn die Anwendung nicht für die Verarbeitung des Dateityps des Elements registriert ist, wird Sie nicht in der Liste **zuletzt** verwendet angezeigt, <xref:System.Windows.Shell.JumpList.AddToRecentCategory%28System.String%29> und Aufrufe von werden unbeaufsichtigt fehlschlagen.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer. Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</permission>
        <altmember cref="P:System.Windows.Shell.JumpList.ShowRecentCategory" />
      </Docs>
    </Member>
    <Member MemberName="AddToRecentCategory">
      <MemberSignature Language="C#" Value="public static void AddToRecentCategory (System.Windows.Shell.JumpPath jumpPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddToRecentCategory(class System.Windows.Shell.JumpPath jumpPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Shell.JumpList.AddToRecentCategory(System.Windows.Shell.JumpPath)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddToRecentCategory(System::Windows::Shell::JumpPath ^ jumpPath);" />
      <MemberSignature Language="F#" Value="static member AddToRecentCategory : System.Windows.Shell.JumpPath -&gt; unit" Usage="System.Windows.Shell.JumpList.AddToRecentCategory jumpPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="jumpPath" Type="System.Windows.Shell.JumpPath" />
      </Parameters>
      <Docs>
        <param name="jumpPath">Das der Sprungliste hinzuzufügende <see cref="T:System.Windows.Shell.JumpPath" />-Objekt.</param>
        <summary>Fügt der Kategorie **Aktuell** der Sprungliste den angegebenen Sprungpfad hinzu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Inhalt der **aktuellen** Kategorie wird von der Windows-Shell verwaltet. Um zuletzt verwendete Elemente in der Sprung Liste anzuzeigen, legen Sie <xref:System.Windows.Shell.JumpList.ShowRecentCategory%2A> die- `true`Eigenschaft auf fest.  
  
 Sie können die <xref:System.Windows.Shell.JumpList.AddToRecentCategory%28System.Windows.Shell.JumpPath%29> -Methode aufrufen, um anzufordern, dass die Windows-Shell der Liste der **zuletzt** verwendeten Elemente den angegebenen Sprung Pfad hinzufügt. Wenn die Anwendung nicht für die Verarbeitung des Dateityps des Elements registriert ist, wird Sie nicht in der Liste **zuletzt** verwendet angezeigt, <xref:System.Windows.Shell.JumpList.AddToRecentCategory%28System.Windows.Shell.JumpPath%29> und Aufrufe von werden unbeaufsichtigt fehlschlagen.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer. Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</permission>
        <altmember cref="P:System.Windows.Shell.JumpList.ShowRecentCategory" />
      </Docs>
    </Member>
    <Member MemberName="AddToRecentCategory">
      <MemberSignature Language="C#" Value="public static void AddToRecentCategory (System.Windows.Shell.JumpTask jumpTask);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddToRecentCategory(class System.Windows.Shell.JumpTask jumpTask) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Shell.JumpList.AddToRecentCategory(System.Windows.Shell.JumpTask)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddToRecentCategory(System::Windows::Shell::JumpTask ^ jumpTask);" />
      <MemberSignature Language="F#" Value="static member AddToRecentCategory : System.Windows.Shell.JumpTask -&gt; unit" Usage="System.Windows.Shell.JumpList.AddToRecentCategory jumpTask" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="jumpTask" Type="System.Windows.Shell.JumpTask" />
      </Parameters>
      <Docs>
        <param name="jumpTask">Das der Sprungliste hinzuzufügende <see cref="T:System.Windows.Shell.JumpTask" />-Objekt.</param>
        <summary>Fügt der Kategorie **Aktuell** der Sprungliste die angegebene Sprungaufgabe hinzu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Inhalt der **aktuellen** Kategorie wird von der Windows-Shell verwaltet. Um zuletzt verwendete Elemente in der Sprung Liste anzuzeigen, legen Sie <xref:System.Windows.Shell.JumpList.ShowRecentCategory%2A> die- `true`Eigenschaft auf fest.  
  
 Sie können die <xref:System.Windows.Shell.JumpList.AddToRecentCategory%28System.Windows.Shell.JumpTask%29> -Methode aufrufen, um anzufordern, dass die Windows-Shell der Liste **zuletzt** verwendete Elemente die angegebene Sprung Aufgabe hinzufügt.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer. Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</permission>
        <altmember cref="P:System.Windows.Shell.JumpList.ShowRecentCategory" />
      </Docs>
    </Member>
    <Member MemberName="Apply">
      <MemberSignature Language="C#" Value="public void Apply ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Apply() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Shell.JumpList.Apply" />
      <MemberSignature Language="VB.NET" Value="Public Sub Apply ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Apply();" />
      <MemberSignature Language="F#" Value="member this.Apply : unit -&gt; unit" Usage="jumpList.Apply " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Sendet das <see cref="T:System.Windows.Shell.JumpList" />-Objekt in seinem aktuellen Zustand an die Windows-Shell.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Shell.JumpList.Apply%2A> -Methode sendet den Inhalt <xref:System.Windows.Shell.JumpList> der im aktuellen Zustand an die Windows-Shell. Nachdem dieser Vorgang abgeschlossen wurde, wird <xref:System.Windows.Shell.JumpList.JumpItems%2A> die-Eigenschaft so geändert, dass nur die Elemente enthalten sind, die von der Windows-Shell erfolgreich zur Task leisten-Sprung Liste hinzugefügt wurden. Sie können auf die Listen der entfernten Elemente über Ereignishandler für das- <xref:System.Windows.Shell.JumpList.JumpItemsRejected> Ereignis <xref:System.Windows.Shell.JumpList.JumpItemsRemovedByUser> und das-Ereignis zugreifen.  
  
   
  
## Examples  
 Im folgenden Beispiel wird gezeigt, wie Sie die <xref:System.Windows.Shell.JumpList> aktuelle-Auflistung und den Inhalt <xref:System.Windows.Shell.JumpList.JumpItems%2A> der Auflistung löschen. Anschließend <xref:System.Windows.Shell.JumpList.Apply%2A> wird die-Methode aufgerufen, um <xref:System.Windows.Shell.JumpList> die Änderungen auf die Windows-Shell anzuwenden. Dieses Beispiel ist Teil eines größeren Beispiels, das in der <xref:System.Windows.Shell.JumpList> Übersicht über die-Klasse verfügbar ist.  
  
 [!code-csharp[Shell_JumpListSample#230](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/mainwindow.xaml.cs#230)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Die <see cref="T:System.Windows.Shell.JumpList" /> wird nicht völlig initialisiert.</exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer. Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</permission>
      </Docs>
    </Member>
    <Member MemberName="BeginInit">
      <MemberSignature Language="C#" Value="public void BeginInit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Shell.JumpList.BeginInit" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginInit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BeginInit();" />
      <MemberSignature Language="F#" Value="abstract member BeginInit : unit -&gt; unit&#xA;override this.BeginInit : unit -&gt; unit" Usage="jumpList.BeginInit " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ISupportInitialize.BeginInit</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Signalisiert den Beginn der <see cref="T:System.Windows.Shell.JumpList" />-Initialisierung.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Shell.JumpList> -Klasse implementiert <xref:System.ComponentModel.ISupportInitialize> die-Schnittstelle zur Unterstützung der <xref:System.Windows.Shell.JumpList>XAML-Deklaration von. Die <xref:System.Windows.Shell.JumpList.BeginInit%2A> -Methode wird nur aufgerufen, <xref:System.Windows.Shell.JumpList> wenn der in XAML deklariert und mithilfe der <xref:System.Windows.Application> Syntax der angefügten Eigenschaft an einen angefügt wird. Sie können diese Methode nicht aus Ihrem Code abrufen.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Dieser Aufruf von <see cref="M:System.Windows.Shell.JumpList.BeginInit" /> wird in einem vorherigen Aufruf von <see cref="M:System.Windows.Shell.JumpList.BeginInit" /> geschachtelt.</exception>
      </Docs>
    </Member>
    <Member MemberName="EndInit">
      <MemberSignature Language="C#" Value="public void EndInit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Shell.JumpList.EndInit" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndInit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndInit();" />
      <MemberSignature Language="F#" Value="abstract member EndInit : unit -&gt; unit&#xA;override this.EndInit : unit -&gt; unit" Usage="jumpList.EndInit " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ISupportInitialize.EndInit</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Signalisiert das Ende der <see cref="T:System.Windows.Shell.JumpList" />-Initialisierung.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Shell.JumpList> -Klasse implementiert <xref:System.ComponentModel.ISupportInitialize> die-Schnittstelle zur Unterstützung der <xref:System.Windows.Shell.JumpList>XAML-Deklaration von. Die <xref:System.Windows.Shell.JumpList.EndInit%2A> -Methode wird nur aufgerufen, <xref:System.Windows.Shell.JumpList> wenn der in XAML deklariert und mithilfe der <xref:System.Windows.Application> Syntax der angefügten Eigenschaft an einen angefügt wird. Sie können diese Methode nicht aus Ihrem Code abrufen.  
  
 Die <xref:System.Windows.Shell.JumpList.EndInit%2A> -Methode hat denselben Effekt wie die <xref:System.Windows.Shell.JumpList.Apply%2A> -Methode. <xref:System.Windows.Shell.JumpList.EndInit%2A>sendet den Inhalt <xref:System.Windows.Shell.JumpList> der im aktuellen Zustand an die Windows-Shell. Nachdem dieser Vorgang abgeschlossen wurde, wird <xref:System.Windows.Shell.JumpList.JumpItems%2A> die-Eigenschaft so geändert, dass nur die Elemente enthalten sind, die von der Windows-Shell erfolgreich zur Sprung Liste hinzugefügt wurden. Sie können auf die Listen der entfernten Elemente über Ereignishandler für das- <xref:System.Windows.Shell.JumpList.JumpItemsRejected> Ereignis <xref:System.Windows.Shell.JumpList.JumpItemsRemovedByUser> und das-Ereignis zugreifen.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Dieser Aufruf von <see cref="M:System.Windows.Shell.JumpList.EndInit" /> wird nicht einem Aufruf von <see cref="M:System.Windows.Shell.JumpList.BeginInit" /> zugeordnet.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetJumpList">
      <MemberSignature Language="C#" Value="public static System.Windows.Shell.JumpList GetJumpList (System.Windows.Application application);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Shell.JumpList GetJumpList(class System.Windows.Application application) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Shell.JumpList.GetJumpList(System.Windows.Application)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Shell::JumpList ^ GetJumpList(System::Windows::Application ^ application);" />
      <MemberSignature Language="F#" Value="static member GetJumpList : System.Windows.Application -&gt; System.Windows.Shell.JumpList" Usage="System.Windows.Shell.JumpList.GetJumpList application" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Shell.JumpList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="application" Type="System.Windows.Application" />
      </Parameters>
      <Docs>
        <param name="application">Die dem <see cref="T:System.Windows.Shell.JumpList" />-Objekt zugeordnete Anwendung.</param>
        <summary>Gibt das mit einer Anwendung verknüpfte <see cref="T:System.Windows.Shell.JumpList" />-Objekt zurück.</summary>
        <returns>Das der angegebenen Anwendung zugeordnete <see cref="T:System.Windows.Shell.JumpList" />-Objekt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können die <xref:System.Windows.Shell.JumpList.GetJumpList%2A> -Methode aufzurufen, <xref:System.Windows.Shell.JumpList> um den derzeit zugeordneten <xref:System.Windows.Application>zu erhalten. Der .NET Framework erfordert nicht, dass dies der ist <xref:System.Windows.Shell.JumpList> , der zurzeit auf die Windows-Shell angewendet wird.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Windows.Shell.JumpList> der aktuellen Anwendung zugeordnete-Anwendung angezeigt wird. Ein <xref:System.Windows.Shell.JumpTask> wird der <xref:System.Windows.Shell.JumpList.JumpItems%2A> -Auflistung hinzugefügt und der **aktuellen** Kategorie hinzugefügt. Die <xref:System.Windows.Shell.JumpList.Apply%2A> -Methode wird aufgerufen, um das <xref:System.Windows.Shell.JumpList> aktualisierte auf die Windows-Shell anzuwenden. Dieses Beispiel ist Teil eines größeren Beispiels, das in der <xref:System.Windows.Shell.JumpList> Übersicht über die-Klasse verfügbar ist.  
  
 [!code-csharp[Shell_JumpListSample#240](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/mainwindow.xaml.cs#240)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JumpItems">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.List&lt;System.Windows.Shell.JumpItem&gt; JumpItems { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.List`1&lt;class System.Windows.Shell.JumpItem&gt; JumpItems" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Shell.JumpList.JumpItems" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property JumpItems As List(Of JumpItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::List&lt;System::Windows::Shell::JumpItem ^&gt; ^ JumpItems { System::Collections::Generic::List&lt;System::Windows::Shell::JumpItem ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.JumpItems : System.Collections.Generic.List&lt;System.Windows.Shell.JumpItem&gt;" Usage="System.Windows.Shell.JumpList.JumpItems" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;System.Windows.Shell.JumpItem&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Auflistung von <see cref="T:System.Windows.Shell.JumpItem" />-Objekten, die in der Sprungliste angezeigt werden, ab.</summary>
        <value>Die Auflistung von <see cref="T:System.Windows.Shell.JumpItem" />-Objekten, die in der Sprungliste angezeigt werden. Der Standard ist eine leere Auflistung.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sprung Listen können zwei Typen von Elementen enthalten: a <xref:System.Windows.Shell.JumpTask> <xref:System.Windows.Shell.JumpPath>und. Ein <xref:System.Windows.Shell.JumpTask> ist ein Link zu einem Programm, und <xref:System.Windows.Shell.JumpPath> eine ist ein Link zu einer Datei.  
  
 Wenn ein <xref:System.Windows.Shell.JumpList> erstellt wird, ist <xref:System.Windows.Shell.JumpList.JumpItems%2A> die Auflistung leer. Sie können der Auflistung <xref:System.Windows.Shell.JumpTask> beliebige <xref:System.Windows.Shell.JumpPath> -oder-Objekte hinzufügen. Die Sammlung enthält nur Elemente, die von Ihrem Programm hinzugefügt wurden. Nachdem der <xref:System.Windows.Shell.JumpList> durch einen erfolgreichen Aufrufen der <xref:System.Windows.Shell.JumpList.EndInit%2A> -Methode oder <xref:System.Windows.Shell.JumpList.Apply%2A> der-Methode an die Windows-Shell übermittelt <xref:System.Windows.Shell.JumpList.JumpItems%2A> wurde, enthält die Auflistung nur die Elemente, die erfolgreich zur Task leisten-Sprung Liste hinzugefügt wurden. Elemente, die nicht erfolgreich hinzugefügt wurden, werden <xref:System.Windows.Shell.JumpList.JumpItems%2A> aus der Auflistung entfernt. Sie können auf die Listen der entfernten Elemente über Ereignishandler für das- <xref:System.Windows.Shell.JumpList.JumpItemsRejected> Ereignis <xref:System.Windows.Shell.JumpList.JumpItemsRemovedByUser> und das-Ereignis zugreifen.  
  
   
  
## Examples  
 Im folgenden Beispiel wird gezeigt, wie Sie die <xref:System.Windows.Shell.JumpList> aktuelle-Auflistung und den Inhalt <xref:System.Windows.Shell.JumpList.JumpItems%2A> der Auflistung löschen. Anschließend <xref:System.Windows.Shell.JumpList.Apply%2A> wird die-Methode aufgerufen, um <xref:System.Windows.Shell.JumpList> die Änderungen auf die Windows-Shell anzuwenden. Dieses Beispiel ist Teil eines größeren Beispiels, das in der <xref:System.Windows.Shell.JumpList> Übersicht über die-Klasse verfügbar ist.  
  
 [!code-csharp[Shell_JumpListSample#230](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/mainwindow.xaml.cs#230)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JumpItemsRejected">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Shell.JumpItemsRejectedEventArgs&gt; JumpItemsRejected;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Shell.JumpItemsRejectedEventArgs&gt; JumpItemsRejected" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Shell.JumpList.JumpItemsRejected" />
      <MemberSignature Language="VB.NET" Value="Public Event JumpItemsRejected As EventHandler(Of JumpItemsRejectedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Shell::JumpItemsRejectedEventArgs ^&gt; ^ JumpItemsRejected;" />
      <MemberSignature Language="F#" Value="member this.JumpItemsRejected : EventHandler&lt;System.Windows.Shell.JumpItemsRejectedEventArgs&gt; " Usage="member this.JumpItemsRejected : System.EventHandler&lt;System.Windows.Shell.JumpItemsRejectedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Shell.JumpItemsRejectedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn beim Hinzufügen von Sprungelementen zur Sprungliste durch die Windows-Shell ein Fehler aufgetreten ist.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nachdem der Inhalt von <xref:System.Windows.Shell.JumpList> auf die Windows-Shell angewendet wurde, wird die <xref:System.Windows.Shell.JumpList.JumpItems%2A> -Eigenschaft so geändert, dass nur die Elemente enthalten sind, die von der Windows-Shell erfolgreich zur Sprung Liste hinzugefügt wurden. Sie können auf die Listen der entfernten Elemente über Ereignishandler für das- <xref:System.Windows.Shell.JumpList.JumpItemsRejected> Ereignis <xref:System.Windows.Shell.JumpList.JumpItemsRemovedByUser> und das-Ereignis zugreifen.  
  
   
  
## Examples  
 Im folgenden Beispiel wird gezeigt, wie das <xref:System.Windows.Shell.JumpList.JumpItemsRejected> -Ereignis behandelt wird, um die abgelehnten Elemente in einem Meldungs Feld anzuzeigen. Dieses Beispiel ist Teil eines größeren Beispiels, das in der <xref:System.Windows.Shell.JumpList> Übersicht über die-Klasse verfügbar ist.  
  
 [!code-csharp[Shell_JumpListSample#110](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/app.xaml.cs#110)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JumpItemsRemovedByUser">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Shell.JumpItemsRemovedEventArgs&gt; JumpItemsRemovedByUser;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Shell.JumpItemsRemovedEventArgs&gt; JumpItemsRemovedByUser" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Shell.JumpList.JumpItemsRemovedByUser" />
      <MemberSignature Language="VB.NET" Value="Public Event JumpItemsRemovedByUser As EventHandler(Of JumpItemsRemovedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Shell::JumpItemsRemovedEventArgs ^&gt; ^ JumpItemsRemovedByUser;" />
      <MemberSignature Language="F#" Value="member this.JumpItemsRemovedByUser : EventHandler&lt;System.Windows.Shell.JumpItemsRemovedEventArgs&gt; " Usage="member this.JumpItemsRemovedByUser : System.EventHandler&lt;System.Windows.Shell.JumpItemsRemovedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Shell.JumpItemsRemovedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn Sprungelemente, die zuvor in der Sprungliste enthalten waren, vom Benutzer aus der Liste entfernt werden.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nachdem der Inhalt von <xref:System.Windows.Shell.JumpList> auf die Windows-Shell angewendet wurde, wird die <xref:System.Windows.Shell.JumpList.JumpItems%2A> -Eigenschaft so geändert, dass nur die Elemente enthalten sind, die von der Windows-Shell erfolgreich zur Sprung Liste hinzugefügt wurden. Sie können auf die Listen der entfernten Elemente über Ereignishandler für das- <xref:System.Windows.Shell.JumpList.JumpItemsRejected> Ereignis <xref:System.Windows.Shell.JumpList.JumpItemsRemovedByUser> und das-Ereignis zugreifen.  
  
   
  
## Examples  
 Im folgenden Beispiel wird gezeigt, wie das <xref:System.Windows.Shell.JumpList.JumpItemsRemovedByUser> -Ereignis behandelt wird, um die abgelehnten Elemente in einem Meldungs Feld anzuzeigen. Dieses Beispiel ist Teil eines größeren Beispiels, das in der <xref:System.Windows.Shell.JumpList> Übersicht über die-Klasse verfügbar ist.  
  
 [!code-csharp[Shell_JumpListSample#120](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/app.xaml.cs#120)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetJumpList">
      <MemberSignature Language="C#" Value="public static void SetJumpList (System.Windows.Application application, System.Windows.Shell.JumpList value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetJumpList(class System.Windows.Application application, class System.Windows.Shell.JumpList value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Shell.JumpList.SetJumpList(System.Windows.Application,System.Windows.Shell.JumpList)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetJumpList(System::Windows::Application ^ application, System::Windows::Shell::JumpList ^ value);" />
      <MemberSignature Language="F#" Value="static member SetJumpList : System.Windows.Application * System.Windows.Shell.JumpList -&gt; unit" Usage="System.Windows.Shell.JumpList.SetJumpList (application, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="application" Type="System.Windows.Application" />
        <Parameter Name="value" Type="System.Windows.Shell.JumpList" />
      </Parameters>
      <Docs>
        <param name="application">Die dem <see cref="T:System.Windows.Shell.JumpList" />-Objekt zugeordnete Anwendung.</param>
        <param name="value">Das der Anwendung zuzuordnende <see cref="T:System.Windows.Shell.JumpList" />-Objekt.</param>
        <summary>Legt das einer Anwendung zugeordnete <see cref="T:System.Windows.Shell.JumpList" />-Objekt fest.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können mehrere <xref:System.Windows.Shell.JumpList> -Objekte erstellen. Allerdings kann jeweils <xref:System.Windows.Shell.JumpList> nur jeweils eine zugeordnet <xref:System.Windows.Application>werden. Ruft die <xref:System.Windows.Shell.JumpList.SetJumpList%2A> -Methode auf, <xref:System.Windows.Shell.JumpList> um den derzeit zugeordneten <xref:System.Windows.Application>festzulegen.  
  
   
  
## Examples  
 Im folgenden Beispiel wird gezeigt, wie ein <xref:System.Windows.Shell.JumpList> im Code erstellt wird. Die statische <xref:System.Windows.Shell.JumpList.SetJumpList%2A> -Methode wird aufgerufen, um <xref:System.Windows.Shell.JumpList> die der aktuellen Anwendung zuzuordnen. <xref:System.Windows.Shell.JumpList> Wird automatisch auf die Windows-Shell angewendet, wenn Sie festgelegt wird. Dieses Beispiel ist Teil eines größeren Beispiels, das in der <xref:System.Windows.Shell.JumpList> Übersicht über die-Klasse verfügbar ist.  
  
 [!code-csharp[Shell_JumpListSample#210](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/mainwindow.xaml.cs#210)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowFrequentCategory">
      <MemberSignature Language="C#" Value="public bool ShowFrequentCategory { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowFrequentCategory" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Shell.JumpList.ShowFrequentCategory" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowFrequentCategory As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowFrequentCategory { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowFrequentCategory : bool with get, set" Usage="System.Windows.Shell.JumpList.ShowFrequentCategory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob häufig verwendete Elemente in der Sprungliste angezeigt werden, oder legt ihn fest.</summary>
        <value><see langword="true" />, wenn häufig verwendete Elemente in der Sprungliste angezeigt werden, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Inhalt der Kategorie **häufig** wird von der Windows-Shell verwaltet. Um häufig verwendete Elemente in der Sprung Liste anzuzeigen, legen Sie <xref:System.Windows.Shell.JumpList.ShowFrequentCategory%2A> die- `true`Eigenschaft auf fest.  
  
 Die **aktuelle** und **häufige** Kategorie enthalten häufig viele der gleichen sprungelemente. Daher wird in den Anwendungen normalerweise entweder die **aktuelle** oder die **häufig** verwendete Kategorie in der Sprung Liste angezeigt, aber nicht beides.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt einen <xref:System.Windows.Shell.JumpList> , der für die Anzeige der **häufigen** Kategorie konfiguriert ist. Dieses Beispiel ist Teil eines größeren Beispiels, das in der <xref:System.Windows.Shell.JumpList> Übersicht über die-Klasse verfügbar ist.  
  
 [!code-xaml[Shell_JumpListSample#001](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/app.xaml#001)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowRecentCategory">
      <MemberSignature Language="C#" Value="public bool ShowRecentCategory { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowRecentCategory" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Shell.JumpList.ShowRecentCategory" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowRecentCategory As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowRecentCategory { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowRecentCategory : bool with get, set" Usage="System.Windows.Shell.JumpList.ShowRecentCategory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob zuletzt verwendete Elemente in der Sprungliste angezeigt werden, oder legt ihn fest.</summary>
        <value><see langword="true" />, wenn zuletzt verwendete Elemente in der Sprungliste angezeigt werden, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Inhalt der **aktuellen** Kategorie wird von der Windows-Shell verwaltet. Um häufig verwendete Elemente in der Sprung Liste anzuzeigen, legen Sie <xref:System.Windows.Shell.JumpList.ShowRecentCategory%2A> die- `true`Eigenschaft auf fest.  
  
 Die **aktuelle** und **häufige** Kategorie enthalten häufig viele der gleichen sprungelemente. Daher wird in den Anwendungen normalerweise entweder die **aktuelle** oder die **häufig** verwendete Kategorie in der Sprung Liste angezeigt, aber nicht beides.  
  
 Sie können die <xref:System.Windows.Shell.JumpList.AddToRecentCategory%2A> -Methode aufzurufen, um anzufordern, dass die Windows-Shell der Liste **zuletzt** verwendete Elemente Elemente hinzufügt. Wenn die Anwendung nicht für die Behandlung des Datei namens des Elements registriert ist, wird Sie nicht in der Liste **zuletzt** verwendet angezeigt, und Aufrufe <xref:System.Windows.Shell.JumpList.AddToRecentCategory%2A> von werden im Hintergrund fehlschlagen.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt einen <xref:System.Windows.Shell.JumpList> , der für die Anzeige der Kategorie **zuletzt** konfiguriert wurde. Dieses Beispiel ist Teil eines größeren Beispiels, das in der <xref:System.Windows.Shell.JumpList> Übersicht über die-Klasse verfügbar ist.  
  
 [!code-xaml[Shell_JumpListSample#001](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/app.xaml#001)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
