<Type Name="SpeechAudioFormatInfo" FullName="System.Speech.AudioFormat.SpeechAudioFormatInfo">
  <Metadata><Meta Name="ms.openlocfilehash" Value="dc16979ebb3d50dc0a5144f5d33ef40858d7ae54" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55412603" /></Metadata><TypeSignature Language="C#" Value="public class SpeechAudioFormatInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit SpeechAudioFormatInfo extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Speech.AudioFormat.SpeechAudioFormatInfo" />
  <TypeSignature Language="VB.NET" Value="Public Class SpeechAudioFormatInfo" />
  <TypeSignature Language="C++ CLI" Value="public ref class SpeechAudioFormatInfo" />
  <TypeSignature Language="F#" Value="type SpeechAudioFormatInfo = class" />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Stellt Informationen zu einem Audioformat dar.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Speech.AudioFormat.SpeechAudioFormatInfo" />-Klasse.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SpeechAudioFormatInfo (int samplesPerSecond, System.Speech.AudioFormat.AudioBitsPerSample bitsPerSample, System.Speech.AudioFormat.AudioChannel channel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 samplesPerSecond, valuetype System.Speech.AudioFormat.AudioBitsPerSample bitsPerSample, valuetype System.Speech.AudioFormat.AudioChannel channel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.AudioFormat.SpeechAudioFormatInfo.#ctor(System.Int32,System.Speech.AudioFormat.AudioBitsPerSample,System.Speech.AudioFormat.AudioChannel)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (samplesPerSecond As Integer, bitsPerSample As AudioBitsPerSample, channel As AudioChannel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SpeechAudioFormatInfo(int samplesPerSecond, System::Speech::AudioFormat::AudioBitsPerSample bitsPerSample, System::Speech::AudioFormat::AudioChannel channel);" />
      <MemberSignature Language="F#" Value="new System.Speech.AudioFormat.SpeechAudioFormatInfo : int * System.Speech.AudioFormat.AudioBitsPerSample * System.Speech.AudioFormat.AudioChannel -&gt; System.Speech.AudioFormat.SpeechAudioFormatInfo" Usage="new System.Speech.AudioFormat.SpeechAudioFormatInfo (samplesPerSecond, bitsPerSample, channel)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="samplesPerSecond" Type="System.Int32" />
        <Parameter Name="bitsPerSample" Type="System.Speech.AudioFormat.AudioBitsPerSample" />
        <Parameter Name="channel" Type="System.Speech.AudioFormat.AudioChannel" />
      </Parameters>
      <Docs>
        <param name="samplesPerSecond">Der Wert für die Beispiele pro Sekunde.</param>
        <param name="bitsPerSample">Der Wert für die Bits pro Beispiel.</param>
        <param name="channel">Ein Mitglied der <see cref="T:System.Speech.AudioFormat.AudioChannel" />-Enumeration (die <c>Mono</c> oder <c>Stereo</c> angibt).</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Speech.AudioFormat.SpeechAudioFormatInfo" />-Klasse und gibt die Beispiele pro Sekunde, Bits pro Beispiel und die Anzahl von Channels an.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Das folgende Beispiel zeigt eine typische Verwendung des <xref:System.Speech.AudioFormat.SpeechAudioFormatInfo.%23ctor%2A> zum Angeben des Formats der Audiodaten zur Ausgabe in eine WAV-Datei. Die <xref:System.Speech.AudioFormat.SpeechAudioFormatInfo.%23ctor%2A> Instanz ist ein Argument für die <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A> Methode.  
  
```csharp  
using System;  
using System.IO;  
using System.Speech.Synthesis;  
using System.Speech.AudioFormat;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToWaveFile(@"C:\temp\test.wav",   
          new SpeechAudioFormatInfo(32000, AudioBitsPerSample.Sixteen, AudioChannel.Mono));  
  
        // Create a SoundPlayer instance to play output audio file.  
        System.Media.SoundPlayer m_SoundPlayer =   
          new System.Media.SoundPlayer(@"C:\temp\test.wav");  
  
        // Build a prompt.  
        PromptBuilder builder = new PromptBuilder();  
        builder.AppendText("This is sample output to a WAVE file.");  
  
        // Speak the prompt.  
        synth.Speak(builder);  
        m_SoundPlayer.Play();  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SpeechAudioFormatInfo (System.Speech.AudioFormat.EncodingFormat encodingFormat, int samplesPerSecond, int bitsPerSample, int channelCount, int averageBytesPerSecond, int blockAlign, byte[] formatSpecificData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Speech.AudioFormat.EncodingFormat encodingFormat, int32 samplesPerSecond, int32 bitsPerSample, int32 channelCount, int32 averageBytesPerSecond, int32 blockAlign, unsigned int8[] formatSpecificData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.AudioFormat.SpeechAudioFormatInfo.#ctor(System.Speech.AudioFormat.EncodingFormat,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Byte[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SpeechAudioFormatInfo(System::Speech::AudioFormat::EncodingFormat encodingFormat, int samplesPerSecond, int bitsPerSample, int channelCount, int averageBytesPerSecond, int blockAlign, cli::array &lt;System::Byte&gt; ^ formatSpecificData);" />
      <MemberSignature Language="F#" Value="new System.Speech.AudioFormat.SpeechAudioFormatInfo : System.Speech.AudioFormat.EncodingFormat * int * int * int * int * int * byte[] -&gt; System.Speech.AudioFormat.SpeechAudioFormatInfo" Usage="new System.Speech.AudioFormat.SpeechAudioFormatInfo (encodingFormat, samplesPerSecond, bitsPerSample, channelCount, averageBytesPerSecond, blockAlign, formatSpecificData)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="encodingFormat" Type="System.Speech.AudioFormat.EncodingFormat" />
        <Parameter Name="samplesPerSecond" Type="System.Int32" />
        <Parameter Name="bitsPerSample" Type="System.Int32" />
        <Parameter Name="channelCount" Type="System.Int32" />
        <Parameter Name="averageBytesPerSecond" Type="System.Int32" />
        <Parameter Name="blockAlign" Type="System.Int32" />
        <Parameter Name="formatSpecificData" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="encodingFormat">Das Codierungsformat.</param>
        <param name="samplesPerSecond">Der Wert für die Beispiele pro Sekunde.</param>
        <param name="bitsPerSample">Der Wert für die Bits pro Beispiel.</param>
        <param name="channelCount">Der Wert für die Channelanzahl.</param>
        <param name="averageBytesPerSecond">Der Wert für die durchschnittliche Anzahl Bytes pro Sekunde.</param>
        <param name="blockAlign">Der Wert für den BlockAlign.</param>
        <param name="formatSpecificData">Ein Bytearray, das die zu formatspezifischen Daten enthält.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Speech.AudioFormat.SpeechAudioFormatInfo" />-Klasse und gibt das Codierungsformat, Beispiele pro Sekunde, Bits pro Beispiel, Zahl der Channel, durchschnittliche Bytes pro Sekunde, Blocksausrichtungswert und ein Array, das formatspezifische Daten enthält, an.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AverageBytesPerSecond">
      <MemberSignature Language="C#" Value="public int AverageBytesPerSecond { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AverageBytesPerSecond" />
      <MemberSignature Language="DocId" Value="P:System.Speech.AudioFormat.SpeechAudioFormatInfo.AverageBytesPerSecond" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AverageBytesPerSecond As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int AverageBytesPerSecond { int get(); };" />
      <MemberSignature Language="F#" Value="member this.AverageBytesPerSecond : int" Usage="System.Speech.AudioFormat.SpeechAudioFormatInfo.AverageBytesPerSecond" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die durchschnittliche Anzahl Bytes pro Sekunde für das Audio ab.</summary>
        <value>Der Wert für die durchschnittliche Anzahl Bytes pro Sekunde.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BitsPerSample">
      <MemberSignature Language="C#" Value="public int BitsPerSample { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BitsPerSample" />
      <MemberSignature Language="DocId" Value="P:System.Speech.AudioFormat.SpeechAudioFormatInfo.BitsPerSample" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BitsPerSample As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int BitsPerSample { int get(); };" />
      <MemberSignature Language="F#" Value="member this.BitsPerSample : int" Usage="System.Speech.AudioFormat.SpeechAudioFormatInfo.BitsPerSample" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Bits pro Audiosample ab.</summary>
        <value>Der Wert für die Bits pro Beispiel.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BlockAlign">
      <MemberSignature Language="C#" Value="public int BlockAlign { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BlockAlign" />
      <MemberSignature Language="DocId" Value="P:System.Speech.AudioFormat.SpeechAudioFormatInfo.BlockAlign" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BlockAlign As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int BlockAlign { int get(); };" />
      <MemberSignature Language="F#" Value="member this.BlockAlign : int" Usage="System.Speech.AudioFormat.SpeechAudioFormatInfo.BlockAlign" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Blocksausrichtung in Bytes ab oder legt diese fest.</summary>
        <value>Der Wert für die Blockausrichtung.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Software für Wiedergabe und Aufzeichnen von Audio behandelt Audiodaten in Blöcken. Die Größen dieser Blöcke sind ein Vielfaches des Werts der <xref:System.Speech.AudioFormat.SpeechAudioFormatInfo.BlockAlign%2A> Eigenschaft. Blocksausrichtungswert ist die Anzahl der Bytes in eine unteilbare Codeeinheit (d. h. einen Block) Audio für ein bestimmtes Format. Für Pulse Code Modulation (PCM)-Formate lautet die Formel für die Berechnung Ausrichtung mit Sperren:  
  
-   Blockieren Sie die Ausrichtung = Bytes pro Beispiel X Anzahl von Kanälen  
  
 Beispielsweise ist die blocksausrichtungswert für 16-Bit-PCM-Format Mono / Audio 2 (2 Byte pro X 1 beispielkanal). Für 16-Bit-PCM-Format Stereo Audio ist der blocksausrichtungswert 4.  
  
 Die Daten geschrieben und gelesen werden, von einem Gerät müssen immer am Anfang eines Blocks starten. Beispielsweise ist es nicht zulässig, die Wiedergabe des PCM-Daten in der Mitte einer Stichprobe (d. h. auf einer Grenze, die nicht-Block-ausgerichtet ist.) beginnen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChannelCount">
      <MemberSignature Language="C#" Value="public int ChannelCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ChannelCount" />
      <MemberSignature Language="DocId" Value="P:System.Speech.AudioFormat.SpeechAudioFormatInfo.ChannelCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChannelCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ChannelCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ChannelCount : int" Usage="System.Speech.AudioFormat.SpeechAudioFormatInfo.ChannelCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Kanalanzahl des Audios ab.</summary>
        <value>Der Wert für die Channelanzahl.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EncodingFormat">
      <MemberSignature Language="C#" Value="public System.Speech.AudioFormat.EncodingFormat EncodingFormat { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Speech.AudioFormat.EncodingFormat EncodingFormat" />
      <MemberSignature Language="DocId" Value="P:System.Speech.AudioFormat.SpeechAudioFormatInfo.EncodingFormat" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EncodingFormat As EncodingFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Speech::AudioFormat::EncodingFormat EncodingFormat { System::Speech::AudioFormat::EncodingFormat get(); };" />
      <MemberSignature Language="F#" Value="member this.EncodingFormat : System.Speech.AudioFormat.EncodingFormat" Usage="System.Speech.AudioFormat.SpeechAudioFormatInfo.EncodingFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Speech.AudioFormat.EncodingFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Audiocodierungsformat ab.</summary>
        <value>Das Audio-Codierungsformat.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.AudioFormat.SpeechAudioFormatInfo.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="speechAudioFormatInfo.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">Das zu vergleichende Objekt.</param>
        <summary>Gibt zurück, ob ein gegebenes Objekt eine Instanz von <see cref="T:System.Speech.AudioFormat.SpeechAudioFormatInfo" /> und gleich der aktuellen Instanz von <see cref="T:System.Speech.AudioFormat.SpeechAudioFormatInfo" /> ist.</summary>
        <returns>Gibt <see langword="true" /> zurück, wenn die aktuelle Instanz von <see cref="T:System.Speech.AudioFormat.SpeechAudioFormatInfo" /> und die vom <paramref name="obj" />-Argument erhaltene Instanz identisch sind, andernfalls wird <see langword="false" /> zurückgegeben.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gibt die Methode zurück `false` Wenn die <xref:System.Object> gebotenen die `obj` Argument kann nicht umgewandelt werden, um <xref:System.Speech.AudioFormat.SpeechAudioFormatInfo>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FormatSpecificData">
      <MemberSignature Language="C#" Value="public byte[] FormatSpecificData ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] FormatSpecificData() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.AudioFormat.SpeechAudioFormatInfo.FormatSpecificData" />
      <MemberSignature Language="VB.NET" Value="Public Function FormatSpecificData () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ FormatSpecificData();" />
      <MemberSignature Language="F#" Value="member this.FormatSpecificData : unit -&gt; byte[]" Usage="speechAudioFormatInfo.FormatSpecificData " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt die formatspezifischen Daten des Audioformats zurück.</summary>
        <returns>Ein Bytearray, das die zu formatspezifischen Daten enthält.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.AudioFormat.SpeechAudioFormatInfo.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="speechAudioFormatInfo.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt den Hashcode des Audioformats zurück.</summary>
        <returns>Der Hashcodewert.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SamplesPerSecond">
      <MemberSignature Language="C#" Value="public int SamplesPerSecond { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SamplesPerSecond" />
      <MemberSignature Language="DocId" Value="P:System.Speech.AudioFormat.SpeechAudioFormatInfo.SamplesPerSecond" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SamplesPerSecond As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SamplesPerSecond { int get(); };" />
      <MemberSignature Language="F#" Value="member this.SamplesPerSecond : int" Usage="System.Speech.AudioFormat.SpeechAudioFormatInfo.SamplesPerSecond" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Beispiele pro Sekunde des Audioformats ab.</summary>
        <value>Der Wert für die Beispiele pro Sekunde.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>