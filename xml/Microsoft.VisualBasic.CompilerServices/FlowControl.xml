<Type Name="FlowControl" FullName="Microsoft.VisualBasic.CompilerServices.FlowControl">
  <Metadata><Meta Name="ms.openlocfilehash" Value="239fcde38f39c27c563e90b106f069bdadb3af71" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55328272" /></Metadata><TypeSignature Language="C#" Value="public sealed class FlowControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed FlowControl extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.CompilerServices.FlowControl" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class FlowControl" />
  <TypeSignature Language="C++ CLI" Value="public ref class FlowControl sealed" />
  <TypeSignature Language="F#" Value="type FlowControl = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>7.0.5000.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>Microsoft.VisualBasic.CompilerServices.StandardModule</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="1e339-101">Stellt für den Visual Basic-Compiler Dienste zum Kompilieren von <see langword="For...Next" />-Schleifen und <see langword="For Each" />-Schleifen bereit.</span><span class="sxs-lookup"><span data-stu-id="1e339-101">Provides services to the Visual Basic compiler for compiling <see langword="For...Next" /> and <see langword="For Each" /> loops.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e339-102">Diese Klasse unterstützt Visual Basic-Compiler und nicht direkt aus Ihrem Code verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="1e339-102">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
    </remarks>
    <forInternalUseOnly />
    <related type="Article" href="~/docs/visual-basic/language-reference/statements/for-next-statement.md"><span data-ttu-id="1e339-103">For...Next-Anweisung (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="1e339-103">For...Next Statement (Visual Basic)</span></span></related>
    <related type="Article" href="~/docs/visual-basic/language-reference/statements/for-each-next-statement.md"><span data-ttu-id="1e339-104">For Each...Next-Anweisung (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="1e339-104">For Each...Next Statement (Visual Basic)</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="CheckForSyncLockOnValueType">
      <MemberSignature Language="C#" Value="public static void CheckForSyncLockOnValueType (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public static void CheckForSyncLockOnValueType(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.FlowControl.CheckForSyncLockOnValueType(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub CheckForSyncLockOnValueType (obj As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void CheckForSyncLockOnValueType(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="static member CheckForSyncLockOnValueType : obj -&gt; unit" Usage="Microsoft.VisualBasic.CompilerServices.FlowControl.CheckForSyncLockOnValueType obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="1e339-105">Der Datentyp, der auf eine Synchronisierungssperre geprüft wird.</span><span class="sxs-lookup"><span data-stu-id="1e339-105">The data type for which to check for synchronization lock.</span></span></param>
        <summary><span data-ttu-id="1e339-106">Prüft auf eine Synchronisierungssperre für den angegebenen Typ.</span><span class="sxs-lookup"><span data-stu-id="1e339-106">Checks for a synchronization lock on the specified type.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e339-107">Diese Klasse unterstützt Visual Basic-Compiler und nicht direkt aus Ihrem Code verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="1e339-107">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/for-next-statement.md"><span data-ttu-id="1e339-108">For...Next-Anweisung (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="1e339-108">For...Next Statement (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/for-each-next-statement.md"><span data-ttu-id="1e339-109">For Each...Next-Anweisung (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="1e339-109">For Each...Next Statement (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ForEachInArr">
      <MemberSignature Language="C#" Value="public static System.Collections.IEnumerator ForEachInArr (Array ary);" />
      <MemberSignature Language="ILAsm" Value=".method public static class System.Collections.IEnumerator ForEachInArr(class System.Array ary) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.FlowControl.ForEachInArr(System.Array)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ForEachInArr (ary As Array) As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::IEnumerator ^ ForEachInArr(Array ^ ary);" />
      <MemberSignature Language="F#" Value="static member ForEachInArr : Array -&gt; System.Collections.IEnumerator" Usage="Microsoft.VisualBasic.CompilerServices.FlowControl.ForEachInArr ary" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ary" Type="System.Array" />
      </Parameters>
      <Docs>
        <param name="ary"><span data-ttu-id="1e339-110">Ein Array, das in einer <see langword="For Each" />-Schleife durchlaufen wird.</span><span class="sxs-lookup"><span data-stu-id="1e339-110">An array being iterated over in a <see langword="For Each" /> loop.</span></span></param>
        <summary><span data-ttu-id="1e339-111">Ruft den Enumerator für ein Array ab, das in einer <see langword="For Each" />-Schleife durchlaufen wird.</span><span class="sxs-lookup"><span data-stu-id="1e339-111">Gets the enumerator for an array being iterated over in a <see langword="For Each" /> loop.</span></span></summary>
        <returns><span data-ttu-id="1e339-112">Der Enumerator für <paramref name="ary" />.</span><span class="sxs-lookup"><span data-stu-id="1e339-112">The enumerator for <paramref name="ary" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e339-113">Diese Klasse unterstützt Visual Basic-Compiler und nicht direkt aus Ihrem Code verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="1e339-113">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/for-each-next-statement.md"><span data-ttu-id="1e339-114">For Each...Next-Anweisung (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="1e339-114">For Each...Next Statement (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ForEachInObj">
      <MemberSignature Language="C#" Value="public static System.Collections.IEnumerator ForEachInObj (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public static class System.Collections.IEnumerator ForEachInObj(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.FlowControl.ForEachInObj(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ForEachInObj (obj As Object) As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::IEnumerator ^ ForEachInObj(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="static member ForEachInObj : obj -&gt; System.Collections.IEnumerator" Usage="Microsoft.VisualBasic.CompilerServices.FlowControl.ForEachInObj obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="1e339-115">Ein Objekt, das in einer <see langword="For Each" />-Schleife durchlaufen wird.</span><span class="sxs-lookup"><span data-stu-id="1e339-115">An object being iterated over in a <see langword="For Each" /> loop.</span></span></param>
        <summary><span data-ttu-id="1e339-116">Ruft den Enumerator für ein Objekt ab, das in einer <see langword="For Each" />-Schleife durchlaufen wird.</span><span class="sxs-lookup"><span data-stu-id="1e339-116">Gets the enumerator for an object being iterated over in a <see langword="For Each" /> loop.</span></span></summary>
        <returns><span data-ttu-id="1e339-117">Der Enumerator für <paramref name="obj" />.</span><span class="sxs-lookup"><span data-stu-id="1e339-117">The enumerator for <paramref name="obj" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e339-118">Diese Klasse unterstützt Visual Basic-Compiler und nicht direkt aus Ihrem Code verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="1e339-118">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/for-each-next-statement.md"><span data-ttu-id="1e339-119">For Each...Next-Anweisung (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="1e339-119">For Each...Next Statement (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ForEachNextObj">
      <MemberSignature Language="C#" Value="public static bool ForEachNextObj (ref object obj, System.Collections.IEnumerator enumerator);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool ForEachNextObj(object&amp; obj, class System.Collections.IEnumerator enumerator) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.FlowControl.ForEachNextObj(System.Object@,System.Collections.IEnumerator)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ForEachNextObj (ByRef obj As Object, enumerator As IEnumerator) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ForEachNextObj(System::Object ^ % obj, System::Collections::IEnumerator ^ enumerator);" />
      <MemberSignature Language="F#" Value="static member ForEachNextObj :  * System.Collections.IEnumerator -&gt; bool" Usage="Microsoft.VisualBasic.CompilerServices.FlowControl.ForEachNextObj (obj, enumerator)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" RefType="ref" />
        <Parameter Name="enumerator" Type="System.Collections.IEnumerator" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="1e339-120">Die Bereichsvariable der <see langword="For Each" />-Schleife.</span><span class="sxs-lookup"><span data-stu-id="1e339-120">The range variable of the <see langword="For Each" /> loop.</span></span></param>
        <param name="enumerator"><span data-ttu-id="1e339-121">Der <see cref="T:System.Collections.IEnumerator" /> des Objekts, das in der <see langword="For Each" />-Schleife durchlaufen wird.</span><span class="sxs-lookup"><span data-stu-id="1e339-121">The <see cref="T:System.Collections.IEnumerator" /> of the object being iterated over in the <see langword="For Each" /> loop.</span></span></param>
        <summary><span data-ttu-id="1e339-122">Legt einen Verweis auf das nächste Objekt in einer <see langword="For Each" />-Schleife fest.</span><span class="sxs-lookup"><span data-stu-id="1e339-122">Sets a reference to the next object in a <see langword="For Each" /> loop.</span></span></summary>
        <returns><span data-ttu-id="1e339-123"><see langword="True" />, wenn <paramref name="obj" /> auf das nächste Objekt verweist, <see langword="False" />, wenn keine weiteren Objekte vorhanden sind und <paramref name="obj" /> gleich <see langword="Nothing" /> ist.</span><span class="sxs-lookup"><span data-stu-id="1e339-123"><see langword="True" /> if <paramref name="obj" /> refers to the next object; <see langword="False" /> if there are no more objects and <paramref name="obj" /> is <see langword="Nothing" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e339-124">Diese Klasse unterstützt Visual Basic-Compiler und nicht direkt aus Ihrem Code verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="1e339-124">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/for-each-next-statement.md"><span data-ttu-id="1e339-125">For Each...Next-Anweisung (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="1e339-125">For Each...Next Statement (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ForLoopInitObj">
      <MemberSignature Language="C#" Value="public static bool ForLoopInitObj (object Counter, object Start, object Limit, object StepValue, ref object LoopForResult, ref object CounterResult);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool ForLoopInitObj(object Counter, object Start, object Limit, object StepValue, object&amp; LoopForResult, object&amp; CounterResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.FlowControl.ForLoopInitObj(System.Object,System.Object,System.Object,System.Object,System.Object@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ForLoopInitObj (Counter As Object, Start As Object, Limit As Object, StepValue As Object, ByRef LoopForResult As Object, ByRef CounterResult As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ForLoopInitObj(System::Object ^ Counter, System::Object ^ Start, System::Object ^ Limit, System::Object ^ StepValue, System::Object ^ % LoopForResult, System::Object ^ % CounterResult);" />
      <MemberSignature Language="F#" Value="static member ForLoopInitObj : obj * obj * obj * obj *  *  -&gt; bool" Usage="Microsoft.VisualBasic.CompilerServices.FlowControl.ForLoopInitObj (Counter, Start, Limit, StepValue, LoopForResult, CounterResult)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Counter" Type="System.Object" />
        <Parameter Name="Start" Type="System.Object" />
        <Parameter Name="Limit" Type="System.Object" />
        <Parameter Name="StepValue" Type="System.Object" />
        <Parameter Name="LoopForResult" Type="System.Object" RefType="ref" />
        <Parameter Name="CounterResult" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="Counter"><span data-ttu-id="1e339-126">Die Zählervariable für die Schleife.</span><span class="sxs-lookup"><span data-stu-id="1e339-126">The loop counter variable.</span></span></param>
        <param name="Start"><span data-ttu-id="1e339-127">Der Anfangswert des Schleifenzählers.</span><span class="sxs-lookup"><span data-stu-id="1e339-127">The initial value of the loop counter.</span></span></param>
        <param name="Limit"><span data-ttu-id="1e339-128">Der Wert der <see langword="To" />-Option.</span><span class="sxs-lookup"><span data-stu-id="1e339-128">The value of the <see langword="To" /> option.</span></span></param>
        <param name="StepValue"><span data-ttu-id="1e339-129">Der Wert der <see langword="Step" />-Option.</span><span class="sxs-lookup"><span data-stu-id="1e339-129">The value of the <see langword="Step" /> option.</span></span></param>
        <param name="LoopForResult"><span data-ttu-id="1e339-130">Ein Objekt, das überprüfte Werte für Schleifenwerte enthält.</span><span class="sxs-lookup"><span data-stu-id="1e339-130">An object that contains verified values for loop values.</span></span></param>
        <param name="CounterResult"><span data-ttu-id="1e339-131">Der Zählerwert für die nächste Schleifeniteration.</span><span class="sxs-lookup"><span data-stu-id="1e339-131">The counter value for the next loop iteration.</span></span></param>
        <summary><span data-ttu-id="1e339-132">Initialisiert eine <see langword="For...Next" />-Schleife.</span><span class="sxs-lookup"><span data-stu-id="1e339-132">Initializes a <see langword="For...Next" /> loop.</span></span></summary>
        <returns><span data-ttu-id="1e339-133"><see langword="False" />, wenn der Schleifendurchlauf beendet wurde, andernfalls <see langword="True" />.</span><span class="sxs-lookup"><span data-stu-id="1e339-133"><see langword="False" /> if the loop has terminated; otherwise, <see langword="True" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e339-134">Diese Klasse unterstützt Visual Basic-Compiler und nicht direkt aus Ihrem Code verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="1e339-134">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/for-next-statement.md"><span data-ttu-id="1e339-135">For...Next-Anweisung (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="1e339-135">For...Next Statement (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ForNextCheckDec">
      <MemberSignature Language="C#" Value="public static bool ForNextCheckDec (decimal count, decimal limit, decimal StepValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool ForNextCheckDec(valuetype System.Decimal count, valuetype System.Decimal limit, valuetype System.Decimal StepValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.FlowControl.ForNextCheckDec(System.Decimal,System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ForNextCheckDec (count As Decimal, limit As Decimal, StepValue As Decimal) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ForNextCheckDec(System::Decimal count, System::Decimal limit, System::Decimal StepValue);" />
      <MemberSignature Language="F#" Value="static member ForNextCheckDec : decimal * decimal * decimal -&gt; bool" Usage="Microsoft.VisualBasic.CompilerServices.FlowControl.ForNextCheckDec (count, limit, StepValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="count" Type="System.Decimal" />
        <Parameter Name="limit" Type="System.Decimal" />
        <Parameter Name="StepValue" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="count"><span data-ttu-id="1e339-136">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="1e339-136">Required.</span></span> <span data-ttu-id="1e339-137">Ein <see langword="Decimal" />-Wert, der den Anfangswert darstellt, der für die Zählervariable der Schleife übergeben wird.</span><span class="sxs-lookup"><span data-stu-id="1e339-137">A <see langword="Decimal" /> value that represents the initial value passed for the loop counter variable.</span></span></param>
        <param name="limit"><span data-ttu-id="1e339-138">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="1e339-138">Required.</span></span> <span data-ttu-id="1e339-139">Ein <see langword="Decimal" />-Wert, der den Wert darstellt, der mit dem <see langword="To" />-Schlüsselwort übergeben wird.</span><span class="sxs-lookup"><span data-stu-id="1e339-139">A <see langword="Decimal" /> value that represents the value passed by using the <see langword="To" /> keyword.</span></span></param>
        <param name="StepValue"><span data-ttu-id="1e339-140">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="1e339-140">Required.</span></span> <span data-ttu-id="1e339-141">Ein <see langword="Decimal" />-Wert, der den Wert darstellt, der mit dem <see langword="Step" />-Schlüsselwort übergeben wird.</span><span class="sxs-lookup"><span data-stu-id="1e339-141">A <see langword="Decimal" /> value that represents the value passed by using the <see langword="Step" /> keyword.</span></span></param>
        <summary><span data-ttu-id="1e339-142">Führt eine Überprüfung auf gültige Werte für den Schleifenzähler sowie den <see langword="Step" />-Wert und den <see langword="To" />-Wert aus.</span><span class="sxs-lookup"><span data-stu-id="1e339-142">Checks for valid values for the loop counter, <see langword="Step" />, and <see langword="To" /> values.</span></span></summary>
        <returns><span data-ttu-id="1e339-143"><see langword="True" />, wenn <paramref name="StepValue" /> größer als 0 (null) und <paramref name="count" /> kleiner als oder gleich <paramref name="limit" /> ist oder wenn <paramref name="StepValue" /> kleiner als oder gleich 0 (null) und <paramref name="count" /> größer als oder gleich <paramref name="limit" /> ist, andernfalls <see langword="False" />.</span><span class="sxs-lookup"><span data-stu-id="1e339-143"><see langword="True" /> if <paramref name="StepValue" /> is greater than zero and <paramref name="count" /> is less than or equal to <paramref name="limit" />, or if <paramref name="StepValue" /> is less than or equal to zero and <paramref name="count" /> is greater than or equal to <paramref name="limit" />; otherwise, <see langword="False" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e339-144">Diese Klasse unterstützt Visual Basic-Compiler und nicht direkt aus Ihrem Code verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="1e339-144">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/for-next-statement.md"><span data-ttu-id="1e339-145">For...Next-Anweisung (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="1e339-145">For...Next Statement (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ForNextCheckObj">
      <MemberSignature Language="C#" Value="public static bool ForNextCheckObj (object Counter, object LoopObj, ref object CounterResult);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool ForNextCheckObj(object Counter, object LoopObj, object&amp; CounterResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.FlowControl.ForNextCheckObj(System.Object,System.Object,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ForNextCheckObj (Counter As Object, LoopObj As Object, ByRef CounterResult As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ForNextCheckObj(System::Object ^ Counter, System::Object ^ LoopObj, System::Object ^ % CounterResult);" />
      <MemberSignature Language="F#" Value="static member ForNextCheckObj : obj * obj *  -&gt; bool" Usage="Microsoft.VisualBasic.CompilerServices.FlowControl.ForNextCheckObj (Counter, LoopObj, CounterResult)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Counter" Type="System.Object" />
        <Parameter Name="LoopObj" Type="System.Object" />
        <Parameter Name="CounterResult" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="Counter"><span data-ttu-id="1e339-146">Die Zählervariable für die Schleife.</span><span class="sxs-lookup"><span data-stu-id="1e339-146">The loop counter variable.</span></span></param>
        <param name="LoopObj"><span data-ttu-id="1e339-147">Ein Objekt, das überprüfte Werte für Schleifenwerte enthält.</span><span class="sxs-lookup"><span data-stu-id="1e339-147">An object that contains verified values for loop values.</span></span></param>
        <param name="CounterResult"><span data-ttu-id="1e339-148">Der Zählerwert für die nächste Schleifeniteration.</span><span class="sxs-lookup"><span data-stu-id="1e339-148">The counter value for the next loop iteration.</span></span></param>
        <summary><span data-ttu-id="1e339-149">Inkrementiert eine <see langword="For...Next" />-Schleife.</span><span class="sxs-lookup"><span data-stu-id="1e339-149">Increments a <see langword="For...Next" /> loop.</span></span></summary>
        <returns><span data-ttu-id="1e339-150"><see langword="False" />, wenn der Schleifendurchlauf beendet wurde, andernfalls <see langword="True" />.</span><span class="sxs-lookup"><span data-stu-id="1e339-150"><see langword="False" /> if the loop has terminated; otherwise, <see langword="True" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e339-151">Diese Klasse unterstützt Visual Basic-Compiler und nicht direkt aus Ihrem Code verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="1e339-151">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/for-next-statement.md"><span data-ttu-id="1e339-152">For...Next-Anweisung (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="1e339-152">For...Next Statement (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ForNextCheckR4">
      <MemberSignature Language="C#" Value="public static bool ForNextCheckR4 (float count, float limit, float StepValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool ForNextCheckR4(float32 count, float32 limit, float32 StepValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.FlowControl.ForNextCheckR4(System.Single,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ForNextCheckR4 (count As Single, limit As Single, StepValue As Single) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ForNextCheckR4(float count, float limit, float StepValue);" />
      <MemberSignature Language="F#" Value="static member ForNextCheckR4 : single * single * single -&gt; bool" Usage="Microsoft.VisualBasic.CompilerServices.FlowControl.ForNextCheckR4 (count, limit, StepValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="count" Type="System.Single" />
        <Parameter Name="limit" Type="System.Single" />
        <Parameter Name="StepValue" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="count"><span data-ttu-id="1e339-153">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="1e339-153">Required.</span></span> <span data-ttu-id="1e339-154">Ein <see langword="Single" />-Wert, der den Anfangswert darstellt, der für die Zählervariable der Schleife übergeben wird.</span><span class="sxs-lookup"><span data-stu-id="1e339-154">A <see langword="Single" /> value that represents the initial value passed for the loop counter variable.</span></span></param>
        <param name="limit"><span data-ttu-id="1e339-155">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="1e339-155">Required.</span></span> <span data-ttu-id="1e339-156">Ein <see langword="Single" />-Wert, der den Wert darstellt, der mit dem <see langword="To" />-Schlüsselwort übergeben wird.</span><span class="sxs-lookup"><span data-stu-id="1e339-156">A <see langword="Single" /> value that represents the value passed by using the <see langword="To" /> keyword.</span></span></param>
        <param name="StepValue"><span data-ttu-id="1e339-157">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="1e339-157">Required.</span></span> <span data-ttu-id="1e339-158">Ein <see langword="Single" />-Wert, der den Wert darstellt, der mit dem <see langword="Step" />-Schlüsselwort übergeben wird.</span><span class="sxs-lookup"><span data-stu-id="1e339-158">A <see langword="Single" /> value that represents the value passed by using the <see langword="Step" /> keyword.</span></span></param>
        <summary><span data-ttu-id="1e339-159">Führt eine Überprüfung auf gültige Werte für den Schleifenzähler sowie den <see langword="Step" />-Wert und den <see langword="To" />-Wert aus.</span><span class="sxs-lookup"><span data-stu-id="1e339-159">Checks for valid values for the loop counter, <see langword="Step" />, and <see langword="To" /> values.</span></span></summary>
        <returns><span data-ttu-id="1e339-160"><see langword="True" />, wenn <paramref name="StepValue" /> größer als 0 (null) und <paramref name="count" /> kleiner als oder gleich <paramref name="limit" /> ist oder wenn <paramref name="StepValue" /> kleiner als oder gleich 0 (null) und <paramref name="count" /> größer als oder gleich <paramref name="limit" /> ist, andernfalls <see langword="False" />.</span><span class="sxs-lookup"><span data-stu-id="1e339-160"><see langword="True" /> if <paramref name="StepValue" /> is greater than zero and <paramref name="count" /> is less than or equal to <paramref name="limit" />, or if <paramref name="StepValue" /> is less than or equal to zero and <paramref name="count" /> is greater than or equal to <paramref name="limit" />; otherwise, <see langword="False" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e339-161">Diese Klasse unterstützt Visual Basic-Compiler und nicht direkt aus Ihrem Code verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="1e339-161">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/for-next-statement.md"><span data-ttu-id="1e339-162">For...Next-Anweisung (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="1e339-162">For...Next Statement (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ForNextCheckR8">
      <MemberSignature Language="C#" Value="public static bool ForNextCheckR8 (double count, double limit, double StepValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool ForNextCheckR8(float64 count, float64 limit, float64 StepValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.FlowControl.ForNextCheckR8(System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ForNextCheckR8 (count As Double, limit As Double, StepValue As Double) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ForNextCheckR8(double count, double limit, double StepValue);" />
      <MemberSignature Language="F#" Value="static member ForNextCheckR8 : double * double * double -&gt; bool" Usage="Microsoft.VisualBasic.CompilerServices.FlowControl.ForNextCheckR8 (count, limit, StepValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="count" Type="System.Double" />
        <Parameter Name="limit" Type="System.Double" />
        <Parameter Name="StepValue" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="count"><span data-ttu-id="1e339-163">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="1e339-163">Required.</span></span> <span data-ttu-id="1e339-164">Ein <see langword="Double" />-Wert, der den Anfangswert darstellt, der für die Zählervariable der Schleife übergeben wird.</span><span class="sxs-lookup"><span data-stu-id="1e339-164">A <see langword="Double" /> value that represents the initial value passed for the loop counter variable.</span></span></param>
        <param name="limit"><span data-ttu-id="1e339-165">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="1e339-165">Required.</span></span> <span data-ttu-id="1e339-166">Ein <see langword="Double" />-Wert, der den Wert darstellt, der mit dem <see langword="To" />-Schlüsselwort übergeben wird.</span><span class="sxs-lookup"><span data-stu-id="1e339-166">A <see langword="Double" /> value that represents the value passed by using the <see langword="To" /> keyword.</span></span></param>
        <param name="StepValue"><span data-ttu-id="1e339-167">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="1e339-167">Required.</span></span> <span data-ttu-id="1e339-168">Ein <see langword="Double" />-Wert, der den Wert darstellt, der mit dem <see langword="Step" />-Schlüsselwort übergeben wird.</span><span class="sxs-lookup"><span data-stu-id="1e339-168">A <see langword="Double" /> value that represents the value passed by using the <see langword="Step" /> keyword.</span></span></param>
        <summary><span data-ttu-id="1e339-169">Führt eine Überprüfung auf gültige Werte für den Schleifenzähler sowie den <see langword="Step" />-Wert und den <see langword="To" />-Wert aus.</span><span class="sxs-lookup"><span data-stu-id="1e339-169">Checks for valid values for the loop counter, <see langword="Step" />, and <see langword="To" /> values.</span></span></summary>
        <returns><span data-ttu-id="1e339-170"><see langword="True" />, wenn <paramref name="StepValue" /> größer als 0 (null) und <paramref name="count" /> kleiner als oder gleich <paramref name="limit" /> ist oder wenn <paramref name="StepValue" /> kleiner als oder gleich 0 (null) und <paramref name="count" /> größer als oder gleich <paramref name="limit" /> ist, andernfalls <see langword="False" />.</span><span class="sxs-lookup"><span data-stu-id="1e339-170"><see langword="True" /> if <paramref name="StepValue" /> is greater than zero and <paramref name="count" /> is less than or equal to <paramref name="limit" />, or if <paramref name="StepValue" /> is less than or equal to zero and <paramref name="count" /> is greater than or equal to <paramref name="limit" />; otherwise, <see langword="False" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e339-171">Diese Klasse unterstützt Visual Basic-Compiler und nicht direkt aus Ihrem Code verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="1e339-171">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/for-next-statement.md"><span data-ttu-id="1e339-172">For...Next-Anweisung (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="1e339-172">For...Next Statement (Visual Basic)</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>