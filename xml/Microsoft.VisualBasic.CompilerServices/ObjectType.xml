<Type Name="ObjectType" FullName="Microsoft.VisualBasic.CompilerServices.ObjectType">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d879812a9320565904e1f4a122135e2b6af066cd" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ObjectType" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ObjectType extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.CompilerServices.ObjectType" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ObjectType" />
  <TypeSignature Language="C++ CLI" Value="public ref class ObjectType sealed" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="83147-101">Diese Klasse ist seit Visual Basic 2005 veraltet.</span>
      <span class="sxs-lookup">
        <span data-stu-id="83147-101">This class has been deprecated as of Visual Basic 2005.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83147-102">Diese Klasse unterstützt das Visual Basic-Compiler und nicht direkt aus Ihrem Code verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="83147-102">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
    </remarks>
    <forInternalUseOnly />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjectType ();" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ObjectType();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="83147-103">Initialisiert eine neue Instanz der <see cref="T:Microsoft.VisualBasic.CompilerServices.ObjectType" />-Klasse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83147-103">Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.CompilerServices.ObjectType" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83147-104">Diese Klasse unterstützt das Visual Basic-Compiler und nicht direkt aus Ihrem Code verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="83147-104">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="AddObj">
      <MemberSignature Language="C#" Value="public static object AddObj (object o1, object o2);" />
      <MemberSignature Language="ILAsm" Value=".method public static object AddObj(object o1, object o2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.AddObj(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AddObj (o1 As Object, o2 As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ AddObj(System::Object ^ o1, System::Object ^ o2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o1" Type="System.Object" />
        <Parameter Name="o2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o1">
          <span data-ttu-id="83147-105">Erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83147-105">Required.</span>
          </span>
          <span data-ttu-id="83147-106">Ein beliebiger numerischer Ausdruck.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83147-106">Any numeric expression.</span>
          </span>
        </param>
        <param name="o2">
          <span data-ttu-id="83147-107">Erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83147-107">Required.</span>
          </span>
          <span data-ttu-id="83147-108">Ein beliebiger numerischer Ausdruck.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83147-108">Any numeric expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="83147-109">Führt einen Additionsvorgang (+) aus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83147-109">Performs an addition (+) operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="83147-110">Die Summe von <paramref name="o1" /> und <paramref name="o2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83147-110">The sum of <paramref name="o1" /> and <paramref name="o2" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83147-111">Diese Klasse unterstützt das Visual Basic-Compiler und nicht direkt aus Ihrem Code verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="83147-111">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="BitAndObj">
      <MemberSignature Language="C#" Value="public static object BitAndObj (object obj1, object obj2);" />
      <MemberSignature Language="ILAsm" Value=".method public static object BitAndObj(object obj1, object obj2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.BitAndObj(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BitAndObj (obj1 As Object, obj2 As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ BitAndObj(System::Object ^ obj1, System::Object ^ obj2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj1" Type="System.Object" />
        <Parameter Name="obj2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj1">
          <span data-ttu-id="83147-112">Erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83147-112">Required.</span>
          </span>
          <span data-ttu-id="83147-113">Ein beliebiger <see langword="Boolean" />-Ausdruck oder numerischer Ausdruck.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83147-113">Any <see langword="Boolean" /> or numeric expression.</span>
          </span>
        </param>
        <param name="obj2">
          <span data-ttu-id="83147-114">Erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83147-114">Required.</span>
          </span>
          <span data-ttu-id="83147-115">Ein beliebiger <see langword="Boolean" />-Ausdruck oder numerischer Ausdruck.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83147-115">Any <see langword="Boolean" /> or numeric expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="83147-116">Führt eine bitweise <see langword="And" />-Operation aus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83147-116">Performs a bitwise <see langword="And" /> operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="83147-117">1, wenn sowohl <paramref name="obj1" /> als auch <paramref name="obj2" /> 1 ergeben, andernfalls 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83147-117">1 if both <paramref name="obj1" /> and <paramref name="obj2" /> evaluate to 1; otherwise, 0.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83147-118">Diese Klasse unterstützt das Visual Basic-Compiler und nicht direkt aus Ihrem Code verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="83147-118">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="BitOrObj">
      <MemberSignature Language="C#" Value="public static object BitOrObj (object obj1, object obj2);" />
      <MemberSignature Language="ILAsm" Value=".method public static object BitOrObj(object obj1, object obj2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.BitOrObj(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BitOrObj (obj1 As Object, obj2 As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ BitOrObj(System::Object ^ obj1, System::Object ^ obj2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj1" Type="System.Object" />
        <Parameter Name="obj2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj1">
          <span data-ttu-id="83147-119">Erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83147-119">Required.</span>
          </span>
          <span data-ttu-id="83147-120">Ein beliebiger <see langword="Boolean" />-Ausdruck oder numerischer Ausdruck.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83147-120">Any <see langword="Boolean" /> or numeric expression.</span>
          </span>
        </param>
        <param name="obj2">
          <span data-ttu-id="83147-121">Erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83147-121">Required.</span>
          </span>
          <span data-ttu-id="83147-122">Ein beliebiger <see langword="Boolean" />-Ausdruck oder numerischer Ausdruck.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83147-122">Any <see langword="Boolean" /> or numeric expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="83147-123">Führt eine bitweise <see langword="Or" />-Operation aus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83147-123">Performs a bitwise <see langword="Or" /> operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="83147-124">0, wenn sowohl <paramref name="obj1" /> als auch <paramref name="obj2" /> 0 ergeben, andernfalls 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83147-124">0 if both <paramref name="obj1" /> and <paramref name="obj2" /> evaluate to 0; otherwise, 1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83147-125">Diese Klasse unterstützt das Visual Basic-Compiler und nicht direkt aus Ihrem Code verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="83147-125">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="BitXorObj">
      <MemberSignature Language="C#" Value="public static object BitXorObj (object obj1, object obj2);" />
      <MemberSignature Language="ILAsm" Value=".method public static object BitXorObj(object obj1, object obj2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.BitXorObj(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BitXorObj (obj1 As Object, obj2 As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ BitXorObj(System::Object ^ obj1, System::Object ^ obj2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj1" Type="System.Object" />
        <Parameter Name="obj2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj1">
          <span data-ttu-id="83147-126">Erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83147-126">Required.</span>
          </span>
          <span data-ttu-id="83147-127">Ein beliebiger <see langword="Boolean" />-Ausdruck oder numerischer Ausdruck.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83147-127">Any <see langword="Boolean" /> or numeric expression.</span>
          </span>
        </param>
        <param name="obj2">
          <span data-ttu-id="83147-128">Erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83147-128">Required.</span>
          </span>
          <span data-ttu-id="83147-129">Ein beliebiger <see langword="Boolean" />-Ausdruck oder numerischer Ausdruck.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83147-129">Any <see langword="Boolean" /> or numeric expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="83147-130">Führt eine <see langword="Xor" />-Operation aus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83147-130">Performs an <see langword="Xor" /> operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="83147-131">Ein numerischer Wert, der den bitweisen Ausschluss (exklusive bitweise Disjunktion) aus zwei numerischen Bitmustern darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83147-131">A numeric value that represents the bitwise exclusion (exclusive bitwise disjunction) of two numeric bit patterns.</span>
          </span>
          <span data-ttu-id="83147-132">Weitere Informationen finden Sie unter [Xor Operator](~/docs/visual-basic/language-reference/operators/xor-operator.md).</span>
          <span class="sxs-lookup">
            <span data-stu-id="83147-132">For more information, see [Xor Operator](~/docs/visual-basic/language-reference/operators/xor-operator.md).</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83147-133">Diese Klasse unterstützt das Visual Basic-Compiler und nicht direkt aus Ihrem Code verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="83147-133">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="DivObj">
      <MemberSignature Language="C#" Value="public static object DivObj (object o1, object o2);" />
      <MemberSignature Language="ILAsm" Value=".method public static object DivObj(object o1, object o2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.DivObj(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DivObj (o1 As Object, o2 As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ DivObj(System::Object ^ o1, System::Object ^ o2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o1" Type="System.Object" />
        <Parameter Name="o2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o1">
          <span data-ttu-id="83147-134">Erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83147-134">Required.</span>
          </span>
          <span data-ttu-id="83147-135">Ein beliebiger numerischer Ausdruck.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83147-135">Any numeric expression.</span>
          </span>
        </param>
        <param name="o2">
          <span data-ttu-id="83147-136">Erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83147-136">Required.</span>
          </span>
          <span data-ttu-id="83147-137">Ein beliebiger numerischer Ausdruck.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83147-137">Any numeric expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="83147-138">Führt einen Divisionsvorgang (/) aus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83147-138">Performs a division (/) operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="83147-139">Der volle Quotient, der sich aus der Division von <paramref name="o1" /> durch <paramref name="o2" /> ergibt, einschließlich des Rests.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83147-139">The full quotient of <paramref name="o1" /> divided by <paramref name="o2" />, including any remainder.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83147-140">Diese Klasse unterstützt das Visual Basic-Compiler und nicht direkt aus Ihrem Code verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="83147-140">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="GetObjectValuePrimitive">
      <MemberSignature Language="C#" Value="public static object GetObjectValuePrimitive (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public static object GetObjectValuePrimitive(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.GetObjectValuePrimitive(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetObjectValuePrimitive (o As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetObjectValuePrimitive(System::Object ^ o);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">
          <span data-ttu-id="83147-141">Erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83147-141">Required.</span>
          </span>
          <span data-ttu-id="83147-142">Beliebiger Ausdruck.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83147-142">Any expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="83147-143">Gibt einen geschachtelten primitiven Wert zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83147-143">Returns a boxed primitive value.</span>
          </span>
          <span data-ttu-id="83147-144">Mithilfe dieser Methode wird verhindert, dass Strukturen mehrmals kopiert werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83147-144">This method is used to prevent copying structures multiple times.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="83147-145">Der primitive Wert des als Objekt festgelegten <paramref name="o" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83147-145">The primitive value of <paramref name="o" /> typed as object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83147-146">Diese Klasse unterstützt das Visual Basic-Compiler und nicht direkt aus Ihrem Code verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="83147-146">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="IDivObj">
      <MemberSignature Language="C#" Value="public static object IDivObj (object o1, object o2);" />
      <MemberSignature Language="ILAsm" Value=".method public static object IDivObj(object o1, object o2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.IDivObj(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IDivObj (o1 As Object, o2 As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ IDivObj(System::Object ^ o1, System::Object ^ o2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o1" Type="System.Object" />
        <Parameter Name="o2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o1">
          <span data-ttu-id="83147-147">Erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83147-147">Required.</span>
          </span>
          <span data-ttu-id="83147-148">Ein beliebiger numerischer Ausdruck.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83147-148">Any numeric expression.</span>
          </span>
        </param>
        <param name="o2">
          <span data-ttu-id="83147-149">Erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83147-149">Required.</span>
          </span>
          <span data-ttu-id="83147-150">Ein beliebiger numerischer Ausdruck.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83147-150">Any numeric expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="83147-151">Führt einen Divisionsvorgang (\\) mit ganzen Zahlen aus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83147-151">Performs an integer division (\\) operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="83147-152">Der ganzzahlige Quotient, der sich aus der Division von <paramref name="o1" /> durch <paramref name="o2" /> ergibt. Es wird nur der ganzzahlige Teil beibehalten, und ein eventueller Rest wird verworfen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83147-152">The integer quotient of <paramref name="o1" /> divided by <paramref name="o2" />, which discards any remainder and retains only the integer portion.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83147-153">Diese Klasse unterstützt das Visual Basic-Compiler und nicht direkt aus Ihrem Code verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="83147-153">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="LikeObj">
      <MemberSignature Language="C#" Value="public static bool LikeObj (object vLeft, object vRight, Microsoft.VisualBasic.CompareMethod CompareOption);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool LikeObj(object vLeft, object vRight, valuetype Microsoft.VisualBasic.CompareMethod CompareOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.LikeObj(System.Object,System.Object,Microsoft.VisualBasic.CompareMethod)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LikeObj (vLeft As Object, vRight As Object, CompareOption As CompareMethod) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool LikeObj(System::Object ^ vLeft, System::Object ^ vRight, Microsoft::VisualBasic::CompareMethod CompareOption);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vLeft" Type="System.Object" />
        <Parameter Name="vRight" Type="System.Object" />
        <Parameter Name="CompareOption" Type="Microsoft.VisualBasic.CompareMethod" />
      </Parameters>
      <Docs>
        <param name="vLeft">
          <span data-ttu-id="83147-154">Erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83147-154">Required.</span>
          </span>
          <span data-ttu-id="83147-155">Beliebiger Ausdruck.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83147-155">Any expression.</span>
          </span>
        </param>
        <param name="vRight">
          <span data-ttu-id="83147-156">Erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83147-156">Required.</span>
          </span>
          <span data-ttu-id="83147-157">Ein beliebiger Zeichenfolgenausdruck, der den in Like-Operator beschriebenen Mustervergleichskonventionen entspricht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83147-157">Any string expression conforming to the pattern-matching conventions described in Like Operator.</span>
          </span>
        </param>
        <param name="CompareOption">
          <span data-ttu-id="83147-158">Erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83147-158">Required.</span>
          </span>
          <span data-ttu-id="83147-159">Ein <see cref="T:Microsoft.VisualBasic.CompareMethod" />-Wert, der angibt, dass bei der Operation ein Textvergleich oder ein binärer Vergleich durchgeführt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83147-159">A <see cref="T:Microsoft.VisualBasic.CompareMethod" /> value that specifies that the operation use either text or binary comparison.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="83147-160">Führt einen <see langword="Like" />-Vergleich aus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83147-160">Performs a <see langword="Like" /> comparison.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="83147-161">
            <see langword="True" />, wenn die Zeichenfolgendarstellung des Werts in <paramref name="vLeft" /> dem in <paramref name="vRight" /> enthaltenen Muster entspricht, andernfalls <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83147-161">
              <see langword="True" /> if the string representation of the value in <paramref name="vLeft" /> satisfies the pattern that is contained in <paramref name="vRight" />; otherwise, <see langword="False" />.</span>
          </span>
          <span data-ttu-id="83147-162">
            <see langword="True" />, wenn sowohl <paramref name="vLeft" /> als auch <paramref name="vRight" /> gleich <see langword="Nothing" /> sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83147-162">
              <see langword="True" /> if both <paramref name="vLeft" /> and <paramref name="vRight" /> are <see langword="Nothing" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83147-163">Diese Klasse unterstützt das Visual Basic-Compiler und nicht direkt aus Ihrem Code verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="83147-163">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ModObj">
      <MemberSignature Language="C#" Value="public static object ModObj (object o1, object o2);" />
      <MemberSignature Language="ILAsm" Value=".method public static object ModObj(object o1, object o2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.ModObj(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ModObj (o1 As Object, o2 As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ModObj(System::Object ^ o1, System::Object ^ o2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o1" Type="System.Object" />
        <Parameter Name="o2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o1">
          <span data-ttu-id="83147-164">Erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83147-164">Required.</span>
          </span>
          <span data-ttu-id="83147-165">Ein beliebiger numerischer Ausdruck.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83147-165">Any numeric expression.</span>
          </span>
        </param>
        <param name="o2">
          <span data-ttu-id="83147-166">Erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83147-166">Required.</span>
          </span>
          <span data-ttu-id="83147-167">Ein beliebiger numerischer Ausdruck.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83147-167">Any numeric expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="83147-168">Führt einen Modulo-Vorgang (<see langword="Mod" />) aus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83147-168">Performs a modulus (<see langword="Mod" />) operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="83147-169">Der Rest aus der Division von <paramref name="o1" /> durch <paramref name="o2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83147-169">The remainder after <paramref name="o1" /> is divided by <paramref name="o2" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83147-170">Diese Klasse unterstützt das Visual Basic-Compiler und nicht direkt aus Ihrem Code verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="83147-170">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="MulObj">
      <MemberSignature Language="C#" Value="public static object MulObj (object o1, object o2);" />
      <MemberSignature Language="ILAsm" Value=".method public static object MulObj(object o1, object o2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.MulObj(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MulObj (o1 As Object, o2 As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ MulObj(System::Object ^ o1, System::Object ^ o2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o1" Type="System.Object" />
        <Parameter Name="o2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o1">
          <span data-ttu-id="83147-171">Erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83147-171">Required.</span>
          </span>
          <span data-ttu-id="83147-172">Ein beliebiger numerischer Ausdruck.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83147-172">Any numeric expression.</span>
          </span>
        </param>
        <param name="o2">
          <span data-ttu-id="83147-173">Erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83147-173">Required.</span>
          </span>
          <span data-ttu-id="83147-174">Ein beliebiger numerischer Ausdruck.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83147-174">Any numeric expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="83147-175">Führt einen Multiplikationsvorgang (\*) aus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83147-175">Performs a multiplication (\*) operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="83147-176">Das Produkt von <paramref name="o1" /> und <paramref name="o2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83147-176">The product of <paramref name="o1" /> and <paramref name="o2" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83147-177">Diese Klasse unterstützt das Visual Basic-Compiler und nicht direkt aus Ihrem Code verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="83147-177">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="NegObj">
      <MemberSignature Language="C#" Value="public static object NegObj (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public static object NegObj(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.NegObj(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NegObj (obj As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ NegObj(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="83147-178">Erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83147-178">Required.</span>
          </span>
          <span data-ttu-id="83147-179">Ein beliebiger numerischer Ausdruck.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83147-179">Any numeric expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="83147-180">Führt einen unären Subtraktionsvorgang (–) aus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83147-180">Performs a unary minus (–) operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="83147-181">Der negative Wert von <paramref name="obj" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83147-181">The negative value of <paramref name="obj" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83147-182">Diese Klasse unterstützt das Visual Basic-Compiler und nicht direkt aus Ihrem Code verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="83147-182">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="NotObj">
      <MemberSignature Language="C#" Value="public static object NotObj (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public static object NotObj(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.NotObj(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NotObj (obj As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ NotObj(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="83147-183">Erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83147-183">Required.</span>
          </span>
          <span data-ttu-id="83147-184">Ein beliebiger <see langword="Boolean" />-Ausdruck oder numerischer Ausdruck.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83147-184">Any <see langword="Boolean" /> or numeric expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="83147-185">Führt eine <see langword="Not" />-Operation aus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83147-185">Performs a <see langword="Not" /> operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="83147-186">Für <see langword="Boolean" />-Operationen: <see langword="False" />, wenn <paramref name="obj" /> gleich <see langword="True" /> ist, andernfalls <see langword="True" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83147-186">For <see langword="Boolean" /> operations, <see langword="False" /> if <paramref name="obj" /> is <see langword="True" />; otherwise, <see langword="True" />.</span>
          </span>
          <span data-ttu-id="83147-187">Für bitweise Operationen: 1, wenn <paramref name="obj" /> gleich 0 ist, andernfalls 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83147-187">For bitwise operations, 1 if <paramref name="obj" /> is 0; otherwise, 0.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83147-188">Diese Klasse unterstützt das Visual Basic-Compiler und nicht direkt aus Ihrem Code verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="83147-188">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ObjTst">
      <MemberSignature Language="C#" Value="public static int ObjTst (object o1, object o2, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 ObjTst(object o1, object o2, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.ObjTst(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ObjTst (o1 As Object, o2 As Object, TextCompare As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ObjTst(System::Object ^ o1, System::Object ^ o2, bool TextCompare);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o1" Type="System.Object" />
        <Parameter Name="o2" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="o1">
          <span data-ttu-id="83147-189">Erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83147-189">Required.</span>
          </span>
          <span data-ttu-id="83147-190">Beliebiger Ausdruck.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83147-190">Any expression.</span>
          </span>
        </param>
        <param name="o2">
          <span data-ttu-id="83147-191">Erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83147-191">Required.</span>
          </span>
          <span data-ttu-id="83147-192">Beliebiger Ausdruck.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83147-192">Any expression.</span>
          </span>
        </param>
        <param name="TextCompare">
          <span data-ttu-id="83147-193">Erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83147-193">Required.</span>
          </span>
          <span data-ttu-id="83147-194">
            <see langword="True" />, um einen Zeichenfolgenvergleich ohne Berücksichtigung der Groß- und Kleinschreibung auszuführen, andernfalls <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83147-194">
              <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="83147-195">Führt einen binären Vergleich oder einen Textzeichenfolgenvergleich für zwei angegebene Objekte aus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83147-195">Performs binary or text string comparison when given two objects.</span>
          </span>
        </summary>
        <returns>
          <list type="table">
            <listheader>
              <term>
                <span data-ttu-id="83147-196">Wert</span>
                <span class="sxs-lookup">
                  <span data-stu-id="83147-196">Value</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="83147-197">Bedingung</span>
                <span class="sxs-lookup">
                  <span data-stu-id="83147-197">Condition</span>
                </span>
              </description>
            </listheader>
            <item>
              <term>
                <span data-ttu-id="83147-198">-1</span>
                <span class="sxs-lookup">
                  <span data-stu-id="83147-198">-1</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="83147-199">
                  <paramref name="o1" /> ist kleiner als <paramref name="o2" />.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="83147-199">
                    <paramref name="o1" /> is less than <paramref name="o2" />.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="83147-200">0</span>
                <span class="sxs-lookup">
                  <span data-stu-id="83147-200">0</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="83147-201">
                  <paramref name="o1" /> ist gleich <paramref name="o2" />.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="83147-201">
                    <paramref name="o1" /> is equal to <paramref name="o2" />.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="83147-202">1</span>
                <span class="sxs-lookup">
                  <span data-stu-id="83147-202">1</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="83147-203">
                  <paramref name="o1" /> ist größer als <paramref name="o2" />.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="83147-203">
                    <paramref name="o1" /> is greater than <paramref name="o2" />.</span>
                </span>
              </description>
            </item>
          </list>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83147-204">Diese Klasse unterstützt das Visual Basic-Compiler und nicht direkt aus Ihrem Code verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="83147-204">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="PlusObj">
      <MemberSignature Language="C#" Value="public static object PlusObj (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public static object PlusObj(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.PlusObj(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PlusObj (obj As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ PlusObj(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="83147-205">Erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83147-205">Required.</span>
          </span>
          <span data-ttu-id="83147-206">Ein beliebiger numerischer Ausdruck.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83147-206">Any numeric expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="83147-207">Führt einen unären Additionsvorgang (+) aus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83147-207">Performs a unary plus (+) operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="83147-208">Der Wert von <paramref name="obj" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83147-208">The value of <paramref name="obj" />.</span>
          </span>
          <span data-ttu-id="83147-209">(Das Vorzeichen von <paramref name="obj" /> wird nicht geändert.)</span>
          <span class="sxs-lookup">
            <span data-stu-id="83147-209">(The sign of the <paramref name="obj" /> is unchanged.)</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83147-210">Diese Klasse unterstützt das Visual Basic-Compiler und nicht direkt aus Ihrem Code verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="83147-210">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="PowObj">
      <MemberSignature Language="C#" Value="public static object PowObj (object obj1, object obj2);" />
      <MemberSignature Language="ILAsm" Value=".method public static object PowObj(object obj1, object obj2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.PowObj(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PowObj (obj1 As Object, obj2 As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ PowObj(System::Object ^ obj1, System::Object ^ obj2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj1" Type="System.Object" />
        <Parameter Name="obj2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj1">
          <span data-ttu-id="83147-211">Erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83147-211">Required.</span>
          </span>
          <span data-ttu-id="83147-212">Ein beliebiger numerischer Ausdruck.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83147-212">Any numeric expression.</span>
          </span>
        </param>
        <param name="obj2">
          <span data-ttu-id="83147-213">Erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83147-213">Required.</span>
          </span>
          <span data-ttu-id="83147-214">Ein beliebiger numerischer Ausdruck.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83147-214">Any numeric expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="83147-215">Führt einen Exponentialvorgang (^) aus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83147-215">Performs an exponent (^) operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="83147-216">Das Ergebnis der Potenzierung von <paramref name="obj1" /> mit <paramref name="obj2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83147-216">The result of <paramref name="obj1" /> raised to the power of <paramref name="obj2" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83147-217">Diese Klasse unterstützt das Visual Basic-Compiler und nicht direkt aus Ihrem Code verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="83147-217">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ShiftLeftObj">
      <MemberSignature Language="C#" Value="public static object ShiftLeftObj (object o1, int amount);" />
      <MemberSignature Language="ILAsm" Value=".method public static object ShiftLeftObj(object o1, int32 amount) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.ShiftLeftObj(System.Object,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ShiftLeftObj (o1 As Object, amount As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ShiftLeftObj(System::Object ^ o1, int amount);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o1" Type="System.Object" />
        <Parameter Name="amount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="o1">
          <span data-ttu-id="83147-218">Erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83147-218">Required.</span>
          </span>
          <span data-ttu-id="83147-219">Ein ganzzahliger numerischer Ausdruck.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83147-219">Integral numeric expression.</span>
          </span>
          <span data-ttu-id="83147-220">Das zu verschiebende Bitmuster.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83147-220">The bit pattern to be shifted.</span>
          </span>
          <span data-ttu-id="83147-221">Der Datentyp muss ein ganzzahliger Typ (<see langword="SByte" />, <see langword="Byte" />, <see langword="Short" />, <see langword="UShort" />, <see langword="Integer" />, <see langword="UInteger" />, <see langword="Long" /> oder <see langword="ULong" />) sein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83147-221">The data type must be an integral type (<see langword="SByte" />, <see langword="Byte" />, <see langword="Short" />, <see langword="UShort" />, <see langword="Integer" />, <see langword="UInteger" />, <see langword="Long" />, or <see langword="ULong" />).</span>
          </span>
        </param>
        <param name="amount">
          <span data-ttu-id="83147-222">Erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83147-222">Required.</span>
          </span>
          <span data-ttu-id="83147-223">Ein numerischer Ausdruck.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83147-223">Numeric expression.</span>
          </span>
          <span data-ttu-id="83147-224">Die Anzahl der Bits, um die das Bitmuster verschoben werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83147-224">The number of bits to shift the bit pattern.</span>
          </span>
          <span data-ttu-id="83147-225">Der Datentyp muss <see langword="Integer" /> sein oder zu <see langword="Integer" /> erweitert werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83147-225">The data type must be <see langword="Integer" /> or widen to <see langword="Integer" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="83147-226">Führt eine arithmetische Verschiebung nach links (&lt;&lt;) aus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83147-226">Performs an arithmetic left shift (&lt;&lt;) operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="83147-227">Ein ganzzahliger numerischer Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83147-227">An integral numeric value.</span>
          </span>
          <span data-ttu-id="83147-228">Das Ergebnis der Verschiebung des Bitmusters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83147-228">The result of shifting the bit pattern.</span>
          </span>
          <span data-ttu-id="83147-229">Der Datentyp entspricht dem von <paramref name="o1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83147-229">The data type is the same as that of <paramref name="o1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83147-230">Diese Klasse unterstützt das Visual Basic-Compiler und nicht direkt aus Ihrem Code verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="83147-230">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ShiftRightObj">
      <MemberSignature Language="C#" Value="public static object ShiftRightObj (object o1, int amount);" />
      <MemberSignature Language="ILAsm" Value=".method public static object ShiftRightObj(object o1, int32 amount) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.ShiftRightObj(System.Object,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ShiftRightObj (o1 As Object, amount As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ShiftRightObj(System::Object ^ o1, int amount);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o1" Type="System.Object" />
        <Parameter Name="amount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="o1">
          <span data-ttu-id="83147-231">Erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83147-231">Required.</span>
          </span>
          <span data-ttu-id="83147-232">Ein ganzzahliger numerischer Ausdruck.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83147-232">Integral numeric expression.</span>
          </span>
          <span data-ttu-id="83147-233">Das zu verschiebende Bitmuster.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83147-233">The bit pattern to be shifted.</span>
          </span>
          <span data-ttu-id="83147-234">Der Datentyp muss ein ganzzahliger Typ (<see langword="SByte" />, <see langword="Byte" />, <see langword="Short" />, <see langword="UShort" />, <see langword="Integer" />, <see langword="UInteger" />, <see langword="Long" /> oder <see langword="ULong" />) sein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83147-234">The data type must be an integral type (<see langword="SByte" />, <see langword="Byte" />, <see langword="Short" />, <see langword="UShort" />, <see langword="Integer" />, <see langword="UInteger" />, <see langword="Long" />, or <see langword="ULong" />).</span>
          </span>
        </param>
        <param name="amount">
          <span data-ttu-id="83147-235">Erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83147-235">Required.</span>
          </span>
          <span data-ttu-id="83147-236">Ein numerischer Ausdruck.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83147-236">Numeric expression.</span>
          </span>
          <span data-ttu-id="83147-237">Die Anzahl der Bits, um die das Bitmuster verschoben werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83147-237">The number of bits to shift the bit pattern.</span>
          </span>
          <span data-ttu-id="83147-238">Der Datentyp muss <see langword="Integer" /> sein oder zu <see langword="Integer" /> erweitert werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83147-238">The data type must be <see langword="Integer" /> or widen to <see langword="Integer" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="83147-239">Führt eine arithmetische Verschiebung nach rechts (&gt;&gt;) aus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83147-239">Performs an arithmetic right shift (&gt;&gt;) operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="83147-240">Ein ganzzahliger numerischer Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83147-240">An integral numeric value.</span>
          </span>
          <span data-ttu-id="83147-241">Das Ergebnis der Verschiebung des Bitmusters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83147-241">The result of shifting the bit pattern.</span>
          </span>
          <span data-ttu-id="83147-242">Der Datentyp entspricht dem von <paramref name="o1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83147-242">The data type is the same as that of <paramref name="o1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83147-243">Diese Klasse unterstützt das Visual Basic-Compiler und nicht direkt aus Ihrem Code verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="83147-243">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="StrCatObj">
      <MemberSignature Language="C#" Value="public static object StrCatObj (object vLeft, object vRight);" />
      <MemberSignature Language="ILAsm" Value=".method public static object StrCatObj(object vLeft, object vRight) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.StrCatObj(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function StrCatObj (vLeft As Object, vRight As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ StrCatObj(System::Object ^ vLeft, System::Object ^ vRight);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vLeft" Type="System.Object" />
        <Parameter Name="vRight" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="vLeft">
          <span data-ttu-id="83147-244">Erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83147-244">Required.</span>
          </span>
          <span data-ttu-id="83147-245">Beliebiger Ausdruck.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83147-245">Any expression.</span>
          </span>
        </param>
        <param name="vRight">
          <span data-ttu-id="83147-246">Erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83147-246">Required.</span>
          </span>
          <span data-ttu-id="83147-247">Beliebiger Ausdruck.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83147-247">Any expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="83147-248">Führt eine Zeichenfolgenverkettung (&amp;) aus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83147-248">Performs a string concatenation (&amp;) operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="83147-249">Eine Zeichenfolge, die die Verkettung von <paramref name="vLeft" /> und <paramref name="vRight" /> darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83147-249">A string representing the concatenation of <paramref name="vLeft" /> and <paramref name="vRight" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83147-250">Diese Klasse unterstützt das Visual Basic-Compiler und nicht direkt aus Ihrem Code verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="83147-250">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="SubObj">
      <MemberSignature Language="C#" Value="public static object SubObj (object o1, object o2);" />
      <MemberSignature Language="ILAsm" Value=".method public static object SubObj(object o1, object o2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.SubObj(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SubObj (o1 As Object, o2 As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ SubObj(System::Object ^ o1, System::Object ^ o2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o1" Type="System.Object" />
        <Parameter Name="o2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o1">
          <span data-ttu-id="83147-251">Erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83147-251">Required.</span>
          </span>
          <span data-ttu-id="83147-252">Ein beliebiger numerischer Ausdruck.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83147-252">Any numeric expression.</span>
          </span>
        </param>
        <param name="o2">
          <span data-ttu-id="83147-253">Erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83147-253">Required.</span>
          </span>
          <span data-ttu-id="83147-254">Ein beliebiger numerischer Ausdruck.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83147-254">Any numeric expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="83147-255">Führt einen Subtraktionsvorgang (–) aus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83147-255">Performs a subtraction (–) operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="83147-256">Die Differenz zwischen <paramref name="o1" /> und <paramref name="o2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83147-256">The difference between <paramref name="o1" /> and <paramref name="o2" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83147-257">Diese Klasse unterstützt das Visual Basic-Compiler und nicht direkt aus Ihrem Code verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="83147-257">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="XorObj">
      <MemberSignature Language="C#" Value="public static object XorObj (object obj1, object obj2);" />
      <MemberSignature Language="ILAsm" Value=".method public static object XorObj(object obj1, object obj2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.XorObj(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function XorObj (obj1 As Object, obj2 As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ XorObj(System::Object ^ obj1, System::Object ^ obj2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj1" Type="System.Object" />
        <Parameter Name="obj2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj1">
          <span data-ttu-id="83147-258">Erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83147-258">Required.</span>
          </span>
          <span data-ttu-id="83147-259">Ein beliebiger <see langword="Boolean" />-Ausdruck oder numerischer Ausdruck.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83147-259">Any <see langword="Boolean" /> or numeric expression.</span>
          </span>
        </param>
        <param name="obj2">
          <span data-ttu-id="83147-260">Erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83147-260">Required.</span>
          </span>
          <span data-ttu-id="83147-261">Ein beliebiger <see langword="Boolean" />-Ausdruck oder numerischer Ausdruck.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83147-261">Any <see langword="Boolean" /> or numeric expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="83147-262">Führt einen <see langword="Xor" />-Vergleich aus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83147-262">Performs an <see langword="Xor" /> comparison.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="83147-263">Ein <see langword="Boolean" />-Wert oder ein numerischer Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83147-263">A <see langword="Boolean" /> or numeric value.</span>
          </span>
          <span data-ttu-id="83147-264">Bei einem <see langword="Boolean" />-Vergleich ist der Rückgabewert der logische Ausschluss (exklusive logische Disjunktion) aus zwei <see langword="Boolean" />-Werten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83147-264">For a <see langword="Boolean" /> comparison, the return value is the logical exclusion (exclusive logical disjunction) of two <see langword="Boolean" /> values.</span>
          </span>
          <span data-ttu-id="83147-265">Bei bitweisen (numerischen) Vorgängen ist der Rückgabewert ein numerischer Wert, der den bitweisen Ausschluss (exklusive bitweise Disjunktion) aus zwei numerischen Bitmustern darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="83147-265">For bitwise (numeric) operations, the return value is a numeric value that represents the bitwise exclusion (exclusive bitwise disjunction) of two numeric bit patterns.</span>
          </span>
          <span data-ttu-id="83147-266">Weitere Informationen finden Sie unter [Xor Operator](~/docs/visual-basic/language-reference/operators/xor-operator.md).</span>
          <span class="sxs-lookup">
            <span data-stu-id="83147-266">For more information, see [Xor Operator](~/docs/visual-basic/language-reference/operators/xor-operator.md).</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83147-267">Diese Klasse unterstützt das Visual Basic-Compiler und nicht direkt aus Ihrem Code verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="83147-267">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
  </Members>
</Type>