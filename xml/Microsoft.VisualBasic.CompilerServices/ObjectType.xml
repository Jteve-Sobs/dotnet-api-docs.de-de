<Type Name="ObjectType" FullName="Microsoft.VisualBasic.CompilerServices.ObjectType">
  <Metadata><Meta Name="ms.openlocfilehash" Value="33cb2907e6ba29ca3563a31eab2e9567af394f25" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55354467" /></Metadata><TypeSignature Language="C#" Value="public sealed class ObjectType" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ObjectType extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.CompilerServices.ObjectType" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ObjectType" />
  <TypeSignature Language="C++ CLI" Value="public ref class ObjectType sealed" />
  <TypeSignature Language="F#" Value="type ObjectType = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>7.0.5000.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="0afcb-101">Diese Klasse ist seit Visual Basic 2005 veraltet.</span><span class="sxs-lookup"><span data-stu-id="0afcb-101">This class has been deprecated as of Visual Basic 2005.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0afcb-102">Diese Klasse unterstützt Visual Basic-Compiler und nicht direkt aus Ihrem Code verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="0afcb-102">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
    </remarks>
    <forInternalUseOnly />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjectType ();" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ObjectType();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0afcb-103">Initialisiert eine neue Instanz der <see cref="T:Microsoft.VisualBasic.CompilerServices.ObjectType" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="0afcb-103">Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.CompilerServices.ObjectType" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0afcb-104">Diese Klasse unterstützt Visual Basic-Compiler und nicht direkt aus Ihrem Code verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="0afcb-104">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="AddObj">
      <MemberSignature Language="C#" Value="public static object AddObj (object o1, object o2);" />
      <MemberSignature Language="ILAsm" Value=".method public static object AddObj(object o1, object o2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.AddObj(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AddObj (o1 As Object, o2 As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ AddObj(System::Object ^ o1, System::Object ^ o2);" />
      <MemberSignature Language="F#" Value="static member AddObj : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.ObjectType.AddObj (o1, o2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o1" Type="System.Object" />
        <Parameter Name="o2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o1"><span data-ttu-id="0afcb-105">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="0afcb-105">Required.</span></span> <span data-ttu-id="0afcb-106">Ein beliebiger numerischer Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="0afcb-106">Any numeric expression.</span></span></param>
        <param name="o2"><span data-ttu-id="0afcb-107">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="0afcb-107">Required.</span></span> <span data-ttu-id="0afcb-108">Ein beliebiger numerischer Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="0afcb-108">Any numeric expression.</span></span></param>
        <summary><span data-ttu-id="0afcb-109">Führt einen Additionsvorgang (+) aus.</span><span class="sxs-lookup"><span data-stu-id="0afcb-109">Performs an addition (+) operation.</span></span></summary>
        <returns><span data-ttu-id="0afcb-110">Die Summe von <paramref name="o1" /> und <paramref name="o2" />.</span><span class="sxs-lookup"><span data-stu-id="0afcb-110">The sum of <paramref name="o1" /> and <paramref name="o2" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0afcb-111">Diese Klasse unterstützt Visual Basic-Compiler und nicht direkt aus Ihrem Code verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="0afcb-111">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/addition-operator.md"><span data-ttu-id="0afcb-112">+-Operator (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="0afcb-112">+ Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="BitAndObj">
      <MemberSignature Language="C#" Value="public static object BitAndObj (object obj1, object obj2);" />
      <MemberSignature Language="ILAsm" Value=".method public static object BitAndObj(object obj1, object obj2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.BitAndObj(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BitAndObj (obj1 As Object, obj2 As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ BitAndObj(System::Object ^ obj1, System::Object ^ obj2);" />
      <MemberSignature Language="F#" Value="static member BitAndObj : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.ObjectType.BitAndObj (obj1, obj2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj1" Type="System.Object" />
        <Parameter Name="obj2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj1"><span data-ttu-id="0afcb-113">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="0afcb-113">Required.</span></span> <span data-ttu-id="0afcb-114">Ein beliebiger <see langword="Boolean" />-Ausdruck oder numerischer Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="0afcb-114">Any <see langword="Boolean" /> or numeric expression.</span></span></param>
        <param name="obj2"><span data-ttu-id="0afcb-115">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="0afcb-115">Required.</span></span> <span data-ttu-id="0afcb-116">Ein beliebiger <see langword="Boolean" />-Ausdruck oder numerischer Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="0afcb-116">Any <see langword="Boolean" /> or numeric expression.</span></span></param>
        <summary><span data-ttu-id="0afcb-117">Führt eine bitweise <see langword="And" />-Operation aus.</span><span class="sxs-lookup"><span data-stu-id="0afcb-117">Performs a bitwise <see langword="And" /> operation.</span></span></summary>
        <returns><span data-ttu-id="0afcb-118">1, wenn sowohl <paramref name="obj1" /> als auch <paramref name="obj2" /> 1 ergeben, andernfalls 0.</span><span class="sxs-lookup"><span data-stu-id="0afcb-118">1 if both <paramref name="obj1" /> and <paramref name="obj2" /> evaluate to 1; otherwise, 0.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0afcb-119">Diese Klasse unterstützt Visual Basic-Compiler und nicht direkt aus Ihrem Code verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="0afcb-119">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/and-operator.md"><span data-ttu-id="0afcb-120">And-Operator (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="0afcb-120">And Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="BitOrObj">
      <MemberSignature Language="C#" Value="public static object BitOrObj (object obj1, object obj2);" />
      <MemberSignature Language="ILAsm" Value=".method public static object BitOrObj(object obj1, object obj2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.BitOrObj(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BitOrObj (obj1 As Object, obj2 As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ BitOrObj(System::Object ^ obj1, System::Object ^ obj2);" />
      <MemberSignature Language="F#" Value="static member BitOrObj : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.ObjectType.BitOrObj (obj1, obj2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj1" Type="System.Object" />
        <Parameter Name="obj2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj1"><span data-ttu-id="0afcb-121">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="0afcb-121">Required.</span></span> <span data-ttu-id="0afcb-122">Ein beliebiger <see langword="Boolean" />-Ausdruck oder numerischer Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="0afcb-122">Any <see langword="Boolean" /> or numeric expression.</span></span></param>
        <param name="obj2"><span data-ttu-id="0afcb-123">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="0afcb-123">Required.</span></span> <span data-ttu-id="0afcb-124">Ein beliebiger <see langword="Boolean" />-Ausdruck oder numerischer Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="0afcb-124">Any <see langword="Boolean" /> or numeric expression.</span></span></param>
        <summary><span data-ttu-id="0afcb-125">Führt eine bitweise <see langword="Or" />-Operation aus.</span><span class="sxs-lookup"><span data-stu-id="0afcb-125">Performs a bitwise <see langword="Or" /> operation.</span></span></summary>
        <returns><span data-ttu-id="0afcb-126">0, wenn sowohl <paramref name="obj1" /> als auch <paramref name="obj2" /> 0 ergeben, andernfalls 1.</span><span class="sxs-lookup"><span data-stu-id="0afcb-126">0 if both <paramref name="obj1" /> and <paramref name="obj2" /> evaluate to 0; otherwise, 1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0afcb-127">Diese Klasse unterstützt Visual Basic-Compiler und nicht direkt aus Ihrem Code verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="0afcb-127">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/or-operator.md"><span data-ttu-id="0afcb-128">Or-Operator (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="0afcb-128">Or Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="BitXorObj">
      <MemberSignature Language="C#" Value="public static object BitXorObj (object obj1, object obj2);" />
      <MemberSignature Language="ILAsm" Value=".method public static object BitXorObj(object obj1, object obj2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.BitXorObj(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BitXorObj (obj1 As Object, obj2 As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ BitXorObj(System::Object ^ obj1, System::Object ^ obj2);" />
      <MemberSignature Language="F#" Value="static member BitXorObj : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.ObjectType.BitXorObj (obj1, obj2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj1" Type="System.Object" />
        <Parameter Name="obj2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj1"><span data-ttu-id="0afcb-129">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="0afcb-129">Required.</span></span> <span data-ttu-id="0afcb-130">Ein beliebiger <see langword="Boolean" />-Ausdruck oder numerischer Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="0afcb-130">Any <see langword="Boolean" /> or numeric expression.</span></span></param>
        <param name="obj2"><span data-ttu-id="0afcb-131">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="0afcb-131">Required.</span></span> <span data-ttu-id="0afcb-132">Ein beliebiger <see langword="Boolean" />-Ausdruck oder numerischer Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="0afcb-132">Any <see langword="Boolean" /> or numeric expression.</span></span></param>
        <summary><span data-ttu-id="0afcb-133">Führt eine <see langword="Xor" />-Operation aus.</span><span class="sxs-lookup"><span data-stu-id="0afcb-133">Performs an <see langword="Xor" /> operation.</span></span></summary>
        <returns><span data-ttu-id="0afcb-134">Ein numerischer Wert, der den bitweisen Ausschluss (exklusive bitweise Disjunktion) aus zwei numerischen Bitmustern darstellt.</span><span class="sxs-lookup"><span data-stu-id="0afcb-134">A numeric value that represents the bitwise exclusion (exclusive bitwise disjunction) of two numeric bit patterns.</span></span> <span data-ttu-id="0afcb-135">Weitere Informationen finden Sie unter <see href="https://docs.microsoft.com/dotnet/visual-basic/language-reference/operators/xor-operator">Xor Operator</see>.</span><span class="sxs-lookup"><span data-stu-id="0afcb-135">For more information, see <see href="https://docs.microsoft.com/dotnet/visual-basic/language-reference/operators/xor-operator">Xor Operator</see>.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0afcb-136">Diese Klasse unterstützt Visual Basic-Compiler und nicht direkt aus Ihrem Code verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="0afcb-136">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/xor-operator.md"><span data-ttu-id="0afcb-137">Xor-Operator (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="0afcb-137">Xor Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DivObj">
      <MemberSignature Language="C#" Value="public static object DivObj (object o1, object o2);" />
      <MemberSignature Language="ILAsm" Value=".method public static object DivObj(object o1, object o2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.DivObj(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DivObj (o1 As Object, o2 As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ DivObj(System::Object ^ o1, System::Object ^ o2);" />
      <MemberSignature Language="F#" Value="static member DivObj : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.ObjectType.DivObj (o1, o2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o1" Type="System.Object" />
        <Parameter Name="o2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o1"><span data-ttu-id="0afcb-138">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="0afcb-138">Required.</span></span> <span data-ttu-id="0afcb-139">Ein beliebiger numerischer Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="0afcb-139">Any numeric expression.</span></span></param>
        <param name="o2"><span data-ttu-id="0afcb-140">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="0afcb-140">Required.</span></span> <span data-ttu-id="0afcb-141">Ein beliebiger numerischer Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="0afcb-141">Any numeric expression.</span></span></param>
        <summary><span data-ttu-id="0afcb-142">Führt einen Divisionsvorgang (/) aus.</span><span class="sxs-lookup"><span data-stu-id="0afcb-142">Performs a division (/) operation.</span></span></summary>
        <returns><span data-ttu-id="0afcb-143">Der volle Quotient, der sich aus der Division von <paramref name="o1" /> durch <paramref name="o2" /> ergibt, einschließlich des Rests.</span><span class="sxs-lookup"><span data-stu-id="0afcb-143">The full quotient of <paramref name="o1" /> divided by <paramref name="o2" />, including any remainder.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0afcb-144">Diese Klasse unterstützt Visual Basic-Compiler und nicht direkt aus Ihrem Code verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="0afcb-144">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/floating-point-division-operator.md"><span data-ttu-id="0afcb-145">/-Operator (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="0afcb-145">/ Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetObjectValuePrimitive">
      <MemberSignature Language="C#" Value="public static object GetObjectValuePrimitive (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public static object GetObjectValuePrimitive(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.GetObjectValuePrimitive(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetObjectValuePrimitive (o As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetObjectValuePrimitive(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="static member GetObjectValuePrimitive : obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.ObjectType.GetObjectValuePrimitive o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o"><span data-ttu-id="0afcb-146">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="0afcb-146">Required.</span></span> <span data-ttu-id="0afcb-147">Beliebiger Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="0afcb-147">Any expression.</span></span></param>
        <summary><span data-ttu-id="0afcb-148">Gibt einen geschachtelten primitiven Wert zurück.</span><span class="sxs-lookup"><span data-stu-id="0afcb-148">Returns a boxed primitive value.</span></span> <span data-ttu-id="0afcb-149">Mithilfe dieser Methode wird verhindert, dass Strukturen mehrmals kopiert werden.</span><span class="sxs-lookup"><span data-stu-id="0afcb-149">This method is used to prevent copying structures multiple times.</span></span></summary>
        <returns><span data-ttu-id="0afcb-150">Der primitive Wert des als Objekt festgelegten <paramref name="o" />.</span><span class="sxs-lookup"><span data-stu-id="0afcb-150">The primitive value of <paramref name="o" /> typed as object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0afcb-151">Diese Klasse unterstützt Visual Basic-Compiler und nicht direkt aus Ihrem Code verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="0afcb-151">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="IDivObj">
      <MemberSignature Language="C#" Value="public static object IDivObj (object o1, object o2);" />
      <MemberSignature Language="ILAsm" Value=".method public static object IDivObj(object o1, object o2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.IDivObj(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IDivObj (o1 As Object, o2 As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ IDivObj(System::Object ^ o1, System::Object ^ o2);" />
      <MemberSignature Language="F#" Value="static member IDivObj : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.ObjectType.IDivObj (o1, o2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o1" Type="System.Object" />
        <Parameter Name="o2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o1"><span data-ttu-id="0afcb-152">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="0afcb-152">Required.</span></span> <span data-ttu-id="0afcb-153">Ein beliebiger numerischer Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="0afcb-153">Any numeric expression.</span></span></param>
        <param name="o2"><span data-ttu-id="0afcb-154">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="0afcb-154">Required.</span></span> <span data-ttu-id="0afcb-155">Ein beliebiger numerischer Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="0afcb-155">Any numeric expression.</span></span></param>
        <summary><span data-ttu-id="0afcb-156">Führt einen Divisionsvorgang (\\) mit ganzen Zahlen aus.</span><span class="sxs-lookup"><span data-stu-id="0afcb-156">Performs an integer division (\\) operation.</span></span></summary>
        <returns><span data-ttu-id="0afcb-157">Der ganzzahlige Quotient, der sich aus der Division von <paramref name="o1" /> durch <paramref name="o2" /> ergibt. Es wird nur der ganzzahlige Teil beibehalten, und ein eventueller Rest wird verworfen.</span><span class="sxs-lookup"><span data-stu-id="0afcb-157">The integer quotient of <paramref name="o1" /> divided by <paramref name="o2" />, which discards any remainder and retains only the integer portion.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0afcb-158">Diese Klasse unterstützt Visual Basic-Compiler und nicht direkt aus Ihrem Code verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="0afcb-158">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/integer-division-operator.md"><span data-ttu-id="0afcb-159">\-Operator</span><span class="sxs-lookup"><span data-stu-id="0afcb-159">\ Operator</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="LikeObj">
      <MemberSignature Language="C#" Value="public static bool LikeObj (object vLeft, object vRight, Microsoft.VisualBasic.CompareMethod CompareOption);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool LikeObj(object vLeft, object vRight, valuetype Microsoft.VisualBasic.CompareMethod CompareOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.LikeObj(System.Object,System.Object,Microsoft.VisualBasic.CompareMethod)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LikeObj (vLeft As Object, vRight As Object, CompareOption As CompareMethod) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool LikeObj(System::Object ^ vLeft, System::Object ^ vRight, Microsoft::VisualBasic::CompareMethod CompareOption);" />
      <MemberSignature Language="F#" Value="static member LikeObj : obj * obj * Microsoft.VisualBasic.CompareMethod -&gt; bool" Usage="Microsoft.VisualBasic.CompilerServices.ObjectType.LikeObj (vLeft, vRight, CompareOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vLeft" Type="System.Object" />
        <Parameter Name="vRight" Type="System.Object" />
        <Parameter Name="CompareOption" Type="Microsoft.VisualBasic.CompareMethod" />
      </Parameters>
      <Docs>
        <param name="vLeft"><span data-ttu-id="0afcb-160">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="0afcb-160">Required.</span></span> <span data-ttu-id="0afcb-161">Beliebiger Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="0afcb-161">Any expression.</span></span></param>
        <param name="vRight"><span data-ttu-id="0afcb-162">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="0afcb-162">Required.</span></span> <span data-ttu-id="0afcb-163">Ein beliebiger Zeichenfolgenausdruck, der den in Like-Operator beschriebenen Mustervergleichskonventionen entspricht.</span><span class="sxs-lookup"><span data-stu-id="0afcb-163">Any string expression conforming to the pattern-matching conventions described in Like Operator.</span></span></param>
        <param name="CompareOption"><span data-ttu-id="0afcb-164">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="0afcb-164">Required.</span></span> <span data-ttu-id="0afcb-165">Ein <see cref="T:Microsoft.VisualBasic.CompareMethod" />-Wert, der angibt, dass bei der Operation ein Textvergleich oder ein binärer Vergleich durchgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="0afcb-165">A <see cref="T:Microsoft.VisualBasic.CompareMethod" /> value that specifies that the operation use either text or binary comparison.</span></span></param>
        <summary><span data-ttu-id="0afcb-166">Führt einen <see langword="Like" />-Vergleich aus.</span><span class="sxs-lookup"><span data-stu-id="0afcb-166">Performs a <see langword="Like" /> comparison.</span></span></summary>
        <returns><span data-ttu-id="0afcb-167"><see langword="True" />, wenn die Zeichenfolgendarstellung des Werts in <paramref name="vLeft" /> dem in <paramref name="vRight" /> enthaltenen Muster entspricht, andernfalls <see langword="False" />.</span><span class="sxs-lookup"><span data-stu-id="0afcb-167"><see langword="True" /> if the string representation of the value in <paramref name="vLeft" /> satisfies the pattern that is contained in <paramref name="vRight" />; otherwise, <see langword="False" />.</span></span> <span data-ttu-id="0afcb-168"><see langword="True" />, wenn sowohl <paramref name="vLeft" /> als auch <paramref name="vRight" /> gleich <see langword="Nothing" /> sind.</span><span class="sxs-lookup"><span data-stu-id="0afcb-168"><see langword="True" /> if both <paramref name="vLeft" /> and <paramref name="vRight" /> are <see langword="Nothing" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0afcb-169">Diese Klasse unterstützt Visual Basic-Compiler und nicht direkt aus Ihrem Code verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="0afcb-169">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/like-operator.md"><span data-ttu-id="0afcb-170">Like-Operator</span><span class="sxs-lookup"><span data-stu-id="0afcb-170">Like Operator</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ModObj">
      <MemberSignature Language="C#" Value="public static object ModObj (object o1, object o2);" />
      <MemberSignature Language="ILAsm" Value=".method public static object ModObj(object o1, object o2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.ModObj(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ModObj (o1 As Object, o2 As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ModObj(System::Object ^ o1, System::Object ^ o2);" />
      <MemberSignature Language="F#" Value="static member ModObj : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.ObjectType.ModObj (o1, o2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o1" Type="System.Object" />
        <Parameter Name="o2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o1"><span data-ttu-id="0afcb-171">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="0afcb-171">Required.</span></span> <span data-ttu-id="0afcb-172">Ein beliebiger numerischer Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="0afcb-172">Any numeric expression.</span></span></param>
        <param name="o2"><span data-ttu-id="0afcb-173">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="0afcb-173">Required.</span></span> <span data-ttu-id="0afcb-174">Ein beliebiger numerischer Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="0afcb-174">Any numeric expression.</span></span></param>
        <summary><span data-ttu-id="0afcb-175">Führt einen Modulo-Vorgang (<see langword="Mod" />) aus.</span><span class="sxs-lookup"><span data-stu-id="0afcb-175">Performs a modulus (<see langword="Mod" />) operation.</span></span></summary>
        <returns><span data-ttu-id="0afcb-176">Der Rest aus der Division von <paramref name="o1" /> durch <paramref name="o2" />.</span><span class="sxs-lookup"><span data-stu-id="0afcb-176">The remainder after <paramref name="o1" /> is divided by <paramref name="o2" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0afcb-177">Diese Klasse unterstützt Visual Basic-Compiler und nicht direkt aus Ihrem Code verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="0afcb-177">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/mod-operator.md"><span data-ttu-id="0afcb-178">Operator Mod(Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="0afcb-178">Mod Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="MulObj">
      <MemberSignature Language="C#" Value="public static object MulObj (object o1, object o2);" />
      <MemberSignature Language="ILAsm" Value=".method public static object MulObj(object o1, object o2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.MulObj(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MulObj (o1 As Object, o2 As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ MulObj(System::Object ^ o1, System::Object ^ o2);" />
      <MemberSignature Language="F#" Value="static member MulObj : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.ObjectType.MulObj (o1, o2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o1" Type="System.Object" />
        <Parameter Name="o2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o1"><span data-ttu-id="0afcb-179">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="0afcb-179">Required.</span></span> <span data-ttu-id="0afcb-180">Ein beliebiger numerischer Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="0afcb-180">Any numeric expression.</span></span></param>
        <param name="o2"><span data-ttu-id="0afcb-181">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="0afcb-181">Required.</span></span> <span data-ttu-id="0afcb-182">Ein beliebiger numerischer Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="0afcb-182">Any numeric expression.</span></span></param>
        <summary><span data-ttu-id="0afcb-183">Führt einen Multiplikationsvorgang (\*) aus.</span><span class="sxs-lookup"><span data-stu-id="0afcb-183">Performs a multiplication (\*) operation.</span></span></summary>
        <returns><span data-ttu-id="0afcb-184">Das Produkt von <paramref name="o1" /> und <paramref name="o2" />.</span><span class="sxs-lookup"><span data-stu-id="0afcb-184">The product of <paramref name="o1" /> and <paramref name="o2" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0afcb-185">Diese Klasse unterstützt Visual Basic-Compiler und nicht direkt aus Ihrem Code verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="0afcb-185">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/multiplication-operator.md"><span data-ttu-id="0afcb-186">\*-Operator (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="0afcb-186">\* Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="NegObj">
      <MemberSignature Language="C#" Value="public static object NegObj (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public static object NegObj(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.NegObj(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NegObj (obj As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ NegObj(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="static member NegObj : obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.ObjectType.NegObj obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="0afcb-187">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="0afcb-187">Required.</span></span> <span data-ttu-id="0afcb-188">Ein beliebiger numerischer Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="0afcb-188">Any numeric expression.</span></span></param>
        <summary><span data-ttu-id="0afcb-189">Führt den Vorgang „unäres Minus“ (–) aus.</span><span class="sxs-lookup"><span data-stu-id="0afcb-189">Performs a unary minus (-) operation.</span></span></summary>
        <returns><span data-ttu-id="0afcb-190">Der negative Wert von <paramref name="obj" />.</span><span class="sxs-lookup"><span data-stu-id="0afcb-190">The negative value of <paramref name="obj" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0afcb-191">Diese Klasse unterstützt Visual Basic-Compiler und nicht direkt aus Ihrem Code verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="0afcb-191">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/subtraction-operator.md"><span data-ttu-id="0afcb-192">--Operator (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="0afcb-192">- Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="NotObj">
      <MemberSignature Language="C#" Value="public static object NotObj (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public static object NotObj(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.NotObj(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NotObj (obj As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ NotObj(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="static member NotObj : obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.ObjectType.NotObj obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="0afcb-193">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="0afcb-193">Required.</span></span> <span data-ttu-id="0afcb-194">Ein beliebiger <see langword="Boolean" />-Ausdruck oder numerischer Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="0afcb-194">Any <see langword="Boolean" /> or numeric expression.</span></span></param>
        <summary><span data-ttu-id="0afcb-195">Führt eine <see langword="Not" />-Operation aus.</span><span class="sxs-lookup"><span data-stu-id="0afcb-195">Performs a <see langword="Not" /> operation.</span></span></summary>
        <returns><span data-ttu-id="0afcb-196">Für <see langword="Boolean" />-Operationen: <see langword="False" />, wenn <paramref name="obj" /> gleich <see langword="True" /> ist, andernfalls <see langword="True" />.</span><span class="sxs-lookup"><span data-stu-id="0afcb-196">For <see langword="Boolean" /> operations, <see langword="False" /> if <paramref name="obj" /> is <see langword="True" />; otherwise, <see langword="True" />.</span></span> <span data-ttu-id="0afcb-197">Für bitweise Operationen: 1, wenn <paramref name="obj" /> gleich 0 ist, andernfalls 0.</span><span class="sxs-lookup"><span data-stu-id="0afcb-197">For bitwise operations, 1 if <paramref name="obj" /> is 0; otherwise, 0.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0afcb-198">Diese Klasse unterstützt Visual Basic-Compiler und nicht direkt aus Ihrem Code verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="0afcb-198">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/not-operator.md"><span data-ttu-id="0afcb-199">Not-Operator (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="0afcb-199">Not Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ObjTst">
      <MemberSignature Language="C#" Value="public static int ObjTst (object o1, object o2, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 ObjTst(object o1, object o2, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.ObjTst(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ObjTst (o1 As Object, o2 As Object, TextCompare As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ObjTst(System::Object ^ o1, System::Object ^ o2, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member ObjTst : obj * obj * bool -&gt; int" Usage="Microsoft.VisualBasic.CompilerServices.ObjectType.ObjTst (o1, o2, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o1" Type="System.Object" />
        <Parameter Name="o2" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="o1"><span data-ttu-id="0afcb-200">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="0afcb-200">Required.</span></span> <span data-ttu-id="0afcb-201">Beliebiger Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="0afcb-201">Any expression.</span></span></param>
        <param name="o2"><span data-ttu-id="0afcb-202">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="0afcb-202">Required.</span></span> <span data-ttu-id="0afcb-203">Beliebiger Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="0afcb-203">Any expression.</span></span></param>
        <param name="TextCompare"><span data-ttu-id="0afcb-204">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="0afcb-204">Required.</span></span> <span data-ttu-id="0afcb-205"><see langword="True" />, um einen Zeichenfolgenvergleich ohne Berücksichtigung der Groß- und Kleinschreibung auszuführen, andernfalls <see langword="False" />.</span><span class="sxs-lookup"><span data-stu-id="0afcb-205"><see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="0afcb-206">Führt einen binären Vergleich oder einen Textzeichenfolgenvergleich für zwei angegebene Objekte aus.</span><span class="sxs-lookup"><span data-stu-id="0afcb-206">Performs binary or text string comparison when given two objects.</span></span></summary>
        <returns><list type="table">
            <listheader>
              <term> <span data-ttu-id="0afcb-207">Wert</span><span class="sxs-lookup"><span data-stu-id="0afcb-207">Value</span></span> 
 </term>
              <description> <span data-ttu-id="0afcb-208">Bedingung</span><span class="sxs-lookup"><span data-stu-id="0afcb-208">Condition</span></span> 
 </description>
            </listheader>
            <item>
              <term> <span data-ttu-id="0afcb-209">-1</span><span class="sxs-lookup"><span data-stu-id="0afcb-209">-1</span></span> 
 </term>
              <description><span data-ttu-id="0afcb-210">
                <paramref name="o1" /> ist kleiner als <paramref name="o2" />.</span><span class="sxs-lookup"><span data-stu-id="0afcb-210">
                <paramref name="o1" /> is less than <paramref name="o2" />.</span></span>  
  
 </description>
            </item>
            <item>
              <term> <span data-ttu-id="0afcb-211">0</span><span class="sxs-lookup"><span data-stu-id="0afcb-211">0</span></span> 
 </term>
              <description><span data-ttu-id="0afcb-212">
                <paramref name="o1" /> ist gleich <paramref name="o2" />.</span><span class="sxs-lookup"><span data-stu-id="0afcb-212">
                <paramref name="o1" /> is equal to <paramref name="o2" />.</span></span>  
  
 </description>
            </item>
            <item>
              <term> <span data-ttu-id="0afcb-213">1</span><span class="sxs-lookup"><span data-stu-id="0afcb-213">1</span></span> 
 </term>
              <description><span data-ttu-id="0afcb-214">
                <paramref name="o1" /> ist größer als <paramref name="o2" />.</span><span class="sxs-lookup"><span data-stu-id="0afcb-214">
                <paramref name="o1" /> is greater than <paramref name="o2" />.</span></span>  
  
 </description>
            </item>
          </list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0afcb-215">Diese Klasse unterstützt Visual Basic-Compiler und nicht direkt aus Ihrem Code verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="0afcb-215">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/comparison-operators.md"><span data-ttu-id="0afcb-216">Vergleichsoperatoren (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="0afcb-216">Comparison Operators (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="PlusObj">
      <MemberSignature Language="C#" Value="public static object PlusObj (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public static object PlusObj(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.PlusObj(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PlusObj (obj As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ PlusObj(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="static member PlusObj : obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.ObjectType.PlusObj obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="0afcb-217">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="0afcb-217">Required.</span></span> <span data-ttu-id="0afcb-218">Ein beliebiger numerischer Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="0afcb-218">Any numeric expression.</span></span></param>
        <summary><span data-ttu-id="0afcb-219">Führt einen unären Additionsvorgang (+) aus.</span><span class="sxs-lookup"><span data-stu-id="0afcb-219">Performs a unary plus (+) operation.</span></span></summary>
        <returns><span data-ttu-id="0afcb-220">Der Wert von <paramref name="obj" />.</span><span class="sxs-lookup"><span data-stu-id="0afcb-220">The value of <paramref name="obj" />.</span></span> <span data-ttu-id="0afcb-221">(Das Vorzeichen von <paramref name="obj" /> wird nicht geändert.)</span><span class="sxs-lookup"><span data-stu-id="0afcb-221">(The sign of the <paramref name="obj" /> is unchanged.)</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0afcb-222">Diese Klasse unterstützt Visual Basic-Compiler und nicht direkt aus Ihrem Code verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="0afcb-222">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/addition-operator.md"><span data-ttu-id="0afcb-223">+-Operator (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="0afcb-223">+ Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="PowObj">
      <MemberSignature Language="C#" Value="public static object PowObj (object obj1, object obj2);" />
      <MemberSignature Language="ILAsm" Value=".method public static object PowObj(object obj1, object obj2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.PowObj(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PowObj (obj1 As Object, obj2 As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ PowObj(System::Object ^ obj1, System::Object ^ obj2);" />
      <MemberSignature Language="F#" Value="static member PowObj : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.ObjectType.PowObj (obj1, obj2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj1" Type="System.Object" />
        <Parameter Name="obj2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj1"><span data-ttu-id="0afcb-224">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="0afcb-224">Required.</span></span> <span data-ttu-id="0afcb-225">Ein beliebiger numerischer Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="0afcb-225">Any numeric expression.</span></span></param>
        <param name="obj2"><span data-ttu-id="0afcb-226">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="0afcb-226">Required.</span></span> <span data-ttu-id="0afcb-227">Ein beliebiger numerischer Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="0afcb-227">Any numeric expression.</span></span></param>
        <summary><span data-ttu-id="0afcb-228">Führt einen Exponentialvorgang (^) aus.</span><span class="sxs-lookup"><span data-stu-id="0afcb-228">Performs an exponent (^) operation.</span></span></summary>
        <returns><span data-ttu-id="0afcb-229">Das Ergebnis der Potenzierung von <paramref name="obj1" /> mit <paramref name="obj2" />.</span><span class="sxs-lookup"><span data-stu-id="0afcb-229">The result of <paramref name="obj1" /> raised to the power of <paramref name="obj2" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0afcb-230">Diese Klasse unterstützt Visual Basic-Compiler und nicht direkt aus Ihrem Code verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="0afcb-230">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/exponentiation-operators.md"><span data-ttu-id="0afcb-231">^-Operator (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="0afcb-231">^ Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ShiftLeftObj">
      <MemberSignature Language="C#" Value="public static object ShiftLeftObj (object o1, int amount);" />
      <MemberSignature Language="ILAsm" Value=".method public static object ShiftLeftObj(object o1, int32 amount) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.ShiftLeftObj(System.Object,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ShiftLeftObj (o1 As Object, amount As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ShiftLeftObj(System::Object ^ o1, int amount);" />
      <MemberSignature Language="F#" Value="static member ShiftLeftObj : obj * int -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.ObjectType.ShiftLeftObj (o1, amount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o1" Type="System.Object" />
        <Parameter Name="amount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="o1"><span data-ttu-id="0afcb-232">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="0afcb-232">Required.</span></span> <span data-ttu-id="0afcb-233">Ein ganzzahliger numerischer Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="0afcb-233">Integral numeric expression.</span></span> <span data-ttu-id="0afcb-234">Das zu verschiebende Bitmuster.</span><span class="sxs-lookup"><span data-stu-id="0afcb-234">The bit pattern to be shifted.</span></span> <span data-ttu-id="0afcb-235">Der Datentyp muss ein ganzzahliger Typ (<see langword="SByte" />, <see langword="Byte" />, <see langword="Short" />, <see langword="UShort" />, <see langword="Integer" />, <see langword="UInteger" />, <see langword="Long" /> oder <see langword="ULong" />) sein.</span><span class="sxs-lookup"><span data-stu-id="0afcb-235">The data type must be an integral type (<see langword="SByte" />, <see langword="Byte" />, <see langword="Short" />, <see langword="UShort" />, <see langword="Integer" />, <see langword="UInteger" />, <see langword="Long" />, or <see langword="ULong" />).</span></span></param>
        <param name="amount"><span data-ttu-id="0afcb-236">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="0afcb-236">Required.</span></span> <span data-ttu-id="0afcb-237">Ein numerischer Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="0afcb-237">Numeric expression.</span></span> <span data-ttu-id="0afcb-238">Die Anzahl der Bits, um die das Bitmuster verschoben werden soll.</span><span class="sxs-lookup"><span data-stu-id="0afcb-238">The number of bits to shift the bit pattern.</span></span> <span data-ttu-id="0afcb-239">Der Datentyp muss <see langword="Integer" /> sein oder zu <see langword="Integer" /> erweitert werden.</span><span class="sxs-lookup"><span data-stu-id="0afcb-239">The data type must be <see langword="Integer" /> or widen to <see langword="Integer" />.</span></span></param>
        <summary><span data-ttu-id="0afcb-240">Führt eine arithmetische Verschiebung nach links (&lt;&lt;) aus.</span><span class="sxs-lookup"><span data-stu-id="0afcb-240">Performs an arithmetic left shift (&lt;&lt;) operation.</span></span></summary>
        <returns><span data-ttu-id="0afcb-241">Ein ganzzahliger numerischer Wert.</span><span class="sxs-lookup"><span data-stu-id="0afcb-241">An integral numeric value.</span></span> <span data-ttu-id="0afcb-242">Das Ergebnis der Verschiebung des Bitmusters.</span><span class="sxs-lookup"><span data-stu-id="0afcb-242">The result of shifting the bit pattern.</span></span> <span data-ttu-id="0afcb-243">Der Datentyp entspricht dem von <paramref name="o1" />.</span><span class="sxs-lookup"><span data-stu-id="0afcb-243">The data type is the same as that of <paramref name="o1" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0afcb-244">Diese Klasse unterstützt Visual Basic-Compiler und nicht direkt aus Ihrem Code verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="0afcb-244">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/left-shift-operator.md"><span data-ttu-id="0afcb-245">&lt;&lt; -Operator (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="0afcb-245">&lt;&lt; Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ShiftRightObj">
      <MemberSignature Language="C#" Value="public static object ShiftRightObj (object o1, int amount);" />
      <MemberSignature Language="ILAsm" Value=".method public static object ShiftRightObj(object o1, int32 amount) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.ShiftRightObj(System.Object,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ShiftRightObj (o1 As Object, amount As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ShiftRightObj(System::Object ^ o1, int amount);" />
      <MemberSignature Language="F#" Value="static member ShiftRightObj : obj * int -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.ObjectType.ShiftRightObj (o1, amount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o1" Type="System.Object" />
        <Parameter Name="amount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="o1"><span data-ttu-id="0afcb-246">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="0afcb-246">Required.</span></span> <span data-ttu-id="0afcb-247">Ein ganzzahliger numerischer Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="0afcb-247">Integral numeric expression.</span></span> <span data-ttu-id="0afcb-248">Das zu verschiebende Bitmuster.</span><span class="sxs-lookup"><span data-stu-id="0afcb-248">The bit pattern to be shifted.</span></span> <span data-ttu-id="0afcb-249">Der Datentyp muss ein ganzzahliger Typ (<see langword="SByte" />, <see langword="Byte" />, <see langword="Short" />, <see langword="UShort" />, <see langword="Integer" />, <see langword="UInteger" />, <see langword="Long" /> oder <see langword="ULong" />) sein.</span><span class="sxs-lookup"><span data-stu-id="0afcb-249">The data type must be an integral type (<see langword="SByte" />, <see langword="Byte" />, <see langword="Short" />, <see langword="UShort" />, <see langword="Integer" />, <see langword="UInteger" />, <see langword="Long" />, or <see langword="ULong" />).</span></span></param>
        <param name="amount"><span data-ttu-id="0afcb-250">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="0afcb-250">Required.</span></span> <span data-ttu-id="0afcb-251">Ein numerischer Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="0afcb-251">Numeric expression.</span></span> <span data-ttu-id="0afcb-252">Die Anzahl der Bits, um die das Bitmuster verschoben werden soll.</span><span class="sxs-lookup"><span data-stu-id="0afcb-252">The number of bits to shift the bit pattern.</span></span> <span data-ttu-id="0afcb-253">Der Datentyp muss <see langword="Integer" /> sein oder zu <see langword="Integer" /> erweitert werden.</span><span class="sxs-lookup"><span data-stu-id="0afcb-253">The data type must be <see langword="Integer" /> or widen to <see langword="Integer" />.</span></span></param>
        <summary><span data-ttu-id="0afcb-254">Führt eine arithmetische Verschiebung nach rechts (&gt;&gt;) aus.</span><span class="sxs-lookup"><span data-stu-id="0afcb-254">Performs an arithmetic right shift (&gt;&gt;) operation.</span></span></summary>
        <returns><span data-ttu-id="0afcb-255">Ein ganzzahliger numerischer Wert.</span><span class="sxs-lookup"><span data-stu-id="0afcb-255">An integral numeric value.</span></span> <span data-ttu-id="0afcb-256">Das Ergebnis der Verschiebung des Bitmusters.</span><span class="sxs-lookup"><span data-stu-id="0afcb-256">The result of shifting the bit pattern.</span></span> <span data-ttu-id="0afcb-257">Der Datentyp entspricht dem von <paramref name="o1" />.</span><span class="sxs-lookup"><span data-stu-id="0afcb-257">The data type is the same as that of <paramref name="o1" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0afcb-258">Diese Klasse unterstützt Visual Basic-Compiler und nicht direkt aus Ihrem Code verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="0afcb-258">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/right-shift-operator.md"><span data-ttu-id="0afcb-259">&gt;&gt; -Operator (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="0afcb-259">&gt;&gt; Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="StrCatObj">
      <MemberSignature Language="C#" Value="public static object StrCatObj (object vLeft, object vRight);" />
      <MemberSignature Language="ILAsm" Value=".method public static object StrCatObj(object vLeft, object vRight) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.StrCatObj(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function StrCatObj (vLeft As Object, vRight As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ StrCatObj(System::Object ^ vLeft, System::Object ^ vRight);" />
      <MemberSignature Language="F#" Value="static member StrCatObj : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.ObjectType.StrCatObj (vLeft, vRight)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vLeft" Type="System.Object" />
        <Parameter Name="vRight" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="vLeft"><span data-ttu-id="0afcb-260">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="0afcb-260">Required.</span></span> <span data-ttu-id="0afcb-261">Beliebiger Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="0afcb-261">Any expression.</span></span></param>
        <param name="vRight"><span data-ttu-id="0afcb-262">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="0afcb-262">Required.</span></span> <span data-ttu-id="0afcb-263">Beliebiger Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="0afcb-263">Any expression.</span></span></param>
        <summary><span data-ttu-id="0afcb-264">Führt eine Zeichenfolgenverkettung (&amp;) aus.</span><span class="sxs-lookup"><span data-stu-id="0afcb-264">Performs a string concatenation (&amp;) operation.</span></span></summary>
        <returns><span data-ttu-id="0afcb-265">Eine Zeichenfolge, die die Verkettung von <paramref name="vLeft" /> und <paramref name="vRight" /> darstellt.</span><span class="sxs-lookup"><span data-stu-id="0afcb-265">A string representing the concatenation of <paramref name="vLeft" /> and <paramref name="vRight" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0afcb-266">Diese Klasse unterstützt Visual Basic-Compiler und nicht direkt aus Ihrem Code verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="0afcb-266">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/concatenation-operator.md"><span data-ttu-id="0afcb-267">&amp; -Operator (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="0afcb-267">&amp; Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SubObj">
      <MemberSignature Language="C#" Value="public static object SubObj (object o1, object o2);" />
      <MemberSignature Language="ILAsm" Value=".method public static object SubObj(object o1, object o2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.SubObj(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SubObj (o1 As Object, o2 As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ SubObj(System::Object ^ o1, System::Object ^ o2);" />
      <MemberSignature Language="F#" Value="static member SubObj : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.ObjectType.SubObj (o1, o2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o1" Type="System.Object" />
        <Parameter Name="o2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o1"><span data-ttu-id="0afcb-268">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="0afcb-268">Required.</span></span> <span data-ttu-id="0afcb-269">Ein beliebiger numerischer Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="0afcb-269">Any numeric expression.</span></span></param>
        <param name="o2"><span data-ttu-id="0afcb-270">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="0afcb-270">Required.</span></span> <span data-ttu-id="0afcb-271">Ein beliebiger numerischer Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="0afcb-271">Any numeric expression.</span></span></param>
        <summary><span data-ttu-id="0afcb-272">Führt einen Subtraktionsvorgang (–) aus.</span><span class="sxs-lookup"><span data-stu-id="0afcb-272">Performs a subtraction (-) operation.</span></span></summary>
        <returns><span data-ttu-id="0afcb-273">Die Differenz zwischen <paramref name="o1" /> und <paramref name="o2" />.</span><span class="sxs-lookup"><span data-stu-id="0afcb-273">The difference between <paramref name="o1" /> and <paramref name="o2" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0afcb-274">Diese Klasse unterstützt Visual Basic-Compiler und nicht direkt aus Ihrem Code verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="0afcb-274">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/subtraction-operator.md"><span data-ttu-id="0afcb-275">--Operator (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="0afcb-275">- Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="XorObj">
      <MemberSignature Language="C#" Value="public static object XorObj (object obj1, object obj2);" />
      <MemberSignature Language="ILAsm" Value=".method public static object XorObj(object obj1, object obj2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.XorObj(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function XorObj (obj1 As Object, obj2 As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ XorObj(System::Object ^ obj1, System::Object ^ obj2);" />
      <MemberSignature Language="F#" Value="static member XorObj : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.ObjectType.XorObj (obj1, obj2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj1" Type="System.Object" />
        <Parameter Name="obj2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj1"><span data-ttu-id="0afcb-276">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="0afcb-276">Required.</span></span> <span data-ttu-id="0afcb-277">Ein beliebiger <see langword="Boolean" />-Ausdruck oder numerischer Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="0afcb-277">Any <see langword="Boolean" /> or numeric expression.</span></span></param>
        <param name="obj2"><span data-ttu-id="0afcb-278">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="0afcb-278">Required.</span></span> <span data-ttu-id="0afcb-279">Ein beliebiger <see langword="Boolean" />-Ausdruck oder numerischer Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="0afcb-279">Any <see langword="Boolean" /> or numeric expression.</span></span></param>
        <summary><span data-ttu-id="0afcb-280">Führt einen <see langword="Xor" />-Vergleich aus.</span><span class="sxs-lookup"><span data-stu-id="0afcb-280">Performs an <see langword="Xor" /> comparison.</span></span></summary>
        <returns><span data-ttu-id="0afcb-281">Ein <see langword="Boolean" />-Wert oder ein numerischer Wert.</span><span class="sxs-lookup"><span data-stu-id="0afcb-281">A <see langword="Boolean" /> or numeric value.</span></span> <span data-ttu-id="0afcb-282">Bei einem <see langword="Boolean" />-Vergleich ist der Rückgabewert der logische Ausschluss (exklusive logische Disjunktion) aus zwei <see langword="Boolean" />-Werten.</span><span class="sxs-lookup"><span data-stu-id="0afcb-282">For a <see langword="Boolean" /> comparison, the return value is the logical exclusion (exclusive logical disjunction) of two <see langword="Boolean" /> values.</span></span> <span data-ttu-id="0afcb-283">Bei bitweisen (numerischen) Vorgängen ist der Rückgabewert ein numerischer Wert, der den bitweisen Ausschluss (exklusive bitweise Disjunktion) aus zwei numerischen Bitmustern darstellt.</span><span class="sxs-lookup"><span data-stu-id="0afcb-283">For bitwise (numeric) operations, the return value is a numeric value that represents the bitwise exclusion (exclusive bitwise disjunction) of two numeric bit patterns.</span></span> <span data-ttu-id="0afcb-284">Weitere Informationen finden Sie unter <see href="https://docs.microsoft.com/dotnet/visual-basic/language-reference/operators/xor-operator">Xor Operator</see>.</span><span class="sxs-lookup"><span data-stu-id="0afcb-284">For more information, see <see href="https://docs.microsoft.com/dotnet/visual-basic/language-reference/operators/xor-operator">Xor Operator</see>.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0afcb-285">Diese Klasse unterstützt Visual Basic-Compiler und nicht direkt aus Ihrem Code verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="0afcb-285">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/xor-operator.md"><span data-ttu-id="0afcb-286">Xor-Operator (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="0afcb-286">Xor Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>