<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Operators.xml" source-language="en-US" target-language="de-DE">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac50f2836cbb320d1b41c283f4d38c7019578668a6d.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0f2836cbb320d1b41c283f4d38c7019578668a6d</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:Microsoft.VisualBasic.CompilerServices.Operators">
          <source>Provides late-bound math operators, such as <ph id="ph1">&lt;see cref="M:Microsoft.VisualBasic.CompilerServices.Operators.AddObject(System.Object,System.Object)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObject(System.Object,System.Object,System.Boolean)" /&gt;</ph>, which the Visual Basic compiler uses internally.</source>
          <target state="translated">Stellt mathematische Operatoren mit später Bindung bereit, z. B. <ph id="ph1">&lt;see cref="M:Microsoft.VisualBasic.CompilerServices.Operators.AddObject(System.Object,System.Object)" /&gt;</ph> und <ph id="ph2">&lt;see cref="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObject(System.Object,System.Object,System.Boolean)" /&gt;</ph>, die vom Visual Basic-Compiler intern verwendet werden.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.CompilerServices.Operators">
          <source>This class supports the Visual Basic compiler and is not intended to be used directly from your code.</source>
          <target state="translated">Diese Klasse unterstützt das Visual Basic-Compiler und nicht direkt aus Ihrem Code verwendet werden soll.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.AddObject(System.Object,System.Object)">
          <source>Required.</source>
          <target state="translated">Erforderlich.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.AddObject(System.Object,System.Object)">
          <source>Any numeric expression.</source>
          <target state="translated">Ein beliebiger numerischer Ausdruck.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.AddObject(System.Object,System.Object)">
          <source>Required.</source>
          <target state="translated">Erforderlich.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.AddObject(System.Object,System.Object)">
          <source>Any numeric expression.</source>
          <target state="translated">Ein beliebiger numerischer Ausdruck.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.AddObject(System.Object,System.Object)">
          <source>Represents the Visual Basic addition (+) operator.</source>
          <target state="translated">Stellt den Visual Basic-Additionsoperator (+) dar.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.AddObject(System.Object,System.Object)">
          <source>The sum of <ph id="ph1">&lt;paramref name="Left" /&gt;</ph> and <ph id="ph2">&lt;paramref name="Right" /&gt;</ph>.</source>
          <target state="translated">Die Summe von <ph id="ph1">&lt;paramref name="Left" /&gt;</ph> und <ph id="ph2">&lt;paramref name="Right" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.AddObject(System.Object,System.Object)">
          <source>This class supports the Visual Basic compiler and is not intended to be used directly from your code.</source>
          <target state="translated">Diese Klasse unterstützt das Visual Basic-Compiler und nicht direkt aus Ihrem Code verwendet werden soll.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.AndObject(System.Object,System.Object)">
          <source>Required.</source>
          <target state="translated">Erforderlich.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.AndObject(System.Object,System.Object)">
          <source>Any <ph id="ph1">&lt;see langword="Boolean" /&gt;</ph> or numeric expression.</source>
          <target state="translated">Ein beliebiger <ph id="ph1">&lt;see langword="Boolean" /&gt;</ph>-Ausdruck oder numerischer Ausdruck.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.AndObject(System.Object,System.Object)">
          <source>Required.</source>
          <target state="translated">Erforderlich.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.AndObject(System.Object,System.Object)">
          <source>Any <ph id="ph1">&lt;see langword="Boolean" /&gt;</ph> or numeric expression.</source>
          <target state="translated">Ein beliebiger <ph id="ph1">&lt;see langword="Boolean" /&gt;</ph>-Ausdruck oder numerischer Ausdruck.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.AndObject(System.Object,System.Object)">
          <source>Represents the Visual Basic <ph id="ph1">&lt;see langword="And" /&gt;</ph> operator.</source>
          <target state="translated">Stellt den <ph id="ph1">&lt;see langword="And" /&gt;</ph>-Operator in Visual Basic dar.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.AndObject(System.Object,System.Object)">
          <source>For <ph id="ph1">&lt;see langword="Boolean" /&gt;</ph> operations, <ph id="ph2">&lt;see langword="True" /&gt;</ph> if both <ph id="ph3">&lt;paramref name="Left" /&gt;</ph> and <ph id="ph4">&lt;paramref name="Right" /&gt;</ph> evaluate to <ph id="ph5">&lt;see langword="True" /&gt;</ph>; otherwise, <ph id="ph6">&lt;see langword="False" /&gt;</ph>.</source>
          <target state="translated">Für <ph id="ph1">&lt;see langword="Boolean" /&gt;</ph>-Operationen: <ph id="ph2">&lt;see langword="True" /&gt;</ph>, wenn sowohl <ph id="ph3">&lt;paramref name="Left" /&gt;</ph> als auch <ph id="ph4">&lt;paramref name="Right" /&gt;</ph> <ph id="ph5">&lt;see langword="True" /&gt;</ph> ergeben, andernfalls <ph id="ph6">&lt;see langword="False" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.AndObject(System.Object,System.Object)">
          <source>For bitwise operations, 1 if both <ph id="ph1">&lt;paramref name="Left" /&gt;</ph> and <ph id="ph2">&lt;paramref name="Right" /&gt;</ph> evaluate to 1; otherwise, 0.</source>
          <target state="translated">Für bitweise Operationen: 1, wenn sowohl <ph id="ph1">&lt;paramref name="Left" /&gt;</ph> als auch <ph id="ph2">&lt;paramref name="Right" /&gt;</ph> 1 ergeben, andernfalls 0.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.AndObject(System.Object,System.Object)">
          <source>This class supports the Visual Basic compiler and is not intended to be used directly from your code.</source>
          <target state="translated">Diese Klasse unterstützt das Visual Basic-Compiler und nicht direkt aus Ihrem Code verwendet werden soll.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObject(System.Object,System.Object,System.Boolean)">
          <source>Required.</source>
          <target state="translated">Erforderlich.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObject(System.Object,System.Object,System.Boolean)">
          <source>Any expression.</source>
          <target state="translated">Beliebiger Ausdruck.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObject(System.Object,System.Object,System.Boolean)">
          <source>Required.</source>
          <target state="translated">Erforderlich.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObject(System.Object,System.Object,System.Boolean)">
          <source>Any expression.</source>
          <target state="translated">Beliebiger Ausdruck.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObject(System.Object,System.Object,System.Boolean)">
          <source>Required.</source>
          <target state="translated">Erforderlich.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObject(System.Object,System.Object,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="True" /&gt;</ph> to perform a case-insensitive string comparison; otherwise, <ph id="ph2">&lt;see langword="False" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="True" /&gt;</ph>, um einen Zeichenfolgenvergleich ohne Berücksichtigung der Groß- und Kleinschreibung auszuführen, andernfalls <ph id="ph2">&lt;see langword="False" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObject(System.Object,System.Object,System.Boolean)">
          <source>Represents Visual Basic comparison operators.</source>
          <target state="translated">Stellt Vergleichsoperatoren in Visual Basic dar.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObject(System.Object,System.Object,System.Boolean)">
          <source>Value</source>
          <target state="translated">Wert</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObject(System.Object,System.Object,System.Boolean)">
          <source>Condition</source>
          <target state="translated">Bedingung</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObject(System.Object,System.Object,System.Boolean)">
          <source>-1</source>
          <target state="translated">-1</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObject(System.Object,System.Object,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="Left" /&gt;</ph> is less than <ph id="ph2">&lt;paramref name="Right" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="Left" /&gt;</ph> ist kleiner als <ph id="ph2">&lt;paramref name="Right" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObject(System.Object,System.Object,System.Boolean)">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObject(System.Object,System.Object,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="Left" /&gt;</ph> and <ph id="ph2">&lt;paramref name="Right" /&gt;</ph> are equal.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="Left" /&gt;</ph> und <ph id="ph2">&lt;paramref name="Right" /&gt;</ph> sind gleich.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObject(System.Object,System.Object,System.Boolean)">
          <source>1</source>
          <target state="translated">1</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObject(System.Object,System.Object,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="Left" /&gt;</ph> is greater than <ph id="ph2">&lt;paramref name="Right" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="Left" /&gt;</ph> ist größer als <ph id="ph2">&lt;paramref name="Right" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObject(System.Object,System.Object,System.Boolean)">
          <source>This class supports the Visual Basic compiler and is not intended to be used directly from your code.</source>
          <target state="translated">Diese Klasse unterstützt das Visual Basic-Compiler und nicht direkt aus Ihrem Code verwendet werden soll.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectEqual(System.Object,System.Object,System.Boolean)">
          <source>Required.</source>
          <target state="translated">Erforderlich.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectEqual(System.Object,System.Object,System.Boolean)">
          <source>Any expression.</source>
          <target state="translated">Beliebiger Ausdruck.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectEqual(System.Object,System.Object,System.Boolean)">
          <source>Required.</source>
          <target state="translated">Erforderlich.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectEqual(System.Object,System.Object,System.Boolean)">
          <source>Any expression.</source>
          <target state="translated">Beliebiger Ausdruck.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectEqual(System.Object,System.Object,System.Boolean)">
          <source>Required.</source>
          <target state="translated">Erforderlich.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectEqual(System.Object,System.Object,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="True" /&gt;</ph> to perform a case-insensitive string comparison; otherwise, <ph id="ph2">&lt;see langword="False" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="True" /&gt;</ph>, um einen Zeichenfolgenvergleich ohne Berücksichtigung der Groß- und Kleinschreibung auszuführen, andernfalls <ph id="ph2">&lt;see langword="False" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectEqual(System.Object,System.Object,System.Boolean)">
          <source>Represents the Visual Basic equal (=) operator.</source>
          <target state="translated">Stellt den Visual Basic-Gleichheitsoperator (=) dar.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectEqual(System.Object,System.Object,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="True" /&gt;</ph> if <ph id="ph2">&lt;paramref name="Left" /&gt;</ph> and <ph id="ph3">&lt;paramref name="Right" /&gt;</ph> are equal; otherwise, <ph id="ph4">&lt;see langword="False" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="True" /&gt;</ph>, wenn <ph id="ph2">&lt;paramref name="Left" /&gt;</ph> und <ph id="ph3">&lt;paramref name="Right" /&gt;</ph> gleich sind, andernfalls <ph id="ph4">&lt;see langword="False" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectEqual(System.Object,System.Object,System.Boolean)">
          <source>This class supports the Visual Basic compiler and is not intended to be used directly from your code.</source>
          <target state="translated">Diese Klasse unterstützt das Visual Basic-Compiler und nicht direkt aus Ihrem Code verwendet werden soll.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectGreater(System.Object,System.Object,System.Boolean)">
          <source>Required.</source>
          <target state="translated">Erforderlich.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectGreater(System.Object,System.Object,System.Boolean)">
          <source>Any expression.</source>
          <target state="translated">Beliebiger Ausdruck.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectGreater(System.Object,System.Object,System.Boolean)">
          <source>Required.</source>
          <target state="translated">Erforderlich.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectGreater(System.Object,System.Object,System.Boolean)">
          <source>Any expression.</source>
          <target state="translated">Beliebiger Ausdruck.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectGreater(System.Object,System.Object,System.Boolean)">
          <source>Required.</source>
          <target state="translated">Erforderlich.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectGreater(System.Object,System.Object,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="True" /&gt;</ph> to perform a case-insensitive string comparison; otherwise, <ph id="ph2">&lt;see langword="False" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="True" /&gt;</ph>, um einen Zeichenfolgenvergleich ohne Berücksichtigung der Groß- und Kleinschreibung auszuführen, andernfalls <ph id="ph2">&lt;see langword="False" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectGreater(System.Object,System.Object,System.Boolean)">
          <source>Represents the Visual Basic greater-than (<ph id="ph1">&amp;gt;</ph>) operator.</source>
          <target state="translated">Stellt den Visual Basic-größer-als (<ph id="ph1">&amp;gt;</ph>)-Operator dar.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectGreater(System.Object,System.Object,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="True" /&gt;</ph> if <ph id="ph2">&lt;paramref name="Left" /&gt;</ph> is greater than <ph id="ph3">&lt;paramref name="Right" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="False" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="True" /&gt;</ph>, wenn <ph id="ph2">&lt;paramref name="Left" /&gt;</ph> größer als <ph id="ph3">&lt;paramref name="Right" /&gt;</ph> ist, andernfalls <ph id="ph4">&lt;see langword="False" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectGreater(System.Object,System.Object,System.Boolean)">
          <source>This class supports the Visual Basic compiler and is not intended to be used directly from your code.</source>
          <target state="translated">Diese Klasse unterstützt das Visual Basic-Compiler und nicht direkt aus Ihrem Code verwendet werden soll.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectGreaterEqual(System.Object,System.Object,System.Boolean)">
          <source>Required.</source>
          <target state="translated">Erforderlich.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectGreaterEqual(System.Object,System.Object,System.Boolean)">
          <source>Any expression.</source>
          <target state="translated">Beliebiger Ausdruck.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectGreaterEqual(System.Object,System.Object,System.Boolean)">
          <source>Required.</source>
          <target state="translated">Erforderlich.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectGreaterEqual(System.Object,System.Object,System.Boolean)">
          <source>Any expression.</source>
          <target state="translated">Beliebiger Ausdruck.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectGreaterEqual(System.Object,System.Object,System.Boolean)">
          <source>Required.</source>
          <target state="translated">Erforderlich.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectGreaterEqual(System.Object,System.Object,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="True" /&gt;</ph> to perform a case-insensitive string comparison; otherwise, <ph id="ph2">&lt;see langword="False" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="True" /&gt;</ph>, um einen Zeichenfolgenvergleich ohne Berücksichtigung der Groß- und Kleinschreibung auszuführen, andernfalls <ph id="ph2">&lt;see langword="False" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectGreaterEqual(System.Object,System.Object,System.Boolean)">
          <source>Represents the Visual Basic greater-than or equal-to (<ph id="ph1">&amp;gt;</ph>=) operator.</source>
          <target state="translated">Stellt den Visual Basic-größer-als-oder-gleich (<ph id="ph1">&amp;gt;</ph>=)-Operator dar.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectGreaterEqual(System.Object,System.Object,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="True" /&gt;</ph> if <ph id="ph2">&lt;paramref name="Left" /&gt;</ph> is greater than or equal to <ph id="ph3">&lt;paramref name="Right" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="False" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="True" /&gt;</ph>, wenn <ph id="ph2">&lt;paramref name="Left" /&gt;</ph> größer oder gleich <ph id="ph3">&lt;paramref name="Right" /&gt;</ph> ist, andernfalls <ph id="ph4">&lt;see langword="False" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectGreaterEqual(System.Object,System.Object,System.Boolean)">
          <source>This class supports the Visual Basic compiler and is not intended to be used directly from your code.</source>
          <target state="translated">Diese Klasse unterstützt das Visual Basic-Compiler und nicht direkt aus Ihrem Code verwendet werden soll.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectLess(System.Object,System.Object,System.Boolean)">
          <source>Required.</source>
          <target state="translated">Erforderlich.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectLess(System.Object,System.Object,System.Boolean)">
          <source>Any expression.</source>
          <target state="translated">Beliebiger Ausdruck.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectLess(System.Object,System.Object,System.Boolean)">
          <source>Required.</source>
          <target state="translated">Erforderlich.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectLess(System.Object,System.Object,System.Boolean)">
          <source>Any expression.</source>
          <target state="translated">Beliebiger Ausdruck.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectLess(System.Object,System.Object,System.Boolean)">
          <source>Required.</source>
          <target state="translated">Erforderlich.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectLess(System.Object,System.Object,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="True" /&gt;</ph> to perform a case-insensitive string comparison; otherwise, <ph id="ph2">&lt;see langword="False" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="True" /&gt;</ph>, um einen Zeichenfolgenvergleich ohne Berücksichtigung der Groß- und Kleinschreibung auszuführen, andernfalls <ph id="ph2">&lt;see langword="False" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectLess(System.Object,System.Object,System.Boolean)">
          <source>Represents the Visual Basic less-than (<ph id="ph1">&amp;lt;</ph>) operator.</source>
          <target state="translated">Stellt den Visual Basic-kleiner-als (<ph id="ph1">&amp;lt;</ph>)-Operator dar.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectLess(System.Object,System.Object,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="True" /&gt;</ph> if <ph id="ph2">&lt;paramref name="Left" /&gt;</ph> is less than <ph id="ph3">&lt;paramref name="Right" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="False" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="True" /&gt;</ph>, wenn <ph id="ph2">&lt;paramref name="Left" /&gt;</ph> kleiner als <ph id="ph3">&lt;paramref name="Right" /&gt;</ph> ist, andernfalls <ph id="ph4">&lt;see langword="False" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectLess(System.Object,System.Object,System.Boolean)">
          <source>This class supports the Visual Basic compiler and is not intended to be used directly from your code.</source>
          <target state="translated">Diese Klasse unterstützt das Visual Basic-Compiler und nicht direkt aus Ihrem Code verwendet werden soll.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectLessEqual(System.Object,System.Object,System.Boolean)">
          <source>Required.</source>
          <target state="translated">Erforderlich.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectLessEqual(System.Object,System.Object,System.Boolean)">
          <source>Any expression.</source>
          <target state="translated">Beliebiger Ausdruck.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectLessEqual(System.Object,System.Object,System.Boolean)">
          <source>Required.</source>
          <target state="translated">Erforderlich.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectLessEqual(System.Object,System.Object,System.Boolean)">
          <source>Any expression.</source>
          <target state="translated">Beliebiger Ausdruck.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectLessEqual(System.Object,System.Object,System.Boolean)">
          <source>Required.</source>
          <target state="translated">Erforderlich.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectLessEqual(System.Object,System.Object,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="True" /&gt;</ph> to perform a case-insensitive string comparison; otherwise, <ph id="ph2">&lt;see langword="False" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="True" /&gt;</ph>, um einen Zeichenfolgenvergleich ohne Berücksichtigung der Groß- und Kleinschreibung auszuführen, andernfalls <ph id="ph2">&lt;see langword="False" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectLessEqual(System.Object,System.Object,System.Boolean)">
          <source>Represents the Visual Basic less-than or equal-to (<ph id="ph1">&amp;lt;</ph>=) operator.</source>
          <target state="translated">Stellt den Visual Basic-kleiner-als-oder-gleich (<ph id="ph1">&amp;lt;</ph>=)-Operator dar.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectLessEqual(System.Object,System.Object,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="True" /&gt;</ph> if <ph id="ph2">&lt;paramref name="Left" /&gt;</ph> is less than or equal to <ph id="ph3">&lt;paramref name="Right" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="False" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="True" /&gt;</ph>, wenn <ph id="ph2">&lt;paramref name="Left" /&gt;</ph> kleiner oder gleich <ph id="ph3">&lt;paramref name="Right" /&gt;</ph> ist, andernfalls <ph id="ph4">&lt;see langword="False" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectLessEqual(System.Object,System.Object,System.Boolean)">
          <source>This class supports the Visual Basic compiler and is not intended to be used directly from your code.</source>
          <target state="translated">Diese Klasse unterstützt das Visual Basic-Compiler und nicht direkt aus Ihrem Code verwendet werden soll.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectNotEqual(System.Object,System.Object,System.Boolean)">
          <source>Required.</source>
          <target state="translated">Erforderlich.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectNotEqual(System.Object,System.Object,System.Boolean)">
          <source>Any expression.</source>
          <target state="translated">Beliebiger Ausdruck.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectNotEqual(System.Object,System.Object,System.Boolean)">
          <source>Required.</source>
          <target state="translated">Erforderlich.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectNotEqual(System.Object,System.Object,System.Boolean)">
          <source>Any expression.</source>
          <target state="translated">Beliebiger Ausdruck.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectNotEqual(System.Object,System.Object,System.Boolean)">
          <source>Required.</source>
          <target state="translated">Erforderlich.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectNotEqual(System.Object,System.Object,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="True" /&gt;</ph> to perform a case-insensitive string comparison; otherwise, <ph id="ph2">&lt;see langword="False" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="True" /&gt;</ph>, um einen Zeichenfolgenvergleich ohne Berücksichtigung der Groß- und Kleinschreibung auszuführen, andernfalls <ph id="ph2">&lt;see langword="False" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectNotEqual(System.Object,System.Object,System.Boolean)">
          <source>Represents the Visual Basic not-equal (<ph id="ph1">&amp;lt;</ph><ph id="ph2">&amp;gt;</ph>) operator.</source>
          <target state="translated">Stellt den Visual Basic-Ungleichheitsoperator (<ph id="ph1">&amp;lt;</ph><ph id="ph2">&amp;gt;</ph>) dar.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectNotEqual(System.Object,System.Object,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="True" /&gt;</ph> if <ph id="ph2">&lt;paramref name="Left" /&gt;</ph> is not equal to <ph id="ph3">&lt;paramref name="Right" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="False" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="True" /&gt;</ph>, wenn <ph id="ph2">&lt;paramref name="Left" /&gt;</ph> und <ph id="ph3">&lt;paramref name="Right" /&gt;</ph> ungleich sind, andernfalls <ph id="ph4">&lt;see langword="False" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectNotEqual(System.Object,System.Object,System.Boolean)">
          <source>This class supports the Visual Basic compiler and is not intended to be used directly from your code.</source>
          <target state="translated">Diese Klasse unterstützt das Visual Basic-Compiler und nicht direkt aus Ihrem Code verwendet werden soll.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareString(System.String,System.String,System.Boolean)">
          <source>Required.</source>
          <target state="translated">Erforderlich.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareString(System.String,System.String,System.Boolean)">
          <source>Any <ph id="ph1">&lt;see langword="String" /&gt;</ph> expression.</source>
          <target state="translated">Beliebiger <ph id="ph1">&lt;see langword="String" /&gt;</ph>-Ausdruck.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareString(System.String,System.String,System.Boolean)">
          <source>Required.</source>
          <target state="translated">Erforderlich.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareString(System.String,System.String,System.Boolean)">
          <source>Any <ph id="ph1">&lt;see langword="String" /&gt;</ph> expression.</source>
          <target state="translated">Beliebiger <ph id="ph1">&lt;see langword="String" /&gt;</ph>-Ausdruck.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareString(System.String,System.String,System.Boolean)">
          <source>Required.</source>
          <target state="translated">Erforderlich.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareString(System.String,System.String,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="True" /&gt;</ph> to perform a case-insensitive string comparison; otherwise, <ph id="ph2">&lt;see langword="False" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="True" /&gt;</ph>, um einen Zeichenfolgenvergleich ohne Berücksichtigung der Groß- und Kleinschreibung auszuführen, andernfalls <ph id="ph2">&lt;see langword="False" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareString(System.String,System.String,System.Boolean)">
          <source>Performs binary or text string comparison when given two strings.</source>
          <target state="translated">Führt einen binären Vergleich oder einen Textzeichenfolgenvergleich für zwei angegebene Zeichenfolgen aus.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareString(System.String,System.String,System.Boolean)">
          <source>Value</source>
          <target state="translated">Wert</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareString(System.String,System.String,System.Boolean)">
          <source>Condition</source>
          <target state="translated">Bedingung</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareString(System.String,System.String,System.Boolean)">
          <source>-1</source>
          <target state="translated">-1</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareString(System.String,System.String,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="Left" /&gt;</ph> is less than <ph id="ph2">&lt;paramref name="Right" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="Left" /&gt;</ph> ist kleiner als <ph id="ph2">&lt;paramref name="Right" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareString(System.String,System.String,System.Boolean)">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareString(System.String,System.String,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="Left" /&gt;</ph> is equal to <ph id="ph2">&lt;paramref name="Right" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="Left" /&gt;</ph> ist gleich <ph id="ph2">&lt;paramref name="Right" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareString(System.String,System.String,System.Boolean)">
          <source>1</source>
          <target state="translated">1</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareString(System.String,System.String,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="Left" /&gt;</ph> is greater than <ph id="ph2">&lt;paramref name="Right" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="Left" /&gt;</ph> ist größer als <ph id="ph2">&lt;paramref name="Right" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareString(System.String,System.String,System.Boolean)">
          <source>This class supports the Visual Basic compiler and is not intended to be used directly from your code.</source>
          <target state="translated">Diese Klasse unterstützt das Visual Basic-Compiler und nicht direkt aus Ihrem Code verwendet werden soll.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareString(System.String,System.String,System.Boolean)">
          <source>When the Visual Basic equality operator is used to compare two strings, it passes the strings to the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.CompilerServices.Operators.CompareString%2A&gt;</ph> method along with a value of <ph id="ph2">`False`</ph> for the <ph id="ph3">`TextCompare`</ph> argument.</source>
          <target state="translated">Wenn der Visual Basic-Gleichheitsoperator zum Vergleichen von zwei Zeichenfolgen verwendet wird, übergibt er die Zeichenfolgen, die die <ph id="ph1">&lt;xref:Microsoft.VisualBasic.CompilerServices.Operators.CompareString%2A&gt;</ph> -Methode zusammen mit einem Wert von <ph id="ph2">`False`</ph> für die <ph id="ph3">`TextCompare`</ph> Argument.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareString(System.String,System.String,System.Boolean)">
          <source>This performs a case-sensitive comparison that is either ordinal or based on the current culture, depending on the value of the  statement.</source>
          <target state="translated">Dies führt ein Groß-/ kleinschreibungsvergleich, die entweder ordinal oder auf Grundlage der aktuellen Kultur, abhängig vom Wert der Anweisung ist.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.ConcatenateObject(System.Object,System.Object)">
          <source>Required.</source>
          <target state="translated">Erforderlich.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.ConcatenateObject(System.Object,System.Object)">
          <source>Any expression.</source>
          <target state="translated">Beliebiger Ausdruck.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.ConcatenateObject(System.Object,System.Object)">
          <source>Required.</source>
          <target state="translated">Erforderlich.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.ConcatenateObject(System.Object,System.Object)">
          <source>Any expression.</source>
          <target state="translated">Beliebiger Ausdruck.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.ConcatenateObject(System.Object,System.Object)">
          <source>Represents the Visual Basic concatenation (<ph id="ph1">&amp;amp;</ph>) operator.</source>
          <target state="translated">Stellt den Visual Basic-Verkettungsoperator (<ph id="ph1">&amp;amp;</ph>) dar.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.ConcatenateObject(System.Object,System.Object)">
          <source>A string representing the concatenation of <ph id="ph1">&lt;paramref name="Left" /&gt;</ph> and <ph id="ph2">&lt;paramref name="Right" /&gt;</ph>.</source>
          <target state="translated">Eine Zeichenfolge, die die Verkettung von <ph id="ph1">&lt;paramref name="Left" /&gt;</ph> und <ph id="ph2">&lt;paramref name="Right" /&gt;</ph> darstellt.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.ConcatenateObject(System.Object,System.Object)">
          <source>This class supports the Visual Basic compiler and is not intended to be used directly from your code.</source>
          <target state="translated">Diese Klasse unterstützt das Visual Basic-Compiler und nicht direkt aus Ihrem Code verwendet werden soll.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectEqual(System.Object,System.Object,System.Boolean)">
          <source>Required.</source>
          <target state="translated">Erforderlich.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectEqual(System.Object,System.Object,System.Boolean)">
          <source>Any expression.</source>
          <target state="translated">Beliebiger Ausdruck.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectEqual(System.Object,System.Object,System.Boolean)">
          <source>Required.</source>
          <target state="translated">Erforderlich.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectEqual(System.Object,System.Object,System.Boolean)">
          <source>Any expression.</source>
          <target state="translated">Beliebiger Ausdruck.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectEqual(System.Object,System.Object,System.Boolean)">
          <source>Required.</source>
          <target state="translated">Erforderlich.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectEqual(System.Object,System.Object,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="True" /&gt;</ph> to perform a case-insensitive string comparison; otherwise, <ph id="ph2">&lt;see langword="False" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="True" /&gt;</ph>, um einen Zeichenfolgenvergleich ohne Berücksichtigung der Groß- und Kleinschreibung auszuführen, andernfalls <ph id="ph2">&lt;see langword="False" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectEqual(System.Object,System.Object,System.Boolean)">
          <source>Represents the overloaded Visual Basic equals (=) operator.</source>
          <target state="translated">Stellt den überladenen Visual Basic-Gleichheitsoperator (=) dar.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectEqual(System.Object,System.Object,System.Boolean)">
          <source>The result of the overloaded equals operator.</source>
          <target state="translated">Das Ergebnis des überladenen Gleichheitsoperators.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectEqual(System.Object,System.Object,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="False" /&gt;</ph> if operator overloading is not supported.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="False" /&gt;</ph>, wenn eine Operatorüberladung nicht unterstützt wird.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectEqual(System.Object,System.Object,System.Boolean)">
          <source>This class supports the Visual Basic compiler and is not intended to be used directly from your code.</source>
          <target state="translated">Diese Klasse unterstützt das Visual Basic-Compiler und nicht direkt aus Ihrem Code verwendet werden soll.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreater(System.Object,System.Object,System.Boolean)">
          <source>Required.</source>
          <target state="translated">Erforderlich.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreater(System.Object,System.Object,System.Boolean)">
          <source>Any expression.</source>
          <target state="translated">Beliebiger Ausdruck.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreater(System.Object,System.Object,System.Boolean)">
          <source>Required.</source>
          <target state="translated">Erforderlich.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreater(System.Object,System.Object,System.Boolean)">
          <source>Any expression.</source>
          <target state="translated">Beliebiger Ausdruck.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreater(System.Object,System.Object,System.Boolean)">
          <source>Required.</source>
          <target state="translated">Erforderlich.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreater(System.Object,System.Object,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="True" /&gt;</ph> to perform a case-insensitive string comparison; otherwise, <ph id="ph2">&lt;see langword="False" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="True" /&gt;</ph>, um einen Zeichenfolgenvergleich ohne Berücksichtigung der Groß- und Kleinschreibung auszuführen, andernfalls <ph id="ph2">&lt;see langword="False" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreater(System.Object,System.Object,System.Boolean)">
          <source>Represents the overloaded Visual Basic greater-than (<ph id="ph1">&amp;gt;</ph>) operator.</source>
          <target state="translated">Stellt den überladenen Visual Basic-größer-als (<ph id="ph1">&amp;gt;</ph>)-Operator dar.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreater(System.Object,System.Object,System.Boolean)">
          <source>The result of the overloaded greater-than operator.</source>
          <target state="translated">Das Ergebnis des überladenen Größer-als-Operators.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreater(System.Object,System.Object,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="False" /&gt;</ph> if operator overloading is not supported.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="False" /&gt;</ph>, wenn eine Operatorüberladung nicht unterstützt wird.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreater(System.Object,System.Object,System.Boolean)">
          <source>This class supports the Visual Basic compiler and is not intended to be used directly from your code.</source>
          <target state="translated">Diese Klasse unterstützt das Visual Basic-Compiler und nicht direkt aus Ihrem Code verwendet werden soll.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreaterEqual(System.Object,System.Object,System.Boolean)">
          <source>Required.</source>
          <target state="translated">Erforderlich.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreaterEqual(System.Object,System.Object,System.Boolean)">
          <source>Any expression.</source>
          <target state="translated">Beliebiger Ausdruck.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreaterEqual(System.Object,System.Object,System.Boolean)">
          <source>Required.</source>
          <target state="translated">Erforderlich.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreaterEqual(System.Object,System.Object,System.Boolean)">
          <source>Any expression.</source>
          <target state="translated">Beliebiger Ausdruck.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreaterEqual(System.Object,System.Object,System.Boolean)">
          <source>Required.</source>
          <target state="translated">Erforderlich.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreaterEqual(System.Object,System.Object,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="True" /&gt;</ph> to perform a case-insensitive string comparison; otherwise, <ph id="ph2">&lt;see langword="False" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="True" /&gt;</ph>, um einen Zeichenfolgenvergleich ohne Berücksichtigung der Groß- und Kleinschreibung auszuführen, andernfalls <ph id="ph2">&lt;see langword="False" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreaterEqual(System.Object,System.Object,System.Boolean)">
          <source>Represents the overloaded Visual Basic greater-than or equal-to (<ph id="ph1">&amp;gt;</ph>=) operator.</source>
          <target state="translated">Stellt den überladenen Visual Basic-größer-als-oder-gleich (<ph id="ph1">&amp;gt;</ph>=)-Operator dar.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreaterEqual(System.Object,System.Object,System.Boolean)">
          <source>The result of the overloaded greater-than or equal-to operator.</source>
          <target state="translated">Das Ergebnis des überladenen Größer-als-Operators oder des überladenen Gleichheitsoperators.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreaterEqual(System.Object,System.Object,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="False" /&gt;</ph> if operator overloading is not supported.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="False" /&gt;</ph>, wenn eine Operatorüberladung nicht unterstützt wird.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreaterEqual(System.Object,System.Object,System.Boolean)">
          <source>This class supports the Visual Basic compiler and is not intended to be used directly from your code.</source>
          <target state="translated">Diese Klasse unterstützt das Visual Basic-Compiler und nicht direkt aus Ihrem Code verwendet werden soll.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLess(System.Object,System.Object,System.Boolean)">
          <source>Required.</source>
          <target state="translated">Erforderlich.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLess(System.Object,System.Object,System.Boolean)">
          <source>Any expression.</source>
          <target state="translated">Beliebiger Ausdruck.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLess(System.Object,System.Object,System.Boolean)">
          <source>Required.</source>
          <target state="translated">Erforderlich.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLess(System.Object,System.Object,System.Boolean)">
          <source>Any expression.</source>
          <target state="translated">Beliebiger Ausdruck.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLess(System.Object,System.Object,System.Boolean)">
          <source>Required.</source>
          <target state="translated">Erforderlich.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLess(System.Object,System.Object,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="True" /&gt;</ph> to perform a case-insensitive string comparison; otherwise, <ph id="ph2">&lt;see langword="False" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="True" /&gt;</ph>, um einen Zeichenfolgenvergleich ohne Berücksichtigung der Groß- und Kleinschreibung auszuführen, andernfalls <ph id="ph2">&lt;see langword="False" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLess(System.Object,System.Object,System.Boolean)">
          <source>Represents the overloaded Visual Basic less-than (<ph id="ph1">&amp;lt;</ph>) operator.</source>
          <target state="translated">Stellt den überladenen Visual Basic-kleiner-als (<ph id="ph1">&amp;lt;</ph>)-Operator dar.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLess(System.Object,System.Object,System.Boolean)">
          <source>The result of the overloaded less-than operator.</source>
          <target state="translated">Das Ergebnis des überladenen Kleiner-als-Operators.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLess(System.Object,System.Object,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="False" /&gt;</ph> if operator overloading is not supported.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="False" /&gt;</ph>, wenn eine Operatorüberladung nicht unterstützt wird.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLess(System.Object,System.Object,System.Boolean)">
          <source>This class supports the Visual Basic compiler and is not intended to be used directly from your code.</source>
          <target state="translated">Diese Klasse unterstützt das Visual Basic-Compiler und nicht direkt aus Ihrem Code verwendet werden soll.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLessEqual(System.Object,System.Object,System.Boolean)">
          <source>Required.</source>
          <target state="translated">Erforderlich.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLessEqual(System.Object,System.Object,System.Boolean)">
          <source>Any expression.</source>
          <target state="translated">Beliebiger Ausdruck.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLessEqual(System.Object,System.Object,System.Boolean)">
          <source>Required.</source>
          <target state="translated">Erforderlich.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLessEqual(System.Object,System.Object,System.Boolean)">
          <source>Any expression.</source>
          <target state="translated">Beliebiger Ausdruck.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLessEqual(System.Object,System.Object,System.Boolean)">
          <source>Required.</source>
          <target state="translated">Erforderlich.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLessEqual(System.Object,System.Object,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="True" /&gt;</ph> to perform a case-insensitive string comparison; otherwise, <ph id="ph2">&lt;see langword="False" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="True" /&gt;</ph>, um einen Zeichenfolgenvergleich ohne Berücksichtigung der Groß- und Kleinschreibung auszuführen, andernfalls <ph id="ph2">&lt;see langword="False" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLessEqual(System.Object,System.Object,System.Boolean)">
          <source>Represents the overloaded Visual Basic less-than or equal-to (<ph id="ph1">&amp;lt;</ph>=) operator.</source>
          <target state="translated">Stellt den überladenen Visual Basic-kleiner-als-oder-gleich (<ph id="ph1">&amp;lt;</ph>=)-Operator dar.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLessEqual(System.Object,System.Object,System.Boolean)">
          <source>The result of the overloaded less-than or equal-to operator.</source>
          <target state="translated">Das Ergebnis des überladenen Kleiner-als-Operators oder des überladenen Gleichheitsoperators.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLessEqual(System.Object,System.Object,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="False" /&gt;</ph> if operator overloading is not supported.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="False" /&gt;</ph>, wenn eine Operatorüberladung nicht unterstützt wird.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLessEqual(System.Object,System.Object,System.Boolean)">
          <source>This class supports the Visual Basic compiler and is not intended to be used directly from your code.</source>
          <target state="translated">Diese Klasse unterstützt das Visual Basic-Compiler und nicht direkt aus Ihrem Code verwendet werden soll.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectNotEqual(System.Object,System.Object,System.Boolean)">
          <source>Required.</source>
          <target state="translated">Erforderlich.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectNotEqual(System.Object,System.Object,System.Boolean)">
          <source>Any expression.</source>
          <target state="translated">Beliebiger Ausdruck.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectNotEqual(System.Object,System.Object,System.Boolean)">
          <source>Required.</source>
          <target state="translated">Erforderlich.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectNotEqual(System.Object,System.Object,System.Boolean)">
          <source>Any expression.</source>
          <target state="translated">Beliebiger Ausdruck.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectNotEqual(System.Object,System.Object,System.Boolean)">
          <source>Required.</source>
          <target state="translated">Erforderlich.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectNotEqual(System.Object,System.Object,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="True" /&gt;</ph> to perform a case-insensitive string comparison; otherwise, <ph id="ph2">&lt;see langword="False" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="True" /&gt;</ph>, um einen Zeichenfolgenvergleich ohne Berücksichtigung der Groß- und Kleinschreibung auszuführen, andernfalls <ph id="ph2">&lt;see langword="False" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectNotEqual(System.Object,System.Object,System.Boolean)">
          <source>Represents the overloaded Visual Basic not-equal (<ph id="ph1">&amp;lt;</ph><ph id="ph2">&amp;gt;</ph>) operator.</source>
          <target state="translated">Stellt den überladenen Visual Basic-Ungleichheitsoperator (<ph id="ph1">&amp;lt;</ph><ph id="ph2">&amp;gt;</ph>) dar.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectNotEqual(System.Object,System.Object,System.Boolean)">
          <source>The result of the overloaded not-equal operator.</source>
          <target state="translated">Das Ergebnis des überladenen Ungleichheitsoperators.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectNotEqual(System.Object,System.Object,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="False" /&gt;</ph> if operator overloading is not supported.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="False" /&gt;</ph>, wenn eine Operatorüberladung nicht unterstützt wird.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectNotEqual(System.Object,System.Object,System.Boolean)">
          <source>This class supports the Visual Basic compiler and is not intended to be used directly from your code.</source>
          <target state="translated">Diese Klasse unterstützt das Visual Basic-Compiler und nicht direkt aus Ihrem Code verwendet werden soll.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.DivideObject(System.Object,System.Object)">
          <source>Required.</source>
          <target state="translated">Erforderlich.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.DivideObject(System.Object,System.Object)">
          <source>Any numeric expression.</source>
          <target state="translated">Ein beliebiger numerischer Ausdruck.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.DivideObject(System.Object,System.Object)">
          <source>Required.</source>
          <target state="translated">Erforderlich.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.DivideObject(System.Object,System.Object)">
          <source>Any numeric expression.</source>
          <target state="translated">Ein beliebiger numerischer Ausdruck.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.DivideObject(System.Object,System.Object)">
          <source>Represents the Visual Basic division (/) operator.</source>
          <target state="translated">Stellt den Visual Basic-Divisionsoperator (/) dar.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.DivideObject(System.Object,System.Object)">
          <source>The full quotient of <ph id="ph1">&lt;paramref name="Left" /&gt;</ph> divided by <ph id="ph2">&lt;paramref name="Right" /&gt;</ph>, including any remainder.</source>
          <target state="translated">Der volle Quotient, der sich aus der Division von <ph id="ph1">&lt;paramref name="Left" /&gt;</ph> durch <ph id="ph2">&lt;paramref name="Right" /&gt;</ph> ergibt, einschließlich des Rests.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.DivideObject(System.Object,System.Object)">
          <source>This class supports the Visual Basic compiler and is not intended to be used directly from your code.</source>
          <target state="translated">Diese Klasse unterstützt das Visual Basic-Compiler und nicht direkt aus Ihrem Code verwendet werden soll.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.ExponentObject(System.Object,System.Object)">
          <source>Required.</source>
          <target state="translated">Erforderlich.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.ExponentObject(System.Object,System.Object)">
          <source>Any numeric expression.</source>
          <target state="translated">Ein beliebiger numerischer Ausdruck.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.ExponentObject(System.Object,System.Object)">
          <source>Required.</source>
          <target state="translated">Erforderlich.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.ExponentObject(System.Object,System.Object)">
          <source>Any numeric expression.</source>
          <target state="translated">Ein beliebiger numerischer Ausdruck.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.ExponentObject(System.Object,System.Object)">
          <source>Represents the Visual Basic exponent (^) operator.</source>
          <target state="translated">Stellt den Visual Basic-Exponentialoperator (^) dar.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.ExponentObject(System.Object,System.Object)">
          <source>The result of <ph id="ph1">&lt;paramref name="Left" /&gt;</ph> raised to the power of <ph id="ph2">&lt;paramref name="Right" /&gt;</ph>.</source>
          <target state="translated">Das Ergebnis der Potenzierung von <ph id="ph1">&lt;paramref name="Left" /&gt;</ph> mit <ph id="ph2">&lt;paramref name="Right" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.ExponentObject(System.Object,System.Object)">
          <source>This class supports the Visual Basic compiler and is not intended to be used directly from your code.</source>
          <target state="translated">Diese Klasse unterstützt das Visual Basic-Compiler und nicht direkt aus Ihrem Code verwendet werden soll.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.FallbackInvokeUserDefinedOperator(System.Object,System.Object[])">
          <source>The user-defined operator.</source>
          <target state="translated">Der benutzerdefinierte Operator.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.FallbackInvokeUserDefinedOperator(System.Object,System.Object[])">
          <source>Argument values to pass to the user-defined operator.</source>
          <target state="translated">Die Argumentwerte, die an den benutzerdefinierten Operator übergeben werden sollen.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.FallbackInvokeUserDefinedOperator(System.Object,System.Object[])">
          <source>Executes a late-bound evaluation of a user-defined operator.</source>
          <target state="translated">Führt eine spät gebundene Auswertung für einen benutzerdefinierten Operator aus.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.FallbackInvokeUserDefinedOperator(System.Object,System.Object[])">
          <source>This helper method is not meant to be called directly from your code.</source>
          <target state="translated">Diese Hilfsmethode ist nicht für den direkten Aufruf aus dem Code vorgesehen.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.FallbackInvokeUserDefinedOperator(System.Object,System.Object[])">
          <source>The result returned from the user-defined operator.</source>
          <target state="translated">Das vom benutzerdefinierten Operator zurückgegebene Ergebnis.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.IntDivideObject(System.Object,System.Object)">
          <source>Required.</source>
          <target state="translated">Erforderlich.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.IntDivideObject(System.Object,System.Object)">
          <source>Any numeric expression.</source>
          <target state="translated">Ein beliebiger numerischer Ausdruck.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.IntDivideObject(System.Object,System.Object)">
          <source>Required.</source>
          <target state="translated">Erforderlich.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.IntDivideObject(System.Object,System.Object)">
          <source>Any numeric expression.</source>
          <target state="translated">Ein beliebiger numerischer Ausdruck.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.IntDivideObject(System.Object,System.Object)">
          <source>Represents the Visual Basic integer division (<ph id="ph1">\\</ph>) operator.</source>
          <target state="translated">Stellt den Ganzzahl-Divisionsoperator (<ph id="ph1">\\</ph>) in Visual Basic dar.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.IntDivideObject(System.Object,System.Object)">
          <source>The integer quotient of <ph id="ph1">&lt;paramref name="Left" /&gt;</ph> divided by <ph id="ph2">&lt;paramref name="Right" /&gt;</ph>, which discards any remainder and retains only the integer portion.</source>
          <target state="translated">Der ganzzahlige Quotient, der sich aus der Division von <ph id="ph1">&lt;paramref name="Left" /&gt;</ph> durch <ph id="ph2">&lt;paramref name="Right" /&gt;</ph> ergibt. Es wird nur der ganzzahlige Teil beibehalten, und ein eventueller Rest wird verworfen.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.IntDivideObject(System.Object,System.Object)">
          <source>This class supports the Visual Basic compiler and is not intended to be used directly from your code.</source>
          <target state="translated">Diese Klasse unterstützt das Visual Basic-Compiler und nicht direkt aus Ihrem Code verwendet werden soll.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.LeftShiftObject(System.Object,System.Object)">
          <source>Required.</source>
          <target state="translated">Erforderlich.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.LeftShiftObject(System.Object,System.Object)">
          <source>Integral numeric expression.</source>
          <target state="translated">Ein ganzzahliger numerischer Ausdruck.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.LeftShiftObject(System.Object,System.Object)">
          <source>The bit pattern to be shifted.</source>
          <target state="translated">Das zu verschiebende Bitmuster.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.LeftShiftObject(System.Object,System.Object)">
          <source>The data type must be an integral type (<ph id="ph1">&lt;see langword="SByte" /&gt;</ph>, <ph id="ph2">&lt;see langword="Byte" /&gt;</ph>, <ph id="ph3">&lt;see langword="Short" /&gt;</ph>, <ph id="ph4">&lt;see langword="UShort" /&gt;</ph>, <ph id="ph5">&lt;see langword="Integer" /&gt;</ph>, <ph id="ph6">&lt;see langword="UInteger" /&gt;</ph>, <ph id="ph7">&lt;see langword="Long" /&gt;</ph>, or <ph id="ph8">&lt;see langword="ULong" /&gt;</ph>).</source>
          <target state="translated">Der Datentyp muss ein ganzzahliger Typ (<ph id="ph1">&lt;see langword="SByte" /&gt;</ph>, <ph id="ph2">&lt;see langword="Byte" /&gt;</ph>, <ph id="ph3">&lt;see langword="Short" /&gt;</ph>, <ph id="ph4">&lt;see langword="UShort" /&gt;</ph>, <ph id="ph5">&lt;see langword="Integer" /&gt;</ph>, <ph id="ph6">&lt;see langword="UInteger" /&gt;</ph>, <ph id="ph7">&lt;see langword="Long" /&gt;</ph> oder <ph id="ph8">&lt;see langword="ULong" /&gt;</ph>) sein.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.LeftShiftObject(System.Object,System.Object)">
          <source>Required.</source>
          <target state="translated">Erforderlich.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.LeftShiftObject(System.Object,System.Object)">
          <source>Numeric expression.</source>
          <target state="translated">Ein numerischer Ausdruck.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.LeftShiftObject(System.Object,System.Object)">
          <source>The number of bits to shift the bit pattern.</source>
          <target state="translated">Die Anzahl der Bits, um die das Bitmuster verschoben werden soll.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.LeftShiftObject(System.Object,System.Object)">
          <source>The data type must be <ph id="ph1">&lt;see langword="Integer" /&gt;</ph> or widen to <ph id="ph2">&lt;see langword="Integer" /&gt;</ph>.</source>
          <target state="translated">Der Datentyp muss <ph id="ph1">&lt;see langword="Integer" /&gt;</ph> sein oder zu <ph id="ph2">&lt;see langword="Integer" /&gt;</ph> erweitert werden.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.LeftShiftObject(System.Object,System.Object)">
          <source>Represents the Visual Basic arithmetic left shift (<ph id="ph1">&amp;lt;</ph><ph id="ph2">&amp;lt;</ph>) operator.</source>
          <target state="translated">Stellt den Operator für die Stellenverschiebung nach links (<ph id="ph1">&amp;lt;</ph><ph id="ph2">&amp;lt;</ph>) in Visual Basic dar.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.LeftShiftObject(System.Object,System.Object)">
          <source>An integral numeric value.</source>
          <target state="translated">Ein ganzzahliger numerischer Wert.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.LeftShiftObject(System.Object,System.Object)">
          <source>The result of shifting the bit pattern.</source>
          <target state="translated">Das Ergebnis der Verschiebung des Bitmusters.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.LeftShiftObject(System.Object,System.Object)">
          <source>The data type is the same as that of <ph id="ph1">&lt;paramref name="Operand" /&gt;</ph>.</source>
          <target state="translated">Der Datentyp entspricht dem von <ph id="ph1">&lt;paramref name="Operand" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.LeftShiftObject(System.Object,System.Object)">
          <source>This class supports the Visual Basic compiler and is not intended to be used directly from your code.</source>
          <target state="translated">Diese Klasse unterstützt das Visual Basic-Compiler und nicht direkt aus Ihrem Code verwendet werden soll.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.LikeObject(System.Object,System.Object,Microsoft.VisualBasic.CompareMethod)">
          <source>Required.</source>
          <target state="translated">Erforderlich.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.LikeObject(System.Object,System.Object,Microsoft.VisualBasic.CompareMethod)">
          <source>Any expression.</source>
          <target state="translated">Beliebiger Ausdruck.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.LikeObject(System.Object,System.Object,Microsoft.VisualBasic.CompareMethod)">
          <source>Required.</source>
          <target state="translated">Erforderlich.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.LikeObject(System.Object,System.Object,Microsoft.VisualBasic.CompareMethod)">
          <source>Any string expression conforming to the pattern-matching conventions described in Like Operator.</source>
          <target state="translated">Ein beliebiger Zeichenfolgenausdruck, der den in Like-Operator beschriebenen Mustervergleichskonventionen entspricht.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.LikeObject(System.Object,System.Object,Microsoft.VisualBasic.CompareMethod)">
          <source>Required.</source>
          <target state="translated">Erforderlich.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.LikeObject(System.Object,System.Object,Microsoft.VisualBasic.CompareMethod)">
          <source>A <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.CompareMethod" /&gt;</ph> value that specifies that the operation use either text or binary comparison.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.CompareMethod" /&gt;</ph>-Wert, der angibt, dass bei der Operation ein Textvergleich oder ein binärer Vergleich durchgeführt wird.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.LikeObject(System.Object,System.Object,Microsoft.VisualBasic.CompareMethod)">
          <source>Represents the Visual Basic <ph id="ph1">&lt;see langword="Like" /&gt;</ph> operator.</source>
          <target state="translated">Stellt den <ph id="ph1">&lt;see langword="Like" /&gt;</ph>-Operator in Visual Basic dar.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.LikeObject(System.Object,System.Object,Microsoft.VisualBasic.CompareMethod)">
          <source><ph id="ph1">&lt;see langword="True" /&gt;</ph> if the string representation of the value in <ph id="ph2">&lt;paramref name="Source" /&gt;</ph> satisfies the pattern that is contained in <ph id="ph3">&lt;paramref name="Pattern" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="False" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="True" /&gt;</ph>, wenn die Zeichenfolgendarstellung des Werts in <ph id="ph2">&lt;paramref name="Source" /&gt;</ph> dem in <ph id="ph3">&lt;paramref name="Pattern" /&gt;</ph> enthaltenen Muster entspricht, andernfalls <ph id="ph4">&lt;see langword="False" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.LikeObject(System.Object,System.Object,Microsoft.VisualBasic.CompareMethod)">
          <source><ph id="ph1">&lt;see langword="True" /&gt;</ph> if both <ph id="ph2">&lt;paramref name="Source" /&gt;</ph> and <ph id="ph3">&lt;paramref name="Pattern" /&gt;</ph> are <ph id="ph4">&lt;see langword="Nothing" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="True" /&gt;</ph>, wenn sowohl <ph id="ph2">&lt;paramref name="Source" /&gt;</ph> als auch <ph id="ph3">&lt;paramref name="Pattern" /&gt;</ph> gleich <ph id="ph4">&lt;see langword="Nothing" /&gt;</ph> sind.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.LikeObject(System.Object,System.Object,Microsoft.VisualBasic.CompareMethod)">
          <source>This class supports the Visual Basic compiler and is not intended to be used directly from your code.</source>
          <target state="translated">Diese Klasse unterstützt das Visual Basic-Compiler und nicht direkt aus Ihrem Code verwendet werden soll.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.LikeString(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>Required.</source>
          <target state="translated">Erforderlich.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.LikeString(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>Any <ph id="ph1">&lt;see langword="String" /&gt;</ph> expression.</source>
          <target state="translated">Beliebiger <ph id="ph1">&lt;see langword="String" /&gt;</ph>-Ausdruck.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.LikeString(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>Required.</source>
          <target state="translated">Erforderlich.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.LikeString(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>Any <ph id="ph1">&lt;see langword="String" /&gt;</ph> expression conforming to the pattern-matching conventions described in Like Operator.</source>
          <target state="translated">Ein beliebiger <ph id="ph1">&lt;see langword="String" /&gt;</ph>-Ausdruck, der den in Like-Operator beschriebenen Mustervergleichskonventionen entspricht.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.LikeString(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>Required.</source>
          <target state="translated">Erforderlich.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.LikeString(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>A <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.CompareMethod" /&gt;</ph> value that specifies that the operation use either text or binary comparison.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.CompareMethod" /&gt;</ph>-Wert, der angibt, dass bei der Operation ein Textvergleich oder ein binärer Vergleich durchgeführt wird.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.LikeString(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>Represents the Visual Basic <ph id="ph1">&lt;see langword="Like" /&gt;</ph> operator.</source>
          <target state="translated">Stellt den <ph id="ph1">&lt;see langword="Like" /&gt;</ph>-Operator in Visual Basic dar.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.LikeString(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source><ph id="ph1">&lt;see langword="True" /&gt;</ph> if the value in <ph id="ph2">&lt;paramref name="Source" /&gt;</ph> satisfies the pattern that is contained in <ph id="ph3">&lt;paramref name="Pattern" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="False" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="True" /&gt;</ph>, wenn der Wert in <ph id="ph2">&lt;paramref name="Source" /&gt;</ph> dem in <ph id="ph3">&lt;paramref name="Pattern" /&gt;</ph> enthaltenen Muster entspricht, andernfalls <ph id="ph4">&lt;see langword="False" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.LikeString(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source><ph id="ph1">&lt;see langword="True" /&gt;</ph> if both <ph id="ph2">&lt;paramref name="Source" /&gt;</ph> and <ph id="ph3">&lt;paramref name="Pattern" /&gt;</ph> are empty.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="True" /&gt;</ph>, wenn sowohl <ph id="ph2">&lt;paramref name="Source" /&gt;</ph> als auch <ph id="ph3">&lt;paramref name="Pattern" /&gt;</ph> leer sind.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.LikeString(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
          <source>This class supports the Visual Basic compiler and is not intended to be used directly from your code.</source>
          <target state="translated">Diese Klasse unterstützt das Visual Basic-Compiler und nicht direkt aus Ihrem Code verwendet werden soll.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.ModObject(System.Object,System.Object)">
          <source>Required.</source>
          <target state="translated">Erforderlich.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.ModObject(System.Object,System.Object)">
          <source>Any numeric expression.</source>
          <target state="translated">Ein beliebiger numerischer Ausdruck.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.ModObject(System.Object,System.Object)">
          <source>Required.</source>
          <target state="translated">Erforderlich.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.ModObject(System.Object,System.Object)">
          <source>Any numeric expression.</source>
          <target state="translated">Ein beliebiger numerischer Ausdruck.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.ModObject(System.Object,System.Object)">
          <source>Represents the Visual Basic <ph id="ph1">&lt;see langword="Mod" /&gt;</ph> operator.</source>
          <target state="translated">Stellt den <ph id="ph1">&lt;see langword="Mod" /&gt;</ph>-Operator in Visual Basic dar.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.ModObject(System.Object,System.Object)">
          <source>The remainder after <ph id="ph1">&lt;paramref name="Left" /&gt;</ph> is divided by <ph id="ph2">&lt;paramref name="Right" /&gt;</ph>.</source>
          <target state="translated">Der Rest aus der Division von <ph id="ph1">&lt;paramref name="Left" /&gt;</ph> durch <ph id="ph2">&lt;paramref name="Right" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.ModObject(System.Object,System.Object)">
          <source>This class supports the Visual Basic compiler and is not intended to be used directly from your code.</source>
          <target state="translated">Diese Klasse unterstützt das Visual Basic-Compiler und nicht direkt aus Ihrem Code verwendet werden soll.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.MultiplyObject(System.Object,System.Object)">
          <source>Required.</source>
          <target state="translated">Erforderlich.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.MultiplyObject(System.Object,System.Object)">
          <source>Any numeric expression.</source>
          <target state="translated">Ein beliebiger numerischer Ausdruck.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.MultiplyObject(System.Object,System.Object)">
          <source>Required.</source>
          <target state="translated">Erforderlich.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.MultiplyObject(System.Object,System.Object)">
          <source>Any numeric expression.</source>
          <target state="translated">Ein beliebiger numerischer Ausdruck.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.MultiplyObject(System.Object,System.Object)">
          <source>Represents the Visual Basic multiply (*) operator.</source>
          <target state="translated">Stellt den Visual Basic-Multiplikationsoperator (*) dar.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.MultiplyObject(System.Object,System.Object)">
          <source>The product of <ph id="ph1">&lt;paramref name="Left" /&gt;</ph> and <ph id="ph2">&lt;paramref name="Right" /&gt;</ph>.</source>
          <target state="translated">Das Produkt von <ph id="ph1">&lt;paramref name="Left" /&gt;</ph> und <ph id="ph2">&lt;paramref name="Right" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.MultiplyObject(System.Object,System.Object)">
          <source>This class supports the Visual Basic compiler and is not intended to be used directly from your code.</source>
          <target state="translated">Diese Klasse unterstützt das Visual Basic-Compiler und nicht direkt aus Ihrem Code verwendet werden soll.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.NegateObject(System.Object)">
          <source>Required.</source>
          <target state="translated">Erforderlich.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.NegateObject(System.Object)">
          <source>Any numeric expression.</source>
          <target state="translated">Ein beliebiger numerischer Ausdruck.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.NegateObject(System.Object)">
          <source>Represents the Visual Basic unary minus (–) operator.</source>
          <target state="translated">Stellt den unären Subtraktionsoperator (–) in Visual Basic dar.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.NegateObject(System.Object)">
          <source>The negative value of <ph id="ph1">&lt;paramref name="Operand" /&gt;</ph>.</source>
          <target state="translated">Der negative Wert von <ph id="ph1">&lt;paramref name="Operand" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.NegateObject(System.Object)">
          <source>This class supports the Visual Basic compiler and is not intended to be used directly from your code.</source>
          <target state="translated">Diese Klasse unterstützt das Visual Basic-Compiler und nicht direkt aus Ihrem Code verwendet werden soll.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.NotObject(System.Object)">
          <source>Required.</source>
          <target state="translated">Erforderlich.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.NotObject(System.Object)">
          <source>Any <ph id="ph1">&lt;see langword="Boolean" /&gt;</ph> or numeric expression.</source>
          <target state="translated">Ein beliebiger <ph id="ph1">&lt;see langword="Boolean" /&gt;</ph>-Ausdruck oder numerischer Ausdruck.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.NotObject(System.Object)">
          <source>Represents the Visual Basic <ph id="ph1">&lt;see langword="Not" /&gt;</ph> operator.</source>
          <target state="translated">Stellt den <ph id="ph1">&lt;see langword="Not" /&gt;</ph>-Operator in Visual Basic dar.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.NotObject(System.Object)">
          <source>For <ph id="ph1">&lt;see langword="Boolean" /&gt;</ph> operations, <ph id="ph2">&lt;see langword="False" /&gt;</ph> if <ph id="ph3">&lt;paramref name="Operand" /&gt;</ph> is <ph id="ph4">&lt;see langword="True" /&gt;</ph>; otherwise, <ph id="ph5">&lt;see langword="True" /&gt;</ph>.</source>
          <target state="translated">Für <ph id="ph1">&lt;see langword="Boolean" /&gt;</ph>-Operationen: <ph id="ph2">&lt;see langword="False" /&gt;</ph>, wenn <ph id="ph3">&lt;paramref name="Operand" /&gt;</ph> gleich <ph id="ph4">&lt;see langword="True" /&gt;</ph> ist, andernfalls <ph id="ph5">&lt;see langword="True" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.NotObject(System.Object)">
          <source>For bitwise operations, 1 if <ph id="ph1">&lt;paramref name="Operand" /&gt;</ph> is 0; otherwise, 0.</source>
          <target state="translated">Für bitweise Operationen: 1, wenn <ph id="ph1">&lt;paramref name="Operand" /&gt;</ph> gleich 0 ist, andernfalls 0.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.NotObject(System.Object)">
          <source>This class supports the Visual Basic compiler and is not intended to be used directly from your code.</source>
          <target state="translated">Diese Klasse unterstützt das Visual Basic-Compiler und nicht direkt aus Ihrem Code verwendet werden soll.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.OrObject(System.Object,System.Object)">
          <source>Required.</source>
          <target state="translated">Erforderlich.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.OrObject(System.Object,System.Object)">
          <source>Any <ph id="ph1">&lt;see langword="Boolean" /&gt;</ph> or numeric expression.</source>
          <target state="translated">Ein beliebiger <ph id="ph1">&lt;see langword="Boolean" /&gt;</ph>-Ausdruck oder numerischer Ausdruck.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.OrObject(System.Object,System.Object)">
          <source>Required.</source>
          <target state="translated">Erforderlich.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.OrObject(System.Object,System.Object)">
          <source>Any <ph id="ph1">&lt;see langword="Boolean" /&gt;</ph> or numeric expression.</source>
          <target state="translated">Ein beliebiger <ph id="ph1">&lt;see langword="Boolean" /&gt;</ph>-Ausdruck oder numerischer Ausdruck.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.OrObject(System.Object,System.Object)">
          <source>Represents the Visual Basic <ph id="ph1">&lt;see langword="Or" /&gt;</ph> operator.</source>
          <target state="translated">Stellt den <ph id="ph1">&lt;see langword="Or" /&gt;</ph>-Operator in Visual Basic dar.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.OrObject(System.Object,System.Object)">
          <source>For <ph id="ph1">&lt;see langword="Boolean" /&gt;</ph> operations, <ph id="ph2">&lt;see langword="False" /&gt;</ph> if both <ph id="ph3">&lt;paramref name="Left" /&gt;</ph> and <ph id="ph4">&lt;paramref name="Right" /&gt;</ph> evaluate to <ph id="ph5">&lt;see langword="False" /&gt;</ph>; otherwise, <ph id="ph6">&lt;see langword="True" /&gt;</ph>.</source>
          <target state="translated">Für <ph id="ph1">&lt;see langword="Boolean" /&gt;</ph>-Operationen: <ph id="ph2">&lt;see langword="False" /&gt;</ph>, wenn sowohl <ph id="ph3">&lt;paramref name="Left" /&gt;</ph> als auch <ph id="ph4">&lt;paramref name="Right" /&gt;</ph> <ph id="ph5">&lt;see langword="False" /&gt;</ph> ergeben, andernfalls <ph id="ph6">&lt;see langword="True" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.OrObject(System.Object,System.Object)">
          <source>For bitwise operations, 0 if both <ph id="ph1">&lt;paramref name="Left" /&gt;</ph> and <ph id="ph2">&lt;paramref name="Right" /&gt;</ph> evaluate to 0; otherwise, 1.</source>
          <target state="translated">Für bitweise Operationen: 0, wenn sowohl <ph id="ph1">&lt;paramref name="Left" /&gt;</ph>, als auch <ph id="ph2">&lt;paramref name="Right" /&gt;</ph> 0 ergeben, andernfalls 1.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.OrObject(System.Object,System.Object)">
          <source>This class supports the Visual Basic compiler and is not intended to be used directly from your code.</source>
          <target state="translated">Diese Klasse unterstützt das Visual Basic-Compiler und nicht direkt aus Ihrem Code verwendet werden soll.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.PlusObject(System.Object)">
          <source>Required.</source>
          <target state="translated">Erforderlich.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.PlusObject(System.Object)">
          <source>Any numeric expression.</source>
          <target state="translated">Ein beliebiger numerischer Ausdruck.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.PlusObject(System.Object)">
          <source>Represents the Visual Basic unary plus (+) operator.</source>
          <target state="translated">Stellt den unären Additionsoperator (+) in Visual Basic dar.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.PlusObject(System.Object)">
          <source>The value of <ph id="ph1">&lt;paramref name="Operand" /&gt;</ph>.</source>
          <target state="translated">Der Wert von <ph id="ph1">&lt;paramref name="Operand" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.PlusObject(System.Object)">
          <source>(The sign of the <ph id="ph1">&lt;paramref name="Operand" /&gt;</ph> is unchanged.)</source>
          <target state="translated">(Das Vorzeichen von <ph id="ph1">&lt;paramref name="Operand" /&gt;</ph> wird nicht geändert.)</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.PlusObject(System.Object)">
          <source>This class supports the Visual Basic compiler and is not intended to be used directly from your code.</source>
          <target state="translated">Diese Klasse unterstützt das Visual Basic-Compiler und nicht direkt aus Ihrem Code verwendet werden soll.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.RightShiftObject(System.Object,System.Object)">
          <source>Required.</source>
          <target state="translated">Erforderlich.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.RightShiftObject(System.Object,System.Object)">
          <source>Integral numeric expression.</source>
          <target state="translated">Ein ganzzahliger numerischer Ausdruck.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.RightShiftObject(System.Object,System.Object)">
          <source>The bit pattern to be shifted.</source>
          <target state="translated">Das zu verschiebende Bitmuster.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.RightShiftObject(System.Object,System.Object)">
          <source>The data type must be an integral type (<ph id="ph1">&lt;see langword="SByte" /&gt;</ph>, <ph id="ph2">&lt;see langword="Byte" /&gt;</ph>, <ph id="ph3">&lt;see langword="Short" /&gt;</ph>, <ph id="ph4">&lt;see langword="UShort" /&gt;</ph>, <ph id="ph5">&lt;see langword="Integer" /&gt;</ph>, <ph id="ph6">&lt;see langword="UInteger" /&gt;</ph>, <ph id="ph7">&lt;see langword="Long" /&gt;</ph>, or <ph id="ph8">&lt;see langword="ULong" /&gt;</ph>).</source>
          <target state="translated">Der Datentyp muss ein ganzzahliger Typ (<ph id="ph1">&lt;see langword="SByte" /&gt;</ph>, <ph id="ph2">&lt;see langword="Byte" /&gt;</ph>, <ph id="ph3">&lt;see langword="Short" /&gt;</ph>, <ph id="ph4">&lt;see langword="UShort" /&gt;</ph>, <ph id="ph5">&lt;see langword="Integer" /&gt;</ph>, <ph id="ph6">&lt;see langword="UInteger" /&gt;</ph>, <ph id="ph7">&lt;see langword="Long" /&gt;</ph> oder <ph id="ph8">&lt;see langword="ULong" /&gt;</ph>) sein.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.RightShiftObject(System.Object,System.Object)">
          <source>Required.</source>
          <target state="translated">Erforderlich.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.RightShiftObject(System.Object,System.Object)">
          <source>Numeric expression.</source>
          <target state="translated">Ein numerischer Ausdruck.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.RightShiftObject(System.Object,System.Object)">
          <source>The number of bits to shift the bit pattern.</source>
          <target state="translated">Die Anzahl der Bits, um die das Bitmuster verschoben werden soll.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.RightShiftObject(System.Object,System.Object)">
          <source>The data type must be <ph id="ph1">&lt;see langword="Integer" /&gt;</ph> or widen to <ph id="ph2">&lt;see langword="Integer" /&gt;</ph>.</source>
          <target state="translated">Der Datentyp muss <ph id="ph1">&lt;see langword="Integer" /&gt;</ph> sein oder zu <ph id="ph2">&lt;see langword="Integer" /&gt;</ph> erweitert werden.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.RightShiftObject(System.Object,System.Object)">
          <source>Represents the Visual Basic arithmetic right shift (<ph id="ph1">&amp;gt;</ph><ph id="ph2">&amp;gt;</ph>) operator.</source>
          <target state="translated">Stellt den Operator für die Stellenverschiebung nach rechts (<ph id="ph1">&amp;gt;</ph><ph id="ph2">&amp;gt;</ph>) in Visual Basic dar.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.RightShiftObject(System.Object,System.Object)">
          <source>An integral numeric value.</source>
          <target state="translated">Ein ganzzahliger numerischer Wert.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.RightShiftObject(System.Object,System.Object)">
          <source>The result of shifting the bit pattern.</source>
          <target state="translated">Das Ergebnis der Verschiebung des Bitmusters.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.RightShiftObject(System.Object,System.Object)">
          <source>The data type is the same as that of <ph id="ph1">&lt;paramref name="Operand" /&gt;</ph>.</source>
          <target state="translated">Der Datentyp entspricht dem von <ph id="ph1">&lt;paramref name="Operand" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.RightShiftObject(System.Object,System.Object)">
          <source>This class supports the Visual Basic compiler and is not intended to be used directly from your code.</source>
          <target state="translated">Diese Klasse unterstützt das Visual Basic-Compiler und nicht direkt aus Ihrem Code verwendet werden soll.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.SubtractObject(System.Object,System.Object)">
          <source>Required.</source>
          <target state="translated">Erforderlich.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.SubtractObject(System.Object,System.Object)">
          <source>Any numeric expression.</source>
          <target state="translated">Ein beliebiger numerischer Ausdruck.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.SubtractObject(System.Object,System.Object)">
          <source>Required.</source>
          <target state="translated">Erforderlich.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.SubtractObject(System.Object,System.Object)">
          <source>Any numeric expression.</source>
          <target state="translated">Ein beliebiger numerischer Ausdruck.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.SubtractObject(System.Object,System.Object)">
          <source>Represents the Visual Basic subtraction (–) operator.</source>
          <target state="translated">Stellt den Visual Basic-Subtraktionsoperator (–) dar.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.SubtractObject(System.Object,System.Object)">
          <source>The difference between <ph id="ph1">&lt;paramref name="Left" /&gt;</ph> and <ph id="ph2">&lt;paramref name="Right" /&gt;</ph>.</source>
          <target state="translated">Die Differenz zwischen <ph id="ph1">&lt;paramref name="Left" /&gt;</ph> und <ph id="ph2">&lt;paramref name="Right" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.SubtractObject(System.Object,System.Object)">
          <source>This class supports the Visual Basic compiler and is not intended to be used directly from your code.</source>
          <target state="translated">Diese Klasse unterstützt das Visual Basic-Compiler und nicht direkt aus Ihrem Code verwendet werden soll.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.XorObject(System.Object,System.Object)">
          <source>Required.</source>
          <target state="translated">Erforderlich.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.XorObject(System.Object,System.Object)">
          <source>Any <ph id="ph1">&lt;see langword="Boolean" /&gt;</ph> or numeric expression.</source>
          <target state="translated">Ein beliebiger <ph id="ph1">&lt;see langword="Boolean" /&gt;</ph>-Ausdruck oder numerischer Ausdruck.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.XorObject(System.Object,System.Object)">
          <source>Required.</source>
          <target state="translated">Erforderlich.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.XorObject(System.Object,System.Object)">
          <source>Any <ph id="ph1">&lt;see langword="Boolean" /&gt;</ph> or numeric expression.</source>
          <target state="translated">Ein beliebiger <ph id="ph1">&lt;see langword="Boolean" /&gt;</ph>-Ausdruck oder numerischer Ausdruck.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.XorObject(System.Object,System.Object)">
          <source>Represents the Visual Basic <ph id="ph1">&lt;see langword="Xor" /&gt;</ph> operator.</source>
          <target state="translated">Stellt den <ph id="ph1">&lt;see langword="Xor" /&gt;</ph>-Operator in Visual Basic dar.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.XorObject(System.Object,System.Object)">
          <source>A <ph id="ph1">&lt;see langword="Boolean" /&gt;</ph> or numeric value.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see langword="Boolean" /&gt;</ph>-Wert oder ein numerischer Wert.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.XorObject(System.Object,System.Object)">
          <source>For a <ph id="ph1">&lt;see langword="Boolean" /&gt;</ph> comparison, the return value is the logical exclusion (exclusive logical disjunction) of two <ph id="ph2">&lt;see langword="Boolean" /&gt;</ph> values.</source>
          <target state="translated">Bei einem <ph id="ph1">&lt;see langword="Boolean" /&gt;</ph>-Vergleich ist der Rückgabewert der logische Ausschluss (exklusive logische Disjunktion) aus zwei <ph id="ph2">&lt;see langword="Boolean" /&gt;</ph>-Werten.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.XorObject(System.Object,System.Object)">
          <source>For bitwise (numeric) operations, the return value is a numeric value that represents the bitwise exclusion (exclusive bitwise disjunction) of two numeric bit patterns.</source>
          <target state="translated">Bei bitweisen (numerischen) Vorgängen ist der Rückgabewert ein numerischer Wert, der den bitweisen Ausschluss (exklusive bitweise Disjunktion) aus zwei numerischen Bitmustern darstellt.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.XorObject(System.Object,System.Object)">
          <source>For more information, see <bpt id="p1">[</bpt>Xor Operator<ept id="p1">](~/docs/visual-basic/language-reference/operators/xor-operator.md)</ept>.</source>
          <target state="translated">Weitere Informationen finden Sie unter <bpt id="p1">[</bpt>Xor Operator<ept id="p1">](~/docs/visual-basic/language-reference/operators/xor-operator.md)</ept>.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.CompilerServices.Operators.XorObject(System.Object,System.Object)">
          <source>This class supports the Visual Basic compiler and is not intended to be used directly from your code.</source>
          <target state="translated">Diese Klasse unterstützt das Visual Basic-Compiler und nicht direkt aus Ihrem Code verwendet werden soll.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>