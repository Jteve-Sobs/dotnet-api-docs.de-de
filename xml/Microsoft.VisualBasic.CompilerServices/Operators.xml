<Type Name="Operators" FullName="Microsoft.VisualBasic.CompilerServices.Operators">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ae70a65156b283f87027b6fdda2a363e67010fda" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39980946" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class Operators" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Operators extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.CompilerServices.Operators" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Operators" />
  <TypeSignature Language="C++ CLI" Value="public ref class Operators sealed" />
  <TypeSignature Language="F#" Value="type Operators = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="1055f-101">Stellt mathematische Operatoren mit später Bindung bereit, z. B. <see cref="M:Microsoft.VisualBasic.CompilerServices.Operators.AddObject(System.Object,System.Object)" /> und <see cref="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObject(System.Object,System.Object,System.Boolean)" />, die vom Visual Basic-Compiler intern verwendet werden.</span>
      <span class="sxs-lookup">
        <span data-stu-id="1055f-101">Provides late-bound math operators, such as <see cref="M:Microsoft.VisualBasic.CompilerServices.Operators.AddObject(System.Object,System.Object)" /> and <see cref="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObject(System.Object,System.Object,System.Boolean)" />, which the Visual Basic compiler uses internally.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1055f-102">Diese Klasse unterstützt Visual Basic-Compiler und nicht direkt aus Ihrem Code verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="1055f-102">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
    </remarks>
    <forInternalUseOnly />
  </Docs>
  <Members>
    <Member MemberName="AddObject">
      <MemberSignature Language="C#" Value="public static object AddObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object AddObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.AddObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AddObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ AddObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member AddObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.AddObject (Left, Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="1055f-103">Erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-103">Required.</span>
          </span>
          <span data-ttu-id="1055f-104">Ein beliebiger numerischer Ausdruck.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-104">Any numeric expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="1055f-105">Erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-105">Required.</span>
          </span>
          <span data-ttu-id="1055f-106">Ein beliebiger numerischer Ausdruck.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-106">Any numeric expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1055f-107">Stellt den Visual Basic-Additionsoperator (+) dar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-107">Represents the Visual Basic addition (+) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1055f-108">Die Summe von <paramref name="Left" /> und <paramref name="Right" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-108">The sum of <paramref name="Left" /> and <paramref name="Right" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1055f-109">Diese Klasse unterstützt Visual Basic-Compiler und nicht direkt aus Ihrem Code verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="1055f-109">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="AndObject">
      <MemberSignature Language="C#" Value="public static object AndObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object AndObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.AndObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AndObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ AndObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member AndObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.AndObject (Left, Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="1055f-110">Erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-110">Required.</span>
          </span>
          <span data-ttu-id="1055f-111">Ein beliebiger <see langword="Boolean" />-Ausdruck oder numerischer Ausdruck.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-111">Any <see langword="Boolean" /> or numeric expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="1055f-112">Erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-112">Required.</span>
          </span>
          <span data-ttu-id="1055f-113">Ein beliebiger <see langword="Boolean" />-Ausdruck oder numerischer Ausdruck.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-113">Any <see langword="Boolean" /> or numeric expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1055f-114">Stellt den <see langword="And" />-Operator in Visual Basic dar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-114">Represents the Visual Basic <see langword="And" /> operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1055f-115">Für <see langword="Boolean" />-Operationen: <see langword="True" />, wenn sowohl <paramref name="Left" /> als auch <paramref name="Right" /><see langword="True" /> ergeben, andernfalls <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-115">For <see langword="Boolean" /> operations, <see langword="True" /> if both <paramref name="Left" /> and <paramref name="Right" /> evaluate to <see langword="True" />; otherwise, <see langword="False" />.</span>
          </span>
          <span data-ttu-id="1055f-116">Für bitweise Operationen: 1, wenn sowohl <paramref name="Left" /> als auch <paramref name="Right" /> 1 ergeben, andernfalls 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-116">For bitwise operations, 1 if both <paramref name="Left" /> and <paramref name="Right" /> evaluate to 1; otherwise, 0.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1055f-117">Diese Klasse unterstützt Visual Basic-Compiler und nicht direkt aus Ihrem Code verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="1055f-117">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="CompareObject">
      <MemberSignature Language="C#" Value="public static int CompareObject (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 CompareObject(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObject(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareObject (Left As Object, Right As Object, TextCompare As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int CompareObject(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member CompareObject : obj * obj * bool -&gt; int" Usage="Microsoft.VisualBasic.CompilerServices.Operators.CompareObject (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="1055f-118">Erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-118">Required.</span>
          </span>
          <span data-ttu-id="1055f-119">Beliebiger Ausdruck.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-119">Any expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="1055f-120">Erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-120">Required.</span>
          </span>
          <span data-ttu-id="1055f-121">Beliebiger Ausdruck.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-121">Any expression.</span>
          </span>
        </param>
        <param name="TextCompare">
          <span data-ttu-id="1055f-122">Erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-122">Required.</span>
          </span>
          <span data-ttu-id="1055f-123">
            <see langword="True" />, um einen Zeichenfolgenvergleich ohne Berücksichtigung der Groß- und Kleinschreibung auszuführen, andernfalls <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-123">
              <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1055f-124">Stellt Vergleichsoperatoren in Visual Basic dar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-124">Represents Visual Basic comparison operators.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1055f-125">
            <list type="table">
              <listheader>
                <term> Wert  </term>
                <description> Bedingung  </description>
              </listheader>
              <item>
                <term> -1  </term>
                <description>
                  <paramref name="Left" />ist kleiner als <paramref name="Right" />.  </description>
              </item>
              <item>
                <term> 0  </term>
                <description>
                  <paramref name="Left" /> und <paramref name="Right" /> sind gleich.  </description>
              </item>
              <item>
                <term> 1  </term>
                <description>
                  <paramref name="Left" /> ist größer als  <paramref name="Right" />.  </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-125">
              <list type="table">
                <listheader>
                  <term> Value  </term>
                  <description> Condition  </description>
                </listheader>
                <item>
                  <term> -1  </term>
                  <description>
                    <paramref name="Left" /> is less than <paramref name="Right" />.  </description>
                </item>
                <item>
                  <term> 0  </term>
                  <description>
                    <paramref name="Left" /> and <paramref name="Right" /> are equal.  </description>
                </item>
                <item>
                  <term> 1  </term>
                  <description>
                    <paramref name="Left" /> is greater than <paramref name="Right" />.  </description>
                </item>
              </list>
            </span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1055f-126">Diese Klasse unterstützt Visual Basic-Compiler und nicht direkt aus Ihrem Code verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="1055f-126">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="CompareObjectEqual">
      <MemberSignature Language="C#" Value="public static object CompareObjectEqual (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static object CompareObjectEqual(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectEqual(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareObjectEqual (Left As Object, Right As Object, TextCompare As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CompareObjectEqual(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member CompareObjectEqual : obj * obj * bool -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectEqual (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="1055f-127">Erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-127">Required.</span>
          </span>
          <span data-ttu-id="1055f-128">Beliebiger Ausdruck.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-128">Any expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="1055f-129">Erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-129">Required.</span>
          </span>
          <span data-ttu-id="1055f-130">Beliebiger Ausdruck.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-130">Any expression.</span>
          </span>
        </param>
        <param name="TextCompare">
          <span data-ttu-id="1055f-131">Erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-131">Required.</span>
          </span>
          <span data-ttu-id="1055f-132">
            <see langword="True" />, um einen Zeichenfolgenvergleich ohne Berücksichtigung der Groß- und Kleinschreibung auszuführen, andernfalls <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-132">
              <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1055f-133">Stellt den Visual Basic-Gleichheitsoperator (=) dar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-133">Represents the Visual Basic equal (=) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1055f-134">
            <see langword="True" />, wenn <paramref name="Left" /> und <paramref name="Right" /> gleich sind, andernfalls <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-134">
              <see langword="True" /> if <paramref name="Left" /> and <paramref name="Right" /> are equal; otherwise, <see langword="False" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1055f-135">Diese Klasse unterstützt Visual Basic-Compiler und nicht direkt aus Ihrem Code verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="1055f-135">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="CompareObjectGreater">
      <MemberSignature Language="C#" Value="public static object CompareObjectGreater (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static object CompareObjectGreater(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectGreater(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareObjectGreater (Left As Object, Right As Object, TextCompare As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CompareObjectGreater(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member CompareObjectGreater : obj * obj * bool -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectGreater (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="1055f-136">Erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-136">Required.</span>
          </span>
          <span data-ttu-id="1055f-137">Beliebiger Ausdruck.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-137">Any expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="1055f-138">Erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-138">Required.</span>
          </span>
          <span data-ttu-id="1055f-139">Beliebiger Ausdruck.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-139">Any expression.</span>
          </span>
        </param>
        <param name="TextCompare">
          <span data-ttu-id="1055f-140">Erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-140">Required.</span>
          </span>
          <span data-ttu-id="1055f-141">
            <see langword="True" />, um einen Zeichenfolgenvergleich ohne Berücksichtigung der Groß- und Kleinschreibung auszuführen, andernfalls <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-141">
              <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1055f-142">Stellt den Visual Basic-größer-als (&gt;)-Operator dar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-142">Represents the Visual Basic greater-than (&gt;) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1055f-143">
            <see langword="True" />, wenn <paramref name="Left" /> größer als <paramref name="Right" /> ist, andernfalls <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-143">
              <see langword="True" /> if <paramref name="Left" /> is greater than <paramref name="Right" />; otherwise, <see langword="False" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1055f-144">Diese Klasse unterstützt Visual Basic-Compiler und nicht direkt aus Ihrem Code verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="1055f-144">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="CompareObjectGreaterEqual">
      <MemberSignature Language="C#" Value="public static object CompareObjectGreaterEqual (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static object CompareObjectGreaterEqual(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectGreaterEqual(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareObjectGreaterEqual (Left As Object, Right As Object, TextCompare As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CompareObjectGreaterEqual(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member CompareObjectGreaterEqual : obj * obj * bool -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectGreaterEqual (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="1055f-145">Erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-145">Required.</span>
          </span>
          <span data-ttu-id="1055f-146">Beliebiger Ausdruck.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-146">Any expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="1055f-147">Erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-147">Required.</span>
          </span>
          <span data-ttu-id="1055f-148">Beliebiger Ausdruck.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-148">Any expression.</span>
          </span>
        </param>
        <param name="TextCompare">
          <span data-ttu-id="1055f-149">Erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-149">Required.</span>
          </span>
          <span data-ttu-id="1055f-150">
            <see langword="True" />, um einen Zeichenfolgenvergleich ohne Berücksichtigung der Groß- und Kleinschreibung auszuführen, andernfalls <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-150">
              <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1055f-151">Stellt den Visual Basic-größer-als-oder-gleich (&gt;=)-Operator dar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-151">Represents the Visual Basic greater-than or equal-to (&gt;=) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1055f-152">
            <see langword="True" />, wenn <paramref name="Left" /> größer oder gleich <paramref name="Right" /> ist, andernfalls <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-152">
              <see langword="True" /> if <paramref name="Left" /> is greater than or equal to <paramref name="Right" />; otherwise, <see langword="False" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1055f-153">Diese Klasse unterstützt Visual Basic-Compiler und nicht direkt aus Ihrem Code verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="1055f-153">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="CompareObjectLess">
      <MemberSignature Language="C#" Value="public static object CompareObjectLess (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static object CompareObjectLess(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectLess(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareObjectLess (Left As Object, Right As Object, TextCompare As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CompareObjectLess(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member CompareObjectLess : obj * obj * bool -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectLess (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="1055f-154">Erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-154">Required.</span>
          </span>
          <span data-ttu-id="1055f-155">Beliebiger Ausdruck.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-155">Any expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="1055f-156">Erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-156">Required.</span>
          </span>
          <span data-ttu-id="1055f-157">Beliebiger Ausdruck.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-157">Any expression.</span>
          </span>
        </param>
        <param name="TextCompare">
          <span data-ttu-id="1055f-158">Erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-158">Required.</span>
          </span>
          <span data-ttu-id="1055f-159">
            <see langword="True" />, um einen Zeichenfolgenvergleich ohne Berücksichtigung der Groß- und Kleinschreibung auszuführen, andernfalls <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-159">
              <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1055f-160">Stellt den Visual Basic-kleiner-als (&lt;)-Operator dar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-160">Represents the Visual Basic less-than (&lt;) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1055f-161">
            <see langword="True" />, wenn <paramref name="Left" /> kleiner als <paramref name="Right" /> ist, andernfalls <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-161">
              <see langword="True" /> if <paramref name="Left" /> is less than <paramref name="Right" />; otherwise, <see langword="False" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1055f-162">Diese Klasse unterstützt Visual Basic-Compiler und nicht direkt aus Ihrem Code verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="1055f-162">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="CompareObjectLessEqual">
      <MemberSignature Language="C#" Value="public static object CompareObjectLessEqual (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static object CompareObjectLessEqual(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectLessEqual(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareObjectLessEqual (Left As Object, Right As Object, TextCompare As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CompareObjectLessEqual(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member CompareObjectLessEqual : obj * obj * bool -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectLessEqual (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="1055f-163">Erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-163">Required.</span>
          </span>
          <span data-ttu-id="1055f-164">Beliebiger Ausdruck.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-164">Any expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="1055f-165">Erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-165">Required.</span>
          </span>
          <span data-ttu-id="1055f-166">Beliebiger Ausdruck.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-166">Any expression.</span>
          </span>
        </param>
        <param name="TextCompare">
          <span data-ttu-id="1055f-167">Erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-167">Required.</span>
          </span>
          <span data-ttu-id="1055f-168">
            <see langword="True" />, um einen Zeichenfolgenvergleich ohne Berücksichtigung der Groß- und Kleinschreibung auszuführen, andernfalls <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-168">
              <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1055f-169">Stellt den Visual Basic-kleiner-als-oder-gleich (&lt;=)-Operator dar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-169">Represents the Visual Basic less-than or equal-to (&lt;=) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1055f-170">
            <see langword="True" />, wenn <paramref name="Left" /> kleiner oder gleich <paramref name="Right" /> ist, andernfalls <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-170">
              <see langword="True" /> if <paramref name="Left" /> is less than or equal to <paramref name="Right" />; otherwise, <see langword="False" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1055f-171">Diese Klasse unterstützt Visual Basic-Compiler und nicht direkt aus Ihrem Code verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="1055f-171">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="CompareObjectNotEqual">
      <MemberSignature Language="C#" Value="public static object CompareObjectNotEqual (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static object CompareObjectNotEqual(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectNotEqual(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareObjectNotEqual (Left As Object, Right As Object, TextCompare As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CompareObjectNotEqual(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member CompareObjectNotEqual : obj * obj * bool -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectNotEqual (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="1055f-172">Erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-172">Required.</span>
          </span>
          <span data-ttu-id="1055f-173">Beliebiger Ausdruck.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-173">Any expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="1055f-174">Erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-174">Required.</span>
          </span>
          <span data-ttu-id="1055f-175">Beliebiger Ausdruck.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-175">Any expression.</span>
          </span>
        </param>
        <param name="TextCompare">
          <span data-ttu-id="1055f-176">Erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-176">Required.</span>
          </span>
          <span data-ttu-id="1055f-177">
            <see langword="True" />, um einen Zeichenfolgenvergleich ohne Berücksichtigung der Groß- und Kleinschreibung auszuführen, andernfalls <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-177">
              <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1055f-178">Stellt den Visual Basic-Ungleichheitsoperator (&lt;&gt;) dar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-178">Represents the Visual Basic not-equal (&lt;&gt;) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1055f-179">
            <see langword="True" />, wenn <paramref name="Left" /> und <paramref name="Right" /> ungleich sind, andernfalls <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-179">
              <see langword="True" /> if <paramref name="Left" /> is not equal to <paramref name="Right" />; otherwise, <see langword="False" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1055f-180">Diese Klasse unterstützt Visual Basic-Compiler und nicht direkt aus Ihrem Code verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="1055f-180">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="CompareString">
      <MemberSignature Language="C#" Value="public static int CompareString (string Left, string Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 CompareString(string Left, string Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareString(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareString (Left As String, Right As String, TextCompare As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int CompareString(System::String ^ Left, System::String ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member CompareString : string * string * bool -&gt; int" Usage="Microsoft.VisualBasic.CompilerServices.Operators.CompareString (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.String" />
        <Parameter Name="Right" Type="System.String" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="1055f-181">Erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-181">Required.</span>
          </span>
          <span data-ttu-id="1055f-182">Beliebiger <see langword="String" />-Ausdruck.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-182">Any <see langword="String" /> expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="1055f-183">Erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-183">Required.</span>
          </span>
          <span data-ttu-id="1055f-184">Beliebiger <see langword="String" />-Ausdruck.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-184">Any <see langword="String" /> expression.</span>
          </span>
        </param>
        <param name="TextCompare">
          <span data-ttu-id="1055f-185">Erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-185">Required.</span>
          </span>
          <span data-ttu-id="1055f-186">
            <see langword="True" />, um einen Zeichenfolgenvergleich ohne Berücksichtigung der Groß- und Kleinschreibung auszuführen, andernfalls <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-186">
              <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1055f-187">Führt einen binären Vergleich oder einen Textzeichenfolgenvergleich für zwei angegebene Zeichenfolgen aus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-187">Performs binary or text string comparison when given two strings.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1055f-188">
            <list type="table">
              <listheader>
                <term> Wert  </term>
                <description> Bedingung  </description>
              </listheader>
              <item>
                <term> -1  </term>
                <description>
                  <paramref name="Left" />ist kleiner als <paramref name="Right" />.  </description>
              </item>
              <item>
                <term> 0 </term>
                <description>
                  <paramref name="Left" /> ist gleich <paramref name="Right" />.  </description>
              </item>
              <item>
                <term> 1  </term>
                <description>
                  <paramref name="Left" /> ist größer als  <paramref name="Right" />.  </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-188">
              <list type="table">
                <listheader>
                  <term> Value  </term>
                  <description> Condition  </description>
                </listheader>
                <item>
                  <term> -1  </term>
                  <description>
                    <paramref name="Left" /> is less than <paramref name="Right" />.  </description>
                </item>
                <item>
                  <term> 0  </term>
                  <description>
                    <paramref name="Left" /> is equal to <paramref name="Right" />.  </description>
                </item>
                <item>
                  <term> 1  </term>
                  <description>
                    <paramref name="Left" /> is greater than <paramref name="Right" />.  </description>
                </item>
              </list>
            </span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1055f-189">Diese Klasse unterstützt Visual Basic-Compiler und nicht direkt aus Ihrem Code verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="1055f-189">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 <span data-ttu-id="1055f-190">Wenn der Visual Basic-Gleichheitsoperator zum Vergleichen von zwei Zeichenfolgen verwendet wird, übergibt er die Zeichenfolgen, die die <xref:Microsoft.VisualBasic.CompilerServices.Operators.CompareString%2A> Methode zusammen mit einem Wert von `False` für die `TextCompare` Argument.</span><span class="sxs-lookup"><span data-stu-id="1055f-190">When the Visual Basic equality operator is used to compare two strings, it passes the strings to the <xref:Microsoft.VisualBasic.CompilerServices.Operators.CompareString%2A> method along with a value of `False` for the `TextCompare` argument.</span></span> <span data-ttu-id="1055f-191">Dies führt einen Vergleich der Groß-/Kleinschreibung, der entweder Ordnungszahl- oder basierend auf der aktuellen Kultur, abhängig vom Wert der Anweisung ist.</span><span class="sxs-lookup"><span data-stu-id="1055f-191">This performs a case-sensitive comparison that is either ordinal or based on the current culture, depending on the value of the  statement.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ConcatenateObject">
      <MemberSignature Language="C#" Value="public static object ConcatenateObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object ConcatenateObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ConcatenateObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConcatenateObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ConcatenateObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member ConcatenateObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.ConcatenateObject (Left, Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="1055f-192">Erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-192">Required.</span>
          </span>
          <span data-ttu-id="1055f-193">Beliebiger Ausdruck.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-193">Any expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="1055f-194">Erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-194">Required.</span>
          </span>
          <span data-ttu-id="1055f-195">Beliebiger Ausdruck.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-195">Any expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1055f-196">Stellt den Visual Basic-Verkettungsoperator (&amp;) dar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-196">Represents the Visual Basic concatenation (&amp;) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1055f-197">Eine Zeichenfolge, die die Verkettung von <paramref name="Left" /> und <paramref name="Right" /> darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-197">A string representing the concatenation of <paramref name="Left" /> and <paramref name="Right" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1055f-198">Diese Klasse unterstützt Visual Basic-Compiler und nicht direkt aus Ihrem Code verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="1055f-198">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ConditionalCompareObjectEqual">
      <MemberSignature Language="C#" Value="public static bool ConditionalCompareObjectEqual (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool ConditionalCompareObjectEqual(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectEqual(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalCompareObjectEqual (Left As Object, Right As Object, TextCompare As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ConditionalCompareObjectEqual(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member ConditionalCompareObjectEqual : obj * obj * bool -&gt; bool" Usage="Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectEqual (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="1055f-199">Erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-199">Required.</span>
          </span>
          <span data-ttu-id="1055f-200">Beliebiger Ausdruck.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-200">Any expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="1055f-201">Erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-201">Required.</span>
          </span>
          <span data-ttu-id="1055f-202">Beliebiger Ausdruck.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-202">Any expression.</span>
          </span>
        </param>
        <param name="TextCompare">
          <span data-ttu-id="1055f-203">Erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-203">Required.</span>
          </span>
          <span data-ttu-id="1055f-204">
            <see langword="True" />, um einen Zeichenfolgenvergleich ohne Berücksichtigung der Groß- und Kleinschreibung auszuführen, andernfalls <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-204">
              <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1055f-205">Stellt den überladenen Visual Basic-Gleichheitsoperator (=) dar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-205">Represents the overloaded Visual Basic equals (=) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1055f-206">Das Ergebnis des überladenen Gleichheitsoperators.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-206">The result of the overloaded equals operator.</span>
          </span>
          <span data-ttu-id="1055f-207">
            <see langword="False" />, wenn eine Operatorüberladung nicht unterstützt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-207">
              <see langword="False" /> if operator overloading is not supported.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1055f-208">Diese Klasse unterstützt Visual Basic-Compiler und nicht direkt aus Ihrem Code verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="1055f-208">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ConditionalCompareObjectGreater">
      <MemberSignature Language="C#" Value="public static bool ConditionalCompareObjectGreater (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool ConditionalCompareObjectGreater(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreater(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalCompareObjectGreater (Left As Object, Right As Object, TextCompare As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ConditionalCompareObjectGreater(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member ConditionalCompareObjectGreater : obj * obj * bool -&gt; bool" Usage="Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreater (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="1055f-209">Erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-209">Required.</span>
          </span>
          <span data-ttu-id="1055f-210">Beliebiger Ausdruck.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-210">Any expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="1055f-211">Erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-211">Required.</span>
          </span>
          <span data-ttu-id="1055f-212">Beliebiger Ausdruck.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-212">Any expression.</span>
          </span>
        </param>
        <param name="TextCompare">
          <span data-ttu-id="1055f-213">Erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-213">Required.</span>
          </span>
          <span data-ttu-id="1055f-214">
            <see langword="True" />, um einen Zeichenfolgenvergleich ohne Berücksichtigung der Groß- und Kleinschreibung auszuführen, andernfalls <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-214">
              <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1055f-215">Stellt den überladenen Visual Basic-größer-als (&gt;)-Operator dar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-215">Represents the overloaded Visual Basic greater-than (&gt;) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1055f-216">Das Ergebnis des überladenen Größer-als-Operators.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-216">The result of the overloaded greater-than operator.</span>
          </span>
          <span data-ttu-id="1055f-217">
            <see langword="False" />, wenn eine Operatorüberladung nicht unterstützt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-217">
              <see langword="False" /> if operator overloading is not supported.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1055f-218">Diese Klasse unterstützt Visual Basic-Compiler und nicht direkt aus Ihrem Code verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="1055f-218">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ConditionalCompareObjectGreaterEqual">
      <MemberSignature Language="C#" Value="public static bool ConditionalCompareObjectGreaterEqual (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool ConditionalCompareObjectGreaterEqual(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreaterEqual(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalCompareObjectGreaterEqual (Left As Object, Right As Object, TextCompare As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ConditionalCompareObjectGreaterEqual(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member ConditionalCompareObjectGreaterEqual : obj * obj * bool -&gt; bool" Usage="Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreaterEqual (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="1055f-219">Erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-219">Required.</span>
          </span>
          <span data-ttu-id="1055f-220">Beliebiger Ausdruck.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-220">Any expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="1055f-221">Erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-221">Required.</span>
          </span>
          <span data-ttu-id="1055f-222">Beliebiger Ausdruck.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-222">Any expression.</span>
          </span>
        </param>
        <param name="TextCompare">
          <span data-ttu-id="1055f-223">Erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-223">Required.</span>
          </span>
          <span data-ttu-id="1055f-224">
            <see langword="True" />, um einen Zeichenfolgenvergleich ohne Berücksichtigung der Groß- und Kleinschreibung auszuführen, andernfalls <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-224">
              <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1055f-225">Stellt den überladenen Visual Basic-größer-als-oder-gleich (&gt;=)-Operator dar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-225">Represents the overloaded Visual Basic greater-than or equal-to (&gt;=) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1055f-226">Das Ergebnis des überladenen Größer-als-Operators oder des überladenen Gleichheitsoperators.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-226">The result of the overloaded greater-than or equal-to operator.</span>
          </span>
          <span data-ttu-id="1055f-227">
            <see langword="False" />, wenn eine Operatorüberladung nicht unterstützt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-227">
              <see langword="False" /> if operator overloading is not supported.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1055f-228">Diese Klasse unterstützt Visual Basic-Compiler und nicht direkt aus Ihrem Code verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="1055f-228">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ConditionalCompareObjectLess">
      <MemberSignature Language="C#" Value="public static bool ConditionalCompareObjectLess (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool ConditionalCompareObjectLess(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLess(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalCompareObjectLess (Left As Object, Right As Object, TextCompare As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ConditionalCompareObjectLess(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member ConditionalCompareObjectLess : obj * obj * bool -&gt; bool" Usage="Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLess (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="1055f-229">Erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-229">Required.</span>
          </span>
          <span data-ttu-id="1055f-230">Beliebiger Ausdruck.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-230">Any expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="1055f-231">Erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-231">Required.</span>
          </span>
          <span data-ttu-id="1055f-232">Beliebiger Ausdruck.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-232">Any expression.</span>
          </span>
        </param>
        <param name="TextCompare">
          <span data-ttu-id="1055f-233">Erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-233">Required.</span>
          </span>
          <span data-ttu-id="1055f-234">
            <see langword="True" />, um einen Zeichenfolgenvergleich ohne Berücksichtigung der Groß- und Kleinschreibung auszuführen, andernfalls <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-234">
              <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1055f-235">Stellt den überladenen Visual Basic-kleiner-als (&lt;)-Operator dar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-235">Represents the overloaded Visual Basic less-than (&lt;) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1055f-236">Das Ergebnis des überladenen Kleiner-als-Operators.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-236">The result of the overloaded less-than operator.</span>
          </span>
          <span data-ttu-id="1055f-237">
            <see langword="False" />, wenn eine Operatorüberladung nicht unterstützt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-237">
              <see langword="False" /> if operator overloading is not supported.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1055f-238">Diese Klasse unterstützt Visual Basic-Compiler und nicht direkt aus Ihrem Code verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="1055f-238">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ConditionalCompareObjectLessEqual">
      <MemberSignature Language="C#" Value="public static bool ConditionalCompareObjectLessEqual (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool ConditionalCompareObjectLessEqual(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLessEqual(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalCompareObjectLessEqual (Left As Object, Right As Object, TextCompare As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ConditionalCompareObjectLessEqual(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member ConditionalCompareObjectLessEqual : obj * obj * bool -&gt; bool" Usage="Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLessEqual (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="1055f-239">Erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-239">Required.</span>
          </span>
          <span data-ttu-id="1055f-240">Beliebiger Ausdruck.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-240">Any expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="1055f-241">Erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-241">Required.</span>
          </span>
          <span data-ttu-id="1055f-242">Beliebiger Ausdruck.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-242">Any expression.</span>
          </span>
        </param>
        <param name="TextCompare">
          <span data-ttu-id="1055f-243">Erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-243">Required.</span>
          </span>
          <span data-ttu-id="1055f-244">
            <see langword="True" />, um einen Zeichenfolgenvergleich ohne Berücksichtigung der Groß- und Kleinschreibung auszuführen, andernfalls <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-244">
              <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1055f-245">Stellt den überladenen Visual Basic-kleiner-als-oder-gleich (&lt;=)-Operator dar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-245">Represents the overloaded Visual Basic less-than or equal-to (&lt;=) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1055f-246">Das Ergebnis des überladenen Kleiner-als-Operators oder des überladenen Gleichheitsoperators.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-246">The result of the overloaded less-than or equal-to operator.</span>
          </span>
          <span data-ttu-id="1055f-247">
            <see langword="False" />, wenn eine Operatorüberladung nicht unterstützt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-247">
              <see langword="False" /> if operator overloading is not supported.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1055f-248">Diese Klasse unterstützt Visual Basic-Compiler und nicht direkt aus Ihrem Code verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="1055f-248">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ConditionalCompareObjectNotEqual">
      <MemberSignature Language="C#" Value="public static bool ConditionalCompareObjectNotEqual (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool ConditionalCompareObjectNotEqual(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectNotEqual(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalCompareObjectNotEqual (Left As Object, Right As Object, TextCompare As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ConditionalCompareObjectNotEqual(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member ConditionalCompareObjectNotEqual : obj * obj * bool -&gt; bool" Usage="Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectNotEqual (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="1055f-249">Erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-249">Required.</span>
          </span>
          <span data-ttu-id="1055f-250">Beliebiger Ausdruck.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-250">Any expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="1055f-251">Erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-251">Required.</span>
          </span>
          <span data-ttu-id="1055f-252">Beliebiger Ausdruck.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-252">Any expression.</span>
          </span>
        </param>
        <param name="TextCompare">
          <span data-ttu-id="1055f-253">Erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-253">Required.</span>
          </span>
          <span data-ttu-id="1055f-254">
            <see langword="True" />, um einen Zeichenfolgenvergleich ohne Berücksichtigung der Groß- und Kleinschreibung auszuführen, andernfalls <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-254">
              <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1055f-255">Stellt den überladenen Visual Basic-Ungleichheitsoperator (&lt;&gt;) dar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-255">Represents the overloaded Visual Basic not-equal (&lt;&gt;) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1055f-256">Das Ergebnis des überladenen Ungleichheitsoperators.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-256">The result of the overloaded not-equal operator.</span>
          </span>
          <span data-ttu-id="1055f-257">
            <see langword="False" />, wenn eine Operatorüberladung nicht unterstützt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-257">
              <see langword="False" /> if operator overloading is not supported.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1055f-258">Diese Klasse unterstützt Visual Basic-Compiler und nicht direkt aus Ihrem Code verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="1055f-258">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="DivideObject">
      <MemberSignature Language="C#" Value="public static object DivideObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object DivideObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.DivideObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DivideObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ DivideObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member DivideObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.DivideObject (Left, Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="1055f-259">Erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-259">Required.</span>
          </span>
          <span data-ttu-id="1055f-260">Ein beliebiger numerischer Ausdruck.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-260">Any numeric expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="1055f-261">Erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-261">Required.</span>
          </span>
          <span data-ttu-id="1055f-262">Ein beliebiger numerischer Ausdruck.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-262">Any numeric expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1055f-263">Stellt den Visual Basic-Divisionsoperator (/) dar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-263">Represents the Visual Basic division (/) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1055f-264">Der volle Quotient, der sich aus der Division von <paramref name="Left" /> durch <paramref name="Right" /> ergibt, einschließlich des Rests.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-264">The full quotient of <paramref name="Left" /> divided by <paramref name="Right" />, including any remainder.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1055f-265">Diese Klasse unterstützt Visual Basic-Compiler und nicht direkt aus Ihrem Code verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="1055f-265">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ExponentObject">
      <MemberSignature Language="C#" Value="public static object ExponentObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object ExponentObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ExponentObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ExponentObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ExponentObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member ExponentObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.ExponentObject (Left, Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="1055f-266">Erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-266">Required.</span>
          </span>
          <span data-ttu-id="1055f-267">Ein beliebiger numerischer Ausdruck.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-267">Any numeric expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="1055f-268">Erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-268">Required.</span>
          </span>
          <span data-ttu-id="1055f-269">Ein beliebiger numerischer Ausdruck.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-269">Any numeric expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1055f-270">Stellt den Visual Basic-Exponentialoperator (^) dar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-270">Represents the Visual Basic exponent (^) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1055f-271">Das Ergebnis der Potenzierung von <paramref name="Left" /> mit <paramref name="Right" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-271">The result of <paramref name="Left" /> raised to the power of <paramref name="Right" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1055f-272">Diese Klasse unterstützt Visual Basic-Compiler und nicht direkt aus Ihrem Code verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="1055f-272">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="FallbackInvokeUserDefinedOperator">
      <MemberSignature Language="C#" Value="public static object FallbackInvokeUserDefinedOperator (object vbOp, object[] Arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public static object FallbackInvokeUserDefinedOperator(object vbOp, object[] Arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.FallbackInvokeUserDefinedOperator(System.Object,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FallbackInvokeUserDefinedOperator (vbOp As Object, Arguments As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ FallbackInvokeUserDefinedOperator(System::Object ^ vbOp, cli::array &lt;System::Object ^&gt; ^ Arguments);" />
      <MemberSignature Language="F#" Value="static member FallbackInvokeUserDefinedOperator : obj * obj[] -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.FallbackInvokeUserDefinedOperator (vbOp, Arguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Obsolete("do not use this method", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vbOp" Type="System.Object" />
        <Parameter Name="Arguments" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="vbOp">
          <span data-ttu-id="1055f-273">Der benutzerdefinierte Operator.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-273">The user-defined operator.</span>
          </span>
        </param>
        <param name="Arguments">
          <span data-ttu-id="1055f-274">Die Argumentwerte, die an den benutzerdefinierten Operator übergeben werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-274">Argument values to pass to the user-defined operator.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1055f-275">Führt eine spät gebundene Auswertung für einen benutzerdefinierten Operator aus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-275">Executes a late-bound evaluation of a user-defined operator.</span>
          </span>
          <span data-ttu-id="1055f-276">Diese Hilfsmethode ist nicht für den direkten Aufruf aus dem Code vorgesehen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-276">This helper method is not meant to be called directly from your code.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1055f-277">Das vom benutzerdefinierten Operator zurückgegebene Ergebnis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-277">The result returned from the user-defined operator.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="IntDivideObject">
      <MemberSignature Language="C#" Value="public static object IntDivideObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object IntDivideObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.IntDivideObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IntDivideObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ IntDivideObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member IntDivideObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.IntDivideObject (Left, Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="1055f-278">Erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-278">Required.</span>
          </span>
          <span data-ttu-id="1055f-279">Ein beliebiger numerischer Ausdruck.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-279">Any numeric expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="1055f-280">Erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-280">Required.</span>
          </span>
          <span data-ttu-id="1055f-281">Ein beliebiger numerischer Ausdruck.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-281">Any numeric expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1055f-282">Stellt den Ganzzahl-Divisionsoperator (\\) in Visual Basic dar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-282">Represents the Visual Basic integer division (\\) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1055f-283">Der ganzzahlige Quotient, der sich aus der Division von <paramref name="Left" /> durch <paramref name="Right" /> ergibt. Es wird nur der ganzzahlige Teil beibehalten, und ein eventueller Rest wird verworfen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-283">The integer quotient of <paramref name="Left" /> divided by <paramref name="Right" />, which discards any remainder and retains only the integer portion.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1055f-284">Diese Klasse unterstützt Visual Basic-Compiler und nicht direkt aus Ihrem Code verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="1055f-284">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="LeftShiftObject">
      <MemberSignature Language="C#" Value="public static object LeftShiftObject (object Operand, object Amount);" />
      <MemberSignature Language="ILAsm" Value=".method public static object LeftShiftObject(object Operand, object Amount) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.LeftShiftObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LeftShiftObject (Operand As Object, Amount As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ LeftShiftObject(System::Object ^ Operand, System::Object ^ Amount);" />
      <MemberSignature Language="F#" Value="static member LeftShiftObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.LeftShiftObject (Operand, Amount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Operand" Type="System.Object" />
        <Parameter Name="Amount" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Operand">
          <span data-ttu-id="1055f-285">Erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-285">Required.</span>
          </span>
          <span data-ttu-id="1055f-286">Ein ganzzahliger numerischer Ausdruck.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-286">Integral numeric expression.</span>
          </span>
          <span data-ttu-id="1055f-287">Das zu verschiebende Bitmuster.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-287">The bit pattern to be shifted.</span>
          </span>
          <span data-ttu-id="1055f-288">Der Datentyp muss ein ganzzahliger Typ (<see langword="SByte" />, <see langword="Byte" />, <see langword="Short" />, <see langword="UShort" />, <see langword="Integer" />, <see langword="UInteger" />, <see langword="Long" /> oder <see langword="ULong" />) sein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-288">The data type must be an integral type (<see langword="SByte" />, <see langword="Byte" />, <see langword="Short" />, <see langword="UShort" />, <see langword="Integer" />, <see langword="UInteger" />, <see langword="Long" />, or <see langword="ULong" />).</span>
          </span>
        </param>
        <param name="Amount">
          <span data-ttu-id="1055f-289">Erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-289">Required.</span>
          </span>
          <span data-ttu-id="1055f-290">Ein numerischer Ausdruck.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-290">Numeric expression.</span>
          </span>
          <span data-ttu-id="1055f-291">Die Anzahl der Bits, um die das Bitmuster verschoben werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-291">The number of bits to shift the bit pattern.</span>
          </span>
          <span data-ttu-id="1055f-292">Der Datentyp muss <see langword="Integer" /> sein oder zu <see langword="Integer" /> erweitert werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-292">The data type must be <see langword="Integer" /> or widen to <see langword="Integer" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1055f-293">Stellt den Operator für die Stellenverschiebung nach links (&lt;&lt;) in Visual Basic dar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-293">Represents the Visual Basic arithmetic left shift (&lt;&lt;) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1055f-294">Ein ganzzahliger numerischer Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-294">An integral numeric value.</span>
          </span>
          <span data-ttu-id="1055f-295">Das Ergebnis der Verschiebung des Bitmusters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-295">The result of shifting the bit pattern.</span>
          </span>
          <span data-ttu-id="1055f-296">Der Datentyp entspricht dem von <paramref name="Operand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-296">The data type is the same as that of <paramref name="Operand" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1055f-297">Diese Klasse unterstützt Visual Basic-Compiler und nicht direkt aus Ihrem Code verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="1055f-297">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="LikeObject">
      <MemberSignature Language="C#" Value="public static object LikeObject (object Source, object Pattern, Microsoft.VisualBasic.CompareMethod CompareOption);" />
      <MemberSignature Language="ILAsm" Value=".method public static object LikeObject(object Source, object Pattern, valuetype Microsoft.VisualBasic.CompareMethod CompareOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.LikeObject(System.Object,System.Object,Microsoft.VisualBasic.CompareMethod)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LikeObject (Source As Object, Pattern As Object, CompareOption As CompareMethod) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ LikeObject(System::Object ^ Source, System::Object ^ Pattern, Microsoft::VisualBasic::CompareMethod CompareOption);" />
      <MemberSignature Language="F#" Value="static member LikeObject : obj * obj * Microsoft.VisualBasic.CompareMethod -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.LikeObject (Source, Pattern, CompareOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Source" Type="System.Object" />
        <Parameter Name="Pattern" Type="System.Object" />
        <Parameter Name="CompareOption" Type="Microsoft.VisualBasic.CompareMethod" />
      </Parameters>
      <Docs>
        <param name="Source">
          <span data-ttu-id="1055f-298">Erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-298">Required.</span>
          </span>
          <span data-ttu-id="1055f-299">Beliebiger Ausdruck.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-299">Any expression.</span>
          </span>
        </param>
        <param name="Pattern">
          <span data-ttu-id="1055f-300">Erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-300">Required.</span>
          </span>
          <span data-ttu-id="1055f-301">Ein beliebiger Zeichenfolgenausdruck, der den in Like-Operator beschriebenen Mustervergleichskonventionen entspricht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-301">Any string expression conforming to the pattern-matching conventions described in Like Operator.</span>
          </span>
        </param>
        <param name="CompareOption">
          <span data-ttu-id="1055f-302">Erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-302">Required.</span>
          </span>
          <span data-ttu-id="1055f-303">Ein <see cref="T:Microsoft.VisualBasic.CompareMethod" />-Wert, der angibt, dass bei der Operation ein Textvergleich oder ein binärer Vergleich durchgeführt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-303">A <see cref="T:Microsoft.VisualBasic.CompareMethod" /> value that specifies that the operation use either text or binary comparison.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1055f-304">Stellt den <see langword="Like" />-Operator in Visual Basic dar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-304">Represents the Visual Basic <see langword="Like" /> operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1055f-305">
            <see langword="True" />, wenn die Zeichenfolgendarstellung des Werts in <paramref name="Source" /> dem in <paramref name="Pattern" /> enthaltenen Muster entspricht, andernfalls <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-305">
              <see langword="True" /> if the string representation of the value in <paramref name="Source" /> satisfies the pattern that is contained in <paramref name="Pattern" />; otherwise, <see langword="False" />.</span>
          </span>
          <span data-ttu-id="1055f-306">
            <see langword="True" />, wenn sowohl <paramref name="Source" /> als auch <paramref name="Pattern" /> gleich <see langword="Nothing" /> sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-306">
              <see langword="True" /> if both <paramref name="Source" /> and <paramref name="Pattern" /> are <see langword="Nothing" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1055f-307">Diese Klasse unterstützt Visual Basic-Compiler und nicht direkt aus Ihrem Code verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="1055f-307">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="LikeString">
      <MemberSignature Language="C#" Value="public static bool LikeString (string Source, string Pattern, Microsoft.VisualBasic.CompareMethod CompareOption);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool LikeString(string Source, string Pattern, valuetype Microsoft.VisualBasic.CompareMethod CompareOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.LikeString(System.String,System.String,Microsoft.VisualBasic.CompareMethod)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LikeString (Source As String, Pattern As String, CompareOption As CompareMethod) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool LikeString(System::String ^ Source, System::String ^ Pattern, Microsoft::VisualBasic::CompareMethod CompareOption);" />
      <MemberSignature Language="F#" Value="static member LikeString : string * string * Microsoft.VisualBasic.CompareMethod -&gt; bool" Usage="Microsoft.VisualBasic.CompilerServices.Operators.LikeString (Source, Pattern, CompareOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Source" Type="System.String" />
        <Parameter Name="Pattern" Type="System.String" />
        <Parameter Name="CompareOption" Type="Microsoft.VisualBasic.CompareMethod" />
      </Parameters>
      <Docs>
        <param name="Source">
          <span data-ttu-id="1055f-308">Erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-308">Required.</span>
          </span>
          <span data-ttu-id="1055f-309">Beliebiger <see langword="String" />-Ausdruck.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-309">Any <see langword="String" /> expression.</span>
          </span>
        </param>
        <param name="Pattern">
          <span data-ttu-id="1055f-310">Erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-310">Required.</span>
          </span>
          <span data-ttu-id="1055f-311">Ein beliebiger <see langword="String" />-Ausdruck, der den in Like-Operator beschriebenen Mustervergleichskonventionen entspricht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-311">Any <see langword="String" /> expression conforming to the pattern-matching conventions described in Like Operator.</span>
          </span>
        </param>
        <param name="CompareOption">
          <span data-ttu-id="1055f-312">Erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-312">Required.</span>
          </span>
          <span data-ttu-id="1055f-313">Ein <see cref="T:Microsoft.VisualBasic.CompareMethod" />-Wert, der angibt, dass bei der Operation ein Textvergleich oder ein binärer Vergleich durchgeführt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-313">A <see cref="T:Microsoft.VisualBasic.CompareMethod" /> value that specifies that the operation use either text or binary comparison.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1055f-314">Stellt den <see langword="Like" />-Operator in Visual Basic dar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-314">Represents the Visual Basic <see langword="Like" /> operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1055f-315">
            <see langword="True" />, wenn der Wert in <paramref name="Source" /> dem in <paramref name="Pattern" /> enthaltenen Muster entspricht, andernfalls <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-315">
              <see langword="True" /> if the value in <paramref name="Source" /> satisfies the pattern that is contained in <paramref name="Pattern" />; otherwise, <see langword="False" />.</span>
          </span>
          <span data-ttu-id="1055f-316">
            <see langword="True" />, wenn sowohl <paramref name="Source" /> als auch <paramref name="Pattern" /> leer sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-316">
              <see langword="True" /> if both <paramref name="Source" /> and <paramref name="Pattern" /> are empty.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1055f-317">Diese Klasse unterstützt Visual Basic-Compiler und nicht direkt aus Ihrem Code verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="1055f-317">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ModObject">
      <MemberSignature Language="C#" Value="public static object ModObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object ModObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ModObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ModObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ModObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member ModObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.ModObject (Left, Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="1055f-318">Erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-318">Required.</span>
          </span>
          <span data-ttu-id="1055f-319">Ein beliebiger numerischer Ausdruck.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-319">Any numeric expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="1055f-320">Erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-320">Required.</span>
          </span>
          <span data-ttu-id="1055f-321">Ein beliebiger numerischer Ausdruck.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-321">Any numeric expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1055f-322">Stellt den <see langword="Mod" />-Operator in Visual Basic dar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-322">Represents the Visual Basic <see langword="Mod" /> operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1055f-323">Der Rest aus der Division von <paramref name="Left" /> durch <paramref name="Right" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-323">The remainder after <paramref name="Left" /> is divided by <paramref name="Right" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1055f-324">Diese Klasse unterstützt Visual Basic-Compiler und nicht direkt aus Ihrem Code verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="1055f-324">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="MultiplyObject">
      <MemberSignature Language="C#" Value="public static object MultiplyObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object MultiplyObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.MultiplyObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MultiplyObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ MultiplyObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member MultiplyObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.MultiplyObject (Left, Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="1055f-325">Erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-325">Required.</span>
          </span>
          <span data-ttu-id="1055f-326">Ein beliebiger numerischer Ausdruck.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-326">Any numeric expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="1055f-327">Erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-327">Required.</span>
          </span>
          <span data-ttu-id="1055f-328">Ein beliebiger numerischer Ausdruck.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-328">Any numeric expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1055f-329">Stellt den Visual Basic-Multiplikationsoperator (\*) dar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-329">Represents the Visual Basic multiply (\*) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1055f-330">Das Produkt von <paramref name="Left" /> und <paramref name="Right" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-330">The product of <paramref name="Left" /> and <paramref name="Right" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1055f-331">Diese Klasse unterstützt Visual Basic-Compiler und nicht direkt aus Ihrem Code verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="1055f-331">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="NegateObject">
      <MemberSignature Language="C#" Value="public static object NegateObject (object Operand);" />
      <MemberSignature Language="ILAsm" Value=".method public static object NegateObject(object Operand) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.NegateObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NegateObject (Operand As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ NegateObject(System::Object ^ Operand);" />
      <MemberSignature Language="F#" Value="static member NegateObject : obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.NegateObject Operand" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Operand" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Operand">
          <span data-ttu-id="1055f-332">Erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-332">Required.</span>
          </span>
          <span data-ttu-id="1055f-333">Ein beliebiger numerischer Ausdruck.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-333">Any numeric expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1055f-334">Stellt den unären Subtraktionsoperator (–) in Visual Basic dar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-334">Represents the Visual Basic unary minus (–) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1055f-335">Der negative Wert von <paramref name="Operand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-335">The negative value of <paramref name="Operand" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1055f-336">Diese Klasse unterstützt Visual Basic-Compiler und nicht direkt aus Ihrem Code verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="1055f-336">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="NotObject">
      <MemberSignature Language="C#" Value="public static object NotObject (object Operand);" />
      <MemberSignature Language="ILAsm" Value=".method public static object NotObject(object Operand) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.NotObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NotObject (Operand As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ NotObject(System::Object ^ Operand);" />
      <MemberSignature Language="F#" Value="static member NotObject : obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.NotObject Operand" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Operand" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Operand">
          <span data-ttu-id="1055f-337">Erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-337">Required.</span>
          </span>
          <span data-ttu-id="1055f-338">Ein beliebiger <see langword="Boolean" />-Ausdruck oder numerischer Ausdruck.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-338">Any <see langword="Boolean" /> or numeric expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1055f-339">Stellt den <see langword="Not" />-Operator in Visual Basic dar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-339">Represents the Visual Basic <see langword="Not" /> operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1055f-340">Für <see langword="Boolean" />-Operationen: <see langword="False" />, wenn <paramref name="Operand" /> gleich <see langword="True" /> ist, andernfalls <see langword="True" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-340">For <see langword="Boolean" /> operations, <see langword="False" /> if <paramref name="Operand" /> is <see langword="True" />; otherwise, <see langword="True" />.</span>
          </span>
          <span data-ttu-id="1055f-341">Für bitweise Operationen: 1, wenn <paramref name="Operand" /> gleich 0 ist, andernfalls 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-341">For bitwise operations, 1 if <paramref name="Operand" /> is 0; otherwise, 0.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1055f-342">Diese Klasse unterstützt Visual Basic-Compiler und nicht direkt aus Ihrem Code verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="1055f-342">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="OrObject">
      <MemberSignature Language="C#" Value="public static object OrObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object OrObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.OrObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OrObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ OrObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member OrObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.OrObject (Left, Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="1055f-343">Erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-343">Required.</span>
          </span>
          <span data-ttu-id="1055f-344">Ein beliebiger <see langword="Boolean" />-Ausdruck oder numerischer Ausdruck.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-344">Any <see langword="Boolean" /> or numeric expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="1055f-345">Erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-345">Required.</span>
          </span>
          <span data-ttu-id="1055f-346">Ein beliebiger <see langword="Boolean" />-Ausdruck oder numerischer Ausdruck.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-346">Any <see langword="Boolean" /> or numeric expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1055f-347">Stellt den <see langword="Or" />-Operator in Visual Basic dar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-347">Represents the Visual Basic <see langword="Or" /> operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1055f-348">Für <see langword="Boolean" />-Operationen: <see langword="False" />, wenn sowohl <paramref name="Left" /> als auch <paramref name="Right" /><see langword="False" /> ergeben, andernfalls <see langword="True" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-348">For <see langword="Boolean" /> operations, <see langword="False" /> if both <paramref name="Left" /> and <paramref name="Right" /> evaluate to <see langword="False" />; otherwise, <see langword="True" />.</span>
          </span>
          <span data-ttu-id="1055f-349">Für bitweise Operationen: 0, wenn sowohl <paramref name="Left" />, als auch <paramref name="Right" /> 0 ergeben, andernfalls 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-349">For bitwise operations, 0 if both <paramref name="Left" /> and <paramref name="Right" /> evaluate to 0; otherwise, 1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1055f-350">Diese Klasse unterstützt Visual Basic-Compiler und nicht direkt aus Ihrem Code verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="1055f-350">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="PlusObject">
      <MemberSignature Language="C#" Value="public static object PlusObject (object Operand);" />
      <MemberSignature Language="ILAsm" Value=".method public static object PlusObject(object Operand) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.PlusObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PlusObject (Operand As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ PlusObject(System::Object ^ Operand);" />
      <MemberSignature Language="F#" Value="static member PlusObject : obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.PlusObject Operand" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Operand" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Operand">
          <span data-ttu-id="1055f-351">Erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-351">Required.</span>
          </span>
          <span data-ttu-id="1055f-352">Ein beliebiger numerischer Ausdruck.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-352">Any numeric expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1055f-353">Stellt den unären Additionsoperator (+) in Visual Basic dar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-353">Represents the Visual Basic unary plus (+) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1055f-354">Der Wert von <paramref name="Operand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-354">The value of <paramref name="Operand" />.</span>
          </span>
          <span data-ttu-id="1055f-355">(Das Vorzeichen von <paramref name="Operand" /> wird nicht geändert.)</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-355">(The sign of the <paramref name="Operand" /> is unchanged.)</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1055f-356">Diese Klasse unterstützt Visual Basic-Compiler und nicht direkt aus Ihrem Code verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="1055f-356">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="RightShiftObject">
      <MemberSignature Language="C#" Value="public static object RightShiftObject (object Operand, object Amount);" />
      <MemberSignature Language="ILAsm" Value=".method public static object RightShiftObject(object Operand, object Amount) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.RightShiftObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RightShiftObject (Operand As Object, Amount As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ RightShiftObject(System::Object ^ Operand, System::Object ^ Amount);" />
      <MemberSignature Language="F#" Value="static member RightShiftObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.RightShiftObject (Operand, Amount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Operand" Type="System.Object" />
        <Parameter Name="Amount" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Operand">
          <span data-ttu-id="1055f-357">Erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-357">Required.</span>
          </span>
          <span data-ttu-id="1055f-358">Ein ganzzahliger numerischer Ausdruck.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-358">Integral numeric expression.</span>
          </span>
          <span data-ttu-id="1055f-359">Das zu verschiebende Bitmuster.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-359">The bit pattern to be shifted.</span>
          </span>
          <span data-ttu-id="1055f-360">Der Datentyp muss ein ganzzahliger Typ (<see langword="SByte" />, <see langword="Byte" />, <see langword="Short" />, <see langword="UShort" />, <see langword="Integer" />, <see langword="UInteger" />, <see langword="Long" /> oder <see langword="ULong" />) sein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-360">The data type must be an integral type (<see langword="SByte" />, <see langword="Byte" />, <see langword="Short" />, <see langword="UShort" />, <see langword="Integer" />, <see langword="UInteger" />, <see langword="Long" />, or <see langword="ULong" />).</span>
          </span>
        </param>
        <param name="Amount">
          <span data-ttu-id="1055f-361">Erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-361">Required.</span>
          </span>
          <span data-ttu-id="1055f-362">Ein numerischer Ausdruck.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-362">Numeric expression.</span>
          </span>
          <span data-ttu-id="1055f-363">Die Anzahl der Bits, um die das Bitmuster verschoben werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-363">The number of bits to shift the bit pattern.</span>
          </span>
          <span data-ttu-id="1055f-364">Der Datentyp muss <see langword="Integer" /> sein oder zu <see langword="Integer" /> erweitert werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-364">The data type must be <see langword="Integer" /> or widen to <see langword="Integer" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1055f-365">Stellt den Operator für die Stellenverschiebung nach rechts (&gt;&gt;) in Visual Basic dar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-365">Represents the Visual Basic arithmetic right shift (&gt;&gt;) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1055f-366">Ein ganzzahliger numerischer Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-366">An integral numeric value.</span>
          </span>
          <span data-ttu-id="1055f-367">Das Ergebnis der Verschiebung des Bitmusters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-367">The result of shifting the bit pattern.</span>
          </span>
          <span data-ttu-id="1055f-368">Der Datentyp entspricht dem von <paramref name="Operand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-368">The data type is the same as that of <paramref name="Operand" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1055f-369">Diese Klasse unterstützt Visual Basic-Compiler und nicht direkt aus Ihrem Code verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="1055f-369">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="SubtractObject">
      <MemberSignature Language="C#" Value="public static object SubtractObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object SubtractObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.SubtractObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SubtractObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ SubtractObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member SubtractObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.SubtractObject (Left, Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="1055f-370">Erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-370">Required.</span>
          </span>
          <span data-ttu-id="1055f-371">Ein beliebiger numerischer Ausdruck.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-371">Any numeric expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="1055f-372">Erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-372">Required.</span>
          </span>
          <span data-ttu-id="1055f-373">Ein beliebiger numerischer Ausdruck.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-373">Any numeric expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1055f-374">Stellt den Visual Basic-Subtraktionsoperator (–) dar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-374">Represents the Visual Basic subtraction (–) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1055f-375">Die Differenz zwischen <paramref name="Left" /> und <paramref name="Right" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-375">The difference between <paramref name="Left" /> and <paramref name="Right" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1055f-376">Diese Klasse unterstützt Visual Basic-Compiler und nicht direkt aus Ihrem Code verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="1055f-376">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="XorObject">
      <MemberSignature Language="C#" Value="public static object XorObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object XorObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.XorObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function XorObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ XorObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member XorObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.XorObject (Left, Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="1055f-377">Erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-377">Required.</span>
          </span>
          <span data-ttu-id="1055f-378">Ein beliebiger <see langword="Boolean" />-Ausdruck oder numerischer Ausdruck.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-378">Any <see langword="Boolean" /> or numeric expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="1055f-379">Erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-379">Required.</span>
          </span>
          <span data-ttu-id="1055f-380">Ein beliebiger <see langword="Boolean" />-Ausdruck oder numerischer Ausdruck.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-380">Any <see langword="Boolean" /> or numeric expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1055f-381">Stellt den <see langword="Xor" />-Operator in Visual Basic dar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-381">Represents the Visual Basic <see langword="Xor" /> operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1055f-382">Ein <see langword="Boolean" />-Wert oder ein numerischer Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-382">A <see langword="Boolean" /> or numeric value.</span>
          </span>
          <span data-ttu-id="1055f-383">Bei einem <see langword="Boolean" />-Vergleich ist der Rückgabewert der logische Ausschluss (exklusive logische Disjunktion) aus zwei <see langword="Boolean" />-Werten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-383">For a <see langword="Boolean" /> comparison, the return value is the logical exclusion (exclusive logical disjunction) of two <see langword="Boolean" /> values.</span>
          </span>
          <span data-ttu-id="1055f-384">Bei bitweisen (numerischen) Vorgängen ist der Rückgabewert ein numerischer Wert, der den bitweisen Ausschluss (exklusive bitweise Disjunktion) aus zwei numerischen Bitmustern darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-384">For bitwise (numeric) operations, the return value is a numeric value that represents the bitwise exclusion (exclusive bitwise disjunction) of two numeric bit patterns.</span>
          </span>
          <span data-ttu-id="1055f-385">Weitere Informationen finden Sie unter [Xor Operator](~/docs/visual-basic/language-reference/operators/xor-operator.md).</span>
          <span class="sxs-lookup">
            <span data-stu-id="1055f-385">For more information, see [Xor Operator](~/docs/visual-basic/language-reference/operators/xor-operator.md).</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1055f-386">Diese Klasse unterstützt Visual Basic-Compiler und nicht direkt aus Ihrem Code verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="1055f-386">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
  </Members>
</Type>