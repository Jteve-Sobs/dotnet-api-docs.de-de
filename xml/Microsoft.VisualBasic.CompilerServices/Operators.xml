<Type Name="Operators" FullName="Microsoft.VisualBasic.CompilerServices.Operators">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4f60ee5b9847b57f4a6cf366eff0e9e7ff4813b5" /><Meta Name="ms.sourcegitcommit" Value="f11e0152a1dd5d85dbd684f07123f1829eed3f3a" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="01/17/2020" /><Meta Name="ms.locfileid" Value="76165196" /></Metadata><TypeSignature Language="C#" Value="public sealed class Operators" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Operators extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.CompilerServices.Operators" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Operators" />
  <TypeSignature Language="C++ CLI" Value="public ref class Operators sealed" />
  <TypeSignature Language="F#" Value="type Operators = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
    <AssemblyVersion>10.0.4.0</AssemblyVersion>
    <AssemblyVersion>10.0.5.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2">
      <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-uwp-10.0;netcore-3.0;netcore-3.1">
      <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="d79c3-101">Stellt mathematische Operatoren mit später Bindung bereit, z. B. <see cref="M:Microsoft.VisualBasic.CompilerServices.Operators.AddObject(System.Object,System.Object)" /> und <see cref="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObject(System.Object,System.Object,System.Boolean)" />, die vom Visual Basic-Compiler intern verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="d79c3-101">Provides late-bound math operators, such as <see cref="M:Microsoft.VisualBasic.CompilerServices.Operators.AddObject(System.Object,System.Object)" /> and <see cref="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObject(System.Object,System.Object,System.Boolean)" />, which the Visual Basic compiler uses internally.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d79c3-102">Diese Klasse unterstützt den Visual Basic-Compiler und ist nicht für die direkte Verwendung im Code vorgesehen.</span><span class="sxs-lookup"><span data-stu-id="d79c3-102">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
    </remarks>
    <forInternalUseOnly />
    <related type="Article" href="~/docs/visual-basic/language-reference/operators/index.md"><span data-ttu-id="d79c3-103">Operatoren (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="d79c3-103">Operators (Visual Basic)</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="AddObject">
      <MemberSignature Language="C#" Value="public static object AddObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object AddObject(object Left, object Right) cil managed" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.AddObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AddObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ AddObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member AddObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.AddObject (Left, Right)" />
      <MemberSignature Language="ILAsm" Value=".method public static object AddObject(object Left, object Right) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="d79c3-104">Erforderlich</span><span class="sxs-lookup"><span data-stu-id="d79c3-104">Required.</span></span> <span data-ttu-id="d79c3-105">Ein beliebiger numerischer Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="d79c3-105">Any numeric expression.</span></span></param>
        <param name="Right"><span data-ttu-id="d79c3-106">Erforderlich</span><span class="sxs-lookup"><span data-stu-id="d79c3-106">Required.</span></span> <span data-ttu-id="d79c3-107">Ein beliebiger numerischer Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="d79c3-107">Any numeric expression.</span></span></param>
        <summary><span data-ttu-id="d79c3-108">Stellt den Visual Basic-Additionsoperator (+) dar.</span><span class="sxs-lookup"><span data-stu-id="d79c3-108">Represents the Visual Basic addition (+) operator.</span></span></summary>
        <returns><span data-ttu-id="d79c3-109">Die Summe von <paramref name="Left" /> und <paramref name="Right" />.</span><span class="sxs-lookup"><span data-stu-id="d79c3-109">The sum of <paramref name="Left" /> and <paramref name="Right" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d79c3-110">Diese Klasse unterstützt den Visual Basic-Compiler und ist nicht für die direkte Verwendung im Code vorgesehen.</span><span class="sxs-lookup"><span data-stu-id="d79c3-110">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/addition-operator.md"><span data-ttu-id="d79c3-111">+-Operator (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="d79c3-111">+ Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AndObject">
      <MemberSignature Language="C#" Value="public static object AndObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object AndObject(object Left, object Right) cil managed" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.AndObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AndObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ AndObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member AndObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.AndObject (Left, Right)" />
      <MemberSignature Language="ILAsm" Value=".method public static object AndObject(object Left, object Right) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="d79c3-112">Erforderlich</span><span class="sxs-lookup"><span data-stu-id="d79c3-112">Required.</span></span> <span data-ttu-id="d79c3-113">Ein beliebiger <see langword="Boolean" />-Ausdruck oder numerischer Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="d79c3-113">Any <see langword="Boolean" /> or numeric expression.</span></span></param>
        <param name="Right"><span data-ttu-id="d79c3-114">Erforderlich</span><span class="sxs-lookup"><span data-stu-id="d79c3-114">Required.</span></span> <span data-ttu-id="d79c3-115">Ein beliebiger <see langword="Boolean" />-Ausdruck oder numerischer Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="d79c3-115">Any <see langword="Boolean" /> or numeric expression.</span></span></param>
        <summary><span data-ttu-id="d79c3-116">Stellt den <see langword="And" />-Operator in Visual Basic dar.</span><span class="sxs-lookup"><span data-stu-id="d79c3-116">Represents the Visual Basic <see langword="And" /> operator.</span></span></summary>
        <returns><span data-ttu-id="d79c3-117">Für <see langword="Boolean" />-Operationen: <see langword="True" />, wenn sowohl <paramref name="Left" /> als auch <paramref name="Right" /> <see langword="True" /> ergeben, andernfalls <see langword="False" />.</span><span class="sxs-lookup"><span data-stu-id="d79c3-117">For <see langword="Boolean" /> operations, <see langword="True" /> if both <paramref name="Left" /> and <paramref name="Right" /> evaluate to <see langword="True" />; otherwise, <see langword="False" />.</span></span> <span data-ttu-id="d79c3-118">Für bitweise Operationen: 1, wenn sowohl <paramref name="Left" /> als auch <paramref name="Right" /> 1 ergeben, andernfalls 0.</span><span class="sxs-lookup"><span data-stu-id="d79c3-118">For bitwise operations, 1 if both <paramref name="Left" /> and <paramref name="Right" /> evaluate to 1; otherwise, 0.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d79c3-119">Diese Klasse unterstützt den Visual Basic-Compiler und ist nicht für die direkte Verwendung im Code vorgesehen.</span><span class="sxs-lookup"><span data-stu-id="d79c3-119">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/and-operator.md"><span data-ttu-id="d79c3-120">And-Operator (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="d79c3-120">And Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CompareObject">
      <MemberSignature Language="C#" Value="public static int CompareObject (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 CompareObject(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObject(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareObject (Left As Object, Right As Object, TextCompare As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int CompareObject(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member CompareObject : obj * obj * bool -&gt; int" Usage="Microsoft.VisualBasic.CompilerServices.Operators.CompareObject (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="Right" Type="System.Object" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="TextCompare" Type="System.Boolean" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="d79c3-121">Erforderlich</span><span class="sxs-lookup"><span data-stu-id="d79c3-121">Required.</span></span> <span data-ttu-id="d79c3-122">Beliebiger Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="d79c3-122">Any expression.</span></span></param>
        <param name="Right"><span data-ttu-id="d79c3-123">Erforderlich</span><span class="sxs-lookup"><span data-stu-id="d79c3-123">Required.</span></span> <span data-ttu-id="d79c3-124">Beliebiger Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="d79c3-124">Any expression.</span></span></param>
        <param name="TextCompare"><span data-ttu-id="d79c3-125">Erforderlich</span><span class="sxs-lookup"><span data-stu-id="d79c3-125">Required.</span></span> <span data-ttu-id="d79c3-126"><see langword="True" />, um einen Zeichenfolgenvergleich ohne Berücksichtigung der Groß- und Kleinschreibung auszuführen, andernfalls <see langword="False" />.</span><span class="sxs-lookup"><span data-stu-id="d79c3-126"><see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="d79c3-127">Stellt Vergleichsoperatoren in Visual Basic dar.</span><span class="sxs-lookup"><span data-stu-id="d79c3-127">Represents Visual Basic comparison operators.</span></span></summary>
        <returns><list type="table">
            <listheader>
              <term> <span data-ttu-id="d79c3-128">Wert</span><span class="sxs-lookup"><span data-stu-id="d79c3-128">Value</span></span> 
 </term>
              <description> <span data-ttu-id="d79c3-129">Bedingung</span><span class="sxs-lookup"><span data-stu-id="d79c3-129">Condition</span></span> 
 </description>
            </listheader>
            <item>
              <term> <span data-ttu-id="d79c3-130">-1</span><span class="sxs-lookup"><span data-stu-id="d79c3-130">-1</span></span> 
 </term>
              <description><span data-ttu-id="d79c3-131">
                <paramref name="Left" /> ist kleiner als <paramref name="Right" />.</span><span class="sxs-lookup"><span data-stu-id="d79c3-131">
                <paramref name="Left" /> is less than <paramref name="Right" />.</span></span>  
  
 </description>
            </item>
            <item>
              <term> <span data-ttu-id="d79c3-132">0</span><span class="sxs-lookup"><span data-stu-id="d79c3-132">0</span></span> 
 </term>
              <description><span data-ttu-id="d79c3-133">
                <paramref name="Left" /> und <paramref name="Right" /> sind gleich.</span><span class="sxs-lookup"><span data-stu-id="d79c3-133">
                <paramref name="Left" /> and <paramref name="Right" /> are equal.</span></span>  
  
 </description>
            </item>
            <item>
              <term> <span data-ttu-id="d79c3-134">1</span><span class="sxs-lookup"><span data-stu-id="d79c3-134">1</span></span> 
 </term>
              <description><span data-ttu-id="d79c3-135">
                <paramref name="Left" /> ist größer als <paramref name="Right" />.</span><span class="sxs-lookup"><span data-stu-id="d79c3-135">
                <paramref name="Left" /> is greater than <paramref name="Right" />.</span></span>  
  
 </description>
            </item>
          </list>
<span data-ttu-id="d79c3-136">.</span><span class="sxs-lookup"><span data-stu-id="d79c3-136">.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d79c3-137">Diese Klasse unterstützt den Visual Basic-Compiler und ist nicht für die direkte Verwendung im Code vorgesehen.</span><span class="sxs-lookup"><span data-stu-id="d79c3-137">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/comparison-operators.md"><span data-ttu-id="d79c3-138">Vergleichsoperatoren (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="d79c3-138">Comparison Operators (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CompareObjectEqual">
      <MemberSignature Language="C#" Value="public static object CompareObjectEqual (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object CompareObjectEqual(object Left, object Right, bool TextCompare) cil managed" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectEqual(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareObjectEqual (Left As Object, Right As Object, TextCompare As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CompareObjectEqual(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member CompareObjectEqual : obj * obj * bool -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectEqual (Left, Right, TextCompare)" />
      <MemberSignature Language="ILAsm" Value=".method public static object CompareObjectEqual(object Left, object Right, bool TextCompare) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="d79c3-139">Erforderlich</span><span class="sxs-lookup"><span data-stu-id="d79c3-139">Required.</span></span> <span data-ttu-id="d79c3-140">Beliebiger Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="d79c3-140">Any expression.</span></span></param>
        <param name="Right"><span data-ttu-id="d79c3-141">Erforderlich</span><span class="sxs-lookup"><span data-stu-id="d79c3-141">Required.</span></span> <span data-ttu-id="d79c3-142">Beliebiger Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="d79c3-142">Any expression.</span></span></param>
        <param name="TextCompare"><span data-ttu-id="d79c3-143">Erforderlich</span><span class="sxs-lookup"><span data-stu-id="d79c3-143">Required.</span></span> <span data-ttu-id="d79c3-144"><see langword="True" />, um einen Zeichenfolgenvergleich ohne Berücksichtigung der Groß- und Kleinschreibung auszuführen, andernfalls <see langword="False" />.</span><span class="sxs-lookup"><span data-stu-id="d79c3-144"><see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="d79c3-145">Stellt den Visual Basic-Gleichheitsoperator (=) dar.</span><span class="sxs-lookup"><span data-stu-id="d79c3-145">Represents the Visual Basic equal (=) operator.</span></span></summary>
        <returns><span data-ttu-id="d79c3-146"><see langword="True" />, wenn <paramref name="Left" /> und <paramref name="Right" /> gleich sind, andernfalls <see langword="False" />.</span><span class="sxs-lookup"><span data-stu-id="d79c3-146"><see langword="True" /> if <paramref name="Left" /> and <paramref name="Right" /> are equal; otherwise, <see langword="False" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d79c3-147">Diese Klasse unterstützt den Visual Basic-Compiler und ist nicht für die direkte Verwendung im Code vorgesehen.</span><span class="sxs-lookup"><span data-stu-id="d79c3-147">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/comparison-operators.md"><span data-ttu-id="d79c3-148">Vergleichsoperatoren (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="d79c3-148">Comparison Operators (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CompareObjectGreater">
      <MemberSignature Language="C#" Value="public static object CompareObjectGreater (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object CompareObjectGreater(object Left, object Right, bool TextCompare) cil managed" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectGreater(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareObjectGreater (Left As Object, Right As Object, TextCompare As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CompareObjectGreater(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member CompareObjectGreater : obj * obj * bool -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectGreater (Left, Right, TextCompare)" />
      <MemberSignature Language="ILAsm" Value=".method public static object CompareObjectGreater(object Left, object Right, bool TextCompare) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="d79c3-149">Erforderlich</span><span class="sxs-lookup"><span data-stu-id="d79c3-149">Required.</span></span> <span data-ttu-id="d79c3-150">Beliebiger Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="d79c3-150">Any expression.</span></span></param>
        <param name="Right"><span data-ttu-id="d79c3-151">Erforderlich</span><span class="sxs-lookup"><span data-stu-id="d79c3-151">Required.</span></span> <span data-ttu-id="d79c3-152">Beliebiger Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="d79c3-152">Any expression.</span></span></param>
        <param name="TextCompare"><span data-ttu-id="d79c3-153">Erforderlich</span><span class="sxs-lookup"><span data-stu-id="d79c3-153">Required.</span></span> <span data-ttu-id="d79c3-154"><see langword="True" />, um einen Zeichenfolgenvergleich ohne Berücksichtigung der Groß- und Kleinschreibung auszuführen, andernfalls <see langword="False" />.</span><span class="sxs-lookup"><span data-stu-id="d79c3-154"><see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="d79c3-155">Stellt den Visual Basic-größer-als (&gt;)-Operator dar.</span><span class="sxs-lookup"><span data-stu-id="d79c3-155">Represents the Visual Basic greater-than (&gt;) operator.</span></span></summary>
        <returns><span data-ttu-id="d79c3-156"><see langword="True" />, wenn <paramref name="Left" /> größer als <paramref name="Right" /> ist, andernfalls <see langword="False" />.</span><span class="sxs-lookup"><span data-stu-id="d79c3-156"><see langword="True" /> if <paramref name="Left" /> is greater than <paramref name="Right" />; otherwise, <see langword="False" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d79c3-157">Diese Klasse unterstützt den Visual Basic-Compiler und ist nicht für die direkte Verwendung im Code vorgesehen.</span><span class="sxs-lookup"><span data-stu-id="d79c3-157">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/comparison-operators.md"><span data-ttu-id="d79c3-158">Vergleichsoperatoren (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="d79c3-158">Comparison Operators (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CompareObjectGreaterEqual">
      <MemberSignature Language="C#" Value="public static object CompareObjectGreaterEqual (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object CompareObjectGreaterEqual(object Left, object Right, bool TextCompare) cil managed" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectGreaterEqual(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareObjectGreaterEqual (Left As Object, Right As Object, TextCompare As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CompareObjectGreaterEqual(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member CompareObjectGreaterEqual : obj * obj * bool -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectGreaterEqual (Left, Right, TextCompare)" />
      <MemberSignature Language="ILAsm" Value=".method public static object CompareObjectGreaterEqual(object Left, object Right, bool TextCompare) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="d79c3-159">Erforderlich</span><span class="sxs-lookup"><span data-stu-id="d79c3-159">Required.</span></span> <span data-ttu-id="d79c3-160">Beliebiger Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="d79c3-160">Any expression.</span></span></param>
        <param name="Right"><span data-ttu-id="d79c3-161">Erforderlich</span><span class="sxs-lookup"><span data-stu-id="d79c3-161">Required.</span></span> <span data-ttu-id="d79c3-162">Beliebiger Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="d79c3-162">Any expression.</span></span></param>
        <param name="TextCompare"><span data-ttu-id="d79c3-163">Erforderlich</span><span class="sxs-lookup"><span data-stu-id="d79c3-163">Required.</span></span> <span data-ttu-id="d79c3-164"><see langword="True" />, um einen Zeichenfolgenvergleich ohne Berücksichtigung der Groß- und Kleinschreibung auszuführen, andernfalls <see langword="False" />.</span><span class="sxs-lookup"><span data-stu-id="d79c3-164"><see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="d79c3-165">Stellt den Visual Basic-größer-als-oder-gleich (&gt;=)-Operator dar.</span><span class="sxs-lookup"><span data-stu-id="d79c3-165">Represents the Visual Basic greater-than or equal-to (&gt;=) operator.</span></span></summary>
        <returns><span data-ttu-id="d79c3-166"><see langword="True" />, wenn <paramref name="Left" /> größer oder gleich <paramref name="Right" /> ist, andernfalls <see langword="False" />.</span><span class="sxs-lookup"><span data-stu-id="d79c3-166"><see langword="True" /> if <paramref name="Left" /> is greater than or equal to <paramref name="Right" />; otherwise, <see langword="False" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d79c3-167">Diese Klasse unterstützt den Visual Basic-Compiler und ist nicht für die direkte Verwendung im Code vorgesehen.</span><span class="sxs-lookup"><span data-stu-id="d79c3-167">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/comparison-operators.md"><span data-ttu-id="d79c3-168">Vergleichsoperatoren (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="d79c3-168">Comparison Operators (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CompareObjectLess">
      <MemberSignature Language="C#" Value="public static object CompareObjectLess (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object CompareObjectLess(object Left, object Right, bool TextCompare) cil managed" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectLess(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareObjectLess (Left As Object, Right As Object, TextCompare As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CompareObjectLess(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member CompareObjectLess : obj * obj * bool -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectLess (Left, Right, TextCompare)" />
      <MemberSignature Language="ILAsm" Value=".method public static object CompareObjectLess(object Left, object Right, bool TextCompare) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="d79c3-169">Erforderlich</span><span class="sxs-lookup"><span data-stu-id="d79c3-169">Required.</span></span> <span data-ttu-id="d79c3-170">Beliebiger Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="d79c3-170">Any expression.</span></span></param>
        <param name="Right"><span data-ttu-id="d79c3-171">Erforderlich</span><span class="sxs-lookup"><span data-stu-id="d79c3-171">Required.</span></span> <span data-ttu-id="d79c3-172">Beliebiger Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="d79c3-172">Any expression.</span></span></param>
        <param name="TextCompare"><span data-ttu-id="d79c3-173">Erforderlich</span><span class="sxs-lookup"><span data-stu-id="d79c3-173">Required.</span></span> <span data-ttu-id="d79c3-174"><see langword="True" />, um einen Zeichenfolgenvergleich ohne Berücksichtigung der Groß- und Kleinschreibung auszuführen, andernfalls <see langword="False" />.</span><span class="sxs-lookup"><span data-stu-id="d79c3-174"><see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="d79c3-175">Stellt den Visual Basic-kleiner-als (&lt;)-Operator dar.</span><span class="sxs-lookup"><span data-stu-id="d79c3-175">Represents the Visual Basic less-than (&lt;) operator.</span></span></summary>
        <returns><span data-ttu-id="d79c3-176"><see langword="True" />, wenn <paramref name="Left" /> kleiner als <paramref name="Right" /> ist, andernfalls <see langword="False" />.</span><span class="sxs-lookup"><span data-stu-id="d79c3-176"><see langword="True" /> if <paramref name="Left" /> is less than <paramref name="Right" />; otherwise, <see langword="False" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d79c3-177">Diese Klasse unterstützt den Visual Basic-Compiler und ist nicht für die direkte Verwendung im Code vorgesehen.</span><span class="sxs-lookup"><span data-stu-id="d79c3-177">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/comparison-operators.md"><span data-ttu-id="d79c3-178">Vergleichsoperatoren (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="d79c3-178">Comparison Operators (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CompareObjectLessEqual">
      <MemberSignature Language="C#" Value="public static object CompareObjectLessEqual (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object CompareObjectLessEqual(object Left, object Right, bool TextCompare) cil managed" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectLessEqual(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareObjectLessEqual (Left As Object, Right As Object, TextCompare As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CompareObjectLessEqual(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member CompareObjectLessEqual : obj * obj * bool -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectLessEqual (Left, Right, TextCompare)" />
      <MemberSignature Language="ILAsm" Value=".method public static object CompareObjectLessEqual(object Left, object Right, bool TextCompare) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="d79c3-179">Erforderlich</span><span class="sxs-lookup"><span data-stu-id="d79c3-179">Required.</span></span> <span data-ttu-id="d79c3-180">Beliebiger Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="d79c3-180">Any expression.</span></span></param>
        <param name="Right"><span data-ttu-id="d79c3-181">Erforderlich</span><span class="sxs-lookup"><span data-stu-id="d79c3-181">Required.</span></span> <span data-ttu-id="d79c3-182">Beliebiger Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="d79c3-182">Any expression.</span></span></param>
        <param name="TextCompare"><span data-ttu-id="d79c3-183">Erforderlich</span><span class="sxs-lookup"><span data-stu-id="d79c3-183">Required.</span></span> <span data-ttu-id="d79c3-184"><see langword="True" />, um einen Zeichenfolgenvergleich ohne Berücksichtigung der Groß- und Kleinschreibung auszuführen, andernfalls <see langword="False" />.</span><span class="sxs-lookup"><span data-stu-id="d79c3-184"><see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="d79c3-185">Stellt den Visual Basic-kleiner-als-oder-gleich (&lt;=)-Operator dar.</span><span class="sxs-lookup"><span data-stu-id="d79c3-185">Represents the Visual Basic less-than or equal-to (&lt;=) operator.</span></span></summary>
        <returns><span data-ttu-id="d79c3-186"><see langword="True" />, wenn <paramref name="Left" /> kleiner oder gleich <paramref name="Right" /> ist, andernfalls <see langword="False" />.</span><span class="sxs-lookup"><span data-stu-id="d79c3-186"><see langword="True" /> if <paramref name="Left" /> is less than or equal to <paramref name="Right" />; otherwise, <see langword="False" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d79c3-187">Diese Klasse unterstützt den Visual Basic-Compiler und ist nicht für die direkte Verwendung im Code vorgesehen.</span><span class="sxs-lookup"><span data-stu-id="d79c3-187">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/comparison-operators.md"><span data-ttu-id="d79c3-188">Vergleichsoperatoren (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="d79c3-188">Comparison Operators (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CompareObjectNotEqual">
      <MemberSignature Language="C#" Value="public static object CompareObjectNotEqual (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object CompareObjectNotEqual(object Left, object Right, bool TextCompare) cil managed" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectNotEqual(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareObjectNotEqual (Left As Object, Right As Object, TextCompare As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CompareObjectNotEqual(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member CompareObjectNotEqual : obj * obj * bool -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectNotEqual (Left, Right, TextCompare)" />
      <MemberSignature Language="ILAsm" Value=".method public static object CompareObjectNotEqual(object Left, object Right, bool TextCompare) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="d79c3-189">Erforderlich</span><span class="sxs-lookup"><span data-stu-id="d79c3-189">Required.</span></span> <span data-ttu-id="d79c3-190">Beliebiger Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="d79c3-190">Any expression.</span></span></param>
        <param name="Right"><span data-ttu-id="d79c3-191">Erforderlich</span><span class="sxs-lookup"><span data-stu-id="d79c3-191">Required.</span></span> <span data-ttu-id="d79c3-192">Beliebiger Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="d79c3-192">Any expression.</span></span></param>
        <param name="TextCompare"><span data-ttu-id="d79c3-193">Erforderlich</span><span class="sxs-lookup"><span data-stu-id="d79c3-193">Required.</span></span> <span data-ttu-id="d79c3-194"><see langword="True" />, um einen Zeichenfolgenvergleich ohne Berücksichtigung der Groß- und Kleinschreibung auszuführen, andernfalls <see langword="False" />.</span><span class="sxs-lookup"><span data-stu-id="d79c3-194"><see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="d79c3-195">Stellt den Visual Basic-Ungleichheitsoperator (&lt;&gt;) dar.</span><span class="sxs-lookup"><span data-stu-id="d79c3-195">Represents the Visual Basic not-equal (&lt;&gt;) operator.</span></span></summary>
        <returns><span data-ttu-id="d79c3-196"><see langword="True" />, wenn <paramref name="Left" /> und <paramref name="Right" /> ungleich sind, andernfalls <see langword="False" />.</span><span class="sxs-lookup"><span data-stu-id="d79c3-196"><see langword="True" /> if <paramref name="Left" /> is not equal to <paramref name="Right" />; otherwise, <see langword="False" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d79c3-197">Diese Klasse unterstützt den Visual Basic-Compiler und ist nicht für die direkte Verwendung im Code vorgesehen.</span><span class="sxs-lookup"><span data-stu-id="d79c3-197">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/comparison-operators.md"><span data-ttu-id="d79c3-198">Vergleichsoperatoren (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="d79c3-198">Comparison Operators (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CompareString">
      <MemberSignature Language="C#" Value="public static int CompareString (string Left, string Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 CompareString(string Left, string Right, bool TextCompare) cil managed" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareString(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareString (Left As String, Right As String, TextCompare As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int CompareString(System::String ^ Left, System::String ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member CompareString : string * string * bool -&gt; int" Usage="Microsoft.VisualBasic.CompilerServices.Operators.CompareString (Left, Right, TextCompare)" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 CompareString(string Left, string Right, bool TextCompare) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.String" />
        <Parameter Name="Right" Type="System.String" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="d79c3-199">Erforderlich</span><span class="sxs-lookup"><span data-stu-id="d79c3-199">Required.</span></span> <span data-ttu-id="d79c3-200">Beliebiger <see langword="String" /> -Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="d79c3-200">Any <see langword="String" /> expression.</span></span></param>
        <param name="Right"><span data-ttu-id="d79c3-201">Erforderlich</span><span class="sxs-lookup"><span data-stu-id="d79c3-201">Required.</span></span> <span data-ttu-id="d79c3-202">Beliebiger <see langword="String" /> -Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="d79c3-202">Any <see langword="String" /> expression.</span></span></param>
        <param name="TextCompare"><span data-ttu-id="d79c3-203">Erforderlich</span><span class="sxs-lookup"><span data-stu-id="d79c3-203">Required.</span></span> <span data-ttu-id="d79c3-204"><see langword="True" />, um einen Zeichenfolgenvergleich ohne Berücksichtigung der Groß- und Kleinschreibung auszuführen, andernfalls <see langword="False" />.</span><span class="sxs-lookup"><span data-stu-id="d79c3-204"><see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="d79c3-205">Führt einen binären Vergleich oder einen Textzeichenfolgenvergleich für zwei angegebene Zeichenfolgen aus.</span><span class="sxs-lookup"><span data-stu-id="d79c3-205">Performs binary or text string comparison when given two strings.</span></span></summary>
        <returns><list type="table">
            <listheader>
              <term> <span data-ttu-id="d79c3-206">Wert</span><span class="sxs-lookup"><span data-stu-id="d79c3-206">Value</span></span> 
 </term>
              <description> <span data-ttu-id="d79c3-207">Bedingung</span><span class="sxs-lookup"><span data-stu-id="d79c3-207">Condition</span></span> 
 </description>
            </listheader>
            <item>
              <term> <span data-ttu-id="d79c3-208">-1</span><span class="sxs-lookup"><span data-stu-id="d79c3-208">-1</span></span> 
 </term>
              <description><span data-ttu-id="d79c3-209">
                <paramref name="Left" /> ist kleiner als <paramref name="Right" />.</span><span class="sxs-lookup"><span data-stu-id="d79c3-209">
                <paramref name="Left" /> is less than <paramref name="Right" />.</span></span>  
  
 </description>
            </item>
            <item>
              <term> <span data-ttu-id="d79c3-210">0</span><span class="sxs-lookup"><span data-stu-id="d79c3-210">0</span></span> 
 </term>
              <description><span data-ttu-id="d79c3-211">
                <paramref name="Left" /> ist gleich <paramref name="Right" />.</span><span class="sxs-lookup"><span data-stu-id="d79c3-211">
                <paramref name="Left" /> is equal to <paramref name="Right" />.</span></span>  
  
 </description>
            </item>
            <item>
              <term> <span data-ttu-id="d79c3-212">1</span><span class="sxs-lookup"><span data-stu-id="d79c3-212">1</span></span> 
 </term>
              <description><span data-ttu-id="d79c3-213">
                <paramref name="Left" /> ist größer als <paramref name="Right" />.</span><span class="sxs-lookup"><span data-stu-id="d79c3-213">
                <paramref name="Left" /> is greater than <paramref name="Right" />.</span></span>  
  
 </description>
            </item>
          </list>
<span data-ttu-id="d79c3-214">.</span><span class="sxs-lookup"><span data-stu-id="d79c3-214">.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d79c3-215">Diese Klasse unterstützt den Visual Basic-Compiler und ist nicht für die direkte Verwendung im Code vorgesehen.</span><span class="sxs-lookup"><span data-stu-id="d79c3-215">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 <span data-ttu-id="d79c3-216">Wenn der Visual Basic Gleichheits Operator verwendet wird, um zwei Zeichen folgen zu vergleichen, übergibt er die Zeichen folgen an die <xref:Microsoft.VisualBasic.CompilerServices.Operators.CompareString%2A>-Methode zusammen mit dem Wert `False` für das `TextCompare`-Argument.</span><span class="sxs-lookup"><span data-stu-id="d79c3-216">When the Visual Basic equality operator is used to compare two strings, it passes the strings to the <xref:Microsoft.VisualBasic.CompilerServices.Operators.CompareString%2A> method along with a value of `False` for the `TextCompare` argument.</span></span> <span data-ttu-id="d79c3-217">Dies führt einen Vergleich unter Berücksichtigung der Groß-/Kleinschreibung durch, der entweder Ordnungszahl oder basierend auf der aktuellen Kultur ist, je nach dem Wert der [Option Compare](~/docs/visual-basic/language-reference/statements/option-compare-statement.md) -Anweisung.</span><span class="sxs-lookup"><span data-stu-id="d79c3-217">This performs a case-sensitive comparison that is either ordinal or based on the current culture, depending on the value of the [Option Compare](~/docs/visual-basic/language-reference/statements/option-compare-statement.md) statement.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/comparison-operators.md"><span data-ttu-id="d79c3-218">Vergleichsoperatoren (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="d79c3-218">Comparison Operators (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ConcatenateObject">
      <MemberSignature Language="C#" Value="public static object ConcatenateObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object ConcatenateObject(object Left, object Right) cil managed" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ConcatenateObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConcatenateObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ConcatenateObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member ConcatenateObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.ConcatenateObject (Left, Right)" />
      <MemberSignature Language="ILAsm" Value=".method public static object ConcatenateObject(object Left, object Right) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="d79c3-219">Erforderlich</span><span class="sxs-lookup"><span data-stu-id="d79c3-219">Required.</span></span> <span data-ttu-id="d79c3-220">Beliebiger Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="d79c3-220">Any expression.</span></span></param>
        <param name="Right"><span data-ttu-id="d79c3-221">Erforderlich</span><span class="sxs-lookup"><span data-stu-id="d79c3-221">Required.</span></span> <span data-ttu-id="d79c3-222">Beliebiger Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="d79c3-222">Any expression.</span></span></param>
        <summary><span data-ttu-id="d79c3-223">Stellt den Visual Basic-Verkettungsoperator (&amp;) dar.</span><span class="sxs-lookup"><span data-stu-id="d79c3-223">Represents the Visual Basic concatenation (&amp;) operator.</span></span></summary>
        <returns><span data-ttu-id="d79c3-224">Eine Zeichenfolge, die die Verkettung von <paramref name="Left" /> und <paramref name="Right" /> darstellt.</span><span class="sxs-lookup"><span data-stu-id="d79c3-224">A string representing the concatenation of <paramref name="Left" /> and <paramref name="Right" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d79c3-225">Diese Klasse unterstützt den Visual Basic-Compiler und ist nicht für die direkte Verwendung im Code vorgesehen.</span><span class="sxs-lookup"><span data-stu-id="d79c3-225">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/concatenation-operator.md"><span data-ttu-id="d79c3-226">&amp;-Operator (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="d79c3-226">&amp; Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ConditionalCompareObjectEqual">
      <MemberSignature Language="C#" Value="public static bool ConditionalCompareObjectEqual (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ConditionalCompareObjectEqual(object Left, object Right, bool TextCompare) cil managed" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectEqual(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalCompareObjectEqual (Left As Object, Right As Object, TextCompare As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ConditionalCompareObjectEqual(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member ConditionalCompareObjectEqual : obj * obj * bool -&gt; bool" Usage="Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectEqual (Left, Right, TextCompare)" />
      <MemberSignature Language="ILAsm" Value=".method public static bool ConditionalCompareObjectEqual(object Left, object Right, bool TextCompare) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="d79c3-227">Erforderlich</span><span class="sxs-lookup"><span data-stu-id="d79c3-227">Required.</span></span> <span data-ttu-id="d79c3-228">Beliebiger Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="d79c3-228">Any expression.</span></span></param>
        <param name="Right"><span data-ttu-id="d79c3-229">Erforderlich</span><span class="sxs-lookup"><span data-stu-id="d79c3-229">Required.</span></span> <span data-ttu-id="d79c3-230">Beliebiger Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="d79c3-230">Any expression.</span></span></param>
        <param name="TextCompare"><span data-ttu-id="d79c3-231">Erforderlich</span><span class="sxs-lookup"><span data-stu-id="d79c3-231">Required.</span></span> <span data-ttu-id="d79c3-232"><see langword="True" />, um einen Zeichenfolgenvergleich ohne Berücksichtigung der Groß- und Kleinschreibung auszuführen, andernfalls <see langword="False" />.</span><span class="sxs-lookup"><span data-stu-id="d79c3-232"><see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="d79c3-233">Stellt den überladenen Visual Basic-Gleichheitsoperator (=) dar.</span><span class="sxs-lookup"><span data-stu-id="d79c3-233">Represents the overloaded Visual Basic equals (=) operator.</span></span></summary>
        <returns><span data-ttu-id="d79c3-234">Das Ergebnis des überladenen Gleichheitsoperators.</span><span class="sxs-lookup"><span data-stu-id="d79c3-234">The result of the overloaded equals operator.</span></span> <span data-ttu-id="d79c3-235"><see langword="False" />, wenn eine Operatorüberladung nicht unterstützt wird.</span><span class="sxs-lookup"><span data-stu-id="d79c3-235"><see langword="False" /> if operator overloading is not supported.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d79c3-236">Diese Klasse unterstützt den Visual Basic-Compiler und ist nicht für die direkte Verwendung im Code vorgesehen.</span><span class="sxs-lookup"><span data-stu-id="d79c3-236">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/procedures/operator-procedures.md"><span data-ttu-id="d79c3-237">Operatorprozeduren</span><span class="sxs-lookup"><span data-stu-id="d79c3-237">Operator Procedures</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ConditionalCompareObjectGreater">
      <MemberSignature Language="C#" Value="public static bool ConditionalCompareObjectGreater (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ConditionalCompareObjectGreater(object Left, object Right, bool TextCompare) cil managed" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreater(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalCompareObjectGreater (Left As Object, Right As Object, TextCompare As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ConditionalCompareObjectGreater(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member ConditionalCompareObjectGreater : obj * obj * bool -&gt; bool" Usage="Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreater (Left, Right, TextCompare)" />
      <MemberSignature Language="ILAsm" Value=".method public static bool ConditionalCompareObjectGreater(object Left, object Right, bool TextCompare) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="d79c3-238">Erforderlich</span><span class="sxs-lookup"><span data-stu-id="d79c3-238">Required.</span></span> <span data-ttu-id="d79c3-239">Beliebiger Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="d79c3-239">Any expression.</span></span></param>
        <param name="Right"><span data-ttu-id="d79c3-240">Erforderlich</span><span class="sxs-lookup"><span data-stu-id="d79c3-240">Required.</span></span> <span data-ttu-id="d79c3-241">Beliebiger Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="d79c3-241">Any expression.</span></span></param>
        <param name="TextCompare"><span data-ttu-id="d79c3-242">Erforderlich</span><span class="sxs-lookup"><span data-stu-id="d79c3-242">Required.</span></span> <span data-ttu-id="d79c3-243"><see langword="True" />, um einen Zeichenfolgenvergleich ohne Berücksichtigung der Groß- und Kleinschreibung auszuführen, andernfalls <see langword="False" />.</span><span class="sxs-lookup"><span data-stu-id="d79c3-243"><see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="d79c3-244">Stellt den überladenen Visual Basic-größer-als (&gt;)-Operator dar.</span><span class="sxs-lookup"><span data-stu-id="d79c3-244">Represents the overloaded Visual Basic greater-than (&gt;) operator.</span></span></summary>
        <returns><span data-ttu-id="d79c3-245">Das Ergebnis des überladenen Größer-als-Operators.</span><span class="sxs-lookup"><span data-stu-id="d79c3-245">The result of the overloaded greater-than operator.</span></span> <span data-ttu-id="d79c3-246"><see langword="False" />, wenn eine Operatorüberladung nicht unterstützt wird.</span><span class="sxs-lookup"><span data-stu-id="d79c3-246"><see langword="False" /> if operator overloading is not supported.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d79c3-247">Diese Klasse unterstützt den Visual Basic-Compiler und ist nicht für die direkte Verwendung im Code vorgesehen.</span><span class="sxs-lookup"><span data-stu-id="d79c3-247">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/procedures/operator-procedures.md"><span data-ttu-id="d79c3-248">Operatorprozeduren</span><span class="sxs-lookup"><span data-stu-id="d79c3-248">Operator Procedures</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ConditionalCompareObjectGreaterEqual">
      <MemberSignature Language="C#" Value="public static bool ConditionalCompareObjectGreaterEqual (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ConditionalCompareObjectGreaterEqual(object Left, object Right, bool TextCompare) cil managed" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreaterEqual(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalCompareObjectGreaterEqual (Left As Object, Right As Object, TextCompare As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ConditionalCompareObjectGreaterEqual(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member ConditionalCompareObjectGreaterEqual : obj * obj * bool -&gt; bool" Usage="Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreaterEqual (Left, Right, TextCompare)" />
      <MemberSignature Language="ILAsm" Value=".method public static bool ConditionalCompareObjectGreaterEqual(object Left, object Right, bool TextCompare) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="d79c3-249">Erforderlich</span><span class="sxs-lookup"><span data-stu-id="d79c3-249">Required.</span></span> <span data-ttu-id="d79c3-250">Beliebiger Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="d79c3-250">Any expression.</span></span></param>
        <param name="Right"><span data-ttu-id="d79c3-251">Erforderlich</span><span class="sxs-lookup"><span data-stu-id="d79c3-251">Required.</span></span> <span data-ttu-id="d79c3-252">Beliebiger Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="d79c3-252">Any expression.</span></span></param>
        <param name="TextCompare"><span data-ttu-id="d79c3-253">Erforderlich</span><span class="sxs-lookup"><span data-stu-id="d79c3-253">Required.</span></span> <span data-ttu-id="d79c3-254"><see langword="True" />, um einen Zeichenfolgenvergleich ohne Berücksichtigung der Groß- und Kleinschreibung auszuführen, andernfalls <see langword="False" />.</span><span class="sxs-lookup"><span data-stu-id="d79c3-254"><see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="d79c3-255">Stellt den überladenen Visual Basic-größer-als-oder-gleich (&gt;=)-Operator dar.</span><span class="sxs-lookup"><span data-stu-id="d79c3-255">Represents the overloaded Visual Basic greater-than or equal-to (&gt;=) operator.</span></span></summary>
        <returns><span data-ttu-id="d79c3-256">Das Ergebnis des überladenen Größer-als-Operators oder des überladenen Gleichheitsoperators.</span><span class="sxs-lookup"><span data-stu-id="d79c3-256">The result of the overloaded greater-than or equal-to operator.</span></span> <span data-ttu-id="d79c3-257"><see langword="False" />, wenn eine Operatorüberladung nicht unterstützt wird.</span><span class="sxs-lookup"><span data-stu-id="d79c3-257"><see langword="False" /> if operator overloading is not supported.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d79c3-258">Diese Klasse unterstützt den Visual Basic-Compiler und ist nicht für die direkte Verwendung im Code vorgesehen.</span><span class="sxs-lookup"><span data-stu-id="d79c3-258">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/procedures/operator-procedures.md"><span data-ttu-id="d79c3-259">Operatorprozeduren</span><span class="sxs-lookup"><span data-stu-id="d79c3-259">Operator Procedures</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ConditionalCompareObjectLess">
      <MemberSignature Language="C#" Value="public static bool ConditionalCompareObjectLess (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ConditionalCompareObjectLess(object Left, object Right, bool TextCompare) cil managed" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLess(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalCompareObjectLess (Left As Object, Right As Object, TextCompare As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ConditionalCompareObjectLess(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member ConditionalCompareObjectLess : obj * obj * bool -&gt; bool" Usage="Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLess (Left, Right, TextCompare)" />
      <MemberSignature Language="ILAsm" Value=".method public static bool ConditionalCompareObjectLess(object Left, object Right, bool TextCompare) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="d79c3-260">Erforderlich</span><span class="sxs-lookup"><span data-stu-id="d79c3-260">Required.</span></span> <span data-ttu-id="d79c3-261">Beliebiger Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="d79c3-261">Any expression.</span></span></param>
        <param name="Right"><span data-ttu-id="d79c3-262">Erforderlich</span><span class="sxs-lookup"><span data-stu-id="d79c3-262">Required.</span></span> <span data-ttu-id="d79c3-263">Beliebiger Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="d79c3-263">Any expression.</span></span></param>
        <param name="TextCompare"><span data-ttu-id="d79c3-264">Erforderlich</span><span class="sxs-lookup"><span data-stu-id="d79c3-264">Required.</span></span> <span data-ttu-id="d79c3-265"><see langword="True" />, um einen Zeichenfolgenvergleich ohne Berücksichtigung der Groß- und Kleinschreibung auszuführen, andernfalls <see langword="False" />.</span><span class="sxs-lookup"><span data-stu-id="d79c3-265"><see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="d79c3-266">Stellt den überladenen Visual Basic-kleiner-als (&lt;)-Operator dar.</span><span class="sxs-lookup"><span data-stu-id="d79c3-266">Represents the overloaded Visual Basic less-than (&lt;) operator.</span></span></summary>
        <returns><span data-ttu-id="d79c3-267">Das Ergebnis des überladenen Kleiner-als-Operators.</span><span class="sxs-lookup"><span data-stu-id="d79c3-267">The result of the overloaded less-than operator.</span></span> <span data-ttu-id="d79c3-268"><see langword="False" />, wenn eine Operatorüberladung nicht unterstützt wird.</span><span class="sxs-lookup"><span data-stu-id="d79c3-268"><see langword="False" /> if operator overloading is not supported.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d79c3-269">Diese Klasse unterstützt den Visual Basic-Compiler und ist nicht für die direkte Verwendung im Code vorgesehen.</span><span class="sxs-lookup"><span data-stu-id="d79c3-269">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/procedures/operator-procedures.md"><span data-ttu-id="d79c3-270">Operatorprozeduren</span><span class="sxs-lookup"><span data-stu-id="d79c3-270">Operator Procedures</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ConditionalCompareObjectLessEqual">
      <MemberSignature Language="C#" Value="public static bool ConditionalCompareObjectLessEqual (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ConditionalCompareObjectLessEqual(object Left, object Right, bool TextCompare) cil managed" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLessEqual(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalCompareObjectLessEqual (Left As Object, Right As Object, TextCompare As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ConditionalCompareObjectLessEqual(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member ConditionalCompareObjectLessEqual : obj * obj * bool -&gt; bool" Usage="Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLessEqual (Left, Right, TextCompare)" />
      <MemberSignature Language="ILAsm" Value=".method public static bool ConditionalCompareObjectLessEqual(object Left, object Right, bool TextCompare) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="d79c3-271">Erforderlich</span><span class="sxs-lookup"><span data-stu-id="d79c3-271">Required.</span></span> <span data-ttu-id="d79c3-272">Beliebiger Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="d79c3-272">Any expression.</span></span></param>
        <param name="Right"><span data-ttu-id="d79c3-273">Erforderlich</span><span class="sxs-lookup"><span data-stu-id="d79c3-273">Required.</span></span> <span data-ttu-id="d79c3-274">Beliebiger Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="d79c3-274">Any expression.</span></span></param>
        <param name="TextCompare"><span data-ttu-id="d79c3-275">Erforderlich</span><span class="sxs-lookup"><span data-stu-id="d79c3-275">Required.</span></span> <span data-ttu-id="d79c3-276"><see langword="True" />, um einen Zeichenfolgenvergleich ohne Berücksichtigung der Groß- und Kleinschreibung auszuführen, andernfalls <see langword="False" />.</span><span class="sxs-lookup"><span data-stu-id="d79c3-276"><see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="d79c3-277">Stellt den überladenen Visual Basic-kleiner-als-oder-gleich (&lt;=)-Operator dar.</span><span class="sxs-lookup"><span data-stu-id="d79c3-277">Represents the overloaded Visual Basic less-than or equal-to (&lt;=) operator.</span></span></summary>
        <returns><span data-ttu-id="d79c3-278">Das Ergebnis des überladenen Kleiner-als-Operators oder des überladenen Gleichheitsoperators.</span><span class="sxs-lookup"><span data-stu-id="d79c3-278">The result of the overloaded less-than or equal-to operator.</span></span> <span data-ttu-id="d79c3-279"><see langword="False" />, wenn eine Operatorüberladung nicht unterstützt wird.</span><span class="sxs-lookup"><span data-stu-id="d79c3-279"><see langword="False" /> if operator overloading is not supported.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d79c3-280">Diese Klasse unterstützt den Visual Basic-Compiler und ist nicht für die direkte Verwendung im Code vorgesehen.</span><span class="sxs-lookup"><span data-stu-id="d79c3-280">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/procedures/operator-procedures.md"><span data-ttu-id="d79c3-281">Operatorprozeduren</span><span class="sxs-lookup"><span data-stu-id="d79c3-281">Operator Procedures</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ConditionalCompareObjectNotEqual">
      <MemberSignature Language="C#" Value="public static bool ConditionalCompareObjectNotEqual (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ConditionalCompareObjectNotEqual(object Left, object Right, bool TextCompare) cil managed" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectNotEqual(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalCompareObjectNotEqual (Left As Object, Right As Object, TextCompare As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ConditionalCompareObjectNotEqual(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member ConditionalCompareObjectNotEqual : obj * obj * bool -&gt; bool" Usage="Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectNotEqual (Left, Right, TextCompare)" />
      <MemberSignature Language="ILAsm" Value=".method public static bool ConditionalCompareObjectNotEqual(object Left, object Right, bool TextCompare) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="d79c3-282">Erforderlich</span><span class="sxs-lookup"><span data-stu-id="d79c3-282">Required.</span></span> <span data-ttu-id="d79c3-283">Beliebiger Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="d79c3-283">Any expression.</span></span></param>
        <param name="Right"><span data-ttu-id="d79c3-284">Erforderlich</span><span class="sxs-lookup"><span data-stu-id="d79c3-284">Required.</span></span> <span data-ttu-id="d79c3-285">Beliebiger Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="d79c3-285">Any expression.</span></span></param>
        <param name="TextCompare"><span data-ttu-id="d79c3-286">Erforderlich</span><span class="sxs-lookup"><span data-stu-id="d79c3-286">Required.</span></span> <span data-ttu-id="d79c3-287"><see langword="True" />, um einen Zeichenfolgenvergleich ohne Berücksichtigung der Groß- und Kleinschreibung auszuführen, andernfalls <see langword="False" />.</span><span class="sxs-lookup"><span data-stu-id="d79c3-287"><see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="d79c3-288">Stellt den überladenen Visual Basic-Ungleichheitsoperator (&lt;&gt;) dar.</span><span class="sxs-lookup"><span data-stu-id="d79c3-288">Represents the overloaded Visual Basic not-equal (&lt;&gt;) operator.</span></span></summary>
        <returns><span data-ttu-id="d79c3-289">Das Ergebnis des überladenen Ungleichheitsoperators.</span><span class="sxs-lookup"><span data-stu-id="d79c3-289">The result of the overloaded not-equal operator.</span></span> <span data-ttu-id="d79c3-290"><see langword="False" />, wenn eine Operatorüberladung nicht unterstützt wird.</span><span class="sxs-lookup"><span data-stu-id="d79c3-290"><see langword="False" /> if operator overloading is not supported.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d79c3-291">Diese Klasse unterstützt den Visual Basic-Compiler und ist nicht für die direkte Verwendung im Code vorgesehen.</span><span class="sxs-lookup"><span data-stu-id="d79c3-291">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/procedures/operator-procedures.md"><span data-ttu-id="d79c3-292">Operatorprozeduren</span><span class="sxs-lookup"><span data-stu-id="d79c3-292">Operator Procedures</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DivideObject">
      <MemberSignature Language="C#" Value="public static object DivideObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object DivideObject(object Left, object Right) cil managed" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.DivideObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DivideObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ DivideObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member DivideObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.DivideObject (Left, Right)" />
      <MemberSignature Language="ILAsm" Value=".method public static object DivideObject(object Left, object Right) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="d79c3-293">Erforderlich</span><span class="sxs-lookup"><span data-stu-id="d79c3-293">Required.</span></span> <span data-ttu-id="d79c3-294">Ein beliebiger numerischer Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="d79c3-294">Any numeric expression.</span></span></param>
        <param name="Right"><span data-ttu-id="d79c3-295">Erforderlich</span><span class="sxs-lookup"><span data-stu-id="d79c3-295">Required.</span></span> <span data-ttu-id="d79c3-296">Ein beliebiger numerischer Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="d79c3-296">Any numeric expression.</span></span></param>
        <summary><span data-ttu-id="d79c3-297">Stellt den Visual Basic-Divisionsoperator (/) dar.</span><span class="sxs-lookup"><span data-stu-id="d79c3-297">Represents the Visual Basic division (/) operator.</span></span></summary>
        <returns><span data-ttu-id="d79c3-298">Der volle Quotient, der sich aus der Division von <paramref name="Left" /> durch <paramref name="Right" /> ergibt, einschließlich des Rests.</span><span class="sxs-lookup"><span data-stu-id="d79c3-298">The full quotient of <paramref name="Left" /> divided by <paramref name="Right" />, including any remainder.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d79c3-299">Diese Klasse unterstützt den Visual Basic-Compiler und ist nicht für die direkte Verwendung im Code vorgesehen.</span><span class="sxs-lookup"><span data-stu-id="d79c3-299">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/floating-point-division-operator.md"><span data-ttu-id="d79c3-300">/-Operator (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="d79c3-300">/ Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ExponentObject">
      <MemberSignature Language="C#" Value="public static object ExponentObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object ExponentObject(object Left, object Right) cil managed" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ExponentObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ExponentObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ExponentObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member ExponentObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.ExponentObject (Left, Right)" />
      <MemberSignature Language="ILAsm" Value=".method public static object ExponentObject(object Left, object Right) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="d79c3-301">Erforderlich</span><span class="sxs-lookup"><span data-stu-id="d79c3-301">Required.</span></span> <span data-ttu-id="d79c3-302">Ein beliebiger numerischer Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="d79c3-302">Any numeric expression.</span></span></param>
        <param name="Right"><span data-ttu-id="d79c3-303">Erforderlich</span><span class="sxs-lookup"><span data-stu-id="d79c3-303">Required.</span></span> <span data-ttu-id="d79c3-304">Ein beliebiger numerischer Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="d79c3-304">Any numeric expression.</span></span></param>
        <summary><span data-ttu-id="d79c3-305">Stellt den Visual Basic-Exponentialoperator (^) dar.</span><span class="sxs-lookup"><span data-stu-id="d79c3-305">Represents the Visual Basic exponent (^) operator.</span></span></summary>
        <returns><span data-ttu-id="d79c3-306">Das Ergebnis der Potenzierung von <paramref name="Left" /> mit <paramref name="Right" />.</span><span class="sxs-lookup"><span data-stu-id="d79c3-306">The result of <paramref name="Left" /> raised to the power of <paramref name="Right" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d79c3-307">Diese Klasse unterstützt den Visual Basic-Compiler und ist nicht für die direkte Verwendung im Code vorgesehen.</span><span class="sxs-lookup"><span data-stu-id="d79c3-307">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/exponentiation-operator.md"><span data-ttu-id="d79c3-308">^-Operator (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="d79c3-308">^ Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FallbackInvokeUserDefinedOperator">
      <MemberSignature Language="C#" Value="public static object FallbackInvokeUserDefinedOperator (object vbOp, object[] arguments);" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object FallbackInvokeUserDefinedOperator(object vbOp, object[] arguments) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.FallbackInvokeUserDefinedOperator(System.Object,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FallbackInvokeUserDefinedOperator (vbOp As Object, arguments As Object()) As Object" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ FallbackInvokeUserDefinedOperator(System::Object ^ vbOp, cli::array &lt;System::Object ^&gt; ^ arguments);" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="F#" Value="static member FallbackInvokeUserDefinedOperator : obj * obj[] -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.FallbackInvokeUserDefinedOperator (vbOp, arguments)" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="C#" Value="public static object FallbackInvokeUserDefinedOperator (object vbOp, object[] Arguments);" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public static object FallbackInvokeUserDefinedOperator(object vbOp, object[] Arguments) cil managed" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FallbackInvokeUserDefinedOperator (vbOp As Object, Arguments As Object()) As Object" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ FallbackInvokeUserDefinedOperator(System::Object ^ vbOp, cli::array &lt;System::Object ^&gt; ^ Arguments);" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="static member FallbackInvokeUserDefinedOperator : obj * obj[] -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.FallbackInvokeUserDefinedOperator (vbOp, Arguments)" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1">
          <AttributeName>System.Obsolete("do not use this method", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vbOp" Type="System.Object" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.1" />
        <Parameter Name="Arguments" Type="System.Object[]" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="arguments" Type="System.Object[]" Index="1" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="vbOp"><span data-ttu-id="d79c3-309">Der benutzerdefinierte Operator.</span><span class="sxs-lookup"><span data-stu-id="d79c3-309">The user-defined operator.</span></span></param>
        <param name="Arguments"><span data-ttu-id="d79c3-310">Die Argumentwerte, die an den benutzerdefinierten Operator übergeben werden sollen.</span><span class="sxs-lookup"><span data-stu-id="d79c3-310">Argument values to pass to the user-defined operator.</span></span></param>
        <param name="arguments">To be added.</param>
        <summary><span data-ttu-id="d79c3-311">Führt eine spät gebundene Auswertung für einen benutzerdefinierten Operator aus.</span><span class="sxs-lookup"><span data-stu-id="d79c3-311">Executes a late-bound evaluation of a user-defined operator.</span></span> <span data-ttu-id="d79c3-312">Diese Hilfsmethode ist nicht für den direkten Aufruf aus dem Code vorgesehen.</span><span class="sxs-lookup"><span data-stu-id="d79c3-312">This helper method is not meant to be called directly from your code.</span></span></summary>
        <returns><span data-ttu-id="d79c3-313">Das vom benutzerdefinierten Operator zurückgegebene Ergebnis.</span><span class="sxs-lookup"><span data-stu-id="d79c3-313">The result returned from the user-defined operator.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="IntDivideObject">
      <MemberSignature Language="C#" Value="public static object IntDivideObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object IntDivideObject(object Left, object Right) cil managed" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.IntDivideObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IntDivideObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ IntDivideObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member IntDivideObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.IntDivideObject (Left, Right)" />
      <MemberSignature Language="ILAsm" Value=".method public static object IntDivideObject(object Left, object Right) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="d79c3-314">Erforderlich</span><span class="sxs-lookup"><span data-stu-id="d79c3-314">Required.</span></span> <span data-ttu-id="d79c3-315">Ein beliebiger numerischer Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="d79c3-315">Any numeric expression.</span></span></param>
        <param name="Right"><span data-ttu-id="d79c3-316">Erforderlich</span><span class="sxs-lookup"><span data-stu-id="d79c3-316">Required.</span></span> <span data-ttu-id="d79c3-317">Ein beliebiger numerischer Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="d79c3-317">Any numeric expression.</span></span></param>
        <summary><span data-ttu-id="d79c3-318">Stellt den Ganzzahl-Divisionsoperator (\\) in Visual Basic dar.</span><span class="sxs-lookup"><span data-stu-id="d79c3-318">Represents the Visual Basic integer division (\\) operator.</span></span></summary>
        <returns><span data-ttu-id="d79c3-319">Der ganzzahlige Quotient, der sich aus der Division von <paramref name="Left" /> durch <paramref name="Right" /> ergibt. Es wird nur der ganzzahlige Teil beibehalten, und ein eventueller Rest wird verworfen.</span><span class="sxs-lookup"><span data-stu-id="d79c3-319">The integer quotient of <paramref name="Left" /> divided by <paramref name="Right" />, which discards any remainder and retains only the integer portion.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d79c3-320">Diese Klasse unterstützt den Visual Basic-Compiler und ist nicht für die direkte Verwendung im Code vorgesehen.</span><span class="sxs-lookup"><span data-stu-id="d79c3-320">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/integer-division-operator.md"><span data-ttu-id="d79c3-321">\-Operator</span><span class="sxs-lookup"><span data-stu-id="d79c3-321">\ Operator</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="LeftShiftObject">
      <MemberSignature Language="C#" Value="public static object LeftShiftObject (object Operand, object Amount);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object LeftShiftObject(object Operand, object Amount) cil managed" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.LeftShiftObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LeftShiftObject (Operand As Object, Amount As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ LeftShiftObject(System::Object ^ Operand, System::Object ^ Amount);" />
      <MemberSignature Language="F#" Value="static member LeftShiftObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.LeftShiftObject (Operand, Amount)" />
      <MemberSignature Language="ILAsm" Value=".method public static object LeftShiftObject(object Operand, object Amount) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Operand" Type="System.Object" />
        <Parameter Name="Amount" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Operand"><span data-ttu-id="d79c3-322">Erforderlich</span><span class="sxs-lookup"><span data-stu-id="d79c3-322">Required.</span></span> <span data-ttu-id="d79c3-323">Ein ganzzahliger numerischer Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="d79c3-323">Integral numeric expression.</span></span> <span data-ttu-id="d79c3-324">Das zu verschiebende Bitmuster.</span><span class="sxs-lookup"><span data-stu-id="d79c3-324">The bit pattern to be shifted.</span></span> <span data-ttu-id="d79c3-325">Der Datentyp muss ein ganzzahliger Typ (<see langword="SByte" />, <see langword="Byte" />, <see langword="Short" />, <see langword="UShort" />, <see langword="Integer" />, <see langword="UInteger" />, <see langword="Long" /> oder <see langword="ULong" />) sein.</span><span class="sxs-lookup"><span data-stu-id="d79c3-325">The data type must be an integral type (<see langword="SByte" />, <see langword="Byte" />, <see langword="Short" />, <see langword="UShort" />, <see langword="Integer" />, <see langword="UInteger" />, <see langword="Long" />, or <see langword="ULong" />).</span></span></param>
        <param name="Amount"><span data-ttu-id="d79c3-326">Erforderlich</span><span class="sxs-lookup"><span data-stu-id="d79c3-326">Required.</span></span> <span data-ttu-id="d79c3-327">Ein numerischer Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="d79c3-327">Numeric expression.</span></span> <span data-ttu-id="d79c3-328">Die Anzahl der Bits, um die das Bitmuster verschoben werden soll.</span><span class="sxs-lookup"><span data-stu-id="d79c3-328">The number of bits to shift the bit pattern.</span></span> <span data-ttu-id="d79c3-329">Der Datentyp muss <see langword="Integer" /> sein oder zu <see langword="Integer" /> erweitert werden.</span><span class="sxs-lookup"><span data-stu-id="d79c3-329">The data type must be <see langword="Integer" /> or widen to <see langword="Integer" />.</span></span></param>
        <summary><span data-ttu-id="d79c3-330">Stellt den Operator für die Stellenverschiebung nach links (&lt;&lt;) in Visual Basic dar.</span><span class="sxs-lookup"><span data-stu-id="d79c3-330">Represents the Visual Basic arithmetic left shift (&lt;&lt;) operator.</span></span></summary>
        <returns><span data-ttu-id="d79c3-331">Ein ganzzahliger numerischer Wert.</span><span class="sxs-lookup"><span data-stu-id="d79c3-331">An integral numeric value.</span></span> <span data-ttu-id="d79c3-332">Das Ergebnis der Verschiebung des Bitmusters.</span><span class="sxs-lookup"><span data-stu-id="d79c3-332">The result of shifting the bit pattern.</span></span> <span data-ttu-id="d79c3-333">Der Datentyp entspricht dem von <paramref name="Operand" />.</span><span class="sxs-lookup"><span data-stu-id="d79c3-333">The data type is the same as that of <paramref name="Operand" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d79c3-334">Diese Klasse unterstützt den Visual Basic-Compiler und ist nicht für die direkte Verwendung im Code vorgesehen.</span><span class="sxs-lookup"><span data-stu-id="d79c3-334">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/left-shift-operator.md"><span data-ttu-id="d79c3-335">&lt;&lt; Operator (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="d79c3-335">&lt;&lt; Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="LikeObject">
      <MemberSignature Language="C#" Value="public static object LikeObject (object Source, object Pattern, Microsoft.VisualBasic.CompareMethod CompareOption);" />
      <MemberSignature Language="ILAsm" Value=".method public static object LikeObject(object Source, object Pattern, valuetype Microsoft.VisualBasic.CompareMethod CompareOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.LikeObject(System.Object,System.Object,Microsoft.VisualBasic.CompareMethod)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LikeObject (Source As Object, Pattern As Object, CompareOption As CompareMethod) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ LikeObject(System::Object ^ Source, System::Object ^ Pattern, Microsoft::VisualBasic::CompareMethod CompareOption);" />
      <MemberSignature Language="F#" Value="static member LikeObject : obj * obj * Microsoft.VisualBasic.CompareMethod -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.LikeObject (Source, Pattern, CompareOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Source" Type="System.Object" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="Pattern" Type="System.Object" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="CompareOption" Type="Microsoft.VisualBasic.CompareMethod" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="Source"><span data-ttu-id="d79c3-336">Erforderlich</span><span class="sxs-lookup"><span data-stu-id="d79c3-336">Required.</span></span> <span data-ttu-id="d79c3-337">Beliebiger Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="d79c3-337">Any expression.</span></span></param>
        <param name="Pattern"><span data-ttu-id="d79c3-338">Erforderlich</span><span class="sxs-lookup"><span data-stu-id="d79c3-338">Required.</span></span> <span data-ttu-id="d79c3-339">Ein beliebiger Zeichenfolgenausdruck, der den in Like-Operator beschriebenen Mustervergleichskonventionen entspricht.</span><span class="sxs-lookup"><span data-stu-id="d79c3-339">Any string expression conforming to the pattern-matching conventions described in Like Operator.</span></span></param>
        <param name="CompareOption"><span data-ttu-id="d79c3-340">Erforderlich</span><span class="sxs-lookup"><span data-stu-id="d79c3-340">Required.</span></span> <span data-ttu-id="d79c3-341">Ein <see cref="T:Microsoft.VisualBasic.CompareMethod" />-Wert, der angibt, dass bei der Operation ein Textvergleich oder ein binärer Vergleich durchgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="d79c3-341">A <see cref="T:Microsoft.VisualBasic.CompareMethod" /> value that specifies that the operation use either text or binary comparison.</span></span></param>
        <summary><span data-ttu-id="d79c3-342">Stellt den <see langword="Like" />-Operator in Visual Basic dar.</span><span class="sxs-lookup"><span data-stu-id="d79c3-342">Represents the Visual Basic <see langword="Like" /> operator.</span></span></summary>
        <returns><span data-ttu-id="d79c3-343"><see langword="True" />, wenn die Zeichenfolgendarstellung des Werts in <paramref name="Source" /> dem in <paramref name="Pattern" /> enthaltenen Muster entspricht, andernfalls <see langword="False" />.</span><span class="sxs-lookup"><span data-stu-id="d79c3-343"><see langword="True" /> if the string representation of the value in <paramref name="Source" /> satisfies the pattern that is contained in <paramref name="Pattern" />; otherwise, <see langword="False" />.</span></span> <span data-ttu-id="d79c3-344"><see langword="True" />, wenn sowohl <paramref name="Source" /> als auch <paramref name="Pattern" /> gleich <see langword="Nothing" /> sind.</span><span class="sxs-lookup"><span data-stu-id="d79c3-344"><see langword="True" /> if both <paramref name="Source" /> and <paramref name="Pattern" /> are <see langword="Nothing" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d79c3-345">Diese Klasse unterstützt den Visual Basic-Compiler und ist nicht für die direkte Verwendung im Code vorgesehen.</span><span class="sxs-lookup"><span data-stu-id="d79c3-345">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/like-operator.md"><span data-ttu-id="d79c3-346">Like-Operator</span><span class="sxs-lookup"><span data-stu-id="d79c3-346">Like Operator</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="LikeString">
      <MemberSignature Language="C#" Value="public static bool LikeString (string Source, string Pattern, Microsoft.VisualBasic.CompareMethod CompareOption);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool LikeString(string Source, string Pattern, valuetype Microsoft.VisualBasic.CompareMethod CompareOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.LikeString(System.String,System.String,Microsoft.VisualBasic.CompareMethod)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LikeString (Source As String, Pattern As String, CompareOption As CompareMethod) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool LikeString(System::String ^ Source, System::String ^ Pattern, Microsoft::VisualBasic::CompareMethod CompareOption);" />
      <MemberSignature Language="F#" Value="static member LikeString : string * string * Microsoft.VisualBasic.CompareMethod -&gt; bool" Usage="Microsoft.VisualBasic.CompilerServices.Operators.LikeString (Source, Pattern, CompareOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Source" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="Pattern" Type="System.String" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="CompareOption" Type="Microsoft.VisualBasic.CompareMethod" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="Source"><span data-ttu-id="d79c3-347">Erforderlich</span><span class="sxs-lookup"><span data-stu-id="d79c3-347">Required.</span></span> <span data-ttu-id="d79c3-348">Beliebiger <see langword="String" /> -Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="d79c3-348">Any <see langword="String" /> expression.</span></span></param>
        <param name="Pattern"><span data-ttu-id="d79c3-349">Erforderlich</span><span class="sxs-lookup"><span data-stu-id="d79c3-349">Required.</span></span> <span data-ttu-id="d79c3-350">Ein beliebiger <see langword="String" />-Ausdruck, der den in Like-Operator beschriebenen Mustervergleichskonventionen entspricht.</span><span class="sxs-lookup"><span data-stu-id="d79c3-350">Any <see langword="String" /> expression conforming to the pattern-matching conventions described in Like Operator.</span></span></param>
        <param name="CompareOption"><span data-ttu-id="d79c3-351">Erforderlich</span><span class="sxs-lookup"><span data-stu-id="d79c3-351">Required.</span></span> <span data-ttu-id="d79c3-352">Ein <see cref="T:Microsoft.VisualBasic.CompareMethod" />-Wert, der angibt, dass bei der Operation ein Textvergleich oder ein binärer Vergleich durchgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="d79c3-352">A <see cref="T:Microsoft.VisualBasic.CompareMethod" /> value that specifies that the operation use either text or binary comparison.</span></span></param>
        <summary><span data-ttu-id="d79c3-353">Stellt den <see langword="Like" />-Operator in Visual Basic dar.</span><span class="sxs-lookup"><span data-stu-id="d79c3-353">Represents the Visual Basic <see langword="Like" /> operator.</span></span></summary>
        <returns><span data-ttu-id="d79c3-354"><see langword="True" />, wenn der Wert in <paramref name="Source" /> dem in <paramref name="Pattern" /> enthaltenen Muster entspricht, andernfalls <see langword="False" />.</span><span class="sxs-lookup"><span data-stu-id="d79c3-354"><see langword="True" /> if the value in <paramref name="Source" /> satisfies the pattern that is contained in <paramref name="Pattern" />; otherwise, <see langword="False" />.</span></span> <span data-ttu-id="d79c3-355"><see langword="True" />, wenn sowohl <paramref name="Source" /> als auch <paramref name="Pattern" /> leer sind.</span><span class="sxs-lookup"><span data-stu-id="d79c3-355"><see langword="True" /> if both <paramref name="Source" /> and <paramref name="Pattern" /> are empty.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d79c3-356">Diese Klasse unterstützt den Visual Basic-Compiler und ist nicht für die direkte Verwendung im Code vorgesehen.</span><span class="sxs-lookup"><span data-stu-id="d79c3-356">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/like-operator.md"><span data-ttu-id="d79c3-357">Like-Operator</span><span class="sxs-lookup"><span data-stu-id="d79c3-357">Like Operator</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ModObject">
      <MemberSignature Language="C#" Value="public static object ModObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object ModObject(object Left, object Right) cil managed" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ModObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ModObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ModObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member ModObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.ModObject (Left, Right)" />
      <MemberSignature Language="ILAsm" Value=".method public static object ModObject(object Left, object Right) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="d79c3-358">Erforderlich</span><span class="sxs-lookup"><span data-stu-id="d79c3-358">Required.</span></span> <span data-ttu-id="d79c3-359">Ein beliebiger numerischer Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="d79c3-359">Any numeric expression.</span></span></param>
        <param name="Right"><span data-ttu-id="d79c3-360">Erforderlich</span><span class="sxs-lookup"><span data-stu-id="d79c3-360">Required.</span></span> <span data-ttu-id="d79c3-361">Ein beliebiger numerischer Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="d79c3-361">Any numeric expression.</span></span></param>
        <summary><span data-ttu-id="d79c3-362">Stellt den <see langword="Mod" />-Operator in Visual Basic dar.</span><span class="sxs-lookup"><span data-stu-id="d79c3-362">Represents the Visual Basic <see langword="Mod" /> operator.</span></span></summary>
        <returns><span data-ttu-id="d79c3-363">Der Rest aus der Division von <paramref name="Left" /> durch <paramref name="Right" />.</span><span class="sxs-lookup"><span data-stu-id="d79c3-363">The remainder after <paramref name="Left" /> is divided by <paramref name="Right" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d79c3-364">Diese Klasse unterstützt den Visual Basic-Compiler und ist nicht für die direkte Verwendung im Code vorgesehen.</span><span class="sxs-lookup"><span data-stu-id="d79c3-364">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/mod-operator.md"><span data-ttu-id="d79c3-365">Operator Mod(Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="d79c3-365">Mod Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="MultiplyObject">
      <MemberSignature Language="C#" Value="public static object MultiplyObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object MultiplyObject(object Left, object Right) cil managed" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.MultiplyObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MultiplyObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ MultiplyObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member MultiplyObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.MultiplyObject (Left, Right)" />
      <MemberSignature Language="ILAsm" Value=".method public static object MultiplyObject(object Left, object Right) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="d79c3-366">Erforderlich</span><span class="sxs-lookup"><span data-stu-id="d79c3-366">Required.</span></span> <span data-ttu-id="d79c3-367">Ein beliebiger numerischer Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="d79c3-367">Any numeric expression.</span></span></param>
        <param name="Right"><span data-ttu-id="d79c3-368">Erforderlich</span><span class="sxs-lookup"><span data-stu-id="d79c3-368">Required.</span></span> <span data-ttu-id="d79c3-369">Ein beliebiger numerischer Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="d79c3-369">Any numeric expression.</span></span></param>
        <summary><span data-ttu-id="d79c3-370">Stellt den Visual Basic-Multiplikationsoperator (\*) dar.</span><span class="sxs-lookup"><span data-stu-id="d79c3-370">Represents the Visual Basic multiply (\*) operator.</span></span></summary>
        <returns><span data-ttu-id="d79c3-371">Das Produkt von <paramref name="Left" /> und <paramref name="Right" />.</span><span class="sxs-lookup"><span data-stu-id="d79c3-371">The product of <paramref name="Left" /> and <paramref name="Right" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d79c3-372">Diese Klasse unterstützt den Visual Basic-Compiler und ist nicht für die direkte Verwendung im Code vorgesehen.</span><span class="sxs-lookup"><span data-stu-id="d79c3-372">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/multiplication-operator.md"><span data-ttu-id="d79c3-373">\*-Operator (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="d79c3-373">\* Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="NegateObject">
      <MemberSignature Language="C#" Value="public static object NegateObject (object Operand);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object NegateObject(object Operand) cil managed" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.NegateObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NegateObject (Operand As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ NegateObject(System::Object ^ Operand);" />
      <MemberSignature Language="F#" Value="static member NegateObject : obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.NegateObject Operand" />
      <MemberSignature Language="ILAsm" Value=".method public static object NegateObject(object Operand) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Operand" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Operand"><span data-ttu-id="d79c3-374">Erforderlich</span><span class="sxs-lookup"><span data-stu-id="d79c3-374">Required.</span></span> <span data-ttu-id="d79c3-375">Ein beliebiger numerischer Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="d79c3-375">Any numeric expression.</span></span></param>
        <summary><span data-ttu-id="d79c3-376">Stellt den unären Subtraktionsoperator (–) in Visual Basic dar.</span><span class="sxs-lookup"><span data-stu-id="d79c3-376">Represents the Visual Basic unary minus (-) operator.</span></span></summary>
        <returns><span data-ttu-id="d79c3-377">Der negative Wert von <paramref name="Operand" />.</span><span class="sxs-lookup"><span data-stu-id="d79c3-377">The negative value of <paramref name="Operand" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d79c3-378">Diese Klasse unterstützt den Visual Basic-Compiler und ist nicht für die direkte Verwendung im Code vorgesehen.</span><span class="sxs-lookup"><span data-stu-id="d79c3-378">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/subtraction-operator.md"><span data-ttu-id="d79c3-379">--Operator (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="d79c3-379">- Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="NotObject">
      <MemberSignature Language="C#" Value="public static object NotObject (object Operand);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object NotObject(object Operand) cil managed" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.NotObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NotObject (Operand As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ NotObject(System::Object ^ Operand);" />
      <MemberSignature Language="F#" Value="static member NotObject : obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.NotObject Operand" />
      <MemberSignature Language="ILAsm" Value=".method public static object NotObject(object Operand) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Operand" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Operand"><span data-ttu-id="d79c3-380">Erforderlich</span><span class="sxs-lookup"><span data-stu-id="d79c3-380">Required.</span></span> <span data-ttu-id="d79c3-381">Ein beliebiger <see langword="Boolean" />-Ausdruck oder numerischer Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="d79c3-381">Any <see langword="Boolean" /> or numeric expression.</span></span></param>
        <summary><span data-ttu-id="d79c3-382">Stellt den <see langword="Not" />-Operator in Visual Basic dar.</span><span class="sxs-lookup"><span data-stu-id="d79c3-382">Represents the Visual Basic <see langword="Not" /> operator.</span></span></summary>
        <returns><span data-ttu-id="d79c3-383">Für <see langword="Boolean" />-Operationen: <see langword="False" />, wenn <paramref name="Operand" /> gleich <see langword="True" /> ist, andernfalls <see langword="True" />.</span><span class="sxs-lookup"><span data-stu-id="d79c3-383">For <see langword="Boolean" /> operations, <see langword="False" /> if <paramref name="Operand" /> is <see langword="True" />; otherwise, <see langword="True" />.</span></span> <span data-ttu-id="d79c3-384">Für bitweise Operationen: 1, wenn <paramref name="Operand" /> gleich 0 ist, andernfalls 0.</span><span class="sxs-lookup"><span data-stu-id="d79c3-384">For bitwise operations, 1 if <paramref name="Operand" /> is 0; otherwise, 0.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d79c3-385">Diese Klasse unterstützt den Visual Basic-Compiler und ist nicht für die direkte Verwendung im Code vorgesehen.</span><span class="sxs-lookup"><span data-stu-id="d79c3-385">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/not-operator.md"><span data-ttu-id="d79c3-386">Not-Operator (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="d79c3-386">Not Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OrObject">
      <MemberSignature Language="C#" Value="public static object OrObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object OrObject(object Left, object Right) cil managed" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.OrObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OrObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ OrObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member OrObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.OrObject (Left, Right)" />
      <MemberSignature Language="ILAsm" Value=".method public static object OrObject(object Left, object Right) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="d79c3-387">Erforderlich</span><span class="sxs-lookup"><span data-stu-id="d79c3-387">Required.</span></span> <span data-ttu-id="d79c3-388">Ein beliebiger <see langword="Boolean" />-Ausdruck oder numerischer Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="d79c3-388">Any <see langword="Boolean" /> or numeric expression.</span></span></param>
        <param name="Right"><span data-ttu-id="d79c3-389">Erforderlich</span><span class="sxs-lookup"><span data-stu-id="d79c3-389">Required.</span></span> <span data-ttu-id="d79c3-390">Ein beliebiger <see langword="Boolean" />-Ausdruck oder numerischer Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="d79c3-390">Any <see langword="Boolean" /> or numeric expression.</span></span></param>
        <summary><span data-ttu-id="d79c3-391">Stellt den <see langword="Or" />-Operator in Visual Basic dar.</span><span class="sxs-lookup"><span data-stu-id="d79c3-391">Represents the Visual Basic <see langword="Or" /> operator.</span></span></summary>
        <returns><span data-ttu-id="d79c3-392">Für <see langword="Boolean" />-Operationen: <see langword="False" />, wenn sowohl <paramref name="Left" /> als auch <paramref name="Right" /> <see langword="False" /> ergeben, andernfalls <see langword="True" />.</span><span class="sxs-lookup"><span data-stu-id="d79c3-392">For <see langword="Boolean" /> operations, <see langword="False" /> if both <paramref name="Left" /> and <paramref name="Right" /> evaluate to <see langword="False" />; otherwise, <see langword="True" />.</span></span> <span data-ttu-id="d79c3-393">Für bitweise Operationen: 0, wenn sowohl <paramref name="Left" />, als auch <paramref name="Right" /> 0 ergeben, andernfalls 1.</span><span class="sxs-lookup"><span data-stu-id="d79c3-393">For bitwise operations, 0 if both <paramref name="Left" /> and <paramref name="Right" /> evaluate to 0; otherwise, 1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d79c3-394">Diese Klasse unterstützt den Visual Basic-Compiler und ist nicht für die direkte Verwendung im Code vorgesehen.</span><span class="sxs-lookup"><span data-stu-id="d79c3-394">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/or-operator.md"><span data-ttu-id="d79c3-395">Or-Operator (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="d79c3-395">Or Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="PlusObject">
      <MemberSignature Language="C#" Value="public static object PlusObject (object Operand);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object PlusObject(object Operand) cil managed" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.PlusObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PlusObject (Operand As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ PlusObject(System::Object ^ Operand);" />
      <MemberSignature Language="F#" Value="static member PlusObject : obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.PlusObject Operand" />
      <MemberSignature Language="ILAsm" Value=".method public static object PlusObject(object Operand) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Operand" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Operand"><span data-ttu-id="d79c3-396">Erforderlich</span><span class="sxs-lookup"><span data-stu-id="d79c3-396">Required.</span></span> <span data-ttu-id="d79c3-397">Ein beliebiger numerischer Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="d79c3-397">Any numeric expression.</span></span></param>
        <summary><span data-ttu-id="d79c3-398">Stellt den unären Additionsoperator (+) in Visual Basic dar.</span><span class="sxs-lookup"><span data-stu-id="d79c3-398">Represents the Visual Basic unary plus (+) operator.</span></span></summary>
        <returns><span data-ttu-id="d79c3-399">Der Wert von <paramref name="Operand" />.</span><span class="sxs-lookup"><span data-stu-id="d79c3-399">The value of <paramref name="Operand" />.</span></span> <span data-ttu-id="d79c3-400">(Das Vorzeichen von <paramref name="Operand" /> wird nicht geändert.)</span><span class="sxs-lookup"><span data-stu-id="d79c3-400">(The sign of the <paramref name="Operand" /> is unchanged.)</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d79c3-401">Diese Klasse unterstützt den Visual Basic-Compiler und ist nicht für die direkte Verwendung im Code vorgesehen.</span><span class="sxs-lookup"><span data-stu-id="d79c3-401">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/addition-operator.md"><span data-ttu-id="d79c3-402">+-Operator (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="d79c3-402">+ Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="RightShiftObject">
      <MemberSignature Language="C#" Value="public static object RightShiftObject (object Operand, object Amount);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object RightShiftObject(object Operand, object Amount) cil managed" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.RightShiftObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RightShiftObject (Operand As Object, Amount As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ RightShiftObject(System::Object ^ Operand, System::Object ^ Amount);" />
      <MemberSignature Language="F#" Value="static member RightShiftObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.RightShiftObject (Operand, Amount)" />
      <MemberSignature Language="ILAsm" Value=".method public static object RightShiftObject(object Operand, object Amount) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Operand" Type="System.Object" />
        <Parameter Name="Amount" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Operand"><span data-ttu-id="d79c3-403">Erforderlich</span><span class="sxs-lookup"><span data-stu-id="d79c3-403">Required.</span></span> <span data-ttu-id="d79c3-404">Ein ganzzahliger numerischer Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="d79c3-404">Integral numeric expression.</span></span> <span data-ttu-id="d79c3-405">Das zu verschiebende Bitmuster.</span><span class="sxs-lookup"><span data-stu-id="d79c3-405">The bit pattern to be shifted.</span></span> <span data-ttu-id="d79c3-406">Der Datentyp muss ein ganzzahliger Typ (<see langword="SByte" />, <see langword="Byte" />, <see langword="Short" />, <see langword="UShort" />, <see langword="Integer" />, <see langword="UInteger" />, <see langword="Long" /> oder <see langword="ULong" />) sein.</span><span class="sxs-lookup"><span data-stu-id="d79c3-406">The data type must be an integral type (<see langword="SByte" />, <see langword="Byte" />, <see langword="Short" />, <see langword="UShort" />, <see langword="Integer" />, <see langword="UInteger" />, <see langword="Long" />, or <see langword="ULong" />).</span></span></param>
        <param name="Amount"><span data-ttu-id="d79c3-407">Erforderlich</span><span class="sxs-lookup"><span data-stu-id="d79c3-407">Required.</span></span> <span data-ttu-id="d79c3-408">Ein numerischer Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="d79c3-408">Numeric expression.</span></span> <span data-ttu-id="d79c3-409">Die Anzahl der Bits, um die das Bitmuster verschoben werden soll.</span><span class="sxs-lookup"><span data-stu-id="d79c3-409">The number of bits to shift the bit pattern.</span></span> <span data-ttu-id="d79c3-410">Der Datentyp muss <see langword="Integer" /> sein oder zu <see langword="Integer" /> erweitert werden.</span><span class="sxs-lookup"><span data-stu-id="d79c3-410">The data type must be <see langword="Integer" /> or widen to <see langword="Integer" />.</span></span></param>
        <summary><span data-ttu-id="d79c3-411">Stellt den Operator für die Stellenverschiebung nach rechts (&gt;&gt;) in Visual Basic dar.</span><span class="sxs-lookup"><span data-stu-id="d79c3-411">Represents the Visual Basic arithmetic right shift (&gt;&gt;) operator.</span></span></summary>
        <returns><span data-ttu-id="d79c3-412">Ein ganzzahliger numerischer Wert.</span><span class="sxs-lookup"><span data-stu-id="d79c3-412">An integral numeric value.</span></span> <span data-ttu-id="d79c3-413">Das Ergebnis der Verschiebung des Bitmusters.</span><span class="sxs-lookup"><span data-stu-id="d79c3-413">The result of shifting the bit pattern.</span></span> <span data-ttu-id="d79c3-414">Der Datentyp entspricht dem von <paramref name="Operand" />.</span><span class="sxs-lookup"><span data-stu-id="d79c3-414">The data type is the same as that of <paramref name="Operand" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d79c3-415">Diese Klasse unterstützt den Visual Basic-Compiler und ist nicht für die direkte Verwendung im Code vorgesehen.</span><span class="sxs-lookup"><span data-stu-id="d79c3-415">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/right-shift-operator.md"><span data-ttu-id="d79c3-416">&gt;&gt; Operator (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="d79c3-416">&gt;&gt; Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SubtractObject">
      <MemberSignature Language="C#" Value="public static object SubtractObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object SubtractObject(object Left, object Right) cil managed" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.SubtractObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SubtractObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ SubtractObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member SubtractObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.SubtractObject (Left, Right)" />
      <MemberSignature Language="ILAsm" Value=".method public static object SubtractObject(object Left, object Right) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="d79c3-417">Erforderlich</span><span class="sxs-lookup"><span data-stu-id="d79c3-417">Required.</span></span> <span data-ttu-id="d79c3-418">Ein beliebiger numerischer Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="d79c3-418">Any numeric expression.</span></span></param>
        <param name="Right"><span data-ttu-id="d79c3-419">Erforderlich</span><span class="sxs-lookup"><span data-stu-id="d79c3-419">Required.</span></span> <span data-ttu-id="d79c3-420">Ein beliebiger numerischer Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="d79c3-420">Any numeric expression.</span></span></param>
        <summary><span data-ttu-id="d79c3-421">Stellt den Visual Basic-Subtraktionsoperator (–) dar.</span><span class="sxs-lookup"><span data-stu-id="d79c3-421">Represents the Visual Basic subtraction (-) operator.</span></span></summary>
        <returns><span data-ttu-id="d79c3-422">Die Differenz zwischen <paramref name="Left" /> und <paramref name="Right" />.</span><span class="sxs-lookup"><span data-stu-id="d79c3-422">The difference between <paramref name="Left" /> and <paramref name="Right" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d79c3-423">Diese Klasse unterstützt den Visual Basic-Compiler und ist nicht für die direkte Verwendung im Code vorgesehen.</span><span class="sxs-lookup"><span data-stu-id="d79c3-423">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/subtraction-operator.md"><span data-ttu-id="d79c3-424">--Operator (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="d79c3-424">- Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="XorObject">
      <MemberSignature Language="C#" Value="public static object XorObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object XorObject(object Left, object Right) cil managed" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.XorObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function XorObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ XorObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member XorObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.XorObject (Left, Right)" />
      <MemberSignature Language="ILAsm" Value=".method public static object XorObject(object Left, object Right) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="d79c3-425">Erforderlich</span><span class="sxs-lookup"><span data-stu-id="d79c3-425">Required.</span></span> <span data-ttu-id="d79c3-426">Ein beliebiger <see langword="Boolean" />-Ausdruck oder numerischer Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="d79c3-426">Any <see langword="Boolean" /> or numeric expression.</span></span></param>
        <param name="Right"><span data-ttu-id="d79c3-427">Erforderlich</span><span class="sxs-lookup"><span data-stu-id="d79c3-427">Required.</span></span> <span data-ttu-id="d79c3-428">Ein beliebiger <see langword="Boolean" />-Ausdruck oder numerischer Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="d79c3-428">Any <see langword="Boolean" /> or numeric expression.</span></span></param>
        <summary><span data-ttu-id="d79c3-429">Stellt den <see langword="Xor" />-Operator in Visual Basic dar.</span><span class="sxs-lookup"><span data-stu-id="d79c3-429">Represents the Visual Basic <see langword="Xor" /> operator.</span></span></summary>
        <returns><span data-ttu-id="d79c3-430">Ein <see langword="Boolean" />-Wert oder ein numerischer Wert.</span><span class="sxs-lookup"><span data-stu-id="d79c3-430">A <see langword="Boolean" /> or numeric value.</span></span> <span data-ttu-id="d79c3-431">Bei einem <see langword="Boolean" />-Vergleich ist der Rückgabewert der logische Ausschluss (exklusive logische Disjunktion) aus zwei <see langword="Boolean" />-Werten.</span><span class="sxs-lookup"><span data-stu-id="d79c3-431">For a <see langword="Boolean" /> comparison, the return value is the logical exclusion (exclusive logical disjunction) of two <see langword="Boolean" /> values.</span></span> <span data-ttu-id="d79c3-432">Bei bitweisen (numerischen) Vorgängen ist der Rückgabewert ein numerischer Wert, der den bitweisen Ausschluss (exklusive bitweise Disjunktion) aus zwei numerischen Bitmustern darstellt.</span><span class="sxs-lookup"><span data-stu-id="d79c3-432">For bitwise (numeric) operations, the return value is a numeric value that represents the bitwise exclusion (exclusive bitwise disjunction) of two numeric bit patterns.</span></span> <span data-ttu-id="d79c3-433">Weitere Informationen finden Sie unter <see href="https://docs.microsoft.com/dotnet/visual-basic/language-reference/operators/xor-operator">Xor Operator</see>.</span><span class="sxs-lookup"><span data-stu-id="d79c3-433">For more information, see <see href="https://docs.microsoft.com/dotnet/visual-basic/language-reference/operators/xor-operator">Xor Operator</see>.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d79c3-434">Diese Klasse unterstützt den Visual Basic-Compiler und ist nicht für die direkte Verwendung im Code vorgesehen.</span><span class="sxs-lookup"><span data-stu-id="d79c3-434">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/xor-operator.md"><span data-ttu-id="d79c3-435">Xor-Operator (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="d79c3-435">Xor Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
