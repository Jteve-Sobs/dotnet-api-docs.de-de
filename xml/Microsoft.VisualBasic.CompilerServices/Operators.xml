<Type Name="Operators" FullName="Microsoft.VisualBasic.CompilerServices.Operators">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9616e712f854a18d60700f2d87eb967f5295105a" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70623462" /></Metadata><TypeSignature Language="C#" Value="public sealed class Operators" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Operators extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.CompilerServices.Operators" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Operators" />
  <TypeSignature Language="C++ CLI" Value="public ref class Operators sealed" />
  <TypeSignature Language="F#" Value="type Operators = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
    <AssemblyVersion>10.0.4.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1">
      <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-uwp-10.0;netcore-3.0">
      <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="d8b0f-101">Stellt mathematische Operatoren mit später Bindung bereit, z. B. <see cref="M:Microsoft.VisualBasic.CompilerServices.Operators.AddObject(System.Object,System.Object)" /> und <see cref="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObject(System.Object,System.Object,System.Boolean)" />, die vom Visual Basic-Compiler intern verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-101">Provides late-bound math operators, such as <see cref="M:Microsoft.VisualBasic.CompilerServices.Operators.AddObject(System.Object,System.Object)" /> and <see cref="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObject(System.Object,System.Object,System.Boolean)" />, which the Visual Basic compiler uses internally.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8b0f-102">Diese Klasse unterstützt den Visual Basic-Compiler und ist nicht für die direkte Verwendung im Code vorgesehen.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-102">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
    </remarks>
    <forInternalUseOnly />
    <related type="Article" href="~/docs/visual-basic/language-reference/operators/index.md"><span data-ttu-id="d8b0f-103">Operatoren (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="d8b0f-103">Operators (Visual Basic)</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="AddObject">
      <MemberSignature Language="C#" Value="public static object AddObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object AddObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.AddObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AddObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ AddObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member AddObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.AddObject (Left, Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="d8b0f-104">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-104">Required.</span></span> <span data-ttu-id="d8b0f-105">Ein beliebiger numerischer Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-105">Any numeric expression.</span></span></param>
        <param name="Right"><span data-ttu-id="d8b0f-106">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-106">Required.</span></span> <span data-ttu-id="d8b0f-107">Ein beliebiger numerischer Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-107">Any numeric expression.</span></span></param>
        <summary><span data-ttu-id="d8b0f-108">Stellt den Visual Basic-Additionsoperator (+) dar.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-108">Represents the Visual Basic addition (+) operator.</span></span></summary>
        <returns><span data-ttu-id="d8b0f-109">Die Summe von <paramref name="Left" /> und <paramref name="Right" />.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-109">The sum of <paramref name="Left" /> and <paramref name="Right" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8b0f-110">Diese Klasse unterstützt den Visual Basic-Compiler und ist nicht für die direkte Verwendung im Code vorgesehen.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-110">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/addition-operator.md"><span data-ttu-id="d8b0f-111">+-Operator (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="d8b0f-111">+ Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AndObject">
      <MemberSignature Language="C#" Value="public static object AndObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object AndObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.AndObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AndObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ AndObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member AndObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.AndObject (Left, Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="d8b0f-112">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-112">Required.</span></span> <span data-ttu-id="d8b0f-113">Ein beliebiger <see langword="Boolean" />-Ausdruck oder numerischer Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-113">Any <see langword="Boolean" /> or numeric expression.</span></span></param>
        <param name="Right"><span data-ttu-id="d8b0f-114">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-114">Required.</span></span> <span data-ttu-id="d8b0f-115">Ein beliebiger <see langword="Boolean" />-Ausdruck oder numerischer Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-115">Any <see langword="Boolean" /> or numeric expression.</span></span></param>
        <summary><span data-ttu-id="d8b0f-116">Stellt den <see langword="And" />-Operator in Visual Basic dar.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-116">Represents the Visual Basic <see langword="And" /> operator.</span></span></summary>
        <returns><span data-ttu-id="d8b0f-117">Für <see langword="Boolean" />-Operationen: <see langword="True" />, wenn sowohl <paramref name="Left" /> als auch <paramref name="Right" /> <see langword="True" /> ergeben, andernfalls <see langword="False" />.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-117">For <see langword="Boolean" /> operations, <see langword="True" /> if both <paramref name="Left" /> and <paramref name="Right" /> evaluate to <see langword="True" />; otherwise, <see langword="False" />.</span></span> <span data-ttu-id="d8b0f-118">Für bitweise Operationen: 1, wenn sowohl <paramref name="Left" /> als auch <paramref name="Right" /> 1 ergeben, andernfalls 0.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-118">For bitwise operations, 1 if both <paramref name="Left" /> and <paramref name="Right" /> evaluate to 1; otherwise, 0.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8b0f-119">Diese Klasse unterstützt den Visual Basic-Compiler und ist nicht für die direkte Verwendung im Code vorgesehen.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-119">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/and-operator.md"><span data-ttu-id="d8b0f-120">And-Operator (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="d8b0f-120">And Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CompareObject">
      <MemberSignature Language="C#" Value="public static int CompareObject (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 CompareObject(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObject(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareObject (Left As Object, Right As Object, TextCompare As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int CompareObject(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member CompareObject : obj * obj * bool -&gt; int" Usage="Microsoft.VisualBasic.CompilerServices.Operators.CompareObject (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="Right" Type="System.Object" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="TextCompare" Type="System.Boolean" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="d8b0f-121">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-121">Required.</span></span> <span data-ttu-id="d8b0f-122">Beliebiger Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-122">Any expression.</span></span></param>
        <param name="Right"><span data-ttu-id="d8b0f-123">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-123">Required.</span></span> <span data-ttu-id="d8b0f-124">Beliebiger Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-124">Any expression.</span></span></param>
        <param name="TextCompare"><span data-ttu-id="d8b0f-125">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-125">Required.</span></span> <span data-ttu-id="d8b0f-126"><see langword="True" />, um einen Zeichenfolgenvergleich ohne Berücksichtigung der Groß- und Kleinschreibung auszuführen, andernfalls <see langword="False" />.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-126"><see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="d8b0f-127">Stellt Vergleichsoperatoren in Visual Basic dar.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-127">Represents Visual Basic comparison operators.</span></span></summary>
        <returns><list type="table">
            <listheader>
              <term> <span data-ttu-id="d8b0f-128">Wert</span><span class="sxs-lookup"><span data-stu-id="d8b0f-128">Value</span></span> 
 </term>
              <description> <span data-ttu-id="d8b0f-129">Bedingung</span><span class="sxs-lookup"><span data-stu-id="d8b0f-129">Condition</span></span> 
 </description>
            </listheader>
            <item>
              <term> <span data-ttu-id="d8b0f-130">-1</span><span class="sxs-lookup"><span data-stu-id="d8b0f-130">-1</span></span> 
 </term>
              <description><span data-ttu-id="d8b0f-131">
                <paramref name="Left" /> ist kleiner als <paramref name="Right" />.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-131">
                <paramref name="Left" /> is less than <paramref name="Right" />.</span></span>  
  
 </description>
            </item>
            <item>
              <term> <span data-ttu-id="d8b0f-132">0</span><span class="sxs-lookup"><span data-stu-id="d8b0f-132">0</span></span> 
 </term>
              <description><span data-ttu-id="d8b0f-133">
                <paramref name="Left" /> und <paramref name="Right" /> sind gleich.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-133">
                <paramref name="Left" /> and <paramref name="Right" /> are equal.</span></span>  
  
 </description>
            </item>
            <item>
              <term> <span data-ttu-id="d8b0f-134">1</span><span class="sxs-lookup"><span data-stu-id="d8b0f-134">1</span></span> 
 </term>
              <description><span data-ttu-id="d8b0f-135">
                <paramref name="Left" /> ist größer als <paramref name="Right" />.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-135">
                <paramref name="Left" /> is greater than <paramref name="Right" />.</span></span>  
  
 </description>
            </item>
          </list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8b0f-136">Diese Klasse unterstützt den Visual Basic-Compiler und ist nicht für die direkte Verwendung im Code vorgesehen.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-136">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/comparison-operators.md"><span data-ttu-id="d8b0f-137">Vergleichsoperatoren (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="d8b0f-137">Comparison Operators (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CompareObjectEqual">
      <MemberSignature Language="C#" Value="public static object CompareObjectEqual (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static object CompareObjectEqual(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectEqual(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareObjectEqual (Left As Object, Right As Object, TextCompare As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CompareObjectEqual(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member CompareObjectEqual : obj * obj * bool -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectEqual (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="d8b0f-138">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-138">Required.</span></span> <span data-ttu-id="d8b0f-139">Beliebiger Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-139">Any expression.</span></span></param>
        <param name="Right"><span data-ttu-id="d8b0f-140">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-140">Required.</span></span> <span data-ttu-id="d8b0f-141">Beliebiger Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-141">Any expression.</span></span></param>
        <param name="TextCompare"><span data-ttu-id="d8b0f-142">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-142">Required.</span></span> <span data-ttu-id="d8b0f-143"><see langword="True" />, um einen Zeichenfolgenvergleich ohne Berücksichtigung der Groß- und Kleinschreibung auszuführen, andernfalls <see langword="False" />.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-143"><see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="d8b0f-144">Stellt den Visual Basic-Gleichheitsoperator (=) dar.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-144">Represents the Visual Basic equal (=) operator.</span></span></summary>
        <returns><span data-ttu-id="d8b0f-145"><see langword="True" />, wenn <paramref name="Left" /> und <paramref name="Right" /> gleich sind, andernfalls <see langword="False" />.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-145"><see langword="True" /> if <paramref name="Left" /> and <paramref name="Right" /> are equal; otherwise, <see langword="False" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8b0f-146">Diese Klasse unterstützt den Visual Basic-Compiler und ist nicht für die direkte Verwendung im Code vorgesehen.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-146">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/comparison-operators.md"><span data-ttu-id="d8b0f-147">Vergleichsoperatoren (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="d8b0f-147">Comparison Operators (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CompareObjectGreater">
      <MemberSignature Language="C#" Value="public static object CompareObjectGreater (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static object CompareObjectGreater(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectGreater(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareObjectGreater (Left As Object, Right As Object, TextCompare As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CompareObjectGreater(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member CompareObjectGreater : obj * obj * bool -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectGreater (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="d8b0f-148">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-148">Required.</span></span> <span data-ttu-id="d8b0f-149">Beliebiger Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-149">Any expression.</span></span></param>
        <param name="Right"><span data-ttu-id="d8b0f-150">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-150">Required.</span></span> <span data-ttu-id="d8b0f-151">Beliebiger Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-151">Any expression.</span></span></param>
        <param name="TextCompare"><span data-ttu-id="d8b0f-152">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-152">Required.</span></span> <span data-ttu-id="d8b0f-153"><see langword="True" />, um einen Zeichenfolgenvergleich ohne Berücksichtigung der Groß- und Kleinschreibung auszuführen, andernfalls <see langword="False" />.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-153"><see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="d8b0f-154">Stellt den Visual Basic-größer-als (&gt;)-Operator dar.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-154">Represents the Visual Basic greater-than (&gt;) operator.</span></span></summary>
        <returns><span data-ttu-id="d8b0f-155"><see langword="True" />, wenn <paramref name="Left" /> größer als <paramref name="Right" /> ist, andernfalls <see langword="False" />.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-155"><see langword="True" /> if <paramref name="Left" /> is greater than <paramref name="Right" />; otherwise, <see langword="False" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8b0f-156">Diese Klasse unterstützt den Visual Basic-Compiler und ist nicht für die direkte Verwendung im Code vorgesehen.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-156">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/comparison-operators.md"><span data-ttu-id="d8b0f-157">Vergleichsoperatoren (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="d8b0f-157">Comparison Operators (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CompareObjectGreaterEqual">
      <MemberSignature Language="C#" Value="public static object CompareObjectGreaterEqual (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static object CompareObjectGreaterEqual(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectGreaterEqual(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareObjectGreaterEqual (Left As Object, Right As Object, TextCompare As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CompareObjectGreaterEqual(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member CompareObjectGreaterEqual : obj * obj * bool -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectGreaterEqual (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="d8b0f-158">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-158">Required.</span></span> <span data-ttu-id="d8b0f-159">Beliebiger Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-159">Any expression.</span></span></param>
        <param name="Right"><span data-ttu-id="d8b0f-160">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-160">Required.</span></span> <span data-ttu-id="d8b0f-161">Beliebiger Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-161">Any expression.</span></span></param>
        <param name="TextCompare"><span data-ttu-id="d8b0f-162">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-162">Required.</span></span> <span data-ttu-id="d8b0f-163"><see langword="True" />, um einen Zeichenfolgenvergleich ohne Berücksichtigung der Groß- und Kleinschreibung auszuführen, andernfalls <see langword="False" />.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-163"><see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="d8b0f-164">Stellt den Visual Basic-größer-als-oder-gleich (&gt;=)-Operator dar.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-164">Represents the Visual Basic greater-than or equal-to (&gt;=) operator.</span></span></summary>
        <returns><span data-ttu-id="d8b0f-165"><see langword="True" />, wenn <paramref name="Left" /> größer oder gleich <paramref name="Right" /> ist, andernfalls <see langword="False" />.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-165"><see langword="True" /> if <paramref name="Left" /> is greater than or equal to <paramref name="Right" />; otherwise, <see langword="False" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8b0f-166">Diese Klasse unterstützt den Visual Basic-Compiler und ist nicht für die direkte Verwendung im Code vorgesehen.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-166">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/comparison-operators.md"><span data-ttu-id="d8b0f-167">Vergleichsoperatoren (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="d8b0f-167">Comparison Operators (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CompareObjectLess">
      <MemberSignature Language="C#" Value="public static object CompareObjectLess (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static object CompareObjectLess(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectLess(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareObjectLess (Left As Object, Right As Object, TextCompare As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CompareObjectLess(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member CompareObjectLess : obj * obj * bool -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectLess (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="d8b0f-168">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-168">Required.</span></span> <span data-ttu-id="d8b0f-169">Beliebiger Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-169">Any expression.</span></span></param>
        <param name="Right"><span data-ttu-id="d8b0f-170">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-170">Required.</span></span> <span data-ttu-id="d8b0f-171">Beliebiger Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-171">Any expression.</span></span></param>
        <param name="TextCompare"><span data-ttu-id="d8b0f-172">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-172">Required.</span></span> <span data-ttu-id="d8b0f-173"><see langword="True" />, um einen Zeichenfolgenvergleich ohne Berücksichtigung der Groß- und Kleinschreibung auszuführen, andernfalls <see langword="False" />.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-173"><see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="d8b0f-174">Stellt den Visual Basic-kleiner-als (&lt;)-Operator dar.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-174">Represents the Visual Basic less-than (&lt;) operator.</span></span></summary>
        <returns><span data-ttu-id="d8b0f-175"><see langword="True" />, wenn <paramref name="Left" /> kleiner als <paramref name="Right" /> ist, andernfalls <see langword="False" />.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-175"><see langword="True" /> if <paramref name="Left" /> is less than <paramref name="Right" />; otherwise, <see langword="False" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8b0f-176">Diese Klasse unterstützt den Visual Basic-Compiler und ist nicht für die direkte Verwendung im Code vorgesehen.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-176">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/comparison-operators.md"><span data-ttu-id="d8b0f-177">Vergleichsoperatoren (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="d8b0f-177">Comparison Operators (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CompareObjectLessEqual">
      <MemberSignature Language="C#" Value="public static object CompareObjectLessEqual (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static object CompareObjectLessEqual(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectLessEqual(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareObjectLessEqual (Left As Object, Right As Object, TextCompare As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CompareObjectLessEqual(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member CompareObjectLessEqual : obj * obj * bool -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectLessEqual (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="d8b0f-178">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-178">Required.</span></span> <span data-ttu-id="d8b0f-179">Beliebiger Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-179">Any expression.</span></span></param>
        <param name="Right"><span data-ttu-id="d8b0f-180">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-180">Required.</span></span> <span data-ttu-id="d8b0f-181">Beliebiger Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-181">Any expression.</span></span></param>
        <param name="TextCompare"><span data-ttu-id="d8b0f-182">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-182">Required.</span></span> <span data-ttu-id="d8b0f-183"><see langword="True" />, um einen Zeichenfolgenvergleich ohne Berücksichtigung der Groß- und Kleinschreibung auszuführen, andernfalls <see langword="False" />.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-183"><see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="d8b0f-184">Stellt den Visual Basic-kleiner-als-oder-gleich (&lt;=)-Operator dar.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-184">Represents the Visual Basic less-than or equal-to (&lt;=) operator.</span></span></summary>
        <returns><span data-ttu-id="d8b0f-185"><see langword="True" />, wenn <paramref name="Left" /> kleiner oder gleich <paramref name="Right" /> ist, andernfalls <see langword="False" />.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-185"><see langword="True" /> if <paramref name="Left" /> is less than or equal to <paramref name="Right" />; otherwise, <see langword="False" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8b0f-186">Diese Klasse unterstützt den Visual Basic-Compiler und ist nicht für die direkte Verwendung im Code vorgesehen.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-186">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/comparison-operators.md"><span data-ttu-id="d8b0f-187">Vergleichsoperatoren (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="d8b0f-187">Comparison Operators (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CompareObjectNotEqual">
      <MemberSignature Language="C#" Value="public static object CompareObjectNotEqual (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static object CompareObjectNotEqual(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectNotEqual(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareObjectNotEqual (Left As Object, Right As Object, TextCompare As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CompareObjectNotEqual(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member CompareObjectNotEqual : obj * obj * bool -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectNotEqual (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="d8b0f-188">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-188">Required.</span></span> <span data-ttu-id="d8b0f-189">Beliebiger Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-189">Any expression.</span></span></param>
        <param name="Right"><span data-ttu-id="d8b0f-190">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-190">Required.</span></span> <span data-ttu-id="d8b0f-191">Beliebiger Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-191">Any expression.</span></span></param>
        <param name="TextCompare"><span data-ttu-id="d8b0f-192">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-192">Required.</span></span> <span data-ttu-id="d8b0f-193"><see langword="True" />, um einen Zeichenfolgenvergleich ohne Berücksichtigung der Groß- und Kleinschreibung auszuführen, andernfalls <see langword="False" />.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-193"><see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="d8b0f-194">Stellt den Visual Basic-Ungleichheitsoperator (&lt;&gt;) dar.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-194">Represents the Visual Basic not-equal (&lt;&gt;) operator.</span></span></summary>
        <returns><span data-ttu-id="d8b0f-195"><see langword="True" />, wenn <paramref name="Left" /> und <paramref name="Right" /> ungleich sind, andernfalls <see langword="False" />.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-195"><see langword="True" /> if <paramref name="Left" /> is not equal to <paramref name="Right" />; otherwise, <see langword="False" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8b0f-196">Diese Klasse unterstützt den Visual Basic-Compiler und ist nicht für die direkte Verwendung im Code vorgesehen.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-196">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/comparison-operators.md"><span data-ttu-id="d8b0f-197">Vergleichsoperatoren (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="d8b0f-197">Comparison Operators (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CompareString">
      <MemberSignature Language="C#" Value="public static int CompareString (string Left, string Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 CompareString(string Left, string Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareString(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareString (Left As String, Right As String, TextCompare As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int CompareString(System::String ^ Left, System::String ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member CompareString : string * string * bool -&gt; int" Usage="Microsoft.VisualBasic.CompilerServices.Operators.CompareString (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.String" />
        <Parameter Name="Right" Type="System.String" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="d8b0f-198">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-198">Required.</span></span> <span data-ttu-id="d8b0f-199">Beliebiger <see langword="String" /> -Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-199">Any <see langword="String" /> expression.</span></span></param>
        <param name="Right"><span data-ttu-id="d8b0f-200">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-200">Required.</span></span> <span data-ttu-id="d8b0f-201">Beliebiger <see langword="String" /> -Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-201">Any <see langword="String" /> expression.</span></span></param>
        <param name="TextCompare"><span data-ttu-id="d8b0f-202">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-202">Required.</span></span> <span data-ttu-id="d8b0f-203"><see langword="True" />, um einen Zeichenfolgenvergleich ohne Berücksichtigung der Groß- und Kleinschreibung auszuführen, andernfalls <see langword="False" />.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-203"><see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="d8b0f-204">Führt einen binären Vergleich oder einen Textzeichenfolgenvergleich für zwei angegebene Zeichenfolgen aus.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-204">Performs binary or text string comparison when given two strings.</span></span></summary>
        <returns><list type="table">
            <listheader>
              <term> <span data-ttu-id="d8b0f-205">Wert</span><span class="sxs-lookup"><span data-stu-id="d8b0f-205">Value</span></span> 
 </term>
              <description> <span data-ttu-id="d8b0f-206">Bedingung</span><span class="sxs-lookup"><span data-stu-id="d8b0f-206">Condition</span></span> 
 </description>
            </listheader>
            <item>
              <term> <span data-ttu-id="d8b0f-207">-1</span><span class="sxs-lookup"><span data-stu-id="d8b0f-207">-1</span></span> 
 </term>
              <description><span data-ttu-id="d8b0f-208">
                <paramref name="Left" /> ist kleiner als <paramref name="Right" />.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-208">
                <paramref name="Left" /> is less than <paramref name="Right" />.</span></span>  
  
 </description>
            </item>
            <item>
              <term> <span data-ttu-id="d8b0f-209">0</span><span class="sxs-lookup"><span data-stu-id="d8b0f-209">0</span></span> 
 </term>
              <description><span data-ttu-id="d8b0f-210">
                <paramref name="Left" /> ist gleich <paramref name="Right" />.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-210">
                <paramref name="Left" /> is equal to <paramref name="Right" />.</span></span>  
  
 </description>
            </item>
            <item>
              <term> <span data-ttu-id="d8b0f-211">1</span><span class="sxs-lookup"><span data-stu-id="d8b0f-211">1</span></span> 
 </term>
              <description><span data-ttu-id="d8b0f-212">
                <paramref name="Left" /> ist größer als <paramref name="Right" />.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-212">
                <paramref name="Left" /> is greater than <paramref name="Right" />.</span></span>  
  
 </description>
            </item>
          </list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8b0f-213">Diese Klasse unterstützt den Visual Basic-Compiler und ist nicht für die direkte Verwendung im Code vorgesehen.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-213">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 <span data-ttu-id="d8b0f-214">Wenn der Visual Basic Gleichheits Operator verwendet wird, um zwei Zeichen folgen zu vergleichen, übergibt er <xref:Microsoft.VisualBasic.CompilerServices.Operators.CompareString%2A> die Zeichen folgen mit dem `False` Wert für das `TextCompare` -Argument an die-Methode.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-214">When the Visual Basic equality operator is used to compare two strings, it passes the strings to the <xref:Microsoft.VisualBasic.CompilerServices.Operators.CompareString%2A> method along with a value of `False` for the `TextCompare` argument.</span></span> <span data-ttu-id="d8b0f-215">Dies führt einen Vergleich unter Berücksichtigung der Groß-/Kleinschreibung durch, der entweder Ordnungszahl oder basierend auf der aktuellen Kultur ist, je nach dem Wert der [Option Compare](~/docs/visual-basic/language-reference/statements/option-compare-statement.md) -Anweisung.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-215">This performs a case-sensitive comparison that is either ordinal or based on the current culture, depending on the value of the [Option Compare](~/docs/visual-basic/language-reference/statements/option-compare-statement.md) statement.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/comparison-operators.md"><span data-ttu-id="d8b0f-216">Vergleichsoperatoren (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="d8b0f-216">Comparison Operators (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ConcatenateObject">
      <MemberSignature Language="C#" Value="public static object ConcatenateObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object ConcatenateObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ConcatenateObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConcatenateObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ConcatenateObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member ConcatenateObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.ConcatenateObject (Left, Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="d8b0f-217">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-217">Required.</span></span> <span data-ttu-id="d8b0f-218">Beliebiger Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-218">Any expression.</span></span></param>
        <param name="Right"><span data-ttu-id="d8b0f-219">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-219">Required.</span></span> <span data-ttu-id="d8b0f-220">Beliebiger Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-220">Any expression.</span></span></param>
        <summary><span data-ttu-id="d8b0f-221">Stellt den Visual Basic-Verkettungsoperator (&amp;) dar.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-221">Represents the Visual Basic concatenation (&amp;) operator.</span></span></summary>
        <returns><span data-ttu-id="d8b0f-222">Eine Zeichenfolge, die die Verkettung von <paramref name="Left" /> und <paramref name="Right" /> darstellt.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-222">A string representing the concatenation of <paramref name="Left" /> and <paramref name="Right" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8b0f-223">Diese Klasse unterstützt den Visual Basic-Compiler und ist nicht für die direkte Verwendung im Code vorgesehen.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-223">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/concatenation-operator.md"><span data-ttu-id="d8b0f-224">&amp;Operator (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="d8b0f-224">&amp; Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ConditionalCompareObjectEqual">
      <MemberSignature Language="C#" Value="public static bool ConditionalCompareObjectEqual (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool ConditionalCompareObjectEqual(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectEqual(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalCompareObjectEqual (Left As Object, Right As Object, TextCompare As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ConditionalCompareObjectEqual(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member ConditionalCompareObjectEqual : obj * obj * bool -&gt; bool" Usage="Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectEqual (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="d8b0f-225">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-225">Required.</span></span> <span data-ttu-id="d8b0f-226">Beliebiger Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-226">Any expression.</span></span></param>
        <param name="Right"><span data-ttu-id="d8b0f-227">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-227">Required.</span></span> <span data-ttu-id="d8b0f-228">Beliebiger Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-228">Any expression.</span></span></param>
        <param name="TextCompare"><span data-ttu-id="d8b0f-229">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-229">Required.</span></span> <span data-ttu-id="d8b0f-230"><see langword="True" />, um einen Zeichenfolgenvergleich ohne Berücksichtigung der Groß- und Kleinschreibung auszuführen, andernfalls <see langword="False" />.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-230"><see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="d8b0f-231">Stellt den überladenen Visual Basic-Gleichheitsoperator (=) dar.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-231">Represents the overloaded Visual Basic equals (=) operator.</span></span></summary>
        <returns><span data-ttu-id="d8b0f-232">Das Ergebnis des überladenen Gleichheitsoperators.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-232">The result of the overloaded equals operator.</span></span> <span data-ttu-id="d8b0f-233"><see langword="False" />, wenn eine Operatorüberladung nicht unterstützt wird.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-233"><see langword="False" /> if operator overloading is not supported.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8b0f-234">Diese Klasse unterstützt den Visual Basic-Compiler und ist nicht für die direkte Verwendung im Code vorgesehen.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-234">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/procedures/operator-procedures.md"><span data-ttu-id="d8b0f-235">Operatorprozeduren</span><span class="sxs-lookup"><span data-stu-id="d8b0f-235">Operator Procedures</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ConditionalCompareObjectGreater">
      <MemberSignature Language="C#" Value="public static bool ConditionalCompareObjectGreater (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool ConditionalCompareObjectGreater(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreater(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalCompareObjectGreater (Left As Object, Right As Object, TextCompare As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ConditionalCompareObjectGreater(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member ConditionalCompareObjectGreater : obj * obj * bool -&gt; bool" Usage="Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreater (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="d8b0f-236">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-236">Required.</span></span> <span data-ttu-id="d8b0f-237">Beliebiger Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-237">Any expression.</span></span></param>
        <param name="Right"><span data-ttu-id="d8b0f-238">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-238">Required.</span></span> <span data-ttu-id="d8b0f-239">Beliebiger Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-239">Any expression.</span></span></param>
        <param name="TextCompare"><span data-ttu-id="d8b0f-240">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-240">Required.</span></span> <span data-ttu-id="d8b0f-241"><see langword="True" />, um einen Zeichenfolgenvergleich ohne Berücksichtigung der Groß- und Kleinschreibung auszuführen, andernfalls <see langword="False" />.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-241"><see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="d8b0f-242">Stellt den überladenen Visual Basic-größer-als (&gt;)-Operator dar.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-242">Represents the overloaded Visual Basic greater-than (&gt;) operator.</span></span></summary>
        <returns><span data-ttu-id="d8b0f-243">Das Ergebnis des überladenen Größer-als-Operators.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-243">The result of the overloaded greater-than operator.</span></span> <span data-ttu-id="d8b0f-244"><see langword="False" />, wenn eine Operatorüberladung nicht unterstützt wird.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-244"><see langword="False" /> if operator overloading is not supported.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8b0f-245">Diese Klasse unterstützt den Visual Basic-Compiler und ist nicht für die direkte Verwendung im Code vorgesehen.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-245">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/procedures/operator-procedures.md"><span data-ttu-id="d8b0f-246">Operatorprozeduren</span><span class="sxs-lookup"><span data-stu-id="d8b0f-246">Operator Procedures</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ConditionalCompareObjectGreaterEqual">
      <MemberSignature Language="C#" Value="public static bool ConditionalCompareObjectGreaterEqual (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool ConditionalCompareObjectGreaterEqual(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreaterEqual(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalCompareObjectGreaterEqual (Left As Object, Right As Object, TextCompare As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ConditionalCompareObjectGreaterEqual(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member ConditionalCompareObjectGreaterEqual : obj * obj * bool -&gt; bool" Usage="Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreaterEqual (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="d8b0f-247">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-247">Required.</span></span> <span data-ttu-id="d8b0f-248">Beliebiger Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-248">Any expression.</span></span></param>
        <param name="Right"><span data-ttu-id="d8b0f-249">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-249">Required.</span></span> <span data-ttu-id="d8b0f-250">Beliebiger Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-250">Any expression.</span></span></param>
        <param name="TextCompare"><span data-ttu-id="d8b0f-251">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-251">Required.</span></span> <span data-ttu-id="d8b0f-252"><see langword="True" />, um einen Zeichenfolgenvergleich ohne Berücksichtigung der Groß- und Kleinschreibung auszuführen, andernfalls <see langword="False" />.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-252"><see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="d8b0f-253">Stellt den überladenen Visual Basic-größer-als-oder-gleich (&gt;=)-Operator dar.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-253">Represents the overloaded Visual Basic greater-than or equal-to (&gt;=) operator.</span></span></summary>
        <returns><span data-ttu-id="d8b0f-254">Das Ergebnis des überladenen Größer-als-Operators oder des überladenen Gleichheitsoperators.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-254">The result of the overloaded greater-than or equal-to operator.</span></span> <span data-ttu-id="d8b0f-255"><see langword="False" />, wenn eine Operatorüberladung nicht unterstützt wird.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-255"><see langword="False" /> if operator overloading is not supported.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8b0f-256">Diese Klasse unterstützt den Visual Basic-Compiler und ist nicht für die direkte Verwendung im Code vorgesehen.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-256">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/procedures/operator-procedures.md"><span data-ttu-id="d8b0f-257">Operatorprozeduren</span><span class="sxs-lookup"><span data-stu-id="d8b0f-257">Operator Procedures</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ConditionalCompareObjectLess">
      <MemberSignature Language="C#" Value="public static bool ConditionalCompareObjectLess (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool ConditionalCompareObjectLess(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLess(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalCompareObjectLess (Left As Object, Right As Object, TextCompare As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ConditionalCompareObjectLess(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member ConditionalCompareObjectLess : obj * obj * bool -&gt; bool" Usage="Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLess (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="d8b0f-258">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-258">Required.</span></span> <span data-ttu-id="d8b0f-259">Beliebiger Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-259">Any expression.</span></span></param>
        <param name="Right"><span data-ttu-id="d8b0f-260">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-260">Required.</span></span> <span data-ttu-id="d8b0f-261">Beliebiger Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-261">Any expression.</span></span></param>
        <param name="TextCompare"><span data-ttu-id="d8b0f-262">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-262">Required.</span></span> <span data-ttu-id="d8b0f-263"><see langword="True" />, um einen Zeichenfolgenvergleich ohne Berücksichtigung der Groß- und Kleinschreibung auszuführen, andernfalls <see langword="False" />.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-263"><see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="d8b0f-264">Stellt den überladenen Visual Basic-kleiner-als (&lt;)-Operator dar.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-264">Represents the overloaded Visual Basic less-than (&lt;) operator.</span></span></summary>
        <returns><span data-ttu-id="d8b0f-265">Das Ergebnis des überladenen Kleiner-als-Operators.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-265">The result of the overloaded less-than operator.</span></span> <span data-ttu-id="d8b0f-266"><see langword="False" />, wenn eine Operatorüberladung nicht unterstützt wird.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-266"><see langword="False" /> if operator overloading is not supported.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8b0f-267">Diese Klasse unterstützt den Visual Basic-Compiler und ist nicht für die direkte Verwendung im Code vorgesehen.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-267">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/procedures/operator-procedures.md"><span data-ttu-id="d8b0f-268">Operatorprozeduren</span><span class="sxs-lookup"><span data-stu-id="d8b0f-268">Operator Procedures</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ConditionalCompareObjectLessEqual">
      <MemberSignature Language="C#" Value="public static bool ConditionalCompareObjectLessEqual (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool ConditionalCompareObjectLessEqual(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLessEqual(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalCompareObjectLessEqual (Left As Object, Right As Object, TextCompare As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ConditionalCompareObjectLessEqual(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member ConditionalCompareObjectLessEqual : obj * obj * bool -&gt; bool" Usage="Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLessEqual (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="d8b0f-269">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-269">Required.</span></span> <span data-ttu-id="d8b0f-270">Beliebiger Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-270">Any expression.</span></span></param>
        <param name="Right"><span data-ttu-id="d8b0f-271">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-271">Required.</span></span> <span data-ttu-id="d8b0f-272">Beliebiger Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-272">Any expression.</span></span></param>
        <param name="TextCompare"><span data-ttu-id="d8b0f-273">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-273">Required.</span></span> <span data-ttu-id="d8b0f-274"><see langword="True" />, um einen Zeichenfolgenvergleich ohne Berücksichtigung der Groß- und Kleinschreibung auszuführen, andernfalls <see langword="False" />.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-274"><see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="d8b0f-275">Stellt den überladenen Visual Basic-kleiner-als-oder-gleich (&lt;=)-Operator dar.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-275">Represents the overloaded Visual Basic less-than or equal-to (&lt;=) operator.</span></span></summary>
        <returns><span data-ttu-id="d8b0f-276">Das Ergebnis des überladenen Kleiner-als-Operators oder des überladenen Gleichheitsoperators.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-276">The result of the overloaded less-than or equal-to operator.</span></span> <span data-ttu-id="d8b0f-277"><see langword="False" />, wenn eine Operatorüberladung nicht unterstützt wird.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-277"><see langword="False" /> if operator overloading is not supported.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8b0f-278">Diese Klasse unterstützt den Visual Basic-Compiler und ist nicht für die direkte Verwendung im Code vorgesehen.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-278">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/procedures/operator-procedures.md"><span data-ttu-id="d8b0f-279">Operatorprozeduren</span><span class="sxs-lookup"><span data-stu-id="d8b0f-279">Operator Procedures</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ConditionalCompareObjectNotEqual">
      <MemberSignature Language="C#" Value="public static bool ConditionalCompareObjectNotEqual (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool ConditionalCompareObjectNotEqual(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectNotEqual(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalCompareObjectNotEqual (Left As Object, Right As Object, TextCompare As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ConditionalCompareObjectNotEqual(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member ConditionalCompareObjectNotEqual : obj * obj * bool -&gt; bool" Usage="Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectNotEqual (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="d8b0f-280">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-280">Required.</span></span> <span data-ttu-id="d8b0f-281">Beliebiger Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-281">Any expression.</span></span></param>
        <param name="Right"><span data-ttu-id="d8b0f-282">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-282">Required.</span></span> <span data-ttu-id="d8b0f-283">Beliebiger Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-283">Any expression.</span></span></param>
        <param name="TextCompare"><span data-ttu-id="d8b0f-284">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-284">Required.</span></span> <span data-ttu-id="d8b0f-285"><see langword="True" />, um einen Zeichenfolgenvergleich ohne Berücksichtigung der Groß- und Kleinschreibung auszuführen, andernfalls <see langword="False" />.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-285"><see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="d8b0f-286">Stellt den überladenen Visual Basic-Ungleichheitsoperator (&lt;&gt;) dar.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-286">Represents the overloaded Visual Basic not-equal (&lt;&gt;) operator.</span></span></summary>
        <returns><span data-ttu-id="d8b0f-287">Das Ergebnis des überladenen Ungleichheitsoperators.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-287">The result of the overloaded not-equal operator.</span></span> <span data-ttu-id="d8b0f-288"><see langword="False" />, wenn eine Operatorüberladung nicht unterstützt wird.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-288"><see langword="False" /> if operator overloading is not supported.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8b0f-289">Diese Klasse unterstützt den Visual Basic-Compiler und ist nicht für die direkte Verwendung im Code vorgesehen.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-289">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/procedures/operator-procedures.md"><span data-ttu-id="d8b0f-290">Operatorprozeduren</span><span class="sxs-lookup"><span data-stu-id="d8b0f-290">Operator Procedures</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DivideObject">
      <MemberSignature Language="C#" Value="public static object DivideObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object DivideObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.DivideObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DivideObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ DivideObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member DivideObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.DivideObject (Left, Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="d8b0f-291">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-291">Required.</span></span> <span data-ttu-id="d8b0f-292">Ein beliebiger numerischer Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-292">Any numeric expression.</span></span></param>
        <param name="Right"><span data-ttu-id="d8b0f-293">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-293">Required.</span></span> <span data-ttu-id="d8b0f-294">Ein beliebiger numerischer Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-294">Any numeric expression.</span></span></param>
        <summary><span data-ttu-id="d8b0f-295">Stellt den Visual Basic-Divisionsoperator (/) dar.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-295">Represents the Visual Basic division (/) operator.</span></span></summary>
        <returns><span data-ttu-id="d8b0f-296">Der volle Quotient, der sich aus der Division von <paramref name="Left" /> durch <paramref name="Right" /> ergibt, einschließlich des Rests.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-296">The full quotient of <paramref name="Left" /> divided by <paramref name="Right" />, including any remainder.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8b0f-297">Diese Klasse unterstützt den Visual Basic-Compiler und ist nicht für die direkte Verwendung im Code vorgesehen.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-297">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/floating-point-division-operator.md"><span data-ttu-id="d8b0f-298">/-Operator (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="d8b0f-298">/ Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ExponentObject">
      <MemberSignature Language="C#" Value="public static object ExponentObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object ExponentObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ExponentObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ExponentObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ExponentObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member ExponentObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.ExponentObject (Left, Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="d8b0f-299">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-299">Required.</span></span> <span data-ttu-id="d8b0f-300">Ein beliebiger numerischer Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-300">Any numeric expression.</span></span></param>
        <param name="Right"><span data-ttu-id="d8b0f-301">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-301">Required.</span></span> <span data-ttu-id="d8b0f-302">Ein beliebiger numerischer Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-302">Any numeric expression.</span></span></param>
        <summary><span data-ttu-id="d8b0f-303">Stellt den Visual Basic-Exponentialoperator (^) dar.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-303">Represents the Visual Basic exponent (^) operator.</span></span></summary>
        <returns><span data-ttu-id="d8b0f-304">Das Ergebnis der Potenzierung von <paramref name="Left" /> mit <paramref name="Right" />.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-304">The result of <paramref name="Left" /> raised to the power of <paramref name="Right" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8b0f-305">Diese Klasse unterstützt den Visual Basic-Compiler und ist nicht für die direkte Verwendung im Code vorgesehen.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-305">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/exponentiation-operators.md"><span data-ttu-id="d8b0f-306">^-Operator (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="d8b0f-306">^ Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FallbackInvokeUserDefinedOperator">
      <MemberSignature Language="C#" Value="public static object FallbackInvokeUserDefinedOperator (object vbOp, object[] Arguments);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public static object FallbackInvokeUserDefinedOperator(object vbOp, object[] Arguments) cil managed" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.FallbackInvokeUserDefinedOperator(System.Object,System.Object[])" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FallbackInvokeUserDefinedOperator (vbOp As Object, Arguments As Object()) As Object" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ FallbackInvokeUserDefinedOperator(System::Object ^ vbOp, cli::array &lt;System::Object ^&gt; ^ Arguments);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="static member FallbackInvokeUserDefinedOperator : obj * obj[] -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.FallbackInvokeUserDefinedOperator (vbOp, Arguments)" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C#" Value="public static object FallbackInvokeUserDefinedOperator (object vbOp, object[] arguments);" FrameworkAlternate="netcore-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object FallbackInvokeUserDefinedOperator(object vbOp, object[] arguments) cil managed" FrameworkAlternate="netcore-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FallbackInvokeUserDefinedOperator (vbOp As Object, arguments As Object()) As Object" FrameworkAlternate="netcore-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ FallbackInvokeUserDefinedOperator(System::Object ^ vbOp, cli::array &lt;System::Object ^&gt; ^ arguments);" FrameworkAlternate="netcore-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.Obsolete("do not use this method", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vbOp" Type="System.Object" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="Arguments" Type="System.Object[]" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="arguments" Type="System.Object[]" Index="1" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="vbOp"><span data-ttu-id="d8b0f-307">Der benutzerdefinierte Operator.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-307">The user-defined operator.</span></span></param>
        <param name="Arguments"><span data-ttu-id="d8b0f-308">Die Argumentwerte, die an den benutzerdefinierten Operator übergeben werden sollen.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-308">Argument values to pass to the user-defined operator.</span></span></param>
        <param name="arguments">To be added.</param>
        <summary><span data-ttu-id="d8b0f-309">Führt eine spät gebundene Auswertung für einen benutzerdefinierten Operator aus.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-309">Executes a late-bound evaluation of a user-defined operator.</span></span> <span data-ttu-id="d8b0f-310">Diese Hilfsmethode ist nicht für den direkten Aufruf aus dem Code vorgesehen.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-310">This helper method is not meant to be called directly from your code.</span></span></summary>
        <returns><span data-ttu-id="d8b0f-311">Das vom benutzerdefinierten Operator zurückgegebene Ergebnis.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-311">The result returned from the user-defined operator.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="IntDivideObject">
      <MemberSignature Language="C#" Value="public static object IntDivideObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object IntDivideObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.IntDivideObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IntDivideObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ IntDivideObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member IntDivideObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.IntDivideObject (Left, Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="d8b0f-312">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-312">Required.</span></span> <span data-ttu-id="d8b0f-313">Ein beliebiger numerischer Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-313">Any numeric expression.</span></span></param>
        <param name="Right"><span data-ttu-id="d8b0f-314">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-314">Required.</span></span> <span data-ttu-id="d8b0f-315">Ein beliebiger numerischer Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-315">Any numeric expression.</span></span></param>
        <summary><span data-ttu-id="d8b0f-316">Stellt den Ganzzahl-Divisionsoperator (\\) in Visual Basic dar.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-316">Represents the Visual Basic integer division (\\) operator.</span></span></summary>
        <returns><span data-ttu-id="d8b0f-317">Der ganzzahlige Quotient, der sich aus der Division von <paramref name="Left" /> durch <paramref name="Right" /> ergibt. Es wird nur der ganzzahlige Teil beibehalten, und ein eventueller Rest wird verworfen.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-317">The integer quotient of <paramref name="Left" /> divided by <paramref name="Right" />, which discards any remainder and retains only the integer portion.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8b0f-318">Diese Klasse unterstützt den Visual Basic-Compiler und ist nicht für die direkte Verwendung im Code vorgesehen.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-318">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/integer-division-operator.md"><span data-ttu-id="d8b0f-319">\-Operator</span><span class="sxs-lookup"><span data-stu-id="d8b0f-319">\ Operator</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="LeftShiftObject">
      <MemberSignature Language="C#" Value="public static object LeftShiftObject (object Operand, object Amount);" />
      <MemberSignature Language="ILAsm" Value=".method public static object LeftShiftObject(object Operand, object Amount) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.LeftShiftObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LeftShiftObject (Operand As Object, Amount As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ LeftShiftObject(System::Object ^ Operand, System::Object ^ Amount);" />
      <MemberSignature Language="F#" Value="static member LeftShiftObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.LeftShiftObject (Operand, Amount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Operand" Type="System.Object" />
        <Parameter Name="Amount" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Operand"><span data-ttu-id="d8b0f-320">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-320">Required.</span></span> <span data-ttu-id="d8b0f-321">Ein ganzzahliger numerischer Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-321">Integral numeric expression.</span></span> <span data-ttu-id="d8b0f-322">Das zu verschiebende Bitmuster.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-322">The bit pattern to be shifted.</span></span> <span data-ttu-id="d8b0f-323">Der Datentyp muss ein ganzzahliger Typ (<see langword="SByte" />, <see langword="Byte" />, <see langword="Short" />, <see langword="UShort" />, <see langword="Integer" />, <see langword="UInteger" />, <see langword="Long" /> oder <see langword="ULong" />) sein.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-323">The data type must be an integral type (<see langword="SByte" />, <see langword="Byte" />, <see langword="Short" />, <see langword="UShort" />, <see langword="Integer" />, <see langword="UInteger" />, <see langword="Long" />, or <see langword="ULong" />).</span></span></param>
        <param name="Amount"><span data-ttu-id="d8b0f-324">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-324">Required.</span></span> <span data-ttu-id="d8b0f-325">Ein numerischer Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-325">Numeric expression.</span></span> <span data-ttu-id="d8b0f-326">Die Anzahl der Bits, um die das Bitmuster verschoben werden soll.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-326">The number of bits to shift the bit pattern.</span></span> <span data-ttu-id="d8b0f-327">Der Datentyp muss <see langword="Integer" /> sein oder zu <see langword="Integer" /> erweitert werden.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-327">The data type must be <see langword="Integer" /> or widen to <see langword="Integer" />.</span></span></param>
        <summary><span data-ttu-id="d8b0f-328">Stellt den Operator für die Stellenverschiebung nach links (&lt;&lt;) in Visual Basic dar.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-328">Represents the Visual Basic arithmetic left shift (&lt;&lt;) operator.</span></span></summary>
        <returns><span data-ttu-id="d8b0f-329">Ein ganzzahliger numerischer Wert.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-329">An integral numeric value.</span></span> <span data-ttu-id="d8b0f-330">Das Ergebnis der Verschiebung des Bitmusters.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-330">The result of shifting the bit pattern.</span></span> <span data-ttu-id="d8b0f-331">Der Datentyp entspricht dem von <paramref name="Operand" />.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-331">The data type is the same as that of <paramref name="Operand" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8b0f-332">Diese Klasse unterstützt den Visual Basic-Compiler und ist nicht für die direkte Verwendung im Code vorgesehen.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-332">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/left-shift-operator.md"><span data-ttu-id="d8b0f-333">&lt;&lt;Operator (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="d8b0f-333">&lt;&lt; Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="LikeObject">
      <MemberSignature Language="C#" Value="public static object LikeObject (object Source, object Pattern, Microsoft.VisualBasic.CompareMethod CompareOption);" />
      <MemberSignature Language="ILAsm" Value=".method public static object LikeObject(object Source, object Pattern, valuetype Microsoft.VisualBasic.CompareMethod CompareOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.LikeObject(System.Object,System.Object,Microsoft.VisualBasic.CompareMethod)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LikeObject (Source As Object, Pattern As Object, CompareOption As CompareMethod) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ LikeObject(System::Object ^ Source, System::Object ^ Pattern, Microsoft::VisualBasic::CompareMethod CompareOption);" />
      <MemberSignature Language="F#" Value="static member LikeObject : obj * obj * Microsoft.VisualBasic.CompareMethod -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.LikeObject (Source, Pattern, CompareOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Source" Type="System.Object" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="Pattern" Type="System.Object" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="CompareOption" Type="Microsoft.VisualBasic.CompareMethod" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="Source"><span data-ttu-id="d8b0f-334">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-334">Required.</span></span> <span data-ttu-id="d8b0f-335">Beliebiger Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-335">Any expression.</span></span></param>
        <param name="Pattern"><span data-ttu-id="d8b0f-336">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-336">Required.</span></span> <span data-ttu-id="d8b0f-337">Ein beliebiger Zeichenfolgenausdruck, der den in Like-Operator beschriebenen Mustervergleichskonventionen entspricht.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-337">Any string expression conforming to the pattern-matching conventions described in Like Operator.</span></span></param>
        <param name="CompareOption"><span data-ttu-id="d8b0f-338">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-338">Required.</span></span> <span data-ttu-id="d8b0f-339">Ein <see cref="T:Microsoft.VisualBasic.CompareMethod" />-Wert, der angibt, dass bei der Operation ein Textvergleich oder ein binärer Vergleich durchgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-339">A <see cref="T:Microsoft.VisualBasic.CompareMethod" /> value that specifies that the operation use either text or binary comparison.</span></span></param>
        <summary><span data-ttu-id="d8b0f-340">Stellt den <see langword="Like" />-Operator in Visual Basic dar.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-340">Represents the Visual Basic <see langword="Like" /> operator.</span></span></summary>
        <returns><span data-ttu-id="d8b0f-341"><see langword="True" />, wenn die Zeichenfolgendarstellung des Werts in <paramref name="Source" /> dem in <paramref name="Pattern" /> enthaltenen Muster entspricht, andernfalls <see langword="False" />.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-341"><see langword="True" /> if the string representation of the value in <paramref name="Source" /> satisfies the pattern that is contained in <paramref name="Pattern" />; otherwise, <see langword="False" />.</span></span> <span data-ttu-id="d8b0f-342"><see langword="True" />, wenn sowohl <paramref name="Source" /> als auch <paramref name="Pattern" /> gleich <see langword="Nothing" /> sind.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-342"><see langword="True" /> if both <paramref name="Source" /> and <paramref name="Pattern" /> are <see langword="Nothing" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8b0f-343">Diese Klasse unterstützt den Visual Basic-Compiler und ist nicht für die direkte Verwendung im Code vorgesehen.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-343">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/like-operator.md"><span data-ttu-id="d8b0f-344">Like-Operator</span><span class="sxs-lookup"><span data-stu-id="d8b0f-344">Like Operator</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="LikeString">
      <MemberSignature Language="C#" Value="public static bool LikeString (string Source, string Pattern, Microsoft.VisualBasic.CompareMethod CompareOption);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool LikeString(string Source, string Pattern, valuetype Microsoft.VisualBasic.CompareMethod CompareOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.LikeString(System.String,System.String,Microsoft.VisualBasic.CompareMethod)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LikeString (Source As String, Pattern As String, CompareOption As CompareMethod) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool LikeString(System::String ^ Source, System::String ^ Pattern, Microsoft::VisualBasic::CompareMethod CompareOption);" />
      <MemberSignature Language="F#" Value="static member LikeString : string * string * Microsoft.VisualBasic.CompareMethod -&gt; bool" Usage="Microsoft.VisualBasic.CompilerServices.Operators.LikeString (Source, Pattern, CompareOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Source" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="Pattern" Type="System.String" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="CompareOption" Type="Microsoft.VisualBasic.CompareMethod" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="Source"><span data-ttu-id="d8b0f-345">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-345">Required.</span></span> <span data-ttu-id="d8b0f-346">Beliebiger <see langword="String" /> -Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-346">Any <see langword="String" /> expression.</span></span></param>
        <param name="Pattern"><span data-ttu-id="d8b0f-347">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-347">Required.</span></span> <span data-ttu-id="d8b0f-348">Ein beliebiger <see langword="String" />-Ausdruck, der den in Like-Operator beschriebenen Mustervergleichskonventionen entspricht.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-348">Any <see langword="String" /> expression conforming to the pattern-matching conventions described in Like Operator.</span></span></param>
        <param name="CompareOption"><span data-ttu-id="d8b0f-349">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-349">Required.</span></span> <span data-ttu-id="d8b0f-350">Ein <see cref="T:Microsoft.VisualBasic.CompareMethod" />-Wert, der angibt, dass bei der Operation ein Textvergleich oder ein binärer Vergleich durchgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-350">A <see cref="T:Microsoft.VisualBasic.CompareMethod" /> value that specifies that the operation use either text or binary comparison.</span></span></param>
        <summary><span data-ttu-id="d8b0f-351">Stellt den <see langword="Like" />-Operator in Visual Basic dar.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-351">Represents the Visual Basic <see langword="Like" /> operator.</span></span></summary>
        <returns><span data-ttu-id="d8b0f-352"><see langword="True" />, wenn der Wert in <paramref name="Source" /> dem in <paramref name="Pattern" /> enthaltenen Muster entspricht, andernfalls <see langword="False" />.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-352"><see langword="True" /> if the value in <paramref name="Source" /> satisfies the pattern that is contained in <paramref name="Pattern" />; otherwise, <see langword="False" />.</span></span> <span data-ttu-id="d8b0f-353"><see langword="True" />, wenn sowohl <paramref name="Source" /> als auch <paramref name="Pattern" /> leer sind.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-353"><see langword="True" /> if both <paramref name="Source" /> and <paramref name="Pattern" /> are empty.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8b0f-354">Diese Klasse unterstützt den Visual Basic-Compiler und ist nicht für die direkte Verwendung im Code vorgesehen.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-354">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/like-operator.md"><span data-ttu-id="d8b0f-355">Like-Operator</span><span class="sxs-lookup"><span data-stu-id="d8b0f-355">Like Operator</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ModObject">
      <MemberSignature Language="C#" Value="public static object ModObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object ModObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ModObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ModObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ModObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member ModObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.ModObject (Left, Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="d8b0f-356">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-356">Required.</span></span> <span data-ttu-id="d8b0f-357">Ein beliebiger numerischer Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-357">Any numeric expression.</span></span></param>
        <param name="Right"><span data-ttu-id="d8b0f-358">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-358">Required.</span></span> <span data-ttu-id="d8b0f-359">Ein beliebiger numerischer Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-359">Any numeric expression.</span></span></param>
        <summary><span data-ttu-id="d8b0f-360">Stellt den <see langword="Mod" />-Operator in Visual Basic dar.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-360">Represents the Visual Basic <see langword="Mod" /> operator.</span></span></summary>
        <returns><span data-ttu-id="d8b0f-361">Der Rest aus der Division von <paramref name="Left" /> durch <paramref name="Right" />.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-361">The remainder after <paramref name="Left" /> is divided by <paramref name="Right" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8b0f-362">Diese Klasse unterstützt den Visual Basic-Compiler und ist nicht für die direkte Verwendung im Code vorgesehen.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-362">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/mod-operator.md"><span data-ttu-id="d8b0f-363">Operator Mod(Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="d8b0f-363">Mod Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="MultiplyObject">
      <MemberSignature Language="C#" Value="public static object MultiplyObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object MultiplyObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.MultiplyObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MultiplyObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ MultiplyObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member MultiplyObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.MultiplyObject (Left, Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="d8b0f-364">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-364">Required.</span></span> <span data-ttu-id="d8b0f-365">Ein beliebiger numerischer Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-365">Any numeric expression.</span></span></param>
        <param name="Right"><span data-ttu-id="d8b0f-366">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-366">Required.</span></span> <span data-ttu-id="d8b0f-367">Ein beliebiger numerischer Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-367">Any numeric expression.</span></span></param>
        <summary><span data-ttu-id="d8b0f-368">Stellt den Visual Basic-Multiplikationsoperator (\*) dar.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-368">Represents the Visual Basic multiply (\*) operator.</span></span></summary>
        <returns><span data-ttu-id="d8b0f-369">Das Produkt von <paramref name="Left" /> und <paramref name="Right" />.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-369">The product of <paramref name="Left" /> and <paramref name="Right" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8b0f-370">Diese Klasse unterstützt den Visual Basic-Compiler und ist nicht für die direkte Verwendung im Code vorgesehen.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-370">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/multiplication-operator.md"><span data-ttu-id="d8b0f-371">\*-Operator (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="d8b0f-371">\* Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="NegateObject">
      <MemberSignature Language="C#" Value="public static object NegateObject (object Operand);" />
      <MemberSignature Language="ILAsm" Value=".method public static object NegateObject(object Operand) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.NegateObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NegateObject (Operand As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ NegateObject(System::Object ^ Operand);" />
      <MemberSignature Language="F#" Value="static member NegateObject : obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.NegateObject Operand" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Operand" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Operand"><span data-ttu-id="d8b0f-372">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-372">Required.</span></span> <span data-ttu-id="d8b0f-373">Ein beliebiger numerischer Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-373">Any numeric expression.</span></span></param>
        <summary><span data-ttu-id="d8b0f-374">Stellt den unären Subtraktionsoperator (–) in Visual Basic dar.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-374">Represents the Visual Basic unary minus (-) operator.</span></span></summary>
        <returns><span data-ttu-id="d8b0f-375">Der negative Wert von <paramref name="Operand" />.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-375">The negative value of <paramref name="Operand" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8b0f-376">Diese Klasse unterstützt den Visual Basic-Compiler und ist nicht für die direkte Verwendung im Code vorgesehen.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-376">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/subtraction-operator.md"><span data-ttu-id="d8b0f-377">--Operator (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="d8b0f-377">- Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="NotObject">
      <MemberSignature Language="C#" Value="public static object NotObject (object Operand);" />
      <MemberSignature Language="ILAsm" Value=".method public static object NotObject(object Operand) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.NotObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NotObject (Operand As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ NotObject(System::Object ^ Operand);" />
      <MemberSignature Language="F#" Value="static member NotObject : obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.NotObject Operand" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Operand" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Operand"><span data-ttu-id="d8b0f-378">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-378">Required.</span></span> <span data-ttu-id="d8b0f-379">Ein beliebiger <see langword="Boolean" />-Ausdruck oder numerischer Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-379">Any <see langword="Boolean" /> or numeric expression.</span></span></param>
        <summary><span data-ttu-id="d8b0f-380">Stellt den <see langword="Not" />-Operator in Visual Basic dar.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-380">Represents the Visual Basic <see langword="Not" /> operator.</span></span></summary>
        <returns><span data-ttu-id="d8b0f-381">Für <see langword="Boolean" />-Operationen: <see langword="False" />, wenn <paramref name="Operand" /> gleich <see langword="True" /> ist, andernfalls <see langword="True" />.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-381">For <see langword="Boolean" /> operations, <see langword="False" /> if <paramref name="Operand" /> is <see langword="True" />; otherwise, <see langword="True" />.</span></span> <span data-ttu-id="d8b0f-382">Für bitweise Operationen: 1, wenn <paramref name="Operand" /> gleich 0 ist, andernfalls 0.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-382">For bitwise operations, 1 if <paramref name="Operand" /> is 0; otherwise, 0.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8b0f-383">Diese Klasse unterstützt den Visual Basic-Compiler und ist nicht für die direkte Verwendung im Code vorgesehen.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-383">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/not-operator.md"><span data-ttu-id="d8b0f-384">Not-Operator (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="d8b0f-384">Not Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OrObject">
      <MemberSignature Language="C#" Value="public static object OrObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object OrObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.OrObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OrObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ OrObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member OrObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.OrObject (Left, Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="d8b0f-385">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-385">Required.</span></span> <span data-ttu-id="d8b0f-386">Ein beliebiger <see langword="Boolean" />-Ausdruck oder numerischer Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-386">Any <see langword="Boolean" /> or numeric expression.</span></span></param>
        <param name="Right"><span data-ttu-id="d8b0f-387">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-387">Required.</span></span> <span data-ttu-id="d8b0f-388">Ein beliebiger <see langword="Boolean" />-Ausdruck oder numerischer Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-388">Any <see langword="Boolean" /> or numeric expression.</span></span></param>
        <summary><span data-ttu-id="d8b0f-389">Stellt den <see langword="Or" />-Operator in Visual Basic dar.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-389">Represents the Visual Basic <see langword="Or" /> operator.</span></span></summary>
        <returns><span data-ttu-id="d8b0f-390">Für <see langword="Boolean" />-Operationen: <see langword="False" />, wenn sowohl <paramref name="Left" /> als auch <paramref name="Right" /> <see langword="False" /> ergeben, andernfalls <see langword="True" />.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-390">For <see langword="Boolean" /> operations, <see langword="False" /> if both <paramref name="Left" /> and <paramref name="Right" /> evaluate to <see langword="False" />; otherwise, <see langword="True" />.</span></span> <span data-ttu-id="d8b0f-391">Für bitweise Operationen: 0, wenn sowohl <paramref name="Left" />, als auch <paramref name="Right" /> 0 ergeben, andernfalls 1.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-391">For bitwise operations, 0 if both <paramref name="Left" /> and <paramref name="Right" /> evaluate to 0; otherwise, 1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8b0f-392">Diese Klasse unterstützt den Visual Basic-Compiler und ist nicht für die direkte Verwendung im Code vorgesehen.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-392">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/or-operator.md"><span data-ttu-id="d8b0f-393">Or-Operator (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="d8b0f-393">Or Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="PlusObject">
      <MemberSignature Language="C#" Value="public static object PlusObject (object Operand);" />
      <MemberSignature Language="ILAsm" Value=".method public static object PlusObject(object Operand) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.PlusObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PlusObject (Operand As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ PlusObject(System::Object ^ Operand);" />
      <MemberSignature Language="F#" Value="static member PlusObject : obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.PlusObject Operand" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Operand" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Operand"><span data-ttu-id="d8b0f-394">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-394">Required.</span></span> <span data-ttu-id="d8b0f-395">Ein beliebiger numerischer Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-395">Any numeric expression.</span></span></param>
        <summary><span data-ttu-id="d8b0f-396">Stellt den unären Additionsoperator (+) in Visual Basic dar.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-396">Represents the Visual Basic unary plus (+) operator.</span></span></summary>
        <returns><span data-ttu-id="d8b0f-397">Der Wert von <paramref name="Operand" />.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-397">The value of <paramref name="Operand" />.</span></span> <span data-ttu-id="d8b0f-398">(Das Vorzeichen von <paramref name="Operand" /> wird nicht geändert.)</span><span class="sxs-lookup"><span data-stu-id="d8b0f-398">(The sign of the <paramref name="Operand" /> is unchanged.)</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8b0f-399">Diese Klasse unterstützt den Visual Basic-Compiler und ist nicht für die direkte Verwendung im Code vorgesehen.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-399">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/addition-operator.md"><span data-ttu-id="d8b0f-400">+-Operator (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="d8b0f-400">+ Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="RightShiftObject">
      <MemberSignature Language="C#" Value="public static object RightShiftObject (object Operand, object Amount);" />
      <MemberSignature Language="ILAsm" Value=".method public static object RightShiftObject(object Operand, object Amount) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.RightShiftObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RightShiftObject (Operand As Object, Amount As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ RightShiftObject(System::Object ^ Operand, System::Object ^ Amount);" />
      <MemberSignature Language="F#" Value="static member RightShiftObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.RightShiftObject (Operand, Amount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Operand" Type="System.Object" />
        <Parameter Name="Amount" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Operand"><span data-ttu-id="d8b0f-401">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-401">Required.</span></span> <span data-ttu-id="d8b0f-402">Ein ganzzahliger numerischer Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-402">Integral numeric expression.</span></span> <span data-ttu-id="d8b0f-403">Das zu verschiebende Bitmuster.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-403">The bit pattern to be shifted.</span></span> <span data-ttu-id="d8b0f-404">Der Datentyp muss ein ganzzahliger Typ (<see langword="SByte" />, <see langword="Byte" />, <see langword="Short" />, <see langword="UShort" />, <see langword="Integer" />, <see langword="UInteger" />, <see langword="Long" /> oder <see langword="ULong" />) sein.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-404">The data type must be an integral type (<see langword="SByte" />, <see langword="Byte" />, <see langword="Short" />, <see langword="UShort" />, <see langword="Integer" />, <see langword="UInteger" />, <see langword="Long" />, or <see langword="ULong" />).</span></span></param>
        <param name="Amount"><span data-ttu-id="d8b0f-405">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-405">Required.</span></span> <span data-ttu-id="d8b0f-406">Ein numerischer Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-406">Numeric expression.</span></span> <span data-ttu-id="d8b0f-407">Die Anzahl der Bits, um die das Bitmuster verschoben werden soll.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-407">The number of bits to shift the bit pattern.</span></span> <span data-ttu-id="d8b0f-408">Der Datentyp muss <see langword="Integer" /> sein oder zu <see langword="Integer" /> erweitert werden.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-408">The data type must be <see langword="Integer" /> or widen to <see langword="Integer" />.</span></span></param>
        <summary><span data-ttu-id="d8b0f-409">Stellt den Operator für die Stellenverschiebung nach rechts (&gt;&gt;) in Visual Basic dar.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-409">Represents the Visual Basic arithmetic right shift (&gt;&gt;) operator.</span></span></summary>
        <returns><span data-ttu-id="d8b0f-410">Ein ganzzahliger numerischer Wert.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-410">An integral numeric value.</span></span> <span data-ttu-id="d8b0f-411">Das Ergebnis der Verschiebung des Bitmusters.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-411">The result of shifting the bit pattern.</span></span> <span data-ttu-id="d8b0f-412">Der Datentyp entspricht dem von <paramref name="Operand" />.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-412">The data type is the same as that of <paramref name="Operand" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8b0f-413">Diese Klasse unterstützt den Visual Basic-Compiler und ist nicht für die direkte Verwendung im Code vorgesehen.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-413">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/right-shift-operator.md"><span data-ttu-id="d8b0f-414">&gt;&gt;Operator (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="d8b0f-414">&gt;&gt; Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SubtractObject">
      <MemberSignature Language="C#" Value="public static object SubtractObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object SubtractObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.SubtractObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SubtractObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ SubtractObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member SubtractObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.SubtractObject (Left, Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="d8b0f-415">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-415">Required.</span></span> <span data-ttu-id="d8b0f-416">Ein beliebiger numerischer Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-416">Any numeric expression.</span></span></param>
        <param name="Right"><span data-ttu-id="d8b0f-417">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-417">Required.</span></span> <span data-ttu-id="d8b0f-418">Ein beliebiger numerischer Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-418">Any numeric expression.</span></span></param>
        <summary><span data-ttu-id="d8b0f-419">Stellt den Visual Basic-Subtraktionsoperator (–) dar.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-419">Represents the Visual Basic subtraction (-) operator.</span></span></summary>
        <returns><span data-ttu-id="d8b0f-420">Die Differenz zwischen <paramref name="Left" /> und <paramref name="Right" />.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-420">The difference between <paramref name="Left" /> and <paramref name="Right" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8b0f-421">Diese Klasse unterstützt den Visual Basic-Compiler und ist nicht für die direkte Verwendung im Code vorgesehen.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-421">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/subtraction-operator.md"><span data-ttu-id="d8b0f-422">--Operator (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="d8b0f-422">- Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="XorObject">
      <MemberSignature Language="C#" Value="public static object XorObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object XorObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.XorObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function XorObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ XorObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member XorObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.XorObject (Left, Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="d8b0f-423">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-423">Required.</span></span> <span data-ttu-id="d8b0f-424">Ein beliebiger <see langword="Boolean" />-Ausdruck oder numerischer Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-424">Any <see langword="Boolean" /> or numeric expression.</span></span></param>
        <param name="Right"><span data-ttu-id="d8b0f-425">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-425">Required.</span></span> <span data-ttu-id="d8b0f-426">Ein beliebiger <see langword="Boolean" />-Ausdruck oder numerischer Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-426">Any <see langword="Boolean" /> or numeric expression.</span></span></param>
        <summary><span data-ttu-id="d8b0f-427">Stellt den <see langword="Xor" />-Operator in Visual Basic dar.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-427">Represents the Visual Basic <see langword="Xor" /> operator.</span></span></summary>
        <returns><span data-ttu-id="d8b0f-428">Ein <see langword="Boolean" />-Wert oder ein numerischer Wert.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-428">A <see langword="Boolean" /> or numeric value.</span></span> <span data-ttu-id="d8b0f-429">Bei einem <see langword="Boolean" />-Vergleich ist der Rückgabewert der logische Ausschluss (exklusive logische Disjunktion) aus zwei <see langword="Boolean" />-Werten.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-429">For a <see langword="Boolean" /> comparison, the return value is the logical exclusion (exclusive logical disjunction) of two <see langword="Boolean" /> values.</span></span> <span data-ttu-id="d8b0f-430">Bei bitweisen (numerischen) Vorgängen ist der Rückgabewert ein numerischer Wert, der den bitweisen Ausschluss (exklusive bitweise Disjunktion) aus zwei numerischen Bitmustern darstellt.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-430">For bitwise (numeric) operations, the return value is a numeric value that represents the bitwise exclusion (exclusive bitwise disjunction) of two numeric bit patterns.</span></span> <span data-ttu-id="d8b0f-431">Weitere Informationen finden Sie unter <see href="https://docs.microsoft.com/dotnet/visual-basic/language-reference/operators/xor-operator">Xor Operator</see>.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-431">For more information, see <see href="https://docs.microsoft.com/dotnet/visual-basic/language-reference/operators/xor-operator">Xor Operator</see>.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8b0f-432">Diese Klasse unterstützt den Visual Basic-Compiler und ist nicht für die direkte Verwendung im Code vorgesehen.</span><span class="sxs-lookup"><span data-stu-id="d8b0f-432">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/xor-operator.md"><span data-ttu-id="d8b0f-433">Xor-Operator (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="d8b0f-433">Xor Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
