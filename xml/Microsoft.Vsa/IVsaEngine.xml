<Type Name="IVsaEngine" FullName="Microsoft.Vsa.IVsaEngine">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="05138c6f79dd1fe1364cd569ad648406c7131ff2" />
    <Meta Name="ms.sourcegitcommit" Value="1654a92bac785a221098172d9cacd405ceaac9b7" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="12/01/2018" />
    <Meta Name="ms.locfileid" Value="52739465" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IVsaEngine" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IVsaEngine" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Vsa.IVsaEngine" />
  <TypeSignature Language="VB.NET" Value="Public Interface IVsaEngine" />
  <TypeSignature Language="C++ CLI" Value="public interface class IVsaEngine" />
  <TypeSignature Language="F#" Value="type IVsaEngine = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Vsa</AssemblyName>
    <AssemblyVersion>7.0.5000.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.Obsolete("Use of this type is not recommended because it is being deprecated in Visual Studio 2005; there will be no replacement for this feature. Please see the ICodeCompiler documentation for additional help.")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.Runtime.InteropServices.Guid("E0C0FFE1-7eea-4ee2-b7e4-0080c7eb0b74")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="49abe-101">Definiert die Methoden und Eigenschaften, die eine Skript-Engine unterstützen muss, und stellt programmgesteuerten Zugriff auf die Skript-Engine bereit.</span>
      <span class="sxs-lookup">
        <span data-stu-id="49abe-101">Defines the methods and properties that a script engine must support and provides programmatic access to the script engine.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Assembly">
      <MemberSignature Language="C#" Value="public System.Reflection.Assembly Assembly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.Assembly Assembly" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Vsa.IVsaEngine.Assembly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Assembly As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::Assembly ^ Assembly { System::Reflection::Assembly ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Assembly : System.Reflection.Assembly" Usage="Microsoft.Vsa.IVsaEngine.Assembly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Vsa</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="49abe-102">Ruft einen Verweis auf die aktive Assembly ab, die von der <see cref="M:Microsoft.Vsa.IVsaEngine.Run" />-Methode generiert wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49abe-102">Gets a reference to the running assembly generated by the <see cref="M:Microsoft.Vsa.IVsaEngine.Run" /> method.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="49abe-103">Ein Verweis auf die Assembly, die momentan ausgeführt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49abe-103">Reference to the currently running assembly.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Vsa.IVsaEngine.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberSignature Language="F#" Value="abstract member Close : unit -&gt; unit" Usage="iVsaEngine.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Vsa</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="49abe-104">Schließt die Skript-Engine und gibt alle Ressourcen frei.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49abe-104">Closes the script engine and releases all resources.</span>
          </span>
          <span data-ttu-id="49abe-105">Wird die Skript-Engine momentan ausgeführt, wird zuerst die <see cref="M:Microsoft.Vsa.IVsaEngine.Reset" />-Methode aufgerufen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49abe-105">If the script engine is currently running, the <see cref="M:Microsoft.Vsa.IVsaEngine.Reset" /> method is called first.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Compile">
      <MemberSignature Language="C#" Value="public bool Compile ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Compile() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Vsa.IVsaEngine.Compile" />
      <MemberSignature Language="VB.NET" Value="Public Function Compile () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Compile();" />
      <MemberSignature Language="F#" Value="abstract member Compile : unit -&gt; bool" Usage="iVsaEngine.Compile " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Vsa</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="49abe-106">Bewirkt, dass die Skript-Engine den vorhandenen Quellzustand kompiliert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49abe-106">Causes the script engine to compile the existing source state.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="49abe-107">Gibt bei erfolgreicher Kompilierung TRUE zurück, wodurch angegeben ist, dass die <see cref="M:Microsoft.Vsa.IVsaEngine.Run" />-Methode für die neu kompilierte Assembly aufgerufen werden kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49abe-107">Returns TRUE on successful compilation, indicating that the <see cref="M:Microsoft.Vsa.IVsaEngine.Run" /> method can be called on the newly compiled assembly.</span>
          </span>
          <span data-ttu-id="49abe-108">Gibt FALSE zurück, wenn die Kompilierung fehlgeschlagen ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49abe-108">Returns FALSE if the compilation failed.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Evidence">
      <MemberSignature Language="C#" Value="public System.Security.Policy.Evidence Evidence { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Policy.Evidence Evidence" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Vsa.IVsaEngine.Evidence" />
      <MemberSignature Language="VB.NET" Value="Public Property Evidence As Evidence" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Policy::Evidence ^ Evidence { System::Security::Policy::Evidence ^ get(); void set(System::Security::Policy::Evidence ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Evidence : System.Security.Policy.Evidence with get, set" Usage="Microsoft.Vsa.IVsaEngine.Evidence" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Vsa</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Policy.Evidence</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="49abe-109">Stellt Beweise zum Überprüfen der Identität des aktuellen Objekts bereit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49abe-109">Provides evidence for the purpose of validating the current object's identity.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="49abe-110">Gibt einen Verweis auf ein Beweisobjekt zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49abe-110">Returns a reference to an Evidence object.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateDebugInfo">
      <MemberSignature Language="C#" Value="public bool GenerateDebugInfo { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool GenerateDebugInfo" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Vsa.IVsaEngine.GenerateDebugInfo" />
      <MemberSignature Language="VB.NET" Value="Public Property GenerateDebugInfo As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool GenerateDebugInfo { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.GenerateDebugInfo : bool with get, set" Usage="Microsoft.Vsa.IVsaEngine.GenerateDebugInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Vsa</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="49abe-111">Legt einen booleschen Wert fest, der angibt, ob die Skript-Engine beim Aufrufen der <see cref="M:Microsoft.Vsa.IVsaEngine.Compile" />-Methode Debuginformationen zurückgibt, oder ruft diesen Wert ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49abe-111">Sets or gets a Boolean value that signifies whether the script engine produces debug information when the <see cref="M:Microsoft.Vsa.IVsaEngine.Compile" /> method is called.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOption">
      <MemberSignature Language="C#" Value="public object GetOption (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetOption(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Vsa.IVsaEngine.GetOption(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOption (name As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetOption(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member GetOption : string -&gt; obj" Usage="iVsaEngine.GetOption name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Vsa</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="49abe-112">Der Name der abzurufenden Option.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49abe-112">The name of the option to get.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="49abe-113">Ruft implementierungsspezifische Optionen für eine Skript-Engine ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49abe-113">Gets implementation-specific options for a script engine.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="49abe-114">Gibt den Wert der Option zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49abe-114">Returns the value of the option.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InitNew">
      <MemberSignature Language="C#" Value="public void InitNew ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InitNew() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Vsa.IVsaEngine.InitNew" />
      <MemberSignature Language="VB.NET" Value="Public Sub InitNew ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InitNew();" />
      <MemberSignature Language="F#" Value="abstract member InitNew : unit -&gt; unit" Usage="iVsaEngine.InitNew " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Vsa</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="49abe-115">Stellt eine Benachrichtigung bereit, dass die Initialisierungsphase abgeschlossen und die Skript-Engine für das Hinzufügen von <see cref="T:Microsoft.Vsa.IVsaItem" />-Objekten vorbereitet ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49abe-115">Provides a notification that the initialization phase is complete and that the script engine is prepared for the addition of <see cref="T:Microsoft.Vsa.IVsaItem" /> objects.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCompiled">
      <MemberSignature Language="C#" Value="public bool IsCompiled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCompiled" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Vsa.IVsaEngine.IsCompiled" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCompiled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCompiled { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsCompiled : bool" Usage="Microsoft.Vsa.IVsaEngine.IsCompiled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Vsa</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>
          <span data-ttu-id="49abe-116">Gibt TRUE zurück, wenn für die Skript-Engine festgelegt ist, dass es Debuginformationen erstellen soll, wenn die <see cref="M:Microsoft.Vsa.IVsaEngine.Compile" />-Methode aufgerufen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49abe-116">Returns TRUE if the script engine is set to produce debug information when the <see cref="M:Microsoft.Vsa.IVsaEngine.Compile" /> method is called.</span>
          </span>
          <span data-ttu-id="49abe-117">Gibt FALSE zurück, wenn die Skript-Engine keine Debuginformationen zurückgibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49abe-117">Returns FALSE if the script engine will return no debug information.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDirty">
      <MemberSignature Language="C#" Value="public bool IsDirty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDirty" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Vsa.IVsaEngine.IsDirty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDirty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDirty { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDirty : bool" Usage="Microsoft.Vsa.IVsaEngine.IsDirty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Vsa</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="49abe-118">Ruft einen booleschen Wert ab, der angibt, ob sich der Ausgangszustand der Skript-Engine seit dem letzten Speichervorgang oder seit dem Zeitpunkt, zu dem die Skript-Engine ursprünglich geladen wurde, geändert hat.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49abe-118">Gets a Boolean value that reports whether the script engine's source state has changed since the last save operation, or since the script engine was originally loaded.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="49abe-119">Gibt True zurück, wenn das Skriptmodul als geändert (d. h., "dirty") gekennzeichnet ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49abe-119">Returns true if the script engine is marked as modified (that is, "dirty").</span>
          </span>
          <span data-ttu-id="49abe-120">Gibt false zurück, wenn das Skriptmodul nicht geändert wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49abe-120">Returns false if the script engine is not dirty.</span>
          </span>
          <span data-ttu-id="49abe-121">Der Standardwert für diese Eigenschaft ist "false".</span>
          <span class="sxs-lookup">
            <span data-stu-id="49abe-121">The default value for this property is false.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsRunning">
      <MemberSignature Language="C#" Value="public bool IsRunning { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRunning" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Vsa.IVsaEngine.IsRunning" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsRunning As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsRunning { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsRunning : bool" Usage="Microsoft.Vsa.IVsaEngine.IsRunning" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Vsa</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="49abe-122">Ruft einen booleschen Wert ab, der angibt, ob die Skript-Engine sich aktuell im Ausführungsmodus befindet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49abe-122">Gets a Boolean value that reports whether the script engine is currently in run mode.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="49abe-123">Gibt true zurück, wenn die Skript-Engine ausgeführt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49abe-123">Returns true if the script engine is running.</span>
          </span>
          <span data-ttu-id="49abe-124">Gibt false zurück, wenn das Skriptmodul nicht ausgeführt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49abe-124">Returns false if the script engine is not running.</span>
          </span>
          <span data-ttu-id="49abe-125">Der Standardwert für diese Eigenschaft ist "false"</span>
          <span class="sxs-lookup">
            <span data-stu-id="49abe-125">The default value for this property is false</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsValidIdentifier">
      <MemberSignature Language="C#" Value="public bool IsValidIdentifier (string identifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsValidIdentifier(string identifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Vsa.IVsaEngine.IsValidIdentifier(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsValidIdentifier (identifier As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsValidIdentifier(System::String ^ identifier);" />
      <MemberSignature Language="F#" Value="abstract member IsValidIdentifier : string -&gt; bool" Usage="iVsaEngine.IsValidIdentifier identifier" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Vsa</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identifier" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="identifier">
          <span data-ttu-id="49abe-126">Ein als Bezeichner bereitgestellter Zeichenfolgenwert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49abe-126">A string value provided as identifier.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="49abe-127">Überprüft, ob der angegebene Bezeichner für die Skript-Engine gültig ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49abe-127">Checks whether the supplied identifier is valid for the script engine.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="49abe-128">Gibt TRUE zurück, wenn der Bezeichner gültig ist; andernfalls wird FALSE zurückgegeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49abe-128">Returns true if the identifier is valid; otherwise, it returns false.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="public Microsoft.Vsa.IVsaItems Items { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Vsa.IVsaItems Items" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Vsa.IVsaEngine.Items" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Items As IVsaItems" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Vsa::IVsaItems ^ Items { Microsoft::Vsa::IVsaItems ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Items : Microsoft.Vsa.IVsaItems" Usage="Microsoft.Vsa.IVsaEngine.Items" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Vsa</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Vsa.IVsaItems</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="49abe-129">Ruft die <see cref="T:Microsoft.Vsa.IVsaItems" />-Sammlung von <see cref="T:Microsoft.Vsa.IVsaItem" />-Objekten ab, die allen Elementen entsprechen, die der Skript-Engine mit der CreateItem-Methode hinzugefügt wurden, einschließlich Codeelementen, Verweiselementen und globalen Elementen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49abe-129">Gets the <see cref="T:Microsoft.Vsa.IVsaItems" /> collection of <see cref="T:Microsoft.Vsa.IVsaItem" /> objects, which represent all items added to the script engine using the CreateItem method, including code items, reference items, and global items.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="49abe-130">Gibt eine <see cref="T:Microsoft.Vsa.IVsaItems" />-Auflistung zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49abe-130">Returns a <see cref="T:Microsoft.Vsa.IVsaItems" /> collection.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Language">
      <MemberSignature Language="C#" Value="public string Language { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Language" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Vsa.IVsaEngine.Language" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Language As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Language { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Language : string" Usage="Microsoft.Vsa.IVsaEngine.Language" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Vsa</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="49abe-131">Ruft den nicht lokalisierten Namen der Programmiersprache ab, die von der Skript-Engine unterstützt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49abe-131">Gets the non-localized name of the programming language supported by the script engine.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="49abe-132">Gibt den englischen Namen der Programmiersprache ab, die von der Skript-Engine unterstützt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49abe-132">Returns the English-language name of the programming language supported by the script engine.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LCID">
      <MemberSignature Language="C#" Value="public int LCID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LCID" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Vsa.IVsaEngine.LCID" />
      <MemberSignature Language="VB.NET" Value="Public Property LCID As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LCID { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.LCID : int with get, set" Usage="Microsoft.Vsa.IVsaEngine.LCID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Vsa</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="49abe-133">Ruft ab das geographische Gebietsschema und die Sprache ab, in der Ausnahmemeldungen ausgegeben werden sollen, oder legt diese fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49abe-133">Gets or sets the geographical locale and language in which to report exception messages.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="49abe-134">Gibt einen ganzzahligen Wert zurück, der das Gebietsschema darstellt, in dem Ausnahmemeldungen ausgegeben werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49abe-134">Returns an integer value representing the locale in which exception messages are to be reported.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadSourceState">
      <MemberSignature Language="C#" Value="public void LoadSourceState (Microsoft.Vsa.IVsaPersistSite site);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LoadSourceState(class Microsoft.Vsa.IVsaPersistSite site) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Vsa.IVsaEngine.LoadSourceState(Microsoft.Vsa.IVsaPersistSite)" />
      <MemberSignature Language="VB.NET" Value="Public Sub LoadSourceState (site As IVsaPersistSite)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LoadSourceState(Microsoft::Vsa::IVsaPersistSite ^ site);" />
      <MemberSignature Language="F#" Value="abstract member LoadSourceState : Microsoft.Vsa.IVsaPersistSite -&gt; unit" Usage="iVsaEngine.LoadSourceState site" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Vsa</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="site" Type="Microsoft.Vsa.IVsaPersistSite" />
      </Parameters>
      <Docs>
        <param name="site">
          <span data-ttu-id="49abe-135">Die Website, von der das angegebene Quellelement geladen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49abe-135">The site from which the specified source items is loaded.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="49abe-136">Weist die Skript-Engine an, Quellelemente aus deren Persistenzpunkt zu laden, wie durch das vom Host bereitgestellte Objekt angegeben, das die <see cref="T:Microsoft.Vsa.IVsaPersistSite" />-Schnittstelle implementiert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49abe-136">Directs the script engine to load source items from their point of persistence, as specified by the host-provided object that implements the <see cref="T:Microsoft.Vsa.IVsaPersistSite" /> interface.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Vsa.IVsaEngine.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="Microsoft.Vsa.IVsaEngine.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Vsa</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="49abe-137">Legt den Anzeigenamen der Skript-Engine fest oder ruft ihn ab. Dieser Name wird hauptsächlich dazu verwendet, die einzelnen Skript-Engines für Benutzer in einer gehosteten Umgebung identifizierbar zu machen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49abe-137">Sets or gets the display name of the script engine that is used primarily for identifying individual script engines to users in a hosted environment.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="49abe-138">Gibt den Wert der Name-Eigenschaft der Skript-Engine zurück. Der Wert kann eine leere Zeichenfolge sein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49abe-138">Returns the value of the script engine's Name property, which may be the empty string.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Vsa.IVsaEngine.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset();" />
      <MemberSignature Language="F#" Value="abstract member Reset : unit -&gt; unit" Usage="iVsaEngine.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Vsa</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="49abe-139">Beendet den Ausführungszustand der Skript-Engine und trennt automatisch gebundene Ereignishandler.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49abe-139">Removes the script engine from the running state and disconnects automatically bound event handlers.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RevokeCache">
      <MemberSignature Language="C#" Value="public void RevokeCache ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RevokeCache() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Vsa.IVsaEngine.RevokeCache" />
      <MemberSignature Language="VB.NET" Value="Public Sub RevokeCache ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RevokeCache();" />
      <MemberSignature Language="F#" Value="abstract member RevokeCache : unit -&gt; unit" Usage="iVsaEngine.RevokeCache " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Vsa</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="49abe-140">Macht die zwischengespeicherte Assembly für eine Skript-Engine ungültig, wie von seinem Stammmoniker angegeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49abe-140">Invalidates the cached assembly for a script engine, as specified by its root moniker.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RootMoniker">
      <MemberSignature Language="C#" Value="public string RootMoniker { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RootMoniker" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Vsa.IVsaEngine.RootMoniker" />
      <MemberSignature Language="VB.NET" Value="Public Property RootMoniker As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RootMoniker { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RootMoniker : string with get, set" Usage="Microsoft.Vsa.IVsaEngine.RootMoniker" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Vsa</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="49abe-141">Legt den Stammmoniker einer Skript-Engine fest oder ruft ihn ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49abe-141">Sets or gets a script engine's root moniker.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="49abe-142">Gibt den aktuellen Wert der Eigenschaft RootMoniker zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49abe-142">Returns the current value of the RootMoniker property.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RootNamespace">
      <MemberSignature Language="C#" Value="public string RootNamespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RootNamespace" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Vsa.IVsaEngine.RootNamespace" />
      <MemberSignature Language="VB.NET" Value="Public Property RootNamespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RootNamespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RootNamespace : string with get, set" Usage="Microsoft.Vsa.IVsaEngine.RootNamespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Vsa</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="49abe-143">Legt den von der Skript-Engine verwendeten Stammnamespace fest oder ruft ihn ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49abe-143">Sets or gets the root namespace used by the script engine.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="49abe-144">Gibt den Zeichenfolgenwert des Stammnamespace zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49abe-144">Returns the string value of the root namespace.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Run">
      <MemberSignature Language="C#" Value="public void Run ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Run() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Vsa.IVsaEngine.Run" />
      <MemberSignature Language="VB.NET" Value="Public Sub Run ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Run();" />
      <MemberSignature Language="F#" Value="abstract member Run : unit -&gt; unit" Usage="iVsaEngine.Run " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Vsa</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="49abe-145">Initiiert die Ausführung des kompilierten Codes in der Skript-Engine und bindet alle Ereignishandler.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49abe-145">Initiates execution of compiled code in the script engine and binds all event handlers.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveCompiledState">
      <MemberSignature Language="C#" Value="public void SaveCompiledState (out byte[] pe, out byte[] pdb);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SaveCompiledState([out] unsigned int8[]&amp; pe, [out] unsigned int8[]&amp; pdb) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Vsa.IVsaEngine.SaveCompiledState(System.Byte[]@,System.Byte[]@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveCompiledState (ByRef pe As Byte(), ByRef pdb As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SaveCompiledState([Runtime::InteropServices::Out] cli::array &lt;System::Byte&gt; ^ % pe, [Runtime::InteropServices::Out] cli::array &lt;System::Byte&gt; ^ % pdb);" />
      <MemberSignature Language="F#" Value="abstract member SaveCompiledState :  *  -&gt; unit" Usage="iVsaEngine.SaveCompiledState (pe, pdb)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Vsa</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pe" Type="System.Byte[]" RefType="out" />
        <Parameter Name="pdb" Type="System.Byte[]" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pe">
          <span data-ttu-id="49abe-146">Der kompilierte Zustand der Skript-Engine.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49abe-146">The compiled state of the script engine.</span>
          </span>
        </param>
        <param name="pdb">
          <span data-ttu-id="49abe-147">Gibt die Debuginformationen an, die in der PDB-Datei enthalten sind, die der PE-Datei (portierbare ausführbare Datei) entspricht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49abe-147">Specifies debugging information contained in the .PDB file corresponding to the PE (portable executable).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="49abe-148">Speichert den kompilierten Zustand der Skript-Engine und speichert optional auch Debuginformationen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49abe-148">Saves the compiled state of the script engine; optionally, it also saves debugging information.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveSourceState">
      <MemberSignature Language="C#" Value="public void SaveSourceState (Microsoft.Vsa.IVsaPersistSite site);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SaveSourceState(class Microsoft.Vsa.IVsaPersistSite site) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Vsa.IVsaEngine.SaveSourceState(Microsoft.Vsa.IVsaPersistSite)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveSourceState (site As IVsaPersistSite)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SaveSourceState(Microsoft::Vsa::IVsaPersistSite ^ site);" />
      <MemberSignature Language="F#" Value="abstract member SaveSourceState : Microsoft.Vsa.IVsaPersistSite -&gt; unit" Usage="iVsaEngine.SaveSourceState site" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Vsa</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="site" Type="Microsoft.Vsa.IVsaPersistSite" />
      </Parameters>
      <Docs>
        <param name="site">
          <span data-ttu-id="49abe-149">Die Website, die von der <see cref="T:Microsoft.Vsa.IVsaPersistSite" />-Schnittstelle eingerichtet wurde, in der der Quellzustand gespeichert ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49abe-149">The site established by the <see cref="T:Microsoft.Vsa.IVsaPersistSite" /> interface to which source state is saved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="49abe-150">Weist die Skript-Engine an, seinen Quellzustand für das angegebene <see cref="T:Microsoft.Vsa.IVsaPersistSite" />-Objekt beizubehalten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49abe-150">Directs the script engine to persist its source state to the specified <see cref="T:Microsoft.Vsa.IVsaPersistSite" /> object.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetOption">
      <MemberSignature Language="C#" Value="public void SetOption (string name, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetOption(string name, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Vsa.IVsaEngine.SetOption(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOption (name As String, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOption(System::String ^ name, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member SetOption : string * obj -&gt; unit" Usage="iVsaEngine.SetOption (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Vsa</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="49abe-151">Der Name der festzulegenden Option.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49abe-151">The name of the option to set.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="49abe-152">Der Wert für die Option, die festgelegt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49abe-152">The value for the option being set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="49abe-153">Legt implementierungsspezifische Optionen für eine Skript-Engine fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49abe-153">Sets implementation-specific options for a script engine.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Site">
      <MemberSignature Language="C#" Value="public Microsoft.Vsa.IVsaSite Site { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Vsa.IVsaSite Site" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Vsa.IVsaEngine.Site" />
      <MemberSignature Language="VB.NET" Value="Public Property Site As IVsaSite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Vsa::IVsaSite ^ Site { Microsoft::Vsa::IVsaSite ^ get(); void set(Microsoft::Vsa::IVsaSite ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Site : Microsoft.Vsa.IVsaSite with get, set" Usage="Microsoft.Vsa.IVsaEngine.Site" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Vsa</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Vsa.IVsaSite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="49abe-154">Legt das vom Host implementierte <see cref="T:Microsoft.Vsa.IVsaSite" />-Objekt fest, das von der Skript-Engine zum Kommunizieren mit dem Host verwendet wird, oder ruft es ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49abe-154">Sets or gets the host-implemented <see cref="T:Microsoft.Vsa.IVsaSite" /> object that is used by the script engine to communicate with the host.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="49abe-155">Gibt einen Verweis auf das aktuelle <see cref="T:Microsoft.Vsa.IVsaSite" />-Objekt zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49abe-155">Returns a reference to the current <see cref="T:Microsoft.Vsa.IVsaSite" /> object.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Version">
      <MemberSignature Language="C#" Value="public string Version { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Version" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Vsa.IVsaEngine.Version" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Version As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Version { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Version : string" Usage="Microsoft.Vsa.IVsaEngine.Version" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Vsa</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="49abe-156">Ruft die aktuelle Version des Sprachcompilers, die von der Skript-Engine unterstützt wird, im Format Major.Minor.Revision.Build ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49abe-156">Gets the current version of the language compiler supported by the script engine, in the form Major.Minor.Revision.Build.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="49abe-157">Ein Zeichenfolgenwert der aktuellen Version im Format Major.Minor.Revision.Build.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49abe-157">String value of the current version, in the format Major.Minor.Revision.Build.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>