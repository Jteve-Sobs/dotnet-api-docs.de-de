<Type Name="IVsaCodeItem" FullName="Microsoft.Vsa.IVsaCodeItem">
  <Metadata><Meta Name="ms.openlocfilehash" Value="77ff688e28e7f70d70b9a98d3b23d3fb27c73f18" /><Meta Name="ms.sourcegitcommit" Value="d8bd5d494445ce3fcad1321267cb87548d23a45b" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="12/15/2018" /><Meta Name="ms.locfileid" Value="53446134" /></Metadata><TypeSignature Language="C#" Value="public interface IVsaCodeItem : Microsoft.Vsa.IVsaItem" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IVsaCodeItem implements class Microsoft.Vsa.IVsaItem" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Vsa.IVsaCodeItem" />
  <TypeSignature Language="VB.NET" Value="Public Interface IVsaCodeItem&#xA;Implements IVsaItem" />
  <TypeSignature Language="C++ CLI" Value="public interface class IVsaCodeItem : Microsoft::Vsa::IVsaItem" />
  <TypeSignature Language="F#" Value="type IVsaCodeItem = interface&#xA;    interface IVsaItem" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Vsa</AssemblyName>
    <AssemblyVersion>7.0.5000.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Vsa.IVsaItem</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.Obsolete("Use of this type is not recommended because it is being deprecated in Visual Studio 2005; there will be no replacement for this feature. Please see the ICodeCompiler documentation for additional help.")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.Runtime.InteropServices.Guid("E0C0FFE7-7eea-4ee5-b7e4-0080c7eb0b74")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Stellt ein von der Skript-Engine zu kompilierendes Codeelement dar.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks  
Das angegebene Codeelement kann es sich um Klassen, Module oder andere Quelltext enthalten.

Es sind keine Berechtigungen zum Aufrufen der Member der Schnittstelle IVsaCodeItem erforderlich.

Die Skript-Engine implementiert diese Schnittstelle, um Codeelemente hinzuzufügen.

]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddEventSource">
      <MemberSignature Language="C#" Value="public void AddEventSource (string eventSourceName, string eventSourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddEventSource(string eventSourceName, string eventSourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Vsa.IVsaCodeItem.AddEventSource(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddEventSource (eventSourceName As String, eventSourceType As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddEventSource(System::String ^ eventSourceName, System::String ^ eventSourceType);" />
      <MemberSignature Language="F#" Value="abstract member AddEventSource : string * string -&gt; unit" Usage="iVsaCodeItem.AddEventSource (eventSourceName, eventSourceType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Vsa</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventSourceName" Type="System.String" />
        <Parameter Name="eventSourceType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventSourceName">Ein programmgesteuerter Name der Ereignisquelle.</param>
        <param name="eventSourceType">Der Typname der Ereignisquelle.</param>
        <summary>Fügt dem Codeelement eine Ereignisquelle hinzu. Das Codeelement verwendet die Ereignisquelle, um ein Ereignis mit der benannten Ereignisquelle zu verknüpfen, indem es die vom Host implementierte IVsaSite.GetEventSourceInstance-Methode aufruft.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
Die Skript-Engine verwendet die Informationen, die von der Methode AddEventSource bereitgestellte zum Verknüpfen von Ereignissen mit der benannten Ereignisquelle. Er erhält Ereignisquellen durch Aufrufen der IVsaSite.GetEventSourceInstance-Methode, die vom Host implementiert wird. Die AddEventSource-Methode erstellt eine Klasse, die von einem Host bereitgestellten Objekt ausgelösten Ereignisse behandelt.

> [!NOTE]
> Diese Methode unterstützt die nicht von der Skript-Engine für JScript .NET. In Fällen, in dem die Engine JScript .NET Verknüpfung eines Ereignisses müssen, müssen Sie ein globales Element verwenden. Anstatt Ereignisquellen und die JScript .NET-Engine verwendet die work Item Types "AppGlobal". Weitere Informationen finden Sie unter VsaItemType.


Innerhalb des Codeelements können Sie das Ereignisquellenobjekt Namen zugreifen, und sobald zugegriffen wird, können Sie Ereignishandler für das Objekt schreiben. Der Quelltyp des Ereignisses wird durch nicht verwaltete Hosts nicht als ein Typobjekt, um die Implementierung von Ereignisquellen zu vereinfachen, sondern als Zeichenfolge übergeben werden.

Der Compiler verwendet den EventSourceType-Parameter zum Binden an die Methoden, die durch den Typ bereitgestellt. Es wird auch später verwendet, wenn das Skriptmodul IVsaSite.GetEventSourceInstance-Methode zum Anfordern einer Instanz des Typ-Objekts aufruft.

Weitere Informationen über die Mechanismen zum Verknüpfen von Ereignissen für die Skript-Engine finden Sie unter IVsaSite.GetEventSourceInstance-Methode.

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendSourceText">
      <MemberSignature Language="C#" Value="public void AppendSourceText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AppendSourceText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Vsa.IVsaCodeItem.AppendSourceText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendSourceText (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendSourceText(System::String ^ text);" />
      <MemberSignature Language="F#" Value="abstract member AppendSourceText : string -&gt; unit" Usage="iVsaCodeItem.AppendSourceText text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Vsa</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">Der an das Codeelement anzufügende Text.</param>
        <summary>Fügt den angegebenen Text an das Ende des Codeelements an.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
Angefügte Quelltext wird keine Validierung durchgeführt. Aus diesem Grund werden Fehler auftreten, falls vorhanden, der beim nächsten Aufruf der IVsaEngine.Compile-Methode auftreten.

Der angefügte Quelltext wird als einzelne Zeichenfolge bereitgestellt. Sollte die Zeichenfolge erfordern keine Formatierung anwenden, müssen Sie dies selbst angeben.

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CodeDOM">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeObject CodeDOM { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.CodeObject CodeDOM" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Vsa.IVsaCodeItem.CodeDOM" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CodeDOM As CodeObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CodeDom::CodeObject ^ CodeDOM { System::CodeDom::CodeObject ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CodeDOM : System.CodeDom.CodeObject" Usage="Microsoft.Vsa.IVsaCodeItem.CodeDOM" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Vsa</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das im Codeelement dargestellte CodeDOM (Code Document Object Model) ab.</summary>
        <value>CodeDOM für das Codeelement.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
Die CodeDOM-Eigenschaft wird in der Regel als Teil der Kompilierungsschritt von der Skript-Engine generiert, sodass es nicht erst verfügbar, nachdem bei einem Aufruf an die IVsaEngine.Compile-Methode. Einige VSA-Implementierungen möglicherweise CodeDOM dynamisch, ohne eine explizite Kompilierungsschritt, bieten jedoch Hosts können nicht zu diesem Verhalten basieren. Dieses Verhalten unterstützt eine Skript-Engines, z. B. die JScript .NET Skript-Engine nicht.

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveEventSource">
      <MemberSignature Language="C#" Value="public void RemoveEventSource (string eventSourceName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveEventSource(string eventSourceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Vsa.IVsaCodeItem.RemoveEventSource(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveEventSource (eventSourceName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveEventSource(System::String ^ eventSourceName);" />
      <MemberSignature Language="F#" Value="abstract member RemoveEventSource : string -&gt; unit" Usage="iVsaCodeItem.RemoveEventSource eventSourceName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Vsa</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventSourceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventSourceName">Der programmgesteuerte Name der zu entfernenden Ereignisquelle.</param>
        <summary>Entfernt die angegebene Ereignisquelle aus dem Codeelement.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
Das Entfernen einer Ereignisquelle ist nicht des zugrunde liegenden-Ereignishandler aus dem Quelltext. Stattdessen lösen Ereignisse nicht mehr Benachrichtigungen an den Ereignishandler. Aus diesem Grund erhalten Sie einen Compilerfehler, wenn Sie eine Ereignisquelle löschen, aber lassen Sie die zugrunde liegende Funktion im Quellcode.

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceText">
      <MemberSignature Language="C#" Value="public string SourceText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SourceText" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Vsa.IVsaCodeItem.SourceText" />
      <MemberSignature Language="VB.NET" Value="Public Property SourceText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SourceText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SourceText : string with get, set" Usage="Microsoft.Vsa.IVsaCodeItem.SourceText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Vsa</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Legt den Text für ein angegebenes Codeelement (ggf. einschließlich automatisch generiertem Code) fest oder ruft diesen ab.</summary>
        <value>Der Quelltext des Codeelements.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
Wenn Sie diese Eigenschaft festlegen, wird der Text nicht zur Überprüfung unterzogen. Aus diesem Grund werden Fehler auftreten, falls vorhanden, der beim nächsten Aufruf der IVsaEngine.Compile-Methode auftreten.

Die Eigenschaft SourceText gibt zurück, der Quelltext in eine große Zeichenfolge, einschließlich Formatierungszeichen wie Wagenrücklauf.

Rufen Sie diese Eigenschaft die Engine muss nicht geschlossen werden. Zum Festlegen dieser Eigenschaft der Engine muss nicht geschlossen werden, und das Modul muss nicht ausgeführt werden.

]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>