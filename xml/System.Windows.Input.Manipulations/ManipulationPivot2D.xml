<Type Name="ManipulationPivot2D" FullName="System.Windows.Input.Manipulations.ManipulationPivot2D">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b73b35a578683c23b073335573a8f6346d64dee9" /><Meta Name="ms.sourcegitcommit" Value="f1d16425528e237257ca3b58eb49217a514849ea" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="04/24/2019" /><Meta Name="ms.locfileid" Value="64268069" /></Metadata><TypeSignature Language="C#" Value="public sealed class ManipulationPivot2D : System.Windows.Input.Manipulations.ManipulationParameters2D" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ManipulationPivot2D extends System.Windows.Input.Manipulations.ManipulationParameters2D" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.Manipulations.ManipulationPivot2D" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ManipulationPivot2D&#xA;Inherits ManipulationParameters2D" />
  <TypeSignature Language="C++ CLI" Value="public ref class ManipulationPivot2D sealed : System::Windows::Input::Manipulations::ManipulationParameters2D" />
  <TypeSignature Language="F#" Value="type ManipulationPivot2D = class&#xA;    inherit ManipulationParameters2D" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Input.Manipulations</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Input.Manipulations.ManipulationParameters2D</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt Pivotinformationen dar, die von einem Bearbeitungsprozessor für Drehungen von Einzelmanipulatoren verwendet werden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn eine <xref:System.Windows.Input.Manipulations.ManipulationPivot2D> Objekt zugewiesen ist die <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Pivot%2A> Eigenschaft eine <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D> Objekt, wie der Manipulationsprozessor rotierenden Änderungen auf ein Element berechnet, wenn das Element, indem Sie nur ein Manipulator manipuliert wird Auswirkungen auf. Wenn mehr als ein Manipulator während der Bearbeitung auf das Element angewendet wird, wird der PowerPivot-Eigenschaft ignoriert.  
  
 In einem Szenario mit einzelnen kann ein Element drehen, wie es gezogen wird. Die <xref:System.Windows.Input.Manipulations.ManipulationPivot2D.X%2A> und <xref:System.Windows.Input.Manipulations.ManipulationPivot2D.Y%2A> Eigenschaften der <xref:System.Windows.Input.Manipulations.ManipulationPivot2D> Objekt zu ermitteln, welcher Position das-Element rotiert werden, um, und die <xref:System.Windows.Input.Manipulations.ManipulationPivot2D.Radius%2A> -Eigenschaft wird von der Manipulationsprozessor verwendet, um das Ausmaß der rotierenden Änderungen zu berechnen.  
  
 Z. B. ist der einzelnen Manipulator am äußeren Rand des Pivotpunkts, werden die rotierenden Änderung auf das Element während des Ziehvorgangs ist ziemlich groß ist (je nach Größe des Elements). Wenn der Manipulator in der Nähe der Mitte des Pivotpunkts nur sehr wenig (sofern vorhanden) Drehung erfolgt ist.  
  
 In der Regel die <xref:System.Windows.Input.Manipulations.ManipulationPivot2D.X%2A> und <xref:System.Windows.Input.Manipulations.ManipulationPivot2D.Y%2A> Eigenschaften darstellen, die Mitte des Elements, das manipuliert wird, und die <xref:System.Windows.Input.Manipulations.ManipulationPivot2D.Radius%2A> Eigenschaft repräsentiert die Entfernung vom den Mittelpunkt des Elements, zu der am weitesten entfernten Rand.  
  
 Wie das Element verschoben wird, die <xref:System.Windows.Input.Manipulations.ManipulationPivot2D.X%2A> und <xref:System.Windows.Input.Manipulations.ManipulationPivot2D.Y%2A> Eigenschaften der <xref:System.Windows.Input.Manipulations.ManipulationPivot2D> Objekt müssen aktualisiert werden, damit weiterhin Drehung um die gewünschte Stelle auftritt.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt die <xref:System.Windows.Input.Manipulations.ManipulationPivot2D.X%2A> und <xref:System.Windows.Input.Manipulations.ManipulationPivot2D.Y%2A> Eigenschaften für eine Art Drehmoment werden entsprechend aktualisiert, die Mitte des Elements, das manipuliert wird.  
  
 [!code-csharp[ManipulationAPI#_ManipulationItem_ManipulationProcessor2D](~/samples/snippets/csharp/VS_Snippets_Misc/manipulationapi/cs/manipulationitem.xaml.cs#_manipulationitem_manipulationprocessor2d)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManipulationPivot2D ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Manipulations.ManipulationPivot2D.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManipulationPivot2D();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Input.Manipulations</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Input.Manipulations.ManipulationPivot2D" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Radius">
      <MemberSignature Language="C#" Value="public float Radius { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 Radius" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Manipulations.ManipulationPivot2D.Radius" />
      <MemberSignature Language="VB.NET" Value="Public Property Radius As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float Radius { float get(); void set(float value); };" />
      <MemberSignature Language="F#" Value="member this.Radius : single with get, set" Usage="System.Windows.Input.Manipulations.ManipulationPivot2D.Radius" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Input.Manipulations</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Abstand vom Pivotpunkt zum Rand des bearbeitbaren Bereichs ab.</summary>
        <value>Der Abstand vom Pivotpunkt zum Rand des bearbeitbaren Bereichs.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Input.Manipulations.ManipulationPivot2D.Radius%2A> -Eigenschaft muss eine positive, zeitlich begrenzten-Wert, der größer als oder gleich 1.0, ist sein oder `NaN`. `NaN` Gibt an, dass es keine Begrenzung. Der Standardwert ist `NaN`sein.  
  
 In der Praxis ist der Dreh-und Angelpunkt in der Regel den Mittelpunkt des Objekts, das manipuliert wird, und die <xref:System.Windows.Input.Manipulations.ManipulationPivot2D.Radius%2A> Wert entspricht dem Abstand vom Pivotpunkt an den am Rand des Objekts. Jedes Pivotieren, wird innerhalb der <xref:System.Windows.Input.Manipulations.ManipulationPivot2D.Radius%2A> Abstand gedämpft wird. Weitere Informationen finden Sie unter <xref:System.Windows.Input.Manipulations.ManipulationPivot2D>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="X">
      <MemberSignature Language="C#" Value="public float X { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 X" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Manipulations.ManipulationPivot2D.X" />
      <MemberSignature Language="VB.NET" Value="Public Property X As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float X { float get(); void set(float value); };" />
      <MemberSignature Language="F#" Value="member this.X : single with get, set" Usage="System.Windows.Input.Manipulations.ManipulationPivot2D.X" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Input.Manipulations</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die X-Position des Pivotobjekts ab oder legt sie fest.</summary>
        <value>Die X-Position des Pivotobjekts.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Input.Manipulations.ManipulationPivot2D.X%2A> -Eigenschaft muss ein endlicher Wert sein oder `NaN`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Y">
      <MemberSignature Language="C#" Value="public float Y { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 Y" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Manipulations.ManipulationPivot2D.Y" />
      <MemberSignature Language="VB.NET" Value="Public Property Y As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float Y { float get(); void set(float value); };" />
      <MemberSignature Language="F#" Value="member this.Y : single with get, set" Usage="System.Windows.Input.Manipulations.ManipulationPivot2D.Y" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Input.Manipulations</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Y-Position des Pivotobjekts ab oder legt sie fest.</summary>
        <value>Die Y-Position des Pivotobjekts.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Input.Manipulations.ManipulationPivot2D.Y%2A> -Eigenschaft muss ein endlicher Wert sein oder `NaN`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>