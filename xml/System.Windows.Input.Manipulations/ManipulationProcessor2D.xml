<Type Name="ManipulationProcessor2D" FullName="System.Windows.Input.Manipulations.ManipulationProcessor2D">
  <TypeSignature Language="C#" Value="public class ManipulationProcessor2D" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ManipulationProcessor2D extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.Manipulations.ManipulationProcessor2D" />
  <TypeSignature Language="VB.NET" Value="Public Class ManipulationProcessor2D" />
  <TypeSignature Language="C++ CLI" Value="public ref class ManipulationProcessor2D" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Input.Manipulations</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="7375d-101">Implementiert einen Setzer für Mehrfacheingabe und Einzelausgabe für zweidimensionale (2D) Transformationen in einem freigegebenen Koordinatenraum.</span><span class="sxs-lookup"><span data-stu-id="7375d-101">Implements a multiple-input, single-output compositor for two-dimensional (2-D) transformations in a shared coordinate space.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7375d-102">Ein <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D> Objekt eine Auflistung von Manipulatoren als ein zusammengesetztes Objekt behandelt.</span><span class="sxs-lookup"><span data-stu-id="7375d-102">A <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D> object treats a collection of manipulators as a composite object.</span></span> <span data-ttu-id="7375d-103">Die Anwendung wird dann über die Notwendigkeit der Überwachung und Verwaltung von einzelne Manipulatoren freigegeben.</span><span class="sxs-lookup"><span data-stu-id="7375d-103">Your application is then freed from the necessity of tracking and managing individual manipulators.</span></span>  
  
 <span data-ttu-id="7375d-104">Ein Manipulationsprozessor allein bewirkt nicht, ein Element zu verschieben.</span><span class="sxs-lookup"><span data-stu-id="7375d-104">A manipulation processor by itself does not cause an element to move.</span></span> <span data-ttu-id="7375d-105">Die Anwendung startet eine Manipulation nach Bedarf und empfängt dann Informationen von einem Manipulationsprozessor durch Überwachen der <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Started>, <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Delta> und <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Completed> Ereignisse.</span><span class="sxs-lookup"><span data-stu-id="7375d-105">Your application begins a manipulation as necessary, and then receives information from a manipulation processor by listening to the <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Started>, <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Delta> and <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Completed> events.</span></span> <span data-ttu-id="7375d-106">Die Werte, die über diese Ereignisse empfangen ermöglichen Ihnen, den Speicherort, Größe oder Ausrichtung eines Elements nach Bedarf ändern.</span><span class="sxs-lookup"><span data-stu-id="7375d-106">The values received via these events enable you to change the location, size or orientation of an element as needed.</span></span>  
  
 <span data-ttu-id="7375d-107">Sie informieren, dass ein Manipulationsprozessor, welche Typen von Manipulationen sind zulässig (übersetzen, zu skalieren, drehen) durch Festlegen der <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.SupportedManipulations%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="7375d-107">You inform a manipulation processor which types of manipulations are allowed (translate, scale, rotate) by setting the <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.SupportedManipulations%2A> property.</span></span> <span data-ttu-id="7375d-108">Sie können dann nicht bedingte Logik für die Transformation des Elements angeben, die bearbeitet wird.</span><span class="sxs-lookup"><span data-stu-id="7375d-108">You can then provide non-conditional logic to the transformation of the element that is being manipulated.</span></span> <span data-ttu-id="7375d-109">Anstelle von überprüfen, ob die Drehung vor dem Ändern der Ausrichtung eines Elements aktiviert ist, können Sie z. B. bedingungslos den Drehung Faktor der Manipulationsprozessor erhaltene anwenden. Rotation nicht aktiviert ist, meldet der Manipulationsprozessor, dass keine rotierenden Änderung aufgetreten ist.</span><span class="sxs-lookup"><span data-stu-id="7375d-109">For instance, instead of checking if rotation is enabled before changing the orientation of an element, you can unconditionally apply the rotation factor received from the manipulation processor; if rotation is not enabled, the manipulation processor will report that no rotational change has occurred.</span></span>  
  
 <span data-ttu-id="7375d-110">Wenn ein Element, das manipuliert wird freigegeben wird (alle Manipulatoren entfernt werden), können Sie trägheitsverarbeitung Unstimmigkeiten simulieren und dazu führen, dass das Element in der Lage-Bewegungen, die die verlangsamen, bevor graduell zu stoppen.</span><span class="sxs-lookup"><span data-stu-id="7375d-110">When an element that is being manipulated is released (all manipulators are removed), you can use inertia processing to simulate friction and cause the element to gradually slow its movements before coming to a stop.</span></span> <span data-ttu-id="7375d-111">Weitere Informationen finden Sie in den Ausführungen zur <xref:System.Windows.Input.Manipulations.InertiaProcessor2D>-Klasse.</span><span class="sxs-lookup"><span data-stu-id="7375d-111">For more information see the <xref:System.Windows.Input.Manipulations.InertiaProcessor2D> class.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Input.Manipulations</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7375d-112">Erstellt ein neues <see cref="T:System.Windows.Input.Manipulations.ManipulationProcessor2D" />-Objekt.</span><span class="sxs-lookup"><span data-stu-id="7375d-112">Creates a new <see cref="T:System.Windows.Input.Manipulations.ManipulationProcessor2D" /> object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManipulationProcessor2D (System.Windows.Input.Manipulations.Manipulations2D supportedManipulations);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Input.Manipulations.Manipulations2D supportedManipulations) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Manipulations.ManipulationProcessor2D.#ctor(System.Windows.Input.Manipulations.Manipulations2D)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (supportedManipulations As Manipulations2D)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManipulationProcessor2D(System::Windows::Input::Manipulations::Manipulations2D supportedManipulations);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Input.Manipulations</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="supportedManipulations" Type="System.Windows.Input.Manipulations.Manipulations2D" />
      </Parameters>
      <Docs>
        <param name="supportedManipulations"><span data-ttu-id="7375d-113">Der Anfangssatz unterstützter Bearbeitungen.</span><span class="sxs-lookup"><span data-stu-id="7375d-113">The initial set of supported manipulations.</span></span></param>
        <summary><span data-ttu-id="7375d-114">Erstellt ein neues <see cref="T:System.Windows.Input.Manipulations.ManipulationProcessor2D" />-Objekt.</span><span class="sxs-lookup"><span data-stu-id="7375d-114">Creates a new <see cref="T:System.Windows.Input.Manipulations.ManipulationProcessor2D" /> object.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="7375d-115">Der <paramref name="supportedManipulations" />-Parameter ist keine gültige Kombination von <see cref="T:System.Windows.Input.Manipulations.Manipulations2D" />-Enumerationswerten.</span><span class="sxs-lookup"><span data-stu-id="7375d-115">The <paramref name="supportedManipulations" /> parameter is not a valid combination of the <see cref="T:System.Windows.Input.Manipulations.Manipulations2D" /> enumeration values.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManipulationProcessor2D (System.Windows.Input.Manipulations.Manipulations2D supportedManipulations, System.Windows.Input.Manipulations.ManipulationPivot2D pivot);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Input.Manipulations.Manipulations2D supportedManipulations, class System.Windows.Input.Manipulations.ManipulationPivot2D pivot) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Manipulations.ManipulationProcessor2D.#ctor(System.Windows.Input.Manipulations.Manipulations2D,System.Windows.Input.Manipulations.ManipulationPivot2D)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (supportedManipulations As Manipulations2D, pivot As ManipulationPivot2D)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManipulationProcessor2D(System::Windows::Input::Manipulations::Manipulations2D supportedManipulations, System::Windows::Input::Manipulations::ManipulationPivot2D ^ pivot);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Input.Manipulations</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="supportedManipulations" Type="System.Windows.Input.Manipulations.Manipulations2D" />
        <Parameter Name="pivot" Type="System.Windows.Input.Manipulations.ManipulationPivot2D" />
      </Parameters>
      <Docs>
        <param name="supportedManipulations"><span data-ttu-id="7375d-116">Der Anfangssatz unterstützter Bearbeitungen.</span><span class="sxs-lookup"><span data-stu-id="7375d-116">The initial set of supported manipulations.</span></span></param>
        <param name="pivot"><span data-ttu-id="7375d-117">Pivotinformationen für Drehungen mit einzelnen Manipulatoren.</span><span class="sxs-lookup"><span data-stu-id="7375d-117">Pivot information for single-manipulator rotations.</span></span></param>
        <summary><span data-ttu-id="7375d-118">Erstellt ein neues <see cref="T:System.Windows.Input.Manipulations.ManipulationProcessor2D" />-Objekt.</span><span class="sxs-lookup"><span data-stu-id="7375d-118">Creates a new <see cref="T:System.Windows.Input.Manipulations.ManipulationProcessor2D" /> object.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="7375d-119">Der <paramref name="supportedManipulations" />-Parameter ist keine gültige Kombination von <see cref="T:System.Windows.Input.Manipulations.Manipulations2D" />-Enumerationswerten.</span><span class="sxs-lookup"><span data-stu-id="7375d-119">The <paramref name="supportedManipulations" /> parameter is not a valid combination of the <see cref="T:System.Windows.Input.Manipulations.Manipulations2D" /> enumeration values.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Completed">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.Manipulations.Manipulation2DCompletedEventArgs&gt; Completed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.Manipulations.Manipulation2DCompletedEventArgs&gt; Completed" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Manipulations.ManipulationProcessor2D.Completed" />
      <MemberSignature Language="VB.NET" Value="Public Event Completed As EventHandler(Of Manipulation2DCompletedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::Manipulations::Manipulation2DCompletedEventArgs ^&gt; ^ Completed;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Input.Manipulations</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.Manipulations.Manipulation2DCompletedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7375d-120">Tritt auf, wenn eine Änderung abgeschlossen wurde.</span><span class="sxs-lookup"><span data-stu-id="7375d-120">Occurs when a manipulation has competed.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompleteManipulation">
      <MemberSignature Language="C#" Value="public void CompleteManipulation (long timestamp);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CompleteManipulation(int64 timestamp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Manipulations.ManipulationProcessor2D.CompleteManipulation(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CompleteManipulation (timestamp As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CompleteManipulation(long timestamp);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Input.Manipulations</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timestamp" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="timestamp"><span data-ttu-id="7375d-121">Der Zeitstempel zur Fertigstellung der Änderung (in 100-Nanosekunden-Schritten).</span><span class="sxs-lookup"><span data-stu-id="7375d-121">The timestamp to complete the manipulation, in 100-nanosecond ticks.</span></span></param>
        <summary><span data-ttu-id="7375d-122">Erzwingt den Abschluss der aktuellen Bearbeitung und löst das <see cref="E:System.Windows.Input.Manipulations.ManipulationProcessor2D.Completed" />-Ereignis aus.</span><span class="sxs-lookup"><span data-stu-id="7375d-122">Forces the current manipulation to complete and raises the <see cref="E:System.Windows.Input.Manipulations.ManipulationProcessor2D.Completed" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="7375d-123">Der Timestamp ist weniger als der vorherige Timestamp für die aktuelle Manipulation.</span><span class="sxs-lookup"><span data-stu-id="7375d-123">The timestamp is less than the previous timestamp for the current manipulation.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Delta">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.Manipulations.Manipulation2DDeltaEventArgs&gt; Delta;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.Manipulations.Manipulation2DDeltaEventArgs&gt; Delta" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Manipulations.ManipulationProcessor2D.Delta" />
      <MemberSignature Language="VB.NET" Value="Public Event Delta As EventHandler(Of Manipulation2DDeltaEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::Manipulations::Manipulation2DDeltaEventArgs ^&gt; ^ Delta;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Input.Manipulations</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.Manipulations.Manipulation2DDeltaEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7375d-124">Tritt auf, wenn der Änderungsursprung geändert wurde, oder wenn Übersetzung, Skalierung oder Drehung ausgeführt wurden.</span><span class="sxs-lookup"><span data-stu-id="7375d-124">Occurs when the manipulation origin has changed or when translation, scaling, or rotation have occurred.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7375d-125">Die <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Delta?displayProperty=nameWithType> Ereignis und die <xref:System.Windows.Input.Manipulations.InertiaProcessor2D.Delta?displayProperty=nameWithType> Ereignis identisch sind.</span><span class="sxs-lookup"><span data-stu-id="7375d-125">The <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Delta?displayProperty=nameWithType> event and the <xref:System.Windows.Input.Manipulations.InertiaProcessor2D.Delta?displayProperty=nameWithType> event are the same type.</span></span> <span data-ttu-id="7375d-126">In der Regel können Sie den Ereignishandler für beide Ereignisse verwenden.</span><span class="sxs-lookup"><span data-stu-id="7375d-126">Typically, you can use the same event handler for both events.</span></span>  
  
   
  
## Examples  
 [!code-csharp[ManipulationAPI#_ManipulationItem_OnManipulationOrInertiaDelta](~/samples/snippets/csharp/VS_Snippets_Misc/manipulationapi/cs/manipulationitem.xaml.cs#_manipulationitem_onmanipulationorinertiadelta)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinimumScaleRotateRadius">
      <MemberSignature Language="C#" Value="public float MinimumScaleRotateRadius { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 MinimumScaleRotateRadius" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Manipulations.ManipulationProcessor2D.MinimumScaleRotateRadius" />
      <MemberSignature Language="VB.NET" Value="Public Property MinimumScaleRotateRadius As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float MinimumScaleRotateRadius { float get(); void set(float value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Input.Manipulations</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7375d-127">Ruft den minimalen Radius ab (in Koordinateneinheiten), der notwendig ist, damit ein Manipulator an Skalierungs- und Drehungsvorgängen beteiligt werden kann, oder legt ihn fest.</span><span class="sxs-lookup"><span data-stu-id="7375d-127">Gets or sets the minimum radius, in coordinate units, necessary for a manipulator to participate in scaling and rotation.</span></span></summary>
        <value><span data-ttu-id="7375d-128">Der minimale Radius (in Koordinateneinheiten), der notwendig ist, damit ein Manipulator an Skalierungs- und Drehungsvorgängen beteiligt werden kann.</span><span class="sxs-lookup"><span data-stu-id="7375d-128">The minimum radius, in coordinate units, necessary for a manipulator to participate in scaling and rotation.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7375d-129">Ist ein Manipulator sehr nahe Mittelpunkt der Masse Manipulatoren gerade verarbeitet wird, kann eine sehr kleine Manipulator Bewegung Drehung oder Skalierung eine sehr große verändert werden.</span><span class="sxs-lookup"><span data-stu-id="7375d-129">If a manipulator is extremely close to the center of mass of the manipulators currently being processed, a very small manipulator motion can become a very large change to rotation or scaling.</span></span> <span data-ttu-id="7375d-130">Um dieses Problem zu vermeiden, legen Sie <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.MinimumScaleRotateRadius%2A> etwas größer als 0 (null).</span><span class="sxs-lookup"><span data-stu-id="7375d-130">To avoid this problem, set <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.MinimumScaleRotateRadius%2A> to something greater than zero.</span></span> <span data-ttu-id="7375d-131">Jeder Manipulator, der näher als, Abstand und den Mittelpunkt der Masse in drehen und Skalieren von Operationen nicht eingeschlossen wird.</span><span class="sxs-lookup"><span data-stu-id="7375d-131">Any manipulator that is closer than that distance to the center of mass will not be included in rotation and scaling operations.</span></span>  
  
 <span data-ttu-id="7375d-132">Ein häufig angegebener Wert zu verwenden, sollte auf wahrscheinlich als Maßeinheit "versehentliche" Werkzeugbewegung(en) Manipulatoren basieren.</span><span class="sxs-lookup"><span data-stu-id="7375d-132">A typical value to use should be based on the likely magnitude of "accidental" motions of the manipulators.</span></span> <span data-ttu-id="7375d-133">Beispielsweise ist der Manipulator menschlichen Finger einen Bildschirm zu berühren, möglicherweise ein Radius, ein Zentimeter oder eine ähnliche entspricht geeignet sein.</span><span class="sxs-lookup"><span data-stu-id="7375d-133">For example, if the manipulator is a human finger touching a screen, a radius corresponding to a centimeter or so might be appropriate.</span></span>  
  
 <span data-ttu-id="7375d-134">Der Wert für <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.MinimumScaleRotateRadius%2A> muss eine endliche, nicht Negative Zahl sein.</span><span class="sxs-lookup"><span data-stu-id="7375d-134">The value for <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.MinimumScaleRotateRadius%2A> must be a finite, non-negative number.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Pivot">
      <MemberSignature Language="C#" Value="public System.Windows.Input.Manipulations.ManipulationPivot2D Pivot { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.Manipulations.ManipulationPivot2D Pivot" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Manipulations.ManipulationProcessor2D.Pivot" />
      <MemberSignature Language="VB.NET" Value="Public Property Pivot As ManipulationPivot2D" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::Manipulations::ManipulationPivot2D ^ Pivot { System::Windows::Input::Manipulations::ManipulationPivot2D ^ get(); void set(System::Windows::Input::Manipulations::ManipulationPivot2D ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Input.Manipulations</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.Manipulations.ManipulationPivot2D</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7375d-135">Ruft die Pivotinformationen für den Bearbeitungsprozessor ab oder legt sie fest.</span><span class="sxs-lookup"><span data-stu-id="7375d-135">Gets or sets the pivot information for the manipulation processor.</span></span></summary>
        <value><span data-ttu-id="7375d-136">Die Pivotinformationen für den Bearbeitungsprozessor.</span><span class="sxs-lookup"><span data-stu-id="7375d-136">The pivot information for the manipulation processor.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7375d-137">Die <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Pivot%2A> Eigenschaft wird verwendet, um Pivotinformationen zu einzelnen Manipulator Drehungen bereit.</span><span class="sxs-lookup"><span data-stu-id="7375d-137">The <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Pivot%2A> property is used to provide pivot information for single-manipulator rotations.</span></span> <span data-ttu-id="7375d-138">Wenn diese Eigenschaft auf null deaktiviert Single-Manipulator Drehungen.</span><span class="sxs-lookup"><span data-stu-id="7375d-138">Setting this property to null disables single-manipulator rotations.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessManipulators">
      <MemberSignature Language="C#" Value="public void ProcessManipulators (long timestamp, System.Collections.Generic.IEnumerable&lt;System.Windows.Input.Manipulations.Manipulator2D&gt; manipulators);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ProcessManipulators(int64 timestamp, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Windows.Input.Manipulations.Manipulator2D&gt; manipulators) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Manipulations.ManipulationProcessor2D.ProcessManipulators(System.Int64,System.Collections.Generic.IEnumerable{System.Windows.Input.Manipulations.Manipulator2D})" />
      <MemberSignature Language="VB.NET" Value="Public Sub ProcessManipulators (timestamp As Long, manipulators As IEnumerable(Of Manipulator2D))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ProcessManipulators(long timestamp, System::Collections::Generic::IEnumerable&lt;System::Windows::Input::Manipulations::Manipulator2D&gt; ^ manipulators);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Input.Manipulations</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timestamp" Type="System.Int64" />
        <Parameter Name="manipulators" Type="System.Collections.Generic.IEnumerable&lt;System.Windows.Input.Manipulations.Manipulator2D&gt;" />
      </Parameters>
      <Docs>
        <param name="timestamp"><span data-ttu-id="7375d-139">Der Zeitstempel für den Batch (in 100-Nanosekunden-Schritten).</span><span class="sxs-lookup"><span data-stu-id="7375d-139">The timestamp for the batch, in 100-nanosecond ticks.</span></span></param>
        <param name="manipulators"><span data-ttu-id="7375d-140">Der Satz von Manipulatoren, die sich derzeit im Bereich befinden.</span><span class="sxs-lookup"><span data-stu-id="7375d-140">The set of manipulators that are currently in scope.</span></span></param>
        <summary><span data-ttu-id="7375d-141">Verarbeitet die angegebenen Manipulatoren als einzelne Batchaktion.</span><span class="sxs-lookup"><span data-stu-id="7375d-141">Processes the specified manipulators as a single batch action.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7375d-142">Der Parameter `manipulators` eine leere Liste oder Null sein.</span><span class="sxs-lookup"><span data-stu-id="7375d-142">The parameter `manipulators` may be an empty list or null.</span></span> <span data-ttu-id="7375d-143">Wenn dies die Anzahl der Manipulatoren null erreicht, führt der <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Completed> Ereignis wird ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="7375d-143">If this results in the number of manipulators reaching zero, the <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Completed> event is raised.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7375d-144">Im folgenden Beispiel die <xref:System.Windows.UIElement.OnLostMouseCapture%2A> Methode von einer <xref:System.Windows.UIElement> Objekt überschrieben wird, rufen Sie auf der <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.ProcessManipulators%2A> Methode mit der Liste der <xref:System.Windows.Input.Manipulations.Manipulator2D> Objekte auf null festgelegt ist.</span><span class="sxs-lookup"><span data-stu-id="7375d-144">In the following example, the <xref:System.Windows.UIElement.OnLostMouseCapture%2A> method of a <xref:System.Windows.UIElement> object is overridden to call the <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.ProcessManipulators%2A> method with the list of <xref:System.Windows.Input.Manipulations.Manipulator2D> objects set to null.</span></span>  
  
 [!code-csharp[ManipulationAPI#_ManipulationItem_OnLostMouseCapture](~/samples/snippets/csharp/VS_Snippets_Misc/manipulationapi/cs/manipulationitem.xaml.cs#_manipulationitem_onlostmousecapture)]  
  
 [!code-csharp[ManipulationAPI#_ManipulationItem_Timestamp](~/samples/snippets/csharp/VS_Snippets_Misc/manipulationapi/cs/manipulationitem.xaml.cs#_manipulationitem_timestamp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="7375d-145">Der Timestamp ist weniger als der vorherige Timestamp für die aktuelle Manipulation.</span><span class="sxs-lookup"><span data-stu-id="7375d-145">The timestamp is less than the previous timestamp for the current manipulation.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetParameters">
      <MemberSignature Language="C#" Value="public void SetParameters (System.Windows.Input.Manipulations.ManipulationParameters2D parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetParameters(class System.Windows.Input.Manipulations.ManipulationParameters2D parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Manipulations.ManipulationProcessor2D.SetParameters(System.Windows.Input.Manipulations.ManipulationParameters2D)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetParameters (parameters As ManipulationParameters2D)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetParameters(System::Windows::Input::Manipulations::ManipulationParameters2D ^ parameters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Input.Manipulations</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameters" Type="System.Windows.Input.Manipulations.ManipulationParameters2D" />
      </Parameters>
      <Docs>
        <param name="parameters"><span data-ttu-id="7375d-146">Festzulegende Parameter.</span><span class="sxs-lookup"><span data-stu-id="7375d-146">Parameters to set.</span></span></param>
        <summary><span data-ttu-id="7375d-147">Legt Parameter für den Änderungsprozessor fest.</span><span class="sxs-lookup"><span data-stu-id="7375d-147">Sets parameters on the manipulation processor.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Started">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.Manipulations.Manipulation2DStartedEventArgs&gt; Started;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.Manipulations.Manipulation2DStartedEventArgs&gt; Started" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Manipulations.ManipulationProcessor2D.Started" />
      <MemberSignature Language="VB.NET" Value="Public Event Started As EventHandler(Of Manipulation2DStartedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::Manipulations::Manipulation2DStartedEventArgs ^&gt; ^ Started;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Input.Manipulations</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.Manipulations.Manipulation2DStartedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7375d-148">Tritt auf, wenn eine neue Änderung gestartet wurde.</span><span class="sxs-lookup"><span data-stu-id="7375d-148">Occurs when a new manipulation has started.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7375d-149">Im folgenden Beispiel wird ein Ereignishandler für das <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Started> Ereignis geprüft, wenn die trägheitsverarbeitung ausgeführt wird und wenn dies der Fall ist, hält er.</span><span class="sxs-lookup"><span data-stu-id="7375d-149">In the following example, an event handler for the <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Started> event checks to see if inertia processing is running and if so, stops it.</span></span>  
  
 [!code-csharp[ManipulationAPI#_ManipulationItem_OnManipulationStarted](~/samples/snippets/csharp/VS_Snippets_Misc/manipulationapi/cs/manipulationitem.xaml.cs#_manipulationitem_onmanipulationstarted)]  
  
 [!code-csharp[ManipulationAPI#_ManipulationItem_Timestamp](~/samples/snippets/csharp/VS_Snippets_Misc/manipulationapi/cs/manipulationitem.xaml.cs#_manipulationitem_timestamp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportedManipulations">
      <MemberSignature Language="C#" Value="public System.Windows.Input.Manipulations.Manipulations2D SupportedManipulations { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Input.Manipulations.Manipulations2D SupportedManipulations" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Manipulations.ManipulationProcessor2D.SupportedManipulations" />
      <MemberSignature Language="VB.NET" Value="Public Property SupportedManipulations As Manipulations2D" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::Manipulations::Manipulations2D SupportedManipulations { System::Windows::Input::Manipulations::Manipulations2D get(); void set(System::Windows::Input::Manipulations::Manipulations2D value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Input.Manipulations</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.Manipulations.Manipulations2D</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7375d-150">Ruft den aktuellen Satz der unterstützten Bearbeitungen ab oder legt ihn fest.</span><span class="sxs-lookup"><span data-stu-id="7375d-150">Gets or sets the current set of supported manipulations.</span></span></summary>
        <value><span data-ttu-id="7375d-151">Der aktuelle Satz unterstützter Änderungen.</span><span class="sxs-lookup"><span data-stu-id="7375d-151">The current set of supported manipulations.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="7375d-152">Die Eigenschaft versucht, einen Wert festzulegen, der keine gültige Kombination des <see cref="T:System.Windows.Input.Manipulations.Manipulations2D" /> ist.</span><span class="sxs-lookup"><span data-stu-id="7375d-152">The property tries to set a value that is not a valid combination of the <see cref="T:System.Windows.Input.Manipulations.Manipulations2D" /></span></span>  
  
 <span data-ttu-id="7375d-153">Enumerationswerte.</span><span class="sxs-lookup"><span data-stu-id="7375d-153">enumeration values.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>