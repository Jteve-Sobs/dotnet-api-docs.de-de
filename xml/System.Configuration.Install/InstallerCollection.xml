<Type Name="InstallerCollection" FullName="System.Configuration.Install.InstallerCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="cc8e91692c37c307f2ca0513d28ca577c733c596" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69379839" /></Metadata><TypeSignature Language="C#" Value="public class InstallerCollection : System.Collections.CollectionBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit InstallerCollection extends System.Collections.CollectionBase" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.Install.InstallerCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class InstallerCollection&#xA;Inherits CollectionBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class InstallerCollection : System::Collections::CollectionBase" />
  <TypeSignature Language="F#" Value="type InstallerCollection = class&#xA;    inherit CollectionBase" />
  <AssemblyInfo>
    <AssemblyName>System.Configuration.Install</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Collections.CollectionBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Enthält eine Auflistung der Installationsprogramme, die während einer Installation ausgeführt werden sollen.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Stellt die Methoden und Eigenschaften bereit, die Ihre Anwendung benötigt, um eine Auflistung <xref:System.Configuration.Install.Installer> von-Objekten zu verwalten. <xref:System.Configuration.Install.InstallerCollection>  
  
 Verwenden Sie eine der folgenden drei Methoden, um Installationsprogramme zur-Auflistung hinzuzufügen:  
  
-   Die <xref:System.Configuration.Install.InstallerCollection.Add%2A> -Methode fügt der Auflistung ein einzelnes Installationsprogramm hinzu.  
  
-   Die <xref:System.Configuration.Install.InstallerCollection.AddRange%2A> -Methoden fügen der-Auflistung mehrere Installationsprogramme hinzu.  
  
-   Die <xref:System.Configuration.Install.InstallerCollection.Insert%2A> -Methode und <xref:System.Configuration.Install.InstallerCollection.Item%2A> die-Eigenschaft, bei <xref:System.Configuration.Install.InstallerCollection> der es sich um den Indexer handelt, fügen jeweils ein einzelnes Installationsprogramm der Auflistung am angegebenen Index hinzu.  
  
 Entfernen Sie Installationsprogramme <xref:System.Configuration.Install.InstallerCollection.Remove%2A> über die-Methode. Überprüfen Sie mithilfe der <xref:System.Configuration.Install.InstallerCollection.Contains%2A> -Methode, ob ein Installer in der Auflistung verwendet wird. Suchen Sie mithilfe der <xref:System.Configuration.Install.InstallerCollection.IndexOf%2A> -Methode, wo sich ein Installer in der Auflistung befindet.  
  
 Die Installationsprogramme in einer Auflistung werden ausgeführt, wenn das Installationsprogramm, das die Auflistung enthält <xref:System.Configuration.Install.Installer.Parent%2A?displayProperty=nameWithType> , wie von der- <xref:System.Configuration.Install.Installer.Commit%2A>Eigenschaft angegeben, <xref:System.Configuration.Install.Installer.Uninstall%2A> Ihre <xref:System.Configuration.Install.Installer.Install%2A>Methoden,, <xref:System.Configuration.Install.Installer.Rollback%2A>oder aufruft.  
  
 Beispiele für die Verwendung einer Installerauflistung finden Sie unter den <xref:System.Configuration.Install.AssemblyInstaller> Klassen <xref:System.Configuration.Install.TransactedInstaller> und.  
  
   
  
## Examples  
 Im folgenden Beispiel wird die <xref:System.Configuration.Install.InstallerCollection.Add%2A> -Methode <xref:System.Configuration.Install.InstallerCollection> der-Klasse veranschaulicht. Dieses Beispiel bietet eine ähnliche Implementierung wie " [installutil. exe" (Installationstool)](~/docs/framework/tools/installutil-exe-installer-tool.md). Assemblys werden mit den Optionen installiert, die der jeweiligen Assembly vorangestellt sind Wenn für eine Assembly keine Option angegeben ist, werden die Optionen der vorherigen Assembly übernommen, wenn eine vorherige Assembly in der Liste vorhanden ist. Wenn die Option "/u" oder "/Uninstall" angegeben wird, werden die Assemblys deinstalliert. Wenn "/?" die Option "/Help" wird bereitgestellt, die Hilfe Informationen werden in der Konsole angezeigt.  
  
 [!code-cpp[InstallerCollection_Add#1](~/samples/snippets/cpp/VS_Snippets_CLR/InstallerCollection_Add/CPP/installercollection_add.cpp#1)]
 [!code-csharp[InstallerCollection_Add#1](~/samples/snippets/csharp/VS_Snippets_CLR/InstallerCollection_Add/CS/installercollection_add.cs#1)]
 [!code-vb[InstallerCollection_Add#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/InstallerCollection_Add/VB/installercollection_add.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Configuration.Install.Installer" />
    <altmember cref="M:System.Configuration.Install.Installer.Install(System.Collections.IDictionary)" />
    <altmember cref="M:System.Configuration.Install.Installer.Commit(System.Collections.IDictionary)" />
    <altmember cref="M:System.Configuration.Install.Installer.Rollback(System.Collections.IDictionary)" />
    <altmember cref="M:System.Configuration.Install.Installer.Uninstall(System.Collections.IDictionary)" />
    <altmember cref="T:System.Configuration.Install.AssemblyInstaller" />
    <altmember cref="T:System.Configuration.Install.TransactedInstaller" />
  </Docs>
  <Members>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public int Add (System.Configuration.Install.Installer value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Add(class System.Configuration.Install.Installer value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Install.InstallerCollection.Add(System.Configuration.Install.Installer)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (value As Installer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Add(System::Configuration::Install::Installer ^ value);" />
      <MemberSignature Language="F#" Value="member this.Add : System.Configuration.Install.Installer -&gt; int" Usage="installerCollection.Add value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Configuration.Install.Installer" />
      </Parameters>
      <Docs>
        <param name="value">Ein <see cref="T:System.Configuration.Install.Installer" />, der das Installationsprogramm darstellt, das der Auflistung hinzugefügt werden soll.</param>
        <summary>Fügt dieser Auflistung von Installationsprogrammen das angegebene Installationsprogramm hinzu.</summary>
        <returns>Der nullbasierte Index des hinzugefügten Installationsprogramms.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Configuration.Install.Installer.Parent%2A> -Eigenschaft des hinzu <xref:System.Configuration.Install.Installer> gefügten wird festgelegt <xref:System.Configuration.Install.Installer> , um das-Objekt mit dieser Auflistung anzugeben  
  
   
  
## Examples  
 Das folgende Beispiel ist ein Auszug aus dem Beispiel in der <xref:System.Configuration.Install.InstallerCollection> -Klasse.  
  
 [!code-cpp[InstallerCollection_Add#1](~/samples/snippets/cpp/VS_Snippets_CLR/InstallerCollection_Add/CPP/installercollection_add.cpp#1)]
 [!code-csharp[InstallerCollection_Add#1](~/samples/snippets/csharp/VS_Snippets_CLR/InstallerCollection_Add/CS/installercollection_add.cs#1)]
 [!code-vb[InstallerCollection_Add#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/InstallerCollection_Add/VB/installercollection_add.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.Install.InstallerCollection.AddRange(System.Configuration.Install.InstallerCollection)" />
        <altmember cref="M:System.Configuration.Install.InstallerCollection.Remove(System.Configuration.Install.Installer)" />
        <altmember cref="T:System.Configuration.Install.Installer" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AddRange">
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Fügt dieser Auflistung die angegebenen Installationsprogramme hinzu.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (System.Configuration.Install.Installer[] value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(class System.Configuration.Install.Installer[] value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Install.InstallerCollection.AddRange(System.Configuration.Install.Installer[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (value As Installer())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(cli::array &lt;System::Configuration::Install::Installer ^&gt; ^ value);" />
      <MemberSignature Language="F#" Value="member this.AddRange : System.Configuration.Install.Installer[] -&gt; unit" Usage="installerCollection.AddRange value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Configuration.Install.Installer[]" />
      </Parameters>
      <Docs>
        <param name="value">Ein Array vom Typ <see cref="T:System.Configuration.Install.Installer" />, das die Installationsprogramme darstellt, die dieser Auflistung hinzugefügt werden sollen.</param>
        <summary>Fügt dieser Auflistung das angegebene Array von Installationsprogrammen hinzu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Configuration.Install.Installer.Parent%2A> -Eigenschaft der einzelnen <xref:System.Configuration.Install.Installer> hinzugefügten wird <xref:System.Configuration.Install.Installer> auf den festgelegt, der diese Auflistung enthält.  
  
   
  
## Examples  
 Im folgenden Beispiel wird die <xref:System.Configuration.Install.InstallerCollection.AddRange%2A> -Methode <xref:System.Configuration.Install.InstallerCollection> der-Klasse veranschaulicht. Er erstellt <xref:System.Configuration.Install.AssemblyInstaller> -Instanzen `MyAssembly1.exe` für `MyAssembly2.exe`und. Diese Instanzen werden einem <xref:System.Configuration.Install.TransactedInstaller>hinzugefügt. Beim Installationsvorgang werden sowohl `MyAssembly1.exe` als `MyAssembly2.exe`auch installiert.  
  
 [!code-cpp[InstallerCollection_AddRange1#1](~/samples/snippets/cpp/VS_Snippets_CLR/InstallerCollection_AddRange1/CPP/installercollection_addrange1.cpp#1)]
 [!code-csharp[InstallerCollection_AddRange1#1](~/samples/snippets/csharp/VS_Snippets_CLR/InstallerCollection_AddRange1/CS/installercollection_addrange1.cs#1)]
 [!code-vb[InstallerCollection_AddRange1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/InstallerCollection_AddRange1/VB/installercollection_addrange1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.Install.InstallerCollection.Add(System.Configuration.Install.Installer)" />
        <altmember cref="M:System.Configuration.Install.InstallerCollection.Remove(System.Configuration.Install.Installer)" />
        <altmember cref="T:System.Configuration.Install.Installer" />
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (System.Configuration.Install.InstallerCollection value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(class System.Configuration.Install.InstallerCollection value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Install.InstallerCollection.AddRange(System.Configuration.Install.InstallerCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (value As InstallerCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(System::Configuration::Install::InstallerCollection ^ value);" />
      <MemberSignature Language="F#" Value="member this.AddRange : System.Configuration.Install.InstallerCollection -&gt; unit" Usage="installerCollection.AddRange value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Configuration.Install.InstallerCollection" />
      </Parameters>
      <Docs>
        <param name="value">Eine <see cref="T:System.Configuration.Install.InstallerCollection" />, die die Installationsprogramme darstellt, die der Auflistung hinzugefügt werden sollen.</param>
        <summary>Fügt dieser Auflistung die angegebene Auflistung von Installationsprogrammen hinzu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Configuration.Install.Installer.Parent%2A> -Eigenschaft der einzelnen <xref:System.Configuration.Install.Installer> hinzugefügten wird <xref:System.Configuration.Install.Installer> auf den festgelegt, der diese Auflistung enthält.  
  
   
  
## Examples  
 Im folgenden Beispiel werden die <xref:System.Configuration.Install.InstallerCollection.Insert%2A> -Methode und <xref:System.Configuration.Install.InstallerCollection.AddRange%2A> die-Methoden <xref:System.Configuration.Install.InstallerCollection> der-Klasse veranschaulicht. Er erstellt <xref:System.Configuration.Install.AssemblyInstaller> -Instanzen `MyAssembly1.exe` für `MyAssembly2.exe`und. Diese Instanzen von <xref:System.Configuration.Install.AssemblyInstaller> werden einem <xref:System.Configuration.Install.TransactedInstaller> namens `myTransactedInstaller1`hinzugefügt. Die Installationsprogramme in `myTransactedInstaller1` werden in eine andere <xref:System.Configuration.Install.TransactedInstaller> namens `myTransactedInstaller2`kopiert. Beim Installationsvorgang werden sowohl `MyAssembly1.exe` als `MyAssembly2.exe`auch installiert.  
  
 [!code-cpp[InstallerCollection_Insert#1](~/samples/snippets/cpp/VS_Snippets_CLR/InstallerCollection_Insert/CPP/installercollection_insert.cpp#1)]
 [!code-csharp[InstallerCollection_Insert#1](~/samples/snippets/csharp/VS_Snippets_CLR/InstallerCollection_Insert/CS/installercollection_insert.cs#1)]
 [!code-vb[InstallerCollection_Insert#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/InstallerCollection_Insert/VB/installercollection_insert.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.Install.InstallerCollection.Add(System.Configuration.Install.Installer)" />
        <altmember cref="M:System.Configuration.Install.InstallerCollection.Remove(System.Configuration.Install.Installer)" />
        <altmember cref="T:System.Configuration.Install.Installer" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Configuration.Install.Installer value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.Configuration.Install.Installer value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Install.InstallerCollection.Contains(System.Configuration.Install.Installer)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (value As Installer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::Configuration::Install::Installer ^ value);" />
      <MemberSignature Language="F#" Value="member this.Contains : System.Configuration.Install.Installer -&gt; bool" Usage="installerCollection.Contains value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Configuration.Install.Installer" />
      </Parameters>
      <Docs>
        <param name="value">Ein <see cref="T:System.Configuration.Install.Installer" />, der das zu suchende Installationsprogramm darstellt.</param>
        <summary>Bestimmt, ob das angegebene Installationsprogramm in der Auflistung enthalten ist.</summary>
        <returns><see langword="true" />, wenn sich die angegebenen Installationsprogramme in dieser Auflistung befinden, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Beispiel werden die <xref:System.Configuration.Install.InstallerCollection.Remove%2A> -Methode <xref:System.Configuration.Install.InstallerCollection.Contains%2A> , die- <xref:System.Configuration.Install.InstallerCollection.IndexOf%2A> Methode und die <xref:System.Configuration.Install.InstallerCollection> -Methode der-Klasse veranschaulicht. Er erstellt <xref:System.Configuration.Install.AssemblyInstaller> -Instanzen `MyAssembly1.exe` für `MyAssembly2.exe`und. Diese Instanzen werden einem <xref:System.Configuration.Install.TransactedInstaller>hinzugefügt. `MyAssembly2.exe`wird dann aus <xref:System.Configuration.Install.InstallerCollection> der <xref:System.Configuration.Install.TransactedInstaller>der entfernt. Der Installationsvorgang wird nur `MyAssembly1.exe`gestartet und installiert.  
  
 [!code-cpp[InstallerCollection_Remove#1](~/samples/snippets/cpp/VS_Snippets_CLR/InstallerCollection_Remove/CPP/installercollection_remove.cpp#1)]
 [!code-csharp[InstallerCollection_Remove#1](~/samples/snippets/csharp/VS_Snippets_CLR/InstallerCollection_Remove/CS/installercollection_remove.cs#1)]
 [!code-vb[InstallerCollection_Remove#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/InstallerCollection_Remove/VB/installercollection_remove.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.Install.InstallerCollection.Add(System.Configuration.Install.Installer)" />
        <altmember cref="M:System.Configuration.Install.InstallerCollection.AddRange(System.Configuration.Install.InstallerCollection)" />
        <altmember cref="M:System.Configuration.Install.InstallerCollection.Remove(System.Configuration.Install.Installer)" />
        <altmember cref="T:System.Configuration.Install.Installer" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Configuration.Install.Installer[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.Configuration.Install.Installer[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Install.InstallerCollection.CopyTo(System.Configuration.Install.Installer[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As Installer(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;System::Configuration::Install::Installer ^&gt; ^ array, int index);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : System.Configuration.Install.Installer[] * int -&gt; unit" Usage="installerCollection.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Configuration.Install.Installer[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">Das Array, in das kopiert werden soll.</param>
        <param name="index">Der Index des Arrays, an dem die Auflistung eingefügt werden soll.</param>
        <summary>Kopiert die Elemente aus der Sammlung in ein Array, beginnend am angegebenen Index.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Beispiel wird die <xref:System.Configuration.Install.InstallerCollection.CopyTo%2A> -Methode <xref:System.Configuration.Install.InstallerCollection> der-Klasse veranschaulicht. Er erstellt <xref:System.Configuration.Install.AssemblyInstaller> -Instanzen `MyAssembly1.exe` für `MyAssembly2.exe`und. Diese Instanzen werden einem <xref:System.Configuration.Install.TransactedInstaller>hinzugefügt. Die Namen der zu installierenden Assemblys werden in der Konsole angezeigt. Beim Installationsvorgang werden sowohl `MyAssembly1.exe` als `MyAssembly2.exe`auch installiert.  
  
 [!code-cpp[InstallerCollection_CopyTo#1](~/samples/snippets/cpp/VS_Snippets_CLR/InstallerCollection_CopyTo/CPP/installercollection_copyto.cpp#1)]
 [!code-csharp[InstallerCollection_CopyTo#1](~/samples/snippets/csharp/VS_Snippets_CLR/InstallerCollection_CopyTo/CS/installercollection_copyto.cs#1)]
 [!code-vb[InstallerCollection_CopyTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/InstallerCollection_CopyTo/VB/installercollection_copyto.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.Configuration.Install.Installer value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.Configuration.Install.Installer value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Install.InstallerCollection.IndexOf(System.Configuration.Install.Installer)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (value As Installer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::Configuration::Install::Installer ^ value);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : System.Configuration.Install.Installer -&gt; int" Usage="installerCollection.IndexOf value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Configuration.Install.Installer" />
      </Parameters>
      <Docs>
        <param name="value">Die <see cref="T:System.Configuration.Install.Installer" />, die in der Auflistung gesucht werden soll.</param>
        <summary>Bestimmt den Index eines bestimmten Installationsprogramms in der Auflistung.</summary>
        <returns>Der nullbasierte Index des Installationsprogramms in der Auflistung.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Das folgende Beispiel ist das gleiche wie das Beispiel in der <xref:System.Configuration.Install.InstallerCollection.Contains%2A> -Methode. Weitere Informationen zu diesem Beispiel finden Sie im Beispiel Abschnitt der <xref:System.Configuration.Install.InstallerCollection.Contains%2A> -Methode.  
  
 [!code-cpp[InstallerCollection_Remove#1](~/samples/snippets/cpp/VS_Snippets_CLR/InstallerCollection_Remove/CPP/installercollection_remove.cpp#1)]
 [!code-csharp[InstallerCollection_Remove#1](~/samples/snippets/csharp/VS_Snippets_CLR/InstallerCollection_Remove/CS/installercollection_remove.cs#1)]
 [!code-vb[InstallerCollection_Remove#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/InstallerCollection_Remove/VB/installercollection_remove.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, System.Configuration.Install.Installer value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(int32 index, class System.Configuration.Install.Installer value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Install.InstallerCollection.Insert(System.Int32,System.Configuration.Install.Installer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (index As Integer, value As Installer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(int index, System::Configuration::Install::Installer ^ value);" />
      <MemberSignature Language="F#" Value="member this.Insert : int * System.Configuration.Install.Installer -&gt; unit" Usage="installerCollection.Insert (index, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Configuration.Install.Installer" />
      </Parameters>
      <Docs>
        <param name="index">Der nullbasierte Index, an dem das Installationsprogramm eingefügt werden soll.</param>
        <param name="value">Der einzufügende <see cref="T:System.Configuration.Install.Installer" />.</param>
        <summary>Fügt das angegebene Installationsprogramm am angegebenen Index in die Auflistung ein.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Das folgende Beispiel ist das gleiche wie das Beispiel in der <xref:System.Configuration.Install.InstallerCollection.AddRange%2A> -Methode. Weitere Informationen zu diesem Beispiel finden Sie im Beispiel Abschnitt der <xref:System.Configuration.Install.InstallerCollection.AddRange%2A> -Methode.  
  
 [!code-cpp[InstallerCollection_Insert#1](~/samples/snippets/cpp/VS_Snippets_CLR/InstallerCollection_Insert/CPP/installercollection_insert.cpp#1)]
 [!code-csharp[InstallerCollection_Insert#1](~/samples/snippets/csharp/VS_Snippets_CLR/InstallerCollection_Insert/CS/installercollection_insert.cs#1)]
 [!code-vb[InstallerCollection_Insert#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/InstallerCollection_Insert/VB/installercollection_insert.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Configuration.Install.Installer this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.Install.Installer Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.Install.InstallerCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(index As Integer) As Installer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Configuration::Install::Installer ^ default[int] { System::Configuration::Install::Installer ^ get(int index); void set(int index, System::Configuration::Install::Installer ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : System.Configuration.Install.Installer with get, set" Usage="System.Configuration.Install.InstallerCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Install.Installer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Der nullbasierte Index des Installationsprogramms, das abgerufen oder festgelegt werden soll.</param>
        <summary>Ruft ein Installationsprogramm am angegebenen Index ab oder legt dieses fest.</summary>
        <value>Ein <see cref="T:System.Configuration.Install.Installer" />, der das Installationsprogramm am angegebenen Index darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn das angegebene <xref:System.Configuration.Install.Installer> in der <xref:System.Configuration.Install.InstallerCollection>eingefügt wird <xref:System.Configuration.Install.Installer> , wird <xref:System.Configuration.Install.Installer.Parent%2A> die-Eigenschaft der auf den <xref:System.Configuration.Install.Installer> festgelegt, der die Auflistung enthält.  
  
   
  
## Examples  
 Im folgenden Beispiel werden <xref:System.Configuration.Install.AssemblyInstaller> -Instanzen `MyAssembly1.exe` für `MyAssembly2.exe`und erstellt. Diese Instanzen werden einem <xref:System.Configuration.Install.TransactedInstaller>hinzugefügt. Die Namen aller Assemblys, die installiert werden sollen, werden in der Konsole angezeigt. Beim Installationsvorgang werden sowohl `MyAssembly1.exe` als `MyAssembly2.exe`auch installiert.  
  
 [!code-cpp[InstallerCollection_Item#1](~/samples/snippets/cpp/VS_Snippets_CLR/InstallerCollection_Item/CPP/installercollection_item.cpp#1)]
 [!code-csharp[InstallerCollection_Item#1](~/samples/snippets/csharp/VS_Snippets_CLR/InstallerCollection_Item/CS/installercollection_item.cs#1)]
 [!code-vb[InstallerCollection_Item#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/InstallerCollection_Item/VB/installercollection_item.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Configuration.Install.Installer" />
      </Docs>
    </Member>
    <Member MemberName="OnInsert">
      <MemberSignature Language="C#" Value="protected override void OnInsert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnInsert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Install.InstallerCollection.OnInsert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnInsert (index As Integer, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnInsert(int index, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.OnInsert : int * obj -&gt; unit" Usage="installerCollection.OnInsert (index, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">Der nullbasierte Index, an dem der <paramref name="value" /> eingefügt werden soll.</param>
        <param name="value">Der neue Wert des Installationsprogramms am <paramref name="index" />.</param>
        <summary>Führt vor dem Einfügen eines neuen Installationsprogramms in die Auflistung zusätzliche benutzerdefinierte Prozesse aus.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnRemove">
      <MemberSignature Language="C#" Value="protected override void OnRemove (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnRemove(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Install.InstallerCollection.OnRemove(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnRemove (index As Integer, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnRemove(int index, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.OnRemove : int * obj -&gt; unit" Usage="installerCollection.OnRemove (index, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">Der nullbasierte Index, an dem sich <paramref name="value" /> befindet.</param>
        <param name="value">Das aus <paramref name="index" /> zu entfernende Installationsprogramm.</param>
        <summary>Führt zusätzliche benutzerdefinierte Prozesse aus, bevor ein Installationsprogramm aus der Auflistung entfernt wird.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSet">
      <MemberSignature Language="C#" Value="protected override void OnSet (int index, object oldValue, object newValue);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnSet(int32 index, object oldValue, object newValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Install.InstallerCollection.OnSet(System.Int32,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnSet (index As Integer, oldValue As Object, newValue As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnSet(int index, System::Object ^ oldValue, System::Object ^ newValue);" />
      <MemberSignature Language="F#" Value="override this.OnSet : int * obj * obj -&gt; unit" Usage="installerCollection.OnSet (index, oldValue, newValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="oldValue" Type="System.Object" />
        <Parameter Name="newValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">Der nullbasierte Index, an dem <paramref name="oldValue" /> ersetzt werden soll.</param>
        <param name="oldValue">Der Wert, der durch <paramref name="newValue" /> ersetzt werden soll.</param>
        <param name="newValue">Der neue Wert des Installationsprogramms am <paramref name="index" />.</param>
        <summary>Führt zusätzliche benutzerdefinierte Prozesse aus, bevor ein vorhandenes Installationsprogramm auf einen neuen Wert festgelegt wird.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Configuration.Install.Installer value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Configuration.Install.Installer value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Install.InstallerCollection.Remove(System.Configuration.Install.Installer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (value As Installer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::Configuration::Install::Installer ^ value);" />
      <MemberSignature Language="F#" Value="member this.Remove : System.Configuration.Install.Installer -&gt; unit" Usage="installerCollection.Remove value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Configuration.Install.Installer" />
      </Parameters>
      <Docs>
        <param name="value">Ein <see cref="T:System.Configuration.Install.Installer" />, der das zu entfernende Installationsprogramm darstellt.</param>
        <summary>Entfernt den angegebenen <see cref="T:System.Configuration.Install.Installer" /> aus der Auflistung.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Configuration.Install.Installer.Parent%2A> -Eigenschaft der entfernten <xref:System.Configuration.Install.Installer> ist auf `null`festgelegt.  
  
   
  
## Examples  
 Das folgende Beispiel ist das gleiche wie das Beispiel in der <xref:System.Configuration.Install.InstallerCollection.Contains%2A> -Methode. Weitere Informationen zu diesem Beispiel finden Sie im Beispiel Abschnitt der <xref:System.Configuration.Install.InstallerCollection.Contains%2A> -Methode.  
  
 [!code-cpp[InstallerCollection_Remove#1](~/samples/snippets/cpp/VS_Snippets_CLR/InstallerCollection_Remove/CPP/installercollection_remove.cpp#1)]
 [!code-csharp[InstallerCollection_Remove#1](~/samples/snippets/csharp/VS_Snippets_CLR/InstallerCollection_Remove/CS/installercollection_remove.cs#1)]
 [!code-vb[InstallerCollection_Remove#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/InstallerCollection_Remove/VB/installercollection_remove.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.Install.InstallerCollection.Add(System.Configuration.Install.Installer)" />
        <altmember cref="M:System.Configuration.Install.InstallerCollection.AddRange(System.Configuration.Install.InstallerCollection)" />
        <altmember cref="T:System.Configuration.Install.Installer" />
        <altmember cref="P:System.Configuration.Install.Installer.Parent" />
      </Docs>
    </Member>
  </Members>
</Type>
