<Type Name="InstallContext" FullName="System.Configuration.Install.InstallContext">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e86e397330369eb3a5530552e7a9dfacf1fb2e47" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83976507" /></Metadata><TypeSignature Language="C#" Value="public class InstallContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit InstallContext extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.Install.InstallContext" />
  <TypeSignature Language="VB.NET" Value="Public Class InstallContext" />
  <TypeSignature Language="C++ CLI" Value="public ref class InstallContext" />
  <TypeSignature Language="F#" Value="type InstallContext = class" />
  <AssemblyInfo>
    <AssemblyName>System.Configuration.Install</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="a05e8-101">Enthält Informationen über die derzeitige Installation.</span><span class="sxs-lookup"><span data-stu-id="a05e8-101">Contains information about the current installation.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a05e8-102">In der Regel wird eine <xref:System.Configuration.Install.InstallContext> von einer ausführbaren Installationsdatei (z. b. InstallUtil. exe) erstellt, die Assemblys installiert.</span><span class="sxs-lookup"><span data-stu-id="a05e8-102">Typically, an <xref:System.Configuration.Install.InstallContext> is created by an installation executable, such as InstallUtil.exe, that installs assemblies.</span></span> <span data-ttu-id="a05e8-103">Das Installationsprogramm ruft den <xref:System.Configuration.Install.InstallContext>-Konstruktor auf und übergibt dabei den standardmäßigen Protokolldatei Pfad und die Befehlszeilenparameter.</span><span class="sxs-lookup"><span data-stu-id="a05e8-103">The installation program invokes the <xref:System.Configuration.Install.InstallContext> constructor, passing it the default log-file path and command-line parameters.</span></span>  
  
 <span data-ttu-id="a05e8-104">Vor dem Aufrufen der Methoden <xref:System.Configuration.Install.Installer.Install%2A>, <xref:System.Configuration.Install.Installer.Commit%2A>, <xref:System.Configuration.Install.Installer.Rollback%2A>oder <xref:System.Configuration.Install.Installer.Uninstall%2A> legt das Installationsprogramm die <xref:System.Configuration.Install.Installer.Context%2A>-Eigenschaft eines <xref:System.Configuration.Install.Installer> auf die Instanz von <xref:System.Configuration.Install.InstallContext>fest.</span><span class="sxs-lookup"><span data-stu-id="a05e8-104">Prior to calling its <xref:System.Configuration.Install.Installer.Install%2A>, <xref:System.Configuration.Install.Installer.Commit%2A>, <xref:System.Configuration.Install.Installer.Rollback%2A>, or <xref:System.Configuration.Install.Installer.Uninstall%2A> methods, the installation program sets the <xref:System.Configuration.Install.Installer.Context%2A> property of an <xref:System.Configuration.Install.Installer> to the instance of <xref:System.Configuration.Install.InstallContext>.</span></span> <span data-ttu-id="a05e8-105">Bevor diese Methoden aufgerufen werden, legt eine <xref:System.Configuration.Install.Installer>, die eine Installerauflistung in der <xref:System.Configuration.Install.Installer.Installers%2A>-Eigenschaft enthält, die <xref:System.Configuration.Install.Installer.Context%2A>-Eigenschaft der einzelnen enthaltenen Installationsprogramme fest.</span><span class="sxs-lookup"><span data-stu-id="a05e8-105">Before calling these methods, an <xref:System.Configuration.Install.Installer> that contains an installer collection in the <xref:System.Configuration.Install.Installer.Installers%2A> property sets the <xref:System.Configuration.Install.Installer.Context%2A> property of each contained installer.</span></span>  
  
 <span data-ttu-id="a05e8-106">Die <xref:System.Configuration.Install.InstallContext.Parameters%2A>-Eigenschaft enthält eine analysierte Version der Befehlszeile, die zum Ausführen der ausführbaren Installationsdatei eingegeben wird.</span><span class="sxs-lookup"><span data-stu-id="a05e8-106">The <xref:System.Configuration.Install.InstallContext.Parameters%2A> property contains a parsed version of the command line that is entered to run the installation executable.</span></span> <span data-ttu-id="a05e8-107">Die-Eigenschaft enthält Informationen, z. b. den Pfad zu einer Protokolldatei, ob Protokollinformationen in der Konsole angezeigt werden sollen und ob während der Installation eine Benutzeroberfläche angezeigt werden soll.</span><span class="sxs-lookup"><span data-stu-id="a05e8-107">The property contains information such as the path to a log file, whether to display log information on the console, and whether to show a user interface during the installation.</span></span> <span data-ttu-id="a05e8-108">Aufrufen der <xref:System.Configuration.Install.InstallContext.IsParameterTrue%2A>-Methode, um herauszufinden, ob ein Befehlszeilenparameter `true`ist.</span><span class="sxs-lookup"><span data-stu-id="a05e8-108">Call the <xref:System.Configuration.Install.InstallContext.IsParameterTrue%2A> method to find out whether a command-line parameter is `true`.</span></span>  
  
 <span data-ttu-id="a05e8-109">Verwenden Sie die <xref:System.Configuration.Install.InstallContext.LogMessage%2A>-Methode, um Statusmeldungen in die Installationsprotokoll Datei und die-Konsole zu schreiben.</span><span class="sxs-lookup"><span data-stu-id="a05e8-109">Use the <xref:System.Configuration.Install.InstallContext.LogMessage%2A> method to write status messages to the installation log file and the console.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a05e8-110">Im folgenden Beispiel werden die <xref:System.Configuration.Install.InstallContext.%23ctor%2A>-Konstruktoren, die <xref:System.Configuration.Install.InstallContext.Parameters%2A>-Eigenschaft und die <xref:System.Configuration.Install.InstallContext.LogMessage%2A>-und <xref:System.Configuration.Install.InstallContext.IsParameterTrue%2A>-Methode der <xref:System.Configuration.Install.InstallContext>-Klasse veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="a05e8-110">The following example demonstrates the <xref:System.Configuration.Install.InstallContext.%23ctor%2A> constructors, the <xref:System.Configuration.Install.InstallContext.Parameters%2A> property and the <xref:System.Configuration.Install.InstallContext.LogMessage%2A> and <xref:System.Configuration.Install.InstallContext.IsParameterTrue%2A> methods of the <xref:System.Configuration.Install.InstallContext> class.</span></span>  
  
 <span data-ttu-id="a05e8-111">Wenn die <xref:System.Configuration.Install.Installer.Install%2A>-Methode des Installers aufgerufen wird, wird von der Befehlszeile auf Parameter geprüft.</span><span class="sxs-lookup"><span data-stu-id="a05e8-111">When the <xref:System.Configuration.Install.Installer.Install%2A> method of the installer is called, it checks for parameters from the command line.</span></span> <span data-ttu-id="a05e8-112">Abhängig davon werden die Statusmeldungen in der Konsole angezeigt und auch in der angegebenen Protokolldatei gespeichert.</span><span class="sxs-lookup"><span data-stu-id="a05e8-112">Depending on that, it displays the progress messages onto the console and also saves it to the specified log file.</span></span>  
  
 <span data-ttu-id="a05e8-113">Wenn das Programm ohne Argumente aufgerufen wird, wird ein leerer <xref:System.Configuration.Install.InstallContext> erstellt.</span><span class="sxs-lookup"><span data-stu-id="a05e8-113">When the program is invoked without any arguments, an empty <xref:System.Configuration.Install.InstallContext> is created.</span></span> <span data-ttu-id="a05e8-114">Wenn "/logfile" und "/LogToConsole" angegeben werden, wird der <xref:System.Configuration.Install.InstallContext> erstellt, indem die entsprechenden Argumente an <xref:System.Configuration.Install.InstallContext.%23ctor%2A>übergeben werden.</span><span class="sxs-lookup"><span data-stu-id="a05e8-114">When "/LogFile" and "/LogtoConsole" are specified, the <xref:System.Configuration.Install.InstallContext> is created by passing the respective arguments to <xref:System.Configuration.Install.InstallContext.%23ctor%2A>.</span></span>  
  
 [!code-cpp[InstallContext_InstallContext#1](~/samples/snippets/cpp/VS_Snippets_CLR/InstallContext_InstallContext/CPP/installcontext_installcontext.cpp#1)]
 [!code-csharp[InstallContext_InstallContext#1](~/samples/snippets/csharp/VS_Snippets_CLR/InstallContext_InstallContext/CS/installcontext_installcontext.cs#1)]
 [!code-vb[InstallContext_InstallContext#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/InstallContext_InstallContext/VB/installcontext_installcontext.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Configuration.Install.Installer" />
    <altmember cref="T:System.Configuration.Install.TransactedInstaller" />
    <altmember cref="T:System.Configuration.Install.AssemblyInstaller" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a05e8-115">Initialisiert eine neue Instanz der <see cref="T:System.Configuration.Install.InstallContext" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="a05e8-115">Initializes a new instance of the <see cref="T:System.Configuration.Install.InstallContext" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InstallContext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Install.InstallContext.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InstallContext();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a05e8-116">Initialisiert eine neue Instanz der <see cref="T:System.Configuration.Install.InstallContext" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="a05e8-116">Initializes a new instance of the <see cref="T:System.Configuration.Install.InstallContext" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a05e8-117">Diese Überladung erstellt keine Protokolldatei für die Installation.</span><span class="sxs-lookup"><span data-stu-id="a05e8-117">This overload does not create a log file for the installation.</span></span>  
  
   
  
## Examples  
  
> [!NOTE]
>  <span data-ttu-id="a05e8-118">In diesem Beispiel wird gezeigt, wie eine der überladenen Versionen des <xref:System.Configuration.Install.InstallContext> Konstruktors verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="a05e8-118">This example shows how to use one of the overloaded versions of the <xref:System.Configuration.Install.InstallContext> constructor.</span></span> <span data-ttu-id="a05e8-119">Weitere Beispiele, die möglicherweise verfügbar sind, finden Sie in den Themen zu den einzelnen Überladungen.</span><span class="sxs-lookup"><span data-stu-id="a05e8-119">For other examples that might be available, see the individual overload topics.</span></span>  
  
 <span data-ttu-id="a05e8-120">Wenn das Programm ohne Argumente aufgerufen wird, wird ein leerer <xref:System.Configuration.Install.InstallContext> erstellt.</span><span class="sxs-lookup"><span data-stu-id="a05e8-120">When the program is invoked without any arguments, an empty <xref:System.Configuration.Install.InstallContext> is created.</span></span>  
  
 [!code-cpp[InstallContext_InstallContext#2](~/samples/snippets/cpp/VS_Snippets_CLR/InstallContext_InstallContext/CPP/installcontext_installcontext.cpp#2)]
 [!code-csharp[InstallContext_InstallContext#2](~/samples/snippets/csharp/VS_Snippets_CLR/InstallContext_InstallContext/CS/installcontext_installcontext.cs#2)]
 [!code-vb[InstallContext_InstallContext#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/InstallContext_InstallContext/VB/installcontext_installcontext.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InstallContext (string logFilePath, string[] commandLine);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string logFilePath, string[] commandLine) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Install.InstallContext.#ctor(System.String,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (logFilePath As String, commandLine As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InstallContext(System::String ^ logFilePath, cli::array &lt;System::String ^&gt; ^ commandLine);" />
      <MemberSignature Language="F#" Value="new System.Configuration.Install.InstallContext : string * string[] -&gt; System.Configuration.Install.InstallContext" Usage="new System.Configuration.Install.InstallContext (logFilePath, commandLine)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="logFilePath" Type="System.String" />
        <Parameter Name="commandLine" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="logFilePath"><span data-ttu-id="a05e8-121">Der Pfad zur Protokolldatei für diese Installation oder <see langword="null" />, wenn keine Protokolldatei erstellt werden soll.</span><span class="sxs-lookup"><span data-stu-id="a05e8-121">The path to the log file for this installation, or <see langword="null" /> if no log file should be created.</span></span></param>
        <param name="commandLine"><span data-ttu-id="a05e8-122">Die beim Ausführen des Installationsprogramms eingegebenen Befehlszeilenparameter oder <see langword="null" />, wenn keine Parameter eingegeben wurden.</span><span class="sxs-lookup"><span data-stu-id="a05e8-122">The command-line parameters entered when running the installation program, or <see langword="null" /> if none were entered.</span></span></param>
        <summary><span data-ttu-id="a05e8-123">Initialisiert eine neue Instanz der <see cref="T:System.Configuration.Install.InstallContext" />-Klasse und erstellt eine Protokolldatei für die Installation.</span><span class="sxs-lookup"><span data-stu-id="a05e8-123">Initializes a new instance of the <see cref="T:System.Configuration.Install.InstallContext" /> class, and creates a log file for the installation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a05e8-124">Wenn bei der Installation die Datei " [installutil. exe" (Installationstool)](/dotnet/framework/tools/installutil-exe-installer-tool)verwendet wird, erstellt dieser Konstruktor eine Protokolldatei im angegebenen Pfad und analysiert das Array von Befehlszeilen Parametern in der <xref:System.Configuration.Install.InstallContext.Parameters%2A>-Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="a05e8-124">If the installation uses [Installutil.exe (Installer Tool)](/dotnet/framework/tools/installutil-exe-installer-tool), this constructor creates a log file at the specified path and parses the array of command-line parameters into the <xref:System.Configuration.Install.InstallContext.Parameters%2A> property.</span></span> <span data-ttu-id="a05e8-125">Wenn ein Protokolldatei Pfad in den Befehlszeilen Parametern angegeben ist, wird er verwendet, um die Datei zu erstellen.</span><span class="sxs-lookup"><span data-stu-id="a05e8-125">If a log-file path is specified in the command-line parameters, it is used to create the file.</span></span> <span data-ttu-id="a05e8-126">Wenn das Protokolldatei Argument nicht in der Befehlszeile angegeben ist, wird der Wert des `logFilePath`-Parameters verwendet.</span><span class="sxs-lookup"><span data-stu-id="a05e8-126">If the log file argument is not specified in the command line, the value of the `logFilePath` parameter is used.</span></span> <span data-ttu-id="a05e8-127">Wenn Sie die Erstellung einer Protokolldatei unterdrücken möchten, übergeben Sie den Befehlszeilenparameter "/logfile =".</span><span class="sxs-lookup"><span data-stu-id="a05e8-127">To suppress the creation of a log file, pass the "/logfile= " command-line parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a05e8-128">Dieses Beispiel ist ein Auszug aus dem Beispiel in der Klassen Übersicht <xref:System.Configuration.Install.InstallContext>-Klasse.</span><span class="sxs-lookup"><span data-stu-id="a05e8-128">This example is an excerpt of the example in the class overview of <xref:System.Configuration.Install.InstallContext> class.</span></span>  
  
 <span data-ttu-id="a05e8-129">Wenn "/logfile" und "/LogToConsole" angegeben werden, wird der <xref:System.Configuration.Install.InstallContext> erstellt, indem die entsprechenden Argumente an <xref:System.Configuration.Install.InstallContext.%23ctor%2A>übergeben werden.</span><span class="sxs-lookup"><span data-stu-id="a05e8-129">When "/LogFile" and "/LogtoConsole" are specified, the <xref:System.Configuration.Install.InstallContext> is created by passing the respective arguments to <xref:System.Configuration.Install.InstallContext.%23ctor%2A>.</span></span>  
  
 [!code-cpp[InstallContext_InstallContext#3](~/samples/snippets/cpp/VS_Snippets_CLR/InstallContext_InstallContext/CPP/installcontext_installcontext.cpp#3)]
 [!code-csharp[InstallContext_InstallContext#3](~/samples/snippets/csharp/VS_Snippets_CLR/InstallContext_InstallContext/CS/installcontext_installcontext.cs#3)]
 [!code-vb[InstallContext_InstallContext#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/InstallContext_InstallContext/VB/installcontext_installcontext.vb#3)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage"><para><span data-ttu-id="a05e8-130">Übergeben Sie den standardmäßigen Protokolldatei Pfad im <paramref name="logFilePath" />-Parameter, wenn Sie diesen Konstruktor aufrufen.</span><span class="sxs-lookup"><span data-stu-id="a05e8-130">Pass your default log-file path in the <paramref name="logFilePath" /> parameter when you call this constructor.</span></span> <span data-ttu-id="a05e8-131">Dies ist der Ort, an dem die Protokolldatei erstellt wird, es sei denn, der/Logfile-Befehlszeilenparameter wird beim Ausführen der ausführbaren Installationsdatei verwendet.</span><span class="sxs-lookup"><span data-stu-id="a05e8-131">This is the where the log file is created, unless the /logfile command-line parameter is used when the installation executable is run.</span></span></para></block>
        <altmember cref="P:System.Configuration.Install.InstallContext.Parameters" />
        <altmember cref="M:System.Configuration.Install.InstallContext.LogMessage(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="IsParameterTrue">
      <MemberSignature Language="C#" Value="public bool IsParameterTrue (string paramName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsParameterTrue(string paramName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Install.InstallContext.IsParameterTrue(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsParameterTrue (paramName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsParameterTrue(System::String ^ paramName);" />
      <MemberSignature Language="F#" Value="member this.IsParameterTrue : string -&gt; bool" Usage="installContext.IsParameterTrue paramName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="paramName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="paramName"><span data-ttu-id="a05e8-132">Der Name des zu überprüfenden Befehlszeilenparameters.</span><span class="sxs-lookup"><span data-stu-id="a05e8-132">The name of the command-line parameter to check.</span></span></param>
        <summary><span data-ttu-id="a05e8-133">Bestimmt, ob der angegebene Befehlszeilenparameter <see langword="true" /> ist.</span><span class="sxs-lookup"><span data-stu-id="a05e8-133">Determines whether the specified command-line parameter is <see langword="true" />.</span></span></summary>
        <returns><span data-ttu-id="a05e8-134"><see langword="true" />, wenn der angegebene Parameter auf "yes", "true", "1" oder eine leere Zeichenfolge ("") festgelegt ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a05e8-134"><see langword="true" /> if the specified parameter is set to "yes", "true", "1", or an empty string (""); otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a05e8-135">Diese Methode greift auf die <xref:System.Configuration.Install.InstallContext.Parameters%2A>-Eigenschaft zu, die eine analysierte Version der Befehlszeilenparameter enthält, um zu bestimmen, ob der angegebene Parameter `true`ist.</span><span class="sxs-lookup"><span data-stu-id="a05e8-135">This method accesses the <xref:System.Configuration.Install.InstallContext.Parameters%2A> property, which contains a parsed version of the command-line parameters, to determine whether the specified parameter is `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a05e8-136">Dieses Beispiel ist ein Auszug aus dem Beispiel in der Klassen Übersicht der <xref:System.Configuration.Install.InstallContext>-Klasse.</span><span class="sxs-lookup"><span data-stu-id="a05e8-136">This example is an excerpt of the sample in the class overview of the <xref:System.Configuration.Install.InstallContext> class.</span></span>  
  
 <span data-ttu-id="a05e8-137">Es verwendet die <xref:System.Configuration.Install.InstallContext.IsParameterTrue%2A>-Methode, um herauszufinden, ob der `LogtoConsole` Parameter festgelegt wurde.</span><span class="sxs-lookup"><span data-stu-id="a05e8-137">It uses the <xref:System.Configuration.Install.InstallContext.IsParameterTrue%2A> method to find out if the `LogtoConsole` parameter has been set.</span></span> <span data-ttu-id="a05e8-138">Wenn `yes`, wird die <xref:System.Configuration.Install.InstallContext.LogMessage%2A>-Methode verwendet, um Statusmeldungen in die Installationsprotokoll Datei und die-Konsole zu schreiben.</span><span class="sxs-lookup"><span data-stu-id="a05e8-138">If `yes`, it will then use the <xref:System.Configuration.Install.InstallContext.LogMessage%2A> method to write status messages to the installation log file and the console.</span></span>  
  
 [!code-cpp[InstallContext_InstallContext#4](~/samples/snippets/cpp/VS_Snippets_CLR/InstallContext_InstallContext/CPP/installcontext_installcontext.cpp#4)]
 [!code-csharp[InstallContext_InstallContext#4](~/samples/snippets/csharp/VS_Snippets_CLR/InstallContext_InstallContext/CS/installcontext_installcontext.cs#4)]
 [!code-vb[InstallContext_InstallContext#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/InstallContext_InstallContext/VB/installcontext_installcontext.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Configuration.Install.InstallContext.Parameters" />
      </Docs>
    </Member>
    <Member MemberName="LogMessage">
      <MemberSignature Language="C#" Value="public void LogMessage (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LogMessage(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Install.InstallContext.LogMessage(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub LogMessage (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LogMessage(System::String ^ message);" />
      <MemberSignature Language="F#" Value="member this.LogMessage : string -&gt; unit" Usage="installContext.LogMessage message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="a05e8-139">Die zu schreibende Nachricht.</span><span class="sxs-lookup"><span data-stu-id="a05e8-139">The message to write.</span></span></param>
        <summary><span data-ttu-id="a05e8-140">Gibt eine Meldung an die Konsole und in die Protokolldatei für die Installation aus.</span><span class="sxs-lookup"><span data-stu-id="a05e8-140">Writes a message to the console and to the log file for the installation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a05e8-141">Ein Installer kann diese Methode zum Schreiben von Statusinformationen oder anderen Statusinformationen in die Protokolldatei abrufen.</span><span class="sxs-lookup"><span data-stu-id="a05e8-141">An installer can call this method to write progress or other status information to the log file.</span></span> <span data-ttu-id="a05e8-142">Wenn die Befehlszeilenparameter angeben, dass eine Benutzeroberfläche angezeigt werden soll, sollte das Installationsprogramm neben dem Aufrufen der <xref:System.Configuration.Install.InstallContext.LogMessage%2A>-Methode auch Meldungs Felder anzeigen oder Abfragen erstellen.</span><span class="sxs-lookup"><span data-stu-id="a05e8-142">If the command-line parameters specify that a user interface should be displayed, the installer should show message boxes or make queries in addition to calling the <xref:System.Configuration.Install.InstallContext.LogMessage%2A> method.</span></span> <span data-ttu-id="a05e8-143">Der Text, der in die Protokolldatei geschrieben wird, wird vom Benutzer nur angezeigt, wenn "installutil. exe" zum Ausführen der Installation verwendet wird und "/LogToConsole = true" in der Befehlszeile angegeben ist.</span><span class="sxs-lookup"><span data-stu-id="a05e8-143">Text written to the log file will not be seen by the user unless InstallUtil.exe is used to run the installation and "/LogToConsole= true" is specified in the command line.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a05e8-144">Dieses Beispiel ist ein Auszug aus dem Beispiel in der Klassen Übersicht <xref:System.Configuration.Install.InstallContext>-Klasse.</span><span class="sxs-lookup"><span data-stu-id="a05e8-144">This example is an excerpt of the example in the class overview of <xref:System.Configuration.Install.InstallContext> class.</span></span>  
  
 <span data-ttu-id="a05e8-145">Es verwendet die <xref:System.Configuration.Install.InstallContext.IsParameterTrue%2A>-Methode, um herauszufinden, ob der `LogtoConsole` Parameter festgelegt wurde.</span><span class="sxs-lookup"><span data-stu-id="a05e8-145">It uses the <xref:System.Configuration.Install.InstallContext.IsParameterTrue%2A> method to find out if the `LogtoConsole` parameter has been set.</span></span> <span data-ttu-id="a05e8-146">Wenn `yes`, wird die <xref:System.Configuration.Install.InstallContext.LogMessage%2A>-Methode verwendet, um Statusmeldungen in die Installationsprotokoll Datei und die-Konsole zu schreiben.</span><span class="sxs-lookup"><span data-stu-id="a05e8-146">If `yes`, it will then use the <xref:System.Configuration.Install.InstallContext.LogMessage%2A> method to write status messages to the installation log file and the console.</span></span>  
  
 [!code-cpp[InstallContext_InstallContext#4](~/samples/snippets/cpp/VS_Snippets_CLR/InstallContext_InstallContext/CPP/installcontext_installcontext.cpp#4)]
 [!code-csharp[InstallContext_InstallContext#4](~/samples/snippets/csharp/VS_Snippets_CLR/InstallContext_InstallContext/CS/installcontext_installcontext.cs#4)]
 [!code-vb[InstallContext_InstallContext#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/InstallContext_InstallContext/VB/installcontext_installcontext.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Configuration.Install.InstallContext.Parameters" />
      </Docs>
    </Member>
    <Member MemberName="Parameters">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.StringDictionary Parameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.StringDictionary Parameters" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.Install.InstallContext.Parameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parameters As StringDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::StringDictionary ^ Parameters { System::Collections::Specialized::StringDictionary ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parameters : System.Collections.Specialized.StringDictionary" Usage="System.Configuration.Install.InstallContext.Parameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.StringDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a05e8-147">Ruft die Befehlszeilenparameter ab, die beim Ausführen von InstallUtil.exe eingegeben wurden.</span><span class="sxs-lookup"><span data-stu-id="a05e8-147">Gets the command-line parameters that were entered when InstallUtil.exe was run.</span></span></summary>
        <value><span data-ttu-id="a05e8-148">Ein <see cref="T:System.Collections.Specialized.StringDictionary" />, das die Befehlszeilenparameter darstellt, die beim Ausführen der Installationsdatei eingegeben wurden.</span><span class="sxs-lookup"><span data-stu-id="a05e8-148">A <see cref="T:System.Collections.Specialized.StringDictionary" /> that represents the command-line parameters that were entered when the installation executable was run.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a05e8-149">Wenn eine neue <xref:System.Configuration.Install.InstallContext> erstellt wird, werden die Befehlszeilenparameter in die <xref:System.Configuration.Install.InstallContext.Parameters%2A>-Eigenschaft analysiert.</span><span class="sxs-lookup"><span data-stu-id="a05e8-149">When a new <xref:System.Configuration.Install.InstallContext> is created, the command-line parameters are parsed into the <xref:System.Configuration.Install.InstallContext.Parameters%2A> property.</span></span> <span data-ttu-id="a05e8-150">Sowohl die Schlüssel als auch die Werte der Parameter sind Zeichen folgen.</span><span class="sxs-lookup"><span data-stu-id="a05e8-150">Both the keys and the values of the parameters are strings.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a05e8-151">Dieses Beispiel ist ein Auszug aus dem Beispiel in der Klassen Übersicht <xref:System.Configuration.Install.InstallContext>-Klasse.</span><span class="sxs-lookup"><span data-stu-id="a05e8-151">This example is an excerpt of the example in the class overview of <xref:System.Configuration.Install.InstallContext> class.</span></span>  
  
 <span data-ttu-id="a05e8-152">Das Beispiel ruft die <xref:System.Configuration.Install.InstallContext.Parameters%2A>-Eigenschaft ab, um festzustellen, ob vom Benutzer ein Befehlszeilenargument eingegeben wurde.</span><span class="sxs-lookup"><span data-stu-id="a05e8-152">The sample retrieves the <xref:System.Configuration.Install.InstallContext.Parameters%2A> property to see if any command line argument has been entered by the user.</span></span> <span data-ttu-id="a05e8-153">Außerdem wird die <xref:System.Configuration.Install.InstallContext.IsParameterTrue%2A>-Methode verwendet, um herauszufinden, ob der `LogtoConsole` Parameter festgelegt wurde.</span><span class="sxs-lookup"><span data-stu-id="a05e8-153">It also uses the <xref:System.Configuration.Install.InstallContext.IsParameterTrue%2A> method to find out if the `LogtoConsole` parameter has been set.</span></span> <span data-ttu-id="a05e8-154">Wenn `yes`, wird die <xref:System.Configuration.Install.InstallContext.LogMessage%2A>-Methode verwendet, um Statusmeldungen in die Installationsprotokoll Datei und die-Konsole zu schreiben.</span><span class="sxs-lookup"><span data-stu-id="a05e8-154">If `yes`, it will then use the <xref:System.Configuration.Install.InstallContext.LogMessage%2A> method to write status messages to the installation log file and the console.</span></span>  
  
 [!code-cpp[InstallContext_InstallContext#6](~/samples/snippets/cpp/VS_Snippets_CLR/InstallContext_InstallContext/CPP/installcontext_installcontext.cpp#6)]
 [!code-csharp[InstallContext_InstallContext#6](~/samples/snippets/csharp/VS_Snippets_CLR/InstallContext_InstallContext/CS/installcontext_installcontext.cs#6)]
 [!code-vb[InstallContext_InstallContext#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/InstallContext_InstallContext/VB/installcontext_installcontext.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Specialized.StringDictionary" />
      </Docs>
    </Member>
    <Member MemberName="ParseCommandLine">
      <MemberSignature Language="C#" Value="protected static System.Collections.Specialized.StringDictionary ParseCommandLine (string[] args);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class System.Collections.Specialized.StringDictionary ParseCommandLine(string[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Install.InstallContext.ParseCommandLine(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function ParseCommandLine (args As String()) As StringDictionary" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static System::Collections::Specialized::StringDictionary ^ ParseCommandLine(cli::array &lt;System::String ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member ParseCommandLine : string[] -&gt; System.Collections.Specialized.StringDictionary" Usage="System.Configuration.Install.InstallContext.ParseCommandLine args" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.StringDictionary</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="args"><span data-ttu-id="a05e8-155">Ein Array, das die Befehlszeilenparameter enthält.</span><span class="sxs-lookup"><span data-stu-id="a05e8-155">An array containing the command-line parameters.</span></span></param>
        <summary><span data-ttu-id="a05e8-156">Liest die Befehlszeilenparameter in ein Zeichenfolgenwörterbuch ein.</span><span class="sxs-lookup"><span data-stu-id="a05e8-156">Parses the command-line parameters into a string dictionary.</span></span></summary>
        <returns><span data-ttu-id="a05e8-157">Ein <see cref="T:System.Collections.Specialized.StringDictionary" />, das die analysierten Befehlszeilenparameter enthält.</span><span class="sxs-lookup"><span data-stu-id="a05e8-157">A <see cref="T:System.Collections.Specialized.StringDictionary" /> containing the parsed command-line parameters.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Configuration.Install.InstallContext.Parameters" />
        <altmember cref="M:System.Configuration.Install.InstallContext.IsParameterTrue(System.String)" />
      </Docs>
    </Member>
  </Members>
</Type>
