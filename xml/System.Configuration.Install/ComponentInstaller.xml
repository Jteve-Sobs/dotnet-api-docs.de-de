<Type Name="ComponentInstaller" FullName="System.Configuration.Install.ComponentInstaller">
  <Metadata><Meta Name="ms.openlocfilehash" Value="07a1c28e24ef2f0f52289ff6031eaf0619017e4a" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="37689847" /></Metadata><TypeSignature Language="C#" Value="public abstract class ComponentInstaller : System.Configuration.Install.Installer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ComponentInstaller extends System.Configuration.Install.Installer" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.Install.ComponentInstaller" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ComponentInstaller&#xA;Inherits Installer" />
  <TypeSignature Language="C++ CLI" Value="public ref class ComponentInstaller abstract : System::Configuration::Install::Installer" />
  <TypeSignature Language="F#" Value="type ComponentInstaller = class&#xA;    inherit Installer" />
  <AssemblyInfo>
    <AssemblyName>System.Configuration.Install</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.Install.Installer</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="56853-101">Gibt ein Installationsprogramm an, das Eigenschaften aus einer Komponente kopiert, die bei der Installation verwendet werden sollen.</span><span class="sxs-lookup"><span data-stu-id="56853-101">Specifies an installer that copies properties from a component to use at install time.</span></span></summary>
    <remarks>To be added.</remarks>
    <block subset="none" type="overrides"><span data-ttu-id="56853-102"><para>Beim Erben von <see cref="T:System.Configuration.Install.ComponentInstaller" />, müssen Sie überschreiben die <see cref="M:System.Configuration.Install.ComponentInstaller.CopyFromComponent(System.ComponentModel.IComponent)" /> -Methode, und überschreiben Sie in der Regel die <see cref="M:System.Configuration.Install.Installer.Install(System.Collections.IDictionary)" /> und <see cref="M:System.Configuration.Install.Installer.Uninstall(System.Collections.IDictionary)" /> Methoden.</para></span><span class="sxs-lookup"><span data-stu-id="56853-102"><para>When you inherit from <see cref="T:System.Configuration.Install.ComponentInstaller" />, you must override the <see cref="M:System.Configuration.Install.ComponentInstaller.CopyFromComponent(System.ComponentModel.IComponent)" /> method, and typically override the <see cref="M:System.Configuration.Install.Installer.Install(System.Collections.IDictionary)" /> and <see cref="M:System.Configuration.Install.Installer.Uninstall(System.Collections.IDictionary)" /> methods.</para></span></span></block>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ComponentInstaller ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Install.ComponentInstaller.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ComponentInstaller();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="56853-103">Initialisiert eine neue Instanz der <see cref="T:System.Configuration.Install.ComponentInstaller" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="56853-103">Initializes a new instance of the <see cref="T:System.Configuration.Install.ComponentInstaller" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyFromComponent">
      <MemberSignature Language="C#" Value="public abstract void CopyFromComponent (System.ComponentModel.IComponent component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyFromComponent(class System.ComponentModel.IComponent component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Install.ComponentInstaller.CopyFromComponent(System.ComponentModel.IComponent)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub CopyFromComponent (component As IComponent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void CopyFromComponent(System::ComponentModel::IComponent ^ component);" />
      <MemberSignature Language="F#" Value="abstract member CopyFromComponent : System.ComponentModel.IComponent -&gt; unit" Usage="componentInstaller.CopyFromComponent component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="56853-104">Die Komponente, aus der kopiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="56853-104">The component to copy from.</span></span></param>
        <summary><span data-ttu-id="56853-105">Kopiert beim Überschreiben in einer abgeleiteten Klasse alle während der Installation erforderlichen Eigenschaften aus der angegebenen Komponente.</span><span class="sxs-lookup"><span data-stu-id="56853-105">When overridden in a derived class, copies all the properties that are required at install time from the specified component.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56853-106">Das Installationsprogramm sollte werden alle Informationen, die aus der aktuellen Komponente möglich, und speichern Sie sie für die Verwendung bei der Installation.</span><span class="sxs-lookup"><span data-stu-id="56853-106">The installer should take all the information it can from the live component, and store it for use at install time.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="56853-107">Das folgende Beispiel definiert eine Klasse `MyInstallClass`, im Ereignisprotokoll erstellt und kopiert die Eigenschaften des Ereignisses Komponente, um die <xref:System.Diagnostics.EventLogInstaller>.</span><span class="sxs-lookup"><span data-stu-id="56853-107">The following example defines a class `MyInstallClass`, which creates the event log and copies the properties of the event log component to the <xref:System.Diagnostics.EventLogInstaller>.</span></span> <span data-ttu-id="56853-108">Außerdem überprüft, ob die <xref:System.ServiceProcess.ServiceInstaller> können die gleiche Art von Installation wie führen Sie die <xref:System.Diagnostics.EventLogInstaller>.</span><span class="sxs-lookup"><span data-stu-id="56853-108">It also checks whether the <xref:System.ServiceProcess.ServiceInstaller> can perform the same kind of installation as the <xref:System.Diagnostics.EventLogInstaller>.</span></span>  
  
 [!code-cpp[ComponentInstaller_CopyFromComponent#1](~/samples/snippets/cpp/VS_Snippets_CLR/ComponentInstaller_CopyFromComponent/CPP/componentinstaller_copyfromcomponent.cpp#1)]
 [!code-csharp[ComponentInstaller_CopyFromComponent#1](~/samples/snippets/csharp/VS_Snippets_CLR/ComponentInstaller_CopyFromComponent/CS/componentinstaller_copyfromcomponent.cs#1)]
 [!code-vb[ComponentInstaller_CopyFromComponent#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ComponentInstaller_CopyFromComponent/VB/componentinstaller_copyfromcomponent.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEquivalentInstaller">
      <MemberSignature Language="C#" Value="public virtual bool IsEquivalentInstaller (System.Configuration.Install.ComponentInstaller otherInstaller);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsEquivalentInstaller(class System.Configuration.Install.ComponentInstaller otherInstaller) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Install.ComponentInstaller.IsEquivalentInstaller(System.Configuration.Install.ComponentInstaller)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsEquivalentInstaller (otherInstaller As ComponentInstaller) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsEquivalentInstaller(System::Configuration::Install::ComponentInstaller ^ otherInstaller);" />
      <MemberSignature Language="F#" Value="abstract member IsEquivalentInstaller : System.Configuration.Install.ComponentInstaller -&gt; bool&#xA;override this.IsEquivalentInstaller : System.Configuration.Install.ComponentInstaller -&gt; bool" Usage="componentInstaller.IsEquivalentInstaller otherInstaller" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="otherInstaller" Type="System.Configuration.Install.ComponentInstaller" />
      </Parameters>
      <Docs>
        <param name="otherInstaller"><span data-ttu-id="56853-109">Das zu vergleichende Installationsprogramm.</span><span class="sxs-lookup"><span data-stu-id="56853-109">The installer to compare.</span></span></param>
        <summary><span data-ttu-id="56853-110">Bestimmt, ob das angegebene Installationsprogramm dieselben Objekte installiert wie dieses Installationsprogramm.</span><span class="sxs-lookup"><span data-stu-id="56853-110">Determines if the specified installer installs the same object as this installer.</span></span></summary>
        <returns><span data-ttu-id="56853-111"><see langword="true" />, wenn dieses Installationsprogramm und das durch den <paramref name="otherInstaller" />-Parameter angegebene Installationsprogramm dasselbe Objekt installieren, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="56853-111"><see langword="true" /> if this installer and the installer specified by the <paramref name="otherInstaller" /> parameter install the same object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56853-112">In der Regel <xref:System.Configuration.Install.ComponentInstaller.IsEquivalentInstaller%2A> gibt `true` nur dann, wenn dieses Installationsprogramm und das vom angegebenen die `otherInstaller` Parameter dasselbe Objekt installieren.</span><span class="sxs-lookup"><span data-stu-id="56853-112">Typically, <xref:System.Configuration.Install.ComponentInstaller.IsEquivalentInstaller%2A> returns `true` only if this installer and the installer specified by the `otherInstaller` parameter install the same object.</span></span> <span data-ttu-id="56853-113">In diesem Fall Aufrufen der <xref:System.Configuration.Install.Installer.Install%2A> oder <xref:System.Configuration.Install.Installer.Uninstall%2A> Methode entweder Installer-Ergebnisse in der gleichen Systemstatus.</span><span class="sxs-lookup"><span data-stu-id="56853-113">In such a case, calling the <xref:System.Configuration.Install.Installer.Install%2A> or <xref:System.Configuration.Install.Installer.Uninstall%2A> method on either installer results in the same system state.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="56853-114">Das folgende Beispiel definiert eine Klasse `MyInstallClass`, im Ereignisprotokoll erstellt und kopiert die Eigenschaften des Ereignisses Komponente, um die <xref:System.Diagnostics.EventLogInstaller> Objekt.</span><span class="sxs-lookup"><span data-stu-id="56853-114">The following example defines a class `MyInstallClass`, which creates the event log and copies the properties of the event log component to the <xref:System.Diagnostics.EventLogInstaller> object.</span></span> <span data-ttu-id="56853-115">Außerdem überprüft, ob <xref:System.ServiceProcess.ServiceInstaller> Objekt kann die gleiche Art von Installation wie behandeln <xref:System.Diagnostics.EventLogInstaller>.</span><span class="sxs-lookup"><span data-stu-id="56853-115">It also checks whether <xref:System.ServiceProcess.ServiceInstaller> object can handle the same kind of installation as <xref:System.Diagnostics.EventLogInstaller>.</span></span>  
  
 [!code-cpp[ComponentInstaller_CopyFromComponent#2](~/samples/snippets/cpp/VS_Snippets_CLR/ComponentInstaller_CopyFromComponent/CPP/componentinstaller_copyfromcomponent.cpp#2)]
 [!code-csharp[ComponentInstaller_CopyFromComponent#2](~/samples/snippets/csharp/VS_Snippets_CLR/ComponentInstaller_CopyFromComponent/CS/componentinstaller_copyfromcomponent.cs#2)]
 [!code-vb[ComponentInstaller_CopyFromComponent#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/ComponentInstaller_CopyFromComponent/VB/componentinstaller_copyfromcomponent.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>