<Type Name="IFileChangeNotificationSystem" FullName="System.Runtime.Caching.Hosting.IFileChangeNotificationSystem">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ed4880356988efaf09008f32429e0c2fe5015f48" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30477564" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IFileChangeNotificationSystem" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IFileChangeNotificationSystem" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem" />
  <TypeSignature Language="VB.NET" Value="Public Interface IFileChangeNotificationSystem" />
  <TypeSignature Language="C++ CLI" Value="public interface class IFileChangeNotificationSystem" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Caching</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Definiert eine Möglichkeit, ein benutzerdefiniertes <see cref="T:System.Runtime.Caching.FileChangeMonitor" />-Objekt für eine Cacheimplementierung verfügbar zu machen.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In ASP.NET die <xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem> Schnittstelle ermöglicht den Zugriff auf interne Datei-Benachrichtigung änderungsverwaltung.  
  
 Die <xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem> Schnittstelle werden intern von der <xref:System.Runtime.Caching.HostFileChangeMonitor> Klasse.  
  
 Wenn eine Cacheimplementierung in einer ASP.NET-Anwendungsdomäne ausgeführt wird, den ASP.NET implementiert eine <xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem> Schnittstelle, über die <xref:System.Runtime.Caching.ObjectCache.Host%2A> Eigenschaft. Die <xref:System.Runtime.Caching.HostFileChangeMonitor> Klasse diese Eigenschaft erkennt und verwendet die ASP.NET dateiänderung Benachrichtigungssystem um zu entfernenden Einträge im Cache basierend auf Datei-änderungsbenachrichtigung.  
  
 In nicht-ASP.NET-Anwendungen, es ist keine hostumgebung, die eine benutzerdefinierte implementiert <xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem> Schnittstelle. Daher die <xref:System.Runtime.Caching.HostFileChangeMonitor> -Klasse verwendet die <xref:System.IO.FileSystemWatcher> Klasse der CLR.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="StartMonitoring">
      <MemberSignature Language="C#" Value="public void StartMonitoring (string filePath, System.Runtime.Caching.OnChangedCallback onChangedCallback, out object state, out DateTimeOffset lastWriteTime, out long fileSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StartMonitoring(string filePath, class System.Runtime.Caching.OnChangedCallback onChangedCallback, [out] object&amp; state, [out] valuetype System.DateTimeOffset&amp; lastWriteTime, [out] int64&amp; fileSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StartMonitoring(System.String,System.Runtime.Caching.OnChangedCallback,System.Object@,System.DateTimeOffset@,System.Int64@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StartMonitoring(System::String ^ filePath, System::Runtime::Caching::OnChangedCallback ^ onChangedCallback, [Runtime::InteropServices::Out] System::Object ^ % state, [Runtime::InteropServices::Out] DateTimeOffset % lastWriteTime, [Runtime::InteropServices::Out] long % fileSize);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filePath" Type="System.String" />
        <Parameter Name="onChangedCallback" Type="System.Runtime.Caching.OnChangedCallback" />
        <Parameter Name="state" Type="System.Object&amp;" RefType="out" />
        <Parameter Name="lastWriteTime" Type="System.DateTimeOffset&amp;" RefType="out" />
        <Parameter Name="fileSize" Type="System.Int64&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="filePath">Der vollqualifizierte physische Pfad eines Verzeichnisses oder einer Datei, das bzw. die auf Änderungen überwacht werden soll.</param>
        <param name="onChangedCallback">Ein Verweis auf eine Methode, die den <see cref="T:System.Runtime.Caching.OnChangedCallback" />-Delegaten implementiert. Bei einer Änderung der überwachten Datei oder des überwachten Verzeichnisses löst die Implementierung der <see cref="T:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem" />-Schnittstelle der Hostumgebung ein Ereignis aus, indem die <see cref="T:System.Runtime.Caching.OnChangedCallback" />-Klasse aufgerufen wird.</param>
        <param name="state">Der Zustand, der von der Hostumgebung bereitgestellt wird. Cacheimplementierungen und benutzerdefinierte Änderungsmonitore sollten den Zustandswert als transparent behandeln. Der Zustand muss jedoch gespeichert werden, damit er an die Hostumgebung gesendet werden kann, wenn die <see cref="M:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StopMonitoring(System.String,System.Object)" />-Methode von der Cacheimplementierung aufgerufen wird.</param>
        <param name="lastWriteTime">Enthält nach der Rückgabe dieser Methode das Datum und die Uhrzeit des letzten Schreibvorgangs in <c>filePath</c>. Dieser Parameter wird nicht initialisiert übergeben. Dieser Parameter wird von der Hostumgebung zurückgegeben.</param>
        <param name="fileSize">Enthält nach der Rückgabe dieser Methode die Gesamtgröße des überwachten <c>filePath</c>-Objekts. Dieser Parameter wird nicht initialisiert übergeben. Dieser Parameter wird von der Hostumgebung zurückgegeben.</param>
        <summary>Registriert einen zu überwachenden Dateipfad bei der Hostumgebung.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird von benutzerdefinierten Cacheobjekten verwendeten und benutzerdefinierten Änderungen Monitore, die der hostumgebung implementieren <xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem> Schnittstelle, um die Dateipfade für die Überwachung mit der hostumgebung zu registrieren. Die <xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StartMonitoring%2A> -Methode wird vom Implementierer aufgerufen die <xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem> Schnittstelle um eine Datei oder ein Verzeichnis für die Überwachung der Änderung zu registrieren.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StopMonitoring">
      <MemberSignature Language="C#" Value="public void StopMonitoring (string filePath, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StopMonitoring(string filePath, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StopMonitoring(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub StopMonitoring (filePath As String, state As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StopMonitoring(System::String ^ filePath, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filePath" Type="System.String" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="filePath">Der Pfad der Datei oder des Ordners, die bzw. der nicht mehr überwacht werden soll. Dies sollte mit dem Dateipfadwert übereinstimmen, der in einem früheren Aufruf der <see cref="M:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StartMonitoring(System.String,System.Runtime.Caching.OnChangedCallback,System.Object@,System.DateTimeOffset@,System.Int64@)" />-Methode übergeben wurde.</param>
        <param name="state">Die Zustandsinformationen, die während eines früheren Aufrufs der <see cref="M:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StartMonitoring(System.String,System.Runtime.Caching.OnChangedCallback,System.Object@,System.DateTimeOffset@,System.Int64@)" />-Methode ursprünglich von der Hostumgebung angegeben wurden.</param>
        <summary>Beendet die Überwachung auf Änderungen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StopMonitoring%2A> -Methode muss aufgerufen werden, indem benutzerdefinierte Caches und benutzerdefinierte Monitore, die von der hostumgebung verworfen werden zum Beenden der Überwachung Dateipfade und Verzeichnisse zu ändern.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>