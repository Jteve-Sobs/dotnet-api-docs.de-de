<Type Name="PeerNameResolver" FullName="System.Net.PeerToPeer.PeerNameResolver">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3e2922811d5fd691ccb916ccfac28258a6102786" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86800170" /></Metadata><TypeSignature Language="C#" Value="public class PeerNameResolver" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi PeerNameResolver extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.PeerToPeer.PeerNameResolver" />
  <TypeSignature Language="VB.NET" Value="Public Class PeerNameResolver" />
  <TypeSignature Language="C++ CLI" Value="public ref class PeerNameResolver" />
  <TypeSignature Language="F#" Value="type PeerNameResolver = class" />
  <AssemblyInfo>
    <AssemblyName>System.Net</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="2d749-101">Gibt die Werte an, die einen <see cref="T:System.Net.PeerToPeer.PeerName" /> unter Verwendung des Protokolls für die PNRP Namespace Provider-API in einen <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> auflösen.</span><span class="sxs-lookup"><span data-stu-id="2d749-101">Specifies the values that resolve a <see cref="T:System.Net.PeerToPeer.PeerName" /> to a <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> using the PNRP Namespace Provider API protocol.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d749-102">Ein-Wert <xref:System.Net.PeerToPeer.PeerNameRecord> , der alle Informationen für das enthält <xref:System.Net.PeerToPeer.PeerName> , das in den <xref:System.Net.PeerToPeer.Cloud> oder den Cloud (s) veröffentlicht wurde, die während des Auflösungs Vorgangs abgefragt wurden.</span><span class="sxs-lookup"><span data-stu-id="2d749-102">A <xref:System.Net.PeerToPeer.PeerNameRecord> which contains all the information for the <xref:System.Net.PeerToPeer.PeerName> that was published in the <xref:System.Net.PeerToPeer.Cloud> or cloud(s) that were queried during the resolve process.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PeerNameResolver ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PeerNameResolver();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2d749-103">Initialisiert eine neue Standardinstanz der <see cref="T:System.Net.PeerToPeer.PeerNameResolver" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="2d749-103">Initializes a new default instance of the <see cref="T:System.Net.PeerToPeer.PeerNameResolver" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d749-104">Nach der erfolgreichen Auflösung <xref:System.Net.PeerToPeer.PeerName> <xref:System.Net.PeerToPeer.PeerNameRecord> von enthält die alle Informationen für den angegebenen <xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A> , der in der Cloud (n) veröffentlicht wurde, die während des Vorgangs abgefragt wurden <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> .</span><span class="sxs-lookup"><span data-stu-id="2d749-104">After successfully resolving a <xref:System.Net.PeerToPeer.PeerName>, the <xref:System.Net.PeerToPeer.PeerNameRecord> contains all the information for the specified <xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A> that was published in the cloud(s) that were queried during the <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnResolveCompleted">
      <MemberSignature Language="C#" Value="protected void OnResolveCompleted (System.Net.PeerToPeer.ResolveCompletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void OnResolveCompleted(class System.Net.PeerToPeer.ResolveCompletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted(System.Net.PeerToPeer.ResolveCompletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub OnResolveCompleted (e As ResolveCompletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void OnResolveCompleted(System::Net::PeerToPeer::ResolveCompletedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.OnResolveCompleted : System.Net.PeerToPeer.ResolveCompletedEventArgs -&gt; unit" Usage="peerNameResolver.OnResolveCompleted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.PeerToPeer.ResolveCompletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="2d749-105">Das <see cref="T:System.Net.PeerToPeer.ResolveCompletedEventArgs" />-Objekt, das die Ereignisdaten enthält, die vom <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted" />-Ereignis zurückgegeben werden.</span><span class="sxs-lookup"><span data-stu-id="2d749-105">The <see cref="T:System.Net.PeerToPeer.ResolveCompletedEventArgs" /> object that contains the data returned by the <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted" /> event.</span></span></param>
        <summary><span data-ttu-id="2d749-106">Gibt die Peerauflösungsdaten zurück, nachdem das <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted" />-Ereignis ausgelöst wurde.</span><span class="sxs-lookup"><span data-stu-id="2d749-106">Returns peer resolution data after the <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted" /> event is raised.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d749-107">Diese Methode ist ein asynchroner Rückruf, der verwendet wird, um Daten zur Peer Namensauflösung zu verarbeiten, nachdem die Peer Auflösung abgeschlossen wurde.</span><span class="sxs-lookup"><span data-stu-id="2d749-107">This method is an asynchronous callback used to process peer name resolution data after peer resolution has completed.</span></span>  
  
 <span data-ttu-id="2d749-108">Abgeleitete Typen können diese Methode überschreiben, um zusätzliche Aufgaben auszuführen, wenn das- <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> Ereignis vom Peerresolver-Objekt ausgelöst wird.</span><span class="sxs-lookup"><span data-stu-id="2d749-108">Derived types can override this method to perform additional tasks when the <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> event is raised by the peer resolver object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsyncCancel(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="OnResolveProgressChanged">
      <MemberSignature Language="C#" Value="protected void OnResolveProgressChanged (System.Net.PeerToPeer.ResolveProgressChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void OnResolveProgressChanged(class System.Net.PeerToPeer.ResolveProgressChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged(System.Net.PeerToPeer.ResolveProgressChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub OnResolveProgressChanged (e As ResolveProgressChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void OnResolveProgressChanged(System::Net::PeerToPeer::ResolveProgressChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.OnResolveProgressChanged : System.Net.PeerToPeer.ResolveProgressChangedEventArgs -&gt; unit" Usage="peerNameResolver.OnResolveProgressChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.PeerToPeer.ResolveProgressChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="2d749-109"><see cref="T:System.Net.PeerToPeer.ResolveProgressChangedEventArgs" />-Objekt, das vom <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged" />-Ereignis zurückgegebene Statusinformationen der Peernamensauflösung enthält.</span><span class="sxs-lookup"><span data-stu-id="2d749-109"><see cref="T:System.Net.PeerToPeer.ResolveProgressChangedEventArgs" /> object that contains peer name resolution progress information returned by the <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged" /> event.</span></span></param>
        <summary><span data-ttu-id="2d749-110">Gibt die Statusdaten der Peerauflösung zurück, nachdem das <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged" />-Ereignis ausgelöst wurde.</span><span class="sxs-lookup"><span data-stu-id="2d749-110">Returns peer resolution progress data when the <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged" /> event is raised.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d749-111">Diese Methode ist ein asynchroner Rückruf, der zum Verarbeiten von Peer Auflösungs Daten verwendet wird, nachdem der peerauflösungs-Status angefordert wurde.</span><span class="sxs-lookup"><span data-stu-id="2d749-111">This method is an asynchronous callback used to process peer resolution data after peer resolution progress has been requested.</span></span>  
  
 <span data-ttu-id="2d749-112">Abgeleitete Typen können diese Methode überschreiben, um zusätzliche Aufgaben auszuführen, wenn das <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged> Ereignis eintritt.</span><span class="sxs-lookup"><span data-stu-id="2d749-112">Derived types can override this method to perform additional tasks when the <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged> event occurs.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="2d749-113">Wenn Sie diese Methode in einem abgeleiteten Typ überschreiben, stellen Sie sicher, dass die-Methode des Basistyps aufgerufen wird, <see cref="M:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged(System.Net.PeerToPeer.ResolveProgressChangedEventArgs)" /> damit registrierte Delegaten das Ereignis empfangen.</span><span class="sxs-lookup"><span data-stu-id="2d749-113">When overriding this method in a derived type, be sure to call the base type's <see cref="M:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged(System.Net.PeerToPeer.ResolveProgressChangedEventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <MemberGroup MemberName="Resolve">
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2d749-114">Löst ein <see cref="T:System.Net.PeerToPeer.PeerName" />-Objekt unter Verwendung des Protokolls PNRP in ein <see cref="T:System.Net.PeerToPeer.PeerNameRecord" />-Objekt auf.</span><span class="sxs-lookup"><span data-stu-id="2d749-114">Resolves a <see cref="T:System.Net.PeerToPeer.PeerName" /> object to a <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> using the PNRP protocol.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d749-115">Diese Methode ordnet Peernamen Clouds zu.</span><span class="sxs-lookup"><span data-stu-id="2d749-115">This method associates peer names to clouds.</span></span> <span data-ttu-id="2d749-116">Das Aufrufen der- <xref:System.Net.PeerToPeer.PeerNameResolver> Methode ähnelt dem Aufrufen der- <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> Methode für jeden Peer namens Daten Satz in <xref:System.Net.PeerToPeer.PeerNameRecordCollection> .</span><span class="sxs-lookup"><span data-stu-id="2d749-116">Calling the <xref:System.Net.PeerToPeer.PeerNameResolver> method is similar to calling the <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> method for each peer name record in the <xref:System.Net.PeerToPeer.PeerNameRecordCollection>.</span></span> <span data-ttu-id="2d749-117">Beachten Sie, dass die Auflösung mehrerer Peer Namen durch die Verwendung der Resolve-Methode für einen einzelnen Peer namens Daten Satz nicht ungültig wird.</span><span class="sxs-lookup"><span data-stu-id="2d749-117">Note that using the Resolve method on an individual peer name record does not invalidate resolving multiple peer names.</span></span>  
  
 <span data-ttu-id="2d749-118">Für jede <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> Methode gibt es eine äquivalente <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="2d749-118">For every <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> method, there is an equivalent <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> method.</span></span>  <span data-ttu-id="2d749-119">Sie sind in den übergebenen Parametern identisch, mit der Ausnahme, dass die ResolveAsync-Methode ein System Token in der Parameterliste für die asynchrone Ereignisverarbeitung enthält.</span><span class="sxs-lookup"><span data-stu-id="2d749-119">They are identical in the parameters they are passed, except that the ResolveAsync method includes a system token in its parameter list for asynchronous event handling.</span></span>  
  
 <span data-ttu-id="2d749-120">Wenn der- <xref:System.Net.PeerToPeer.Cloud> Parameter nicht angegeben wird, verwendet die-Methode die <xref:System.Net.PeerToPeer.Cloud.Available> Verknüpfung, um cloudparameter auszufüllen.</span><span class="sxs-lookup"><span data-stu-id="2d749-120">If the <xref:System.Net.PeerToPeer.Cloud> parameter is not supplied, the method uses the <xref:System.Net.PeerToPeer.Cloud.Available> shortcut to fill in cloud parameters.</span></span>  <span data-ttu-id="2d749-121">Wenn der- `maxRecords` Parameter fehlt, bewirkt der Standardwert 0 (null), <xref:System.ArgumentOutOfRangeException> dass eine Ausnahme ausgelöst wird.</span><span class="sxs-lookup"><span data-stu-id="2d749-121">If the `maxRecords` parameter is missing, the default value of zero causes an <xref:System.ArgumentOutOfRangeException> exception to be thrown.</span></span>  
  
 <span data-ttu-id="2d749-122">Dieses Ereignis wird auch ausgelöst, wenn der Auflösungs Vorgang fehlerhaft abgeschlossen oder abgebrochen wird.</span><span class="sxs-lookup"><span data-stu-id="2d749-122">This event will also be raised if the resolve operation completes in error or is canceled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.PeerToPeer.PeerNameRegistration" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.PeerNameRecordCollection Resolve (System.Net.PeerToPeer.PeerName peerName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.PeerToPeer.PeerNameRecordCollection Resolve(class System.Net.PeerToPeer.PeerName peerName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName)" />
      <MemberSignature Language="VB.NET" Value="Public Function Resolve (peerName As PeerName) As PeerNameRecordCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::PeerToPeer::PeerNameRecordCollection ^ Resolve(System::Net::PeerToPeer::PeerName ^ peerName);" />
      <MemberSignature Language="F#" Value="member this.Resolve : System.Net.PeerToPeer.PeerName -&gt; System.Net.PeerToPeer.PeerNameRecordCollection" Usage="peerNameResolver.Resolve peerName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.PeerNameRecordCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerName" Type="System.Net.PeerToPeer.PeerName" />
      </Parameters>
      <Docs>
        <param name="peerName"><span data-ttu-id="2d749-123">Der aufzulösende <see cref="T:System.Net.PeerToPeer.PeerName" />.</span><span class="sxs-lookup"><span data-stu-id="2d749-123">The <see cref="T:System.Net.PeerToPeer.PeerName" /> to resolve.</span></span></param>
        <summary><span data-ttu-id="2d749-124">Löst den angegebenen <see cref="T:System.Net.PeerToPeer.PeerName" /> in allen Wolken auf, die dem aufrufenden Peer bekannt sind.</span><span class="sxs-lookup"><span data-stu-id="2d749-124">Resolves the specified <see cref="T:System.Net.PeerToPeer.PeerName" /> in all clouds known to the calling peer.</span></span></summary>
        <returns><span data-ttu-id="2d749-125">Eine <see cref="T:System.Net.PeerToPeer.PeerNameRecordCollection" />, die alle Peernamensdatensätze enthält (als <see cref="T:System.Net.PeerToPeer.PeerNameRecord" />-Objekte dargestellt), die dem angegebenen Peernamen zugeordnet sind.</span><span class="sxs-lookup"><span data-stu-id="2d749-125">A <see cref="T:System.Net.PeerToPeer.PeerNameRecordCollection" /> that contains all peer name records (represented as <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> objects) associated with the specified peer name.</span></span> <span data-ttu-id="2d749-126">Bei ungesicherten Peernamen kann der gleiche <see cref="T:System.Net.PeerToPeer.PeerName" /> von mehreren Benutzern in derselben <see cref="T:System.Net.PeerToPeer.Cloud" /> registriert werden und unterschiedlichen Endpunkten zugeordnet werden.</span><span class="sxs-lookup"><span data-stu-id="2d749-126">For unsecured peer names, the same <see cref="T:System.Net.PeerToPeer.PeerName" /> can be registered by different users in the same <see cref="T:System.Net.PeerToPeer.Cloud" />, and associated with different endpoints.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d749-127">Diese Methode ordnet Clouds einen Peernamen zu.</span><span class="sxs-lookup"><span data-stu-id="2d749-127">This method associates a peer name to clouds.</span></span> <span data-ttu-id="2d749-128">Alle Clouds werden für das abgefragt <xref:System.Net.PeerToPeer.PeerName> .</span><span class="sxs-lookup"><span data-stu-id="2d749-128">All clouds are queried for the <xref:System.Net.PeerToPeer.PeerName>.</span></span> <span data-ttu-id="2d749-129">Wenn der PeerName nicht aufgelöst werden kann oder ist `null` , wird eine ausgelöst <xref:System.Net.PeerToPeer.PeerToPeerException> .</span><span class="sxs-lookup"><span data-stu-id="2d749-129">If the peer name cannot be resolved or is `null`, an <xref:System.Net.PeerToPeer.PeerToPeerException> is thrown.</span></span>  
  
 <span data-ttu-id="2d749-130">Bei ungesicherten Peernamen kann derselbe Name von verschiedenen Peers innerhalb derselben Cloud registriert (und mit anderen Endpunkten verknüpft) werden.</span><span class="sxs-lookup"><span data-stu-id="2d749-130">For unsecured peer names, the same name can be registered (and associated with different endpoints) by different peers within the same cloud.</span></span>  
  
 <span data-ttu-id="2d749-131">Das Aufrufen der- <xref:System.Net.PeerToPeer.PeerNameResolver> Methode ähnelt dem Aufrufen der- <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> Methode für jeden Peer namens Daten Satz in <xref:System.Net.PeerToPeer.PeerNameRecordCollection> .</span><span class="sxs-lookup"><span data-stu-id="2d749-131">Calling the <xref:System.Net.PeerToPeer.PeerNameResolver> method is similar to calling the <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> method for each peer name record in the <xref:System.Net.PeerToPeer.PeerNameRecordCollection>.</span></span> <span data-ttu-id="2d749-132">Beachten Sie, dass die Auflösung mehrerer Peer Namen durch die Verwendung der Resolve-Methode für einen einzelnen Peer namens Daten Satz nicht ungültig wird.</span><span class="sxs-lookup"><span data-stu-id="2d749-132">Note that using the Resolve method on an individual peer name record does not invalidate resolving multiple peer names.</span></span>  
  
 <span data-ttu-id="2d749-133">Für jede <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> Methode gibt es eine äquivalente <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="2d749-133">For every <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> method, there is an equivalent <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> method.</span></span>  <span data-ttu-id="2d749-134">Die Parameterlisten sind identisch, mit der Ausnahme, dass die ResolveAsync-Methode ein System Token für die asynchrone Ereignisverarbeitung enthält.</span><span class="sxs-lookup"><span data-stu-id="2d749-134">Their parameter lists are identical, except that the ResolveAsync method includes a system token for asynchronous event handling.</span></span>  
  
 <span data-ttu-id="2d749-135">Wenn der- <xref:System.Net.PeerToPeer.Cloud> Parameter nicht angegeben wird, verwendet die-Methode die <xref:System.Net.PeerToPeer.Cloud.Available> Verknüpfung, um cloudparameter auszufüllen.</span><span class="sxs-lookup"><span data-stu-id="2d749-135">If the <xref:System.Net.PeerToPeer.Cloud> parameter is not supplied, the method uses the <xref:System.Net.PeerToPeer.Cloud.Available> shortcut to fill in cloud parameters.</span></span>  
  
 <span data-ttu-id="2d749-136">Das <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> Ereignis wird ausgelöst, wenn der Auflösungs Vorgang fehlerhaft abgeschlossen oder abgebrochen wird.</span><span class="sxs-lookup"><span data-stu-id="2d749-136">The <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> event will be raised if the resolve operation completes in error or is canceled.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2d749-137">Im folgenden Codebeispiel wird veranschaulicht, wie eine <xref:System.Net.PeerToPeer.PeerName> in einem veröffentlichte aufgelöst wird <xref:System.Net.PeerToPeer.Cloud> .</span><span class="sxs-lookup"><span data-stu-id="2d749-137">The following code example illustrates how to resolve a <xref:System.Net.PeerToPeer.PeerName> published in any <xref:System.Net.PeerToPeer.Cloud>.</span></span>  
  
 [!code-csharp[NCLPNRPPeerNameResolver#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPNRPPeerNameResolver/CS/PeerNameResolver.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2d749-138">Der <paramref name="peerName" />-Parameter ist auf <see langword="null" /> festgelegt.</span><span class="sxs-lookup"><span data-stu-id="2d749-138">The <paramref name="peerName" /> parameter is set to <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException"><span data-ttu-id="2d749-139">Der angegebene Peername kann nicht aufgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="2d749-139">The peer name specified cannot be resolved.</span></span></exception>
        <altmember cref="T:System.Net.PeerToPeer.PeerNameRegistration" />
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.PeerNameRecordCollection Resolve (System.Net.PeerToPeer.PeerName peerName, int maxRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.PeerToPeer.PeerNameRecordCollection Resolve(class System.Net.PeerToPeer.PeerName peerName, int32 maxRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Resolve (peerName As PeerName, maxRecords As Integer) As PeerNameRecordCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::PeerToPeer::PeerNameRecordCollection ^ Resolve(System::Net::PeerToPeer::PeerName ^ peerName, int maxRecords);" />
      <MemberSignature Language="F#" Value="member this.Resolve : System.Net.PeerToPeer.PeerName * int -&gt; System.Net.PeerToPeer.PeerNameRecordCollection" Usage="peerNameResolver.Resolve (peerName, maxRecords)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.PeerNameRecordCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerName" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="maxRecords" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="peerName"><span data-ttu-id="2d749-140">Der aufzulösende <see cref="T:System.Net.PeerToPeer.PeerName" />.</span><span class="sxs-lookup"><span data-stu-id="2d749-140">The <see cref="T:System.Net.PeerToPeer.PeerName" /> to resolve.</span></span></param>
        <param name="maxRecords"><span data-ttu-id="2d749-141">Die maximale Anzahl von <see cref="T:System.Net.PeerToPeer.PeerNameRecord" />-Objekten, die aus allen <see cref="T:System.Net.PeerToPeer.Cloud" />-Objekten für den angegebenen <paramref name="peerName" /> abgerufen werden können.</span><span class="sxs-lookup"><span data-stu-id="2d749-141">The maximum number of <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> objects to obtain from all <see cref="T:System.Net.PeerToPeer.Cloud" /> objects for the supplied <paramref name="peerName" />.</span></span></param>
        <summary><span data-ttu-id="2d749-142">Löst den angegebenen Peernamen in allen Wolken auf, die dem aufrufenden Peer bekannt sind, und gibt nicht mehr als die angegebene Anzahl von <see cref="T:System.Net.PeerToPeer.PeerNameRecord" />-Objekten zurück.</span><span class="sxs-lookup"><span data-stu-id="2d749-142">Resolves the specified peer name in all clouds known to the calling peer, returning no more than the specified number of <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> objects.</span></span></summary>
        <returns><span data-ttu-id="2d749-143">Eine <see cref="T:System.Net.PeerToPeer.PeerNameRecordCollection" />, deren Größe kleiner oder gleich der mit <paramref name="maxRecords" /> angegebenen Anzahl von Einträgen ist.</span><span class="sxs-lookup"><span data-stu-id="2d749-143">A <see cref="T:System.Net.PeerToPeer.PeerNameRecordCollection" /> whose size is less than or equal to <paramref name="maxRecords" /> entries.</span></span> <span data-ttu-id="2d749-144">Diese Auflistung enthält Peernamensdatensätze, die dem aufgelösten <see cref="T:System.Net.PeerToPeer.PeerName" /> zugeordnet sind.</span><span class="sxs-lookup"><span data-stu-id="2d749-144">This collection contains peer name records associated with the <see cref="T:System.Net.PeerToPeer.PeerName" /> that was resolved.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d749-145">Diese Methode ordnet Clouds einen Peernamen zu.</span><span class="sxs-lookup"><span data-stu-id="2d749-145">This method associates a peer name to clouds.</span></span> <span data-ttu-id="2d749-146">Alle Clouds werden nach dem Peernamen abgefragt.</span><span class="sxs-lookup"><span data-stu-id="2d749-146">All clouds are queried for the peer name.</span></span> <span data-ttu-id="2d749-147">Bei ungesicherten Peernamen kann derselbe PeerName von verschiedenen Benutzern im selben registriert <xref:System.Net.PeerToPeer.Cloud> und mit anderen Endpunkten verknüpft werden.</span><span class="sxs-lookup"><span data-stu-id="2d749-147">For unsecured peer names, the same peer name can be registered by different users in the same <xref:System.Net.PeerToPeer.Cloud>, and associated with different endpoints.</span></span> <span data-ttu-id="2d749-148">Wenn <xref:System.Net.PeerToPeer.PeerName> nicht aufgelöst werden kann (z. b. wenn der PeerName nicht veröffentlicht wird), wird eine ausgelöst <xref:System.Net.PeerToPeer.PeerToPeerException> .</span><span class="sxs-lookup"><span data-stu-id="2d749-148">If the <xref:System.Net.PeerToPeer.PeerName> cannot be resolved (for example, the peer name is not published) an <xref:System.Net.PeerToPeer.PeerToPeerException> is thrown.</span></span>  
  
 <span data-ttu-id="2d749-149">Für jede <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> Methode gibt es eine äquivalente <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="2d749-149">For every <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> method, there is an equivalent <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> method.</span></span>  <span data-ttu-id="2d749-150">Die Parameterlisten sind identisch, mit der Ausnahme, dass die ResolveAsync-Methode ein System Token für die asynchrone Ereignisverarbeitung enthält.</span><span class="sxs-lookup"><span data-stu-id="2d749-150">Their parameter lists are identical, except that the ResolveAsync method includes a system token for asynchronous event handling.</span></span>  
  
 <span data-ttu-id="2d749-151">Das <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> Ereignis wird ausgelöst, wenn der Auflösungs Vorgang fehlerhaft abgeschlossen oder abgebrochen wird.</span><span class="sxs-lookup"><span data-stu-id="2d749-151">The <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> event will be raised if the resolve operation completes in error or is canceled.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2d749-152">Der <paramref name="peerName" />-Parameter ist auf <see langword="null" /> festgelegt.</span><span class="sxs-lookup"><span data-stu-id="2d749-152">The <paramref name="peerName" /> parameter is set to <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="2d749-153">Der <paramref name="maxRecords" />-Parameter ist kleiner oder gleich 0 (null).</span><span class="sxs-lookup"><span data-stu-id="2d749-153">The <paramref name="maxRecords" /> parameter is less than or equal to zero.</span></span></exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException"><span data-ttu-id="2d749-154">Der angegebene Peername kann nicht aufgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="2d749-154">The supplied peer name cannot be resolved.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.PeerNameRecordCollection Resolve (System.Net.PeerToPeer.PeerName peerName, System.Net.PeerToPeer.Cloud cloud);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.PeerToPeer.PeerNameRecordCollection Resolve(class System.Net.PeerToPeer.PeerName peerName, class System.Net.PeerToPeer.Cloud cloud) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud)" />
      <MemberSignature Language="VB.NET" Value="Public Function Resolve (peerName As PeerName, cloud As Cloud) As PeerNameRecordCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::PeerToPeer::PeerNameRecordCollection ^ Resolve(System::Net::PeerToPeer::PeerName ^ peerName, System::Net::PeerToPeer::Cloud ^ cloud);" />
      <MemberSignature Language="F#" Value="member this.Resolve : System.Net.PeerToPeer.PeerName * System.Net.PeerToPeer.Cloud -&gt; System.Net.PeerToPeer.PeerNameRecordCollection" Usage="peerNameResolver.Resolve (peerName, cloud)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.PeerNameRecordCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerName" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="cloud" Type="System.Net.PeerToPeer.Cloud" />
      </Parameters>
      <Docs>
        <param name="peerName"><span data-ttu-id="2d749-155">Der aufzulösende <see cref="T:System.Net.PeerToPeer.PeerName" />.</span><span class="sxs-lookup"><span data-stu-id="2d749-155">The <see cref="T:System.Net.PeerToPeer.PeerName" /> to resolve.</span></span></param>
        <param name="cloud"><span data-ttu-id="2d749-156">Die <see cref="T:System.Net.PeerToPeer.Cloud" />, in der der Peername aufgelöst werden soll.</span><span class="sxs-lookup"><span data-stu-id="2d749-156">The <see cref="T:System.Net.PeerToPeer.Cloud" /> in which to resolve the peer name.</span></span></param>
        <summary><span data-ttu-id="2d749-157">Löst den angegebenen <see cref="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" /> in der angegebenen <see cref="T:System.Net.PeerToPeer.Cloud" /> auf.</span><span class="sxs-lookup"><span data-stu-id="2d749-157">Resolves the specified <see cref="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" /> in the specified <see cref="T:System.Net.PeerToPeer.Cloud" />.</span></span></summary>
        <returns><span data-ttu-id="2d749-158">Eine <see cref="T:System.Net.PeerToPeer.PeerNameRecordCollection" />, die alle Peernamensdatensätze enthält (als <see cref="T:System.Net.PeerToPeer.PeerNameRecord" />-Objekte dargestellt), die dem angegebenen Peernamen zugeordnet sind.</span><span class="sxs-lookup"><span data-stu-id="2d749-158"><see cref="T:System.Net.PeerToPeer.PeerNameRecordCollection" /> that contains all peer name records (represented as <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> objects) associated with the specified peer name.</span></span> <span data-ttu-id="2d749-159">Bei ungesicherten Peernamen kann der gleiche <see cref="T:System.Net.PeerToPeer.PeerName" /> von mehreren Benutzern in derselben <see cref="T:System.Net.PeerToPeer.Cloud" /> registriert werden und unterschiedlichen Endpunkten zugeordnet werden.</span><span class="sxs-lookup"><span data-stu-id="2d749-159">For unsecured peer names, the same <see cref="T:System.Net.PeerToPeer.PeerName" /> can be registered by different users in the same <see cref="T:System.Net.PeerToPeer.Cloud" />, and associated with different endpoints.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d749-160">Wenn <xref:System.Net.PeerToPeer.PeerName> nicht aufgelöst werden kann (d. h., der PeerName wird nicht veröffentlicht), wird eine ausgelöst <xref:System.Net.PeerToPeer.PeerToPeerException> .</span><span class="sxs-lookup"><span data-stu-id="2d749-160">If the <xref:System.Net.PeerToPeer.PeerName> cannot be resolved (that is, the peer name is not published) an <xref:System.Net.PeerToPeer.PeerToPeerException> is thrown.</span></span>  
  
 <span data-ttu-id="2d749-161">Bei ungesicherten Peernamen kann derselbe Name von verschiedenen Peers innerhalb derselben Cloud registriert (und mit anderen Endpunkten verknüpft) werden.</span><span class="sxs-lookup"><span data-stu-id="2d749-161">For unsecured peer names, the same name can be registered (and associated with different endpoints) by different peers within the same cloud.</span></span>  
  
 <span data-ttu-id="2d749-162">Für jede <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> Methode gibt es eine äquivalente <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="2d749-162">For every <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> method, there is an equivalent <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> method.</span></span>  <span data-ttu-id="2d749-163">Die Parameterlisten sind identisch, mit der Ausnahme, dass die ResolveAsync-Methode ein System Token für die asynchrone Ereignisverarbeitung enthält.</span><span class="sxs-lookup"><span data-stu-id="2d749-163">Their parameter lists are identical, except that the ResolveAsync method includes a system token for asynchronous event handling.</span></span>  
  
 <span data-ttu-id="2d749-164">Wenn der- <xref:System.Net.PeerToPeer.Cloud> Parameter ist `null` , <xref:System.Net.PeerToPeer.PeerNameResolver> verwendet die <xref:System.Net.PeerToPeer.Cloud.Available> Verknüpfung, um die Werte <xref:System.Net.PeerToPeer.Cloud.Name%2A> , <xref:System.Net.PeerToPeer.Cloud.Scope%2A> und auszufüllen <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A> .</span><span class="sxs-lookup"><span data-stu-id="2d749-164">If the <xref:System.Net.PeerToPeer.Cloud> parameter is `null`, the <xref:System.Net.PeerToPeer.PeerNameResolver> uses the <xref:System.Net.PeerToPeer.Cloud.Available> shortcut to fill in the <xref:System.Net.PeerToPeer.Cloud.Name%2A>, <xref:System.Net.PeerToPeer.Cloud.Scope%2A>, and <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A>.</span></span>  
  
 <span data-ttu-id="2d749-165">Das <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> Ereignis wird ausgelöst, wenn der Auflösungs Vorgang fehlerhaft abgeschlossen oder abgebrochen wird.</span><span class="sxs-lookup"><span data-stu-id="2d749-165">The <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> event will be raised if the resolve operation completes in error or is canceled.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2d749-166">Der <paramref name="peerName" />-Parameter ist auf <see langword="null" /> festgelegt.</span><span class="sxs-lookup"><span data-stu-id="2d749-166">The <paramref name="peerName" /> parameter is set to <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException"><span data-ttu-id="2d749-167">Der angegebene Peername kann nicht aufgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="2d749-167">The supplied peer name cannot be resolved.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.PeerNameRecordCollection Resolve (System.Net.PeerToPeer.PeerName peerName, System.Net.PeerToPeer.Cloud cloud, int maxRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.PeerToPeer.PeerNameRecordCollection Resolve(class System.Net.PeerToPeer.PeerName peerName, class System.Net.PeerToPeer.Cloud cloud, int32 maxRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Resolve (peerName As PeerName, cloud As Cloud, maxRecords As Integer) As PeerNameRecordCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::PeerToPeer::PeerNameRecordCollection ^ Resolve(System::Net::PeerToPeer::PeerName ^ peerName, System::Net::PeerToPeer::Cloud ^ cloud, int maxRecords);" />
      <MemberSignature Language="F#" Value="member this.Resolve : System.Net.PeerToPeer.PeerName * System.Net.PeerToPeer.Cloud * int -&gt; System.Net.PeerToPeer.PeerNameRecordCollection" Usage="peerNameResolver.Resolve (peerName, cloud, maxRecords)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.PeerNameRecordCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerName" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="cloud" Type="System.Net.PeerToPeer.Cloud" />
        <Parameter Name="maxRecords" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="peerName"><span data-ttu-id="2d749-168">Der aufzulösende <see cref="T:System.Net.PeerToPeer.PeerName" />.</span><span class="sxs-lookup"><span data-stu-id="2d749-168">The <see cref="T:System.Net.PeerToPeer.PeerName" /> to resolve.</span></span></param>
        <param name="cloud"><span data-ttu-id="2d749-169">Die <see cref="T:System.Net.PeerToPeer.Cloud" />, in der der <paramref name="peerName" /> aufgelöst werden soll.</span><span class="sxs-lookup"><span data-stu-id="2d749-169">The <see cref="T:System.Net.PeerToPeer.Cloud" /> in which to resolve the <paramref name="peerName" />.</span></span></param>
        <param name="maxRecords"><span data-ttu-id="2d749-170">Die maximale Anzahl von Peernamensdatensatz-Objekten, die aus der angegebenen Wolke für den angegebenen <paramref name="peerName" /> abgerufen werden sollen.</span><span class="sxs-lookup"><span data-stu-id="2d749-170">The maximum number of peer name record objects to obtain from the specified cloud for the specified <paramref name="peerName" />.</span></span></param>
        <summary><span data-ttu-id="2d749-171">Löst den angegebenen <see cref="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" /> in der angegebenen <see cref="T:System.Net.PeerToPeer.Cloud" /> auf und gibt nicht mehr als die angegebene Anzahl von <see cref="T:System.Net.PeerToPeer.PeerNameRecord" />-Objekten zurück.</span><span class="sxs-lookup"><span data-stu-id="2d749-171">Resolves the specified <see cref="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" /> in the specified <see cref="T:System.Net.PeerToPeer.Cloud" />, returning no more than the specified number of <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> objects.</span></span></summary>
        <returns><span data-ttu-id="2d749-172">Eine <see cref="T:System.Net.PeerToPeer.PeerNameRecordCollection" />, deren Größe kleiner oder gleich der mit <paramref name="maxRecords" /> angegebenen Anzahl von Einträgen ist.</span><span class="sxs-lookup"><span data-stu-id="2d749-172">A <see cref="T:System.Net.PeerToPeer.PeerNameRecordCollection" /> whose size is less than or equal to <paramref name="maxRecords" /> entries.</span></span> <span data-ttu-id="2d749-173">Diese Auflistung enthält Peernamensdatensätze, die dem aufgelösten <see cref="T:System.Net.PeerToPeer.PeerName" /> zugeordnet sind.</span><span class="sxs-lookup"><span data-stu-id="2d749-173">This collection contains peer name records associated with the <see cref="T:System.Net.PeerToPeer.PeerName" /> that was resolved.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d749-174">Bei ungesicherten Peernamen kann derselbe Name von verschiedenen Peers innerhalb derselben Cloud registriert (und mit anderen Endpunkten verknüpft) werden.</span><span class="sxs-lookup"><span data-stu-id="2d749-174">For unsecured peer names, the same name can be registered (and associated with different endpoints) by different peers within the same cloud.</span></span> <span data-ttu-id="2d749-175">Wenn der PeerName nicht aufgelöst werden kann, wird eine ausgelöst <xref:System.Net.PeerToPeer.PeerToPeerException> .</span><span class="sxs-lookup"><span data-stu-id="2d749-175">If the peer name cannot be resolved, an <xref:System.Net.PeerToPeer.PeerToPeerException> is thrown.</span></span>  
  
 <span data-ttu-id="2d749-176">Für jede <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> Methode gibt es eine äquivalente <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="2d749-176">For every <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> method, there is an equivalent <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> method.</span></span>  <span data-ttu-id="2d749-177">Die Parameterlisten sind identisch, mit der Ausnahme, dass die ResolveAsync-Methode ein System Token für die asynchrone Ereignisverarbeitung enthält.</span><span class="sxs-lookup"><span data-stu-id="2d749-177">Their parameter lists are identical, except that the ResolveAsync method includes a system token for asynchronous event handling.</span></span>  
  
 <span data-ttu-id="2d749-178">Wenn der- <xref:System.Net.PeerToPeer.Cloud> Parameter ist `null` , <xref:System.Net.PeerToPeer.PeerNameResolver> verwendet die <xref:System.Net.PeerToPeer.Cloud.Available> Verknüpfung, um die Werte <xref:System.Net.PeerToPeer.Cloud.Name%2A> , <xref:System.Net.PeerToPeer.Cloud.Scope%2A> und auszufüllen <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A> .</span><span class="sxs-lookup"><span data-stu-id="2d749-178">If the <xref:System.Net.PeerToPeer.Cloud> parameter is `null`, the <xref:System.Net.PeerToPeer.PeerNameResolver> uses the <xref:System.Net.PeerToPeer.Cloud.Available> shortcut to fill in the <xref:System.Net.PeerToPeer.Cloud.Name%2A>, <xref:System.Net.PeerToPeer.Cloud.Scope%2A>, and <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A>.</span></span>  
  
 <span data-ttu-id="2d749-179">Das <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> Ereignis wird ausgelöst, wenn der Auflösungs Vorgang fehlerhaft abgeschlossen oder abgebrochen wird.</span><span class="sxs-lookup"><span data-stu-id="2d749-179">The <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> event will be raised if the resolve operation completes in error or is canceled.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2d749-180">Der <paramref name="peerName" />-Parameter ist auf <see langword="null" /> festgelegt.</span><span class="sxs-lookup"><span data-stu-id="2d749-180">The <paramref name="peerName" /> parameter is set to <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="2d749-181">Der <paramref name="maxRecords" />-Parameter ist kleiner oder gleich 0 (null).</span><span class="sxs-lookup"><span data-stu-id="2d749-181">The <paramref name="maxRecords" /> parameter is less than or equal to zero.</span></span></exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException"><span data-ttu-id="2d749-182">Der angegebene Peername kann nicht aufgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="2d749-182">The supplied peer name cannot be resolved.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ResolveAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2d749-183">Diese Methoden starten die asynchrone Auflösung für den angegebenen <see cref="T:System.Net.PeerToPeer.PeerName" /> in allen Wolken, die dem aufrufenden Peer bekannt sind.</span><span class="sxs-lookup"><span data-stu-id="2d749-183">These methods begin an asynchronous resolution operation for the specified <see cref="T:System.Net.PeerToPeer.PeerName" /> in all clouds known to the calling peer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d749-184">Für jede <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> Methode gibt es eine äquivalente- <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> Methode, die verwendet wird, wenn eine asynchrone Verarbeitung erforderlich ist.</span><span class="sxs-lookup"><span data-stu-id="2d749-184">For every <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> method, there is an equivalent <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> method, which is used when asynchronous processing is required.</span></span>  <span data-ttu-id="2d749-185">Sie sind in den übergebenen Parametern identisch, mit dem Unterschied, dass ResolveAsync in der Parameterliste für die Ereignis Behandlung ein System Token enthält.</span><span class="sxs-lookup"><span data-stu-id="2d749-185">They are identical in the parameters they are passed, except that ResolveAsync includes a system token in its parameter list for event handling.</span></span>  
  
 <span data-ttu-id="2d749-186">Wenn ein Parameter Konflikt zwischen der Resolve-Methode und der ResolveAsync-Methode auftritt und der- <xref:System.Net.PeerToPeer.Cloud> Parameter nicht angegeben wird, verwendet die-Methode die <xref:System.Net.PeerToPeer.Cloud.Available> Verknüpfung, um cloudparameter auszufüllen.</span><span class="sxs-lookup"><span data-stu-id="2d749-186">If a parameter mismatch occurs between the Resolve method and the ResolveAsync method, and the <xref:System.Net.PeerToPeer.Cloud> parameter is not supplied, the method uses the <xref:System.Net.PeerToPeer.Cloud.Available> shortcut to fill in cloud parameters.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="ResolveAsync">
      <MemberSignature Language="C#" Value="public void ResolveAsync (System.Net.PeerToPeer.PeerName peerName, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResolveAsync(class System.Net.PeerToPeer.PeerName peerName, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResolveAsync (peerName As PeerName, userState As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResolveAsync(System::Net::PeerToPeer::PeerName ^ peerName, System::Object ^ userState);" />
      <MemberSignature Language="F#" Value="member this.ResolveAsync : System.Net.PeerToPeer.PeerName * obj -&gt; unit" Usage="peerNameResolver.ResolveAsync (peerName, userState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerName" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="peerName"><span data-ttu-id="2d749-187">Der aufzulösende <see cref="T:System.Net.PeerToPeer.PeerName" />.</span><span class="sxs-lookup"><span data-stu-id="2d749-187">The <see cref="T:System.Net.PeerToPeer.PeerName" /> to resolve.</span></span></param>
        <param name="userState"><span data-ttu-id="2d749-188">Ein benutzerdefiniertes Objekt, das Statusinformationen über die Peernamenauflösung enthält.</span><span class="sxs-lookup"><span data-stu-id="2d749-188">A user-defined object that contains state information about the peer name resolution operation.</span></span></param>
        <summary><span data-ttu-id="2d749-189">Beginnt eine asynchrone Peernamenauflösung für den angegebenen <see cref="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" /> in allen Clouds, die dem aufrufenden Peer bekannt sind.</span><span class="sxs-lookup"><span data-stu-id="2d749-189">Begins an asynchronous peer name resolution operation for the specified <see cref="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" /> in all clouds known to the calling peer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d749-190">Diese Methode ordnet den Clouds asynchron einen Peernamen zu.</span><span class="sxs-lookup"><span data-stu-id="2d749-190">This method asynchronously associates a peer name to clouds.</span></span> <span data-ttu-id="2d749-191">Alle Clouds werden für das abgefragt <xref:System.Net.PeerToPeer.PeerName> .</span><span class="sxs-lookup"><span data-stu-id="2d749-191">All clouds are queried for the <xref:System.Net.PeerToPeer.PeerName>.</span></span> <span data-ttu-id="2d749-192">Es löst das- <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> Ereignis aus, das wiederum die- <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A> Methode aufruft.</span><span class="sxs-lookup"><span data-stu-id="2d749-192">It raises the <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> event, which calls back to the <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A> method.</span></span> <span data-ttu-id="2d749-193">Oder es wird das- <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged> Ereignis ausgelöst, das an die- <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A> Methode zurückgibt.</span><span class="sxs-lookup"><span data-stu-id="2d749-193">Or, it raises the <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged> event, which calls back to the <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A> method.</span></span>  
  
 <span data-ttu-id="2d749-194">Wenn der PeerName nicht aufgelöst werden kann, wird eine ausgelöst <xref:System.Net.PeerToPeer.PeerToPeerException> .</span><span class="sxs-lookup"><span data-stu-id="2d749-194">If the peer name cannot be resolved, an <xref:System.Net.PeerToPeer.PeerToPeerException> is thrown.</span></span>  
  
 <span data-ttu-id="2d749-195">Bei ungesicherten Peernamen kann derselbe Name von verschiedenen Peers innerhalb derselben Cloud registriert (und mit anderen Endpunkten verknüpft) werden.</span><span class="sxs-lookup"><span data-stu-id="2d749-195">For unsecured peer names, the same name can be registered (and associated with different endpoints) by different peers within the same cloud.</span></span>  
  
 <span data-ttu-id="2d749-196">Das Aufrufen der- <xref:System.Net.PeerToPeer.PeerNameResolver> Methode ähnelt dem Aufrufen der- <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> Methode für jeden Peer namens Daten Satz in <xref:System.Net.PeerToPeer.PeerNameRecordCollection> .</span><span class="sxs-lookup"><span data-stu-id="2d749-196">Calling the <xref:System.Net.PeerToPeer.PeerNameResolver> method is similar to calling the <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> method for each peer name record in the <xref:System.Net.PeerToPeer.PeerNameRecordCollection>.</span></span> <span data-ttu-id="2d749-197">Beachten Sie, dass die Auflösung mehrerer Peer Namen durch die Verwendung der Resolve-Methode für einen einzelnen Peer namens Daten Satz nicht ungültig wird.</span><span class="sxs-lookup"><span data-stu-id="2d749-197">Note that using the Resolve method on an individual peer name record does not invalidate resolving multiple peer names.</span></span>  
  
 <span data-ttu-id="2d749-198">Für jede <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> Methode gibt es eine äquivalente <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="2d749-198">For every <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> method, there is an equivalent <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> method.</span></span>  <span data-ttu-id="2d749-199">Die Parameterlisten sind identisch, mit der Ausnahme, dass die ResolveAsync-Methode ein System Token für die asynchrone Ereignisverarbeitung enthält und die Resolve-Methode für die synchrone Verarbeitung vorgesehen ist.</span><span class="sxs-lookup"><span data-stu-id="2d749-199">Their parameter lists are identical, except that the ResolveAsync method includes a system token for asynchronous event handling, and the Resolve method is intended for synchronous processing.</span></span>  
  
 <span data-ttu-id="2d749-200">Alle asynchronen Verweise auf das Konflikt Löser-Objekt werden mit einem eindeutigen Bezeichnertoken koordiniert.</span><span class="sxs-lookup"><span data-stu-id="2d749-200">All asynchronous references to the resolver object are coordinated with a unique identifier token.</span></span> <span data-ttu-id="2d749-201">Dieses `userState` Token oder diese Nachrichten Kennung ermöglicht einem Betriebssystem, eine Nachricht an einen einzelnen empfangenden Prozess zu übermitteln, nachdem die Nachricht in der Nachrichten Warteschlange abgelegt wurde.</span><span class="sxs-lookup"><span data-stu-id="2d749-201">This `userState` token or message identifier allows an operating system to deliver a message to a single receiving process after the message has been placed on the message queue.</span></span>  
  
 <span data-ttu-id="2d749-202">Das <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> Ereignis wird ausgelöst, wenn der Auflösungs Vorgang fehlerhaft abgeschlossen oder abgebrochen wird.</span><span class="sxs-lookup"><span data-stu-id="2d749-202">The <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> event will be raised if the resolve operation completes in error or is canceled.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2d749-203">Ein oder beide <paramref name="peerName" />- und <paramref name="userState" />-Parameter werden auf <see langword="null" /> festgelegt.</span><span class="sxs-lookup"><span data-stu-id="2d749-203">One or both of the <paramref name="peerName" /> and <paramref name="userState" /> parameters are set to <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ResolveAsync">
      <MemberSignature Language="C#" Value="public void ResolveAsync (System.Net.PeerToPeer.PeerName peerName, int maxRecords, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResolveAsync(class System.Net.PeerToPeer.PeerName peerName, int32 maxRecords, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResolveAsync (peerName As PeerName, maxRecords As Integer, userState As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResolveAsync(System::Net::PeerToPeer::PeerName ^ peerName, int maxRecords, System::Object ^ userState);" />
      <MemberSignature Language="F#" Value="member this.ResolveAsync : System.Net.PeerToPeer.PeerName * int * obj -&gt; unit" Usage="peerNameResolver.ResolveAsync (peerName, maxRecords, userState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerName" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="maxRecords" Type="System.Int32" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="peerName"><span data-ttu-id="2d749-204">Der aufzulösende <see cref="T:System.Net.PeerToPeer.PeerName" />.</span><span class="sxs-lookup"><span data-stu-id="2d749-204">The <see cref="T:System.Net.PeerToPeer.PeerName" /> to resolve.</span></span></param>
        <param name="maxRecords"><span data-ttu-id="2d749-205">Die maximale Anzahl von Datensätzen, die für den Peernamen abgerufen werden sollen.</span><span class="sxs-lookup"><span data-stu-id="2d749-205">The maximum number of records to obtain for the Peer Name.</span></span></param>
        <param name="userState"><span data-ttu-id="2d749-206">Ein benutzerdefiniertes Objekt, das Informationen über den Auflösungsvorgang enthält.</span><span class="sxs-lookup"><span data-stu-id="2d749-206">A user-defined object that contains information about the resolve operation.</span></span></param>
        <summary><span data-ttu-id="2d749-207">Beginnt eine asynchrone Peernamenauflösung für den angegebenen <see cref="T:System.Net.PeerToPeer.PeerName" /> in allen Clouds, die dem aufrufenden Peer bekannt sind, wobei nicht mehr als <paramref name="maxRecords" /> Einträge für den Peernamen zurückgegeben werden.</span><span class="sxs-lookup"><span data-stu-id="2d749-207">Begins an asynchronous peer name resolution operation for the specified <see cref="T:System.Net.PeerToPeer.PeerName" /> in all clouds known to the calling peer, returning no more than <paramref name="maxRecords" /> entries for the peer name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d749-208">Diese Methode ordnet den Clouds asynchron einen Peernamen zu.</span><span class="sxs-lookup"><span data-stu-id="2d749-208">This method asynchronously associates a peer name to clouds.</span></span> <span data-ttu-id="2d749-209">Alle Clouds werden für das abgefragt <xref:System.Net.PeerToPeer.PeerName> .</span><span class="sxs-lookup"><span data-stu-id="2d749-209">All clouds are queried for the <xref:System.Net.PeerToPeer.PeerName>.</span></span> <span data-ttu-id="2d749-210">Bei ungesicherten Peernamen kann derselbe Name von verschiedenen Peers innerhalb derselben Cloud registriert (und mit anderen Endpunkten verknüpft) werden.</span><span class="sxs-lookup"><span data-stu-id="2d749-210">For unsecured peer names, the same name can be registered (and associated with different endpoints) by different peers within the same cloud.</span></span> <span data-ttu-id="2d749-211">Wenn der PeerName nicht aufgelöst werden kann oder ist `null` , wird eine ausgelöst <xref:System.Net.PeerToPeer.PeerToPeerException> .</span><span class="sxs-lookup"><span data-stu-id="2d749-211">If the peer name cannot be resolved or is `null`, an <xref:System.Net.PeerToPeer.PeerToPeerException> is thrown.</span></span>  
  
 <span data-ttu-id="2d749-212">Diese Methode löst das- <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> Ereignis aus, das an die-Methode zurückgibt <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A> .</span><span class="sxs-lookup"><span data-stu-id="2d749-212">This method raises the <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> event, which calls back to the <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A> method.</span></span> <span data-ttu-id="2d749-213">Oder es wird das- <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged> Ereignis ausgelöst, das an die- <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A> Methode zurückgibt.</span><span class="sxs-lookup"><span data-stu-id="2d749-213">Or, it raises the <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged> event, which calls back to the <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A> method.</span></span>  
  
 <span data-ttu-id="2d749-214">Für jede <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> Methode gibt es eine äquivalente <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="2d749-214">For every <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> method, there is an equivalent <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> method.</span></span>  <span data-ttu-id="2d749-215">Die Parameterlisten sind identisch, mit der Ausnahme, dass die ResolveAsync-Methode ein System Token für die asynchrone Ereignisverarbeitung enthält und die Resolve-Methode für die synchrone Verarbeitung vorgesehen ist.</span><span class="sxs-lookup"><span data-stu-id="2d749-215">Their parameter lists are identical, except that the ResolveAsync method includes a system token for asynchronous event handling, and the Resolve method is intended for synchronous processing.</span></span>  
  
 <span data-ttu-id="2d749-216">Alle asynchronen Verweise auf das Konflikt Löser-Objekt werden mit einem eindeutigen Bezeichnertoken koordiniert <xref:System.Object> .</span><span class="sxs-lookup"><span data-stu-id="2d749-216">All asynchronous references to the resolver object are coordinated with a unique identifier token <xref:System.Object>.</span></span> <span data-ttu-id="2d749-217">Dieses `userState` Token oder diese Nachrichten Kennung ermöglicht einem Betriebssystem, eine Nachricht an einen einzelnen empfangenden Prozess zu übermitteln, nachdem die Nachricht in der Nachrichten Warteschlange abgelegt wurde.</span><span class="sxs-lookup"><span data-stu-id="2d749-217">This `userState` token or message identifier allows an operating system to deliver a message to a single receiving process after the message has been placed on the message queue.</span></span>  
  
 <span data-ttu-id="2d749-218">Das <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> Ereignis wird ausgelöst, wenn der Auflösungs Vorgang fehlerhaft abgeschlossen oder abgebrochen wird.</span><span class="sxs-lookup"><span data-stu-id="2d749-218">The <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> event will be raised if the resolve operation completes in error or is canceled.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2d749-219">Ein oder beide <paramref name="peerName" />- und <paramref name="userState" />-Parameter werden auf <see langword="null" /> festgelegt.</span><span class="sxs-lookup"><span data-stu-id="2d749-219">One or both of the <paramref name="peerName" /> and <paramref name="userState" /> parameters are set to <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="2d749-220">Der <paramref name="maxRecords" />-Parameter ist kleiner oder gleich 0 (null).</span><span class="sxs-lookup"><span data-stu-id="2d749-220">The <paramref name="maxRecords" /> parameter is less than or equal to zero.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ResolveAsync">
      <MemberSignature Language="C#" Value="public void ResolveAsync (System.Net.PeerToPeer.PeerName peerName, System.Net.PeerToPeer.Cloud cloud, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResolveAsync(class System.Net.PeerToPeer.PeerName peerName, class System.Net.PeerToPeer.Cloud cloud, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResolveAsync (peerName As PeerName, cloud As Cloud, userState As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResolveAsync(System::Net::PeerToPeer::PeerName ^ peerName, System::Net::PeerToPeer::Cloud ^ cloud, System::Object ^ userState);" />
      <MemberSignature Language="F#" Value="member this.ResolveAsync : System.Net.PeerToPeer.PeerName * System.Net.PeerToPeer.Cloud * obj -&gt; unit" Usage="peerNameResolver.ResolveAsync (peerName, cloud, userState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerName" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="cloud" Type="System.Net.PeerToPeer.Cloud" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="peerName"><span data-ttu-id="2d749-221">Der aufzulösende <see cref="T:System.Net.PeerToPeer.PeerName" />.</span><span class="sxs-lookup"><span data-stu-id="2d749-221">The <see cref="T:System.Net.PeerToPeer.PeerName" /> to resolve.</span></span></param>
        <param name="cloud"><span data-ttu-id="2d749-222">Die <see cref="T:System.Net.PeerToPeer.Cloud" />, in der der <paramref name="peerName" /> aufgelöst werden soll.</span><span class="sxs-lookup"><span data-stu-id="2d749-222">The <see cref="T:System.Net.PeerToPeer.Cloud" /> in which to resolve the <paramref name="peerName" />.</span></span></param>
        <param name="userState"><span data-ttu-id="2d749-223">Ein benutzerdefiniertes <see cref="T:System.Object" />, das Informationen über die Peernamenauflösung enthält.</span><span class="sxs-lookup"><span data-stu-id="2d749-223">A user-defined <see cref="T:System.Object" /> that contains information about the peer name resolution operation.</span></span></param>
        <summary><span data-ttu-id="2d749-224">Beginnt eine asynchrone Peernamensauflösung für den angegebenen <see cref="T:System.Net.PeerToPeer.PeerName" /> in der angegebenen <see cref="T:System.Net.PeerToPeer.Cloud" />.</span><span class="sxs-lookup"><span data-stu-id="2d749-224">Begins an asynchronous peer name resolution operation for the specified <see cref="T:System.Net.PeerToPeer.PeerName" /> in the specified <see cref="T:System.Net.PeerToPeer.Cloud" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d749-225">Diese Methode löst das- <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> Ereignis aus, das an die-Methode zurückgibt <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A> .</span><span class="sxs-lookup"><span data-stu-id="2d749-225">This method raises the <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> event, which calls back to the <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A> method.</span></span> <span data-ttu-id="2d749-226">Oder es wird das- <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged> Ereignis ausgelöst, das an die- <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A> Methode zurückgibt.</span><span class="sxs-lookup"><span data-stu-id="2d749-226">Or, it raises the <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged> event, which calls back to the <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A> method.</span></span>  
  
 <span data-ttu-id="2d749-227">Bei ungesicherten Peernamen kann derselbe Name von verschiedenen Peers innerhalb derselben Cloud registriert (und mit anderen Endpunkten verknüpft) werden.</span><span class="sxs-lookup"><span data-stu-id="2d749-227">For unsecured peer names, the same name can be registered (and associated with different endpoints) by different peers within the same cloud.</span></span>  
  
 <span data-ttu-id="2d749-228">Wenn der- <xref:System.Net.PeerToPeer.Cloud> Parameter ist `null` , wird der Name mithilfe der <xref:System.Net.PeerToPeer.Cloud.Available> Verknüpfung aufgelöst, von der Standardwerte für die <xref:System.Net.PeerToPeer.Cloud.Name%2A> Eigenschaften, und initialisiert werden <xref:System.Net.PeerToPeer.Cloud.Scope%2A> <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A> .</span><span class="sxs-lookup"><span data-stu-id="2d749-228">If the <xref:System.Net.PeerToPeer.Cloud> parameter is `null`, the name is resolved using the <xref:System.Net.PeerToPeer.Cloud.Available> shortcut, which initializes default values for the <xref:System.Net.PeerToPeer.Cloud.Name%2A>, <xref:System.Net.PeerToPeer.Cloud.Scope%2A>, and <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A> properties.</span></span>  
  
 <span data-ttu-id="2d749-229">Für jede <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> Methode gibt es eine äquivalente <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="2d749-229">For every <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> method, there is an equivalent <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> method.</span></span>  <span data-ttu-id="2d749-230">Die Parameterlisten sind identisch, mit der Ausnahme, dass die ResolveAsync-Methode ein System Token für die asynchrone Ereignisverarbeitung enthält und die Resolve-Methode für die synchrone Verarbeitung vorgesehen ist.</span><span class="sxs-lookup"><span data-stu-id="2d749-230">Their parameter lists are identical, except that the ResolveAsync method includes a system token for asynchronous event handling, and the Resolve method is intended for synchronous processing.</span></span>  
  
 <span data-ttu-id="2d749-231">Alle asynchronen Verweise auf das Konflikt Löser-Objekt werden mit einem eindeutigen Bezeichnertoken koordiniert.</span><span class="sxs-lookup"><span data-stu-id="2d749-231">All asynchronous references to the resolver object are coordinated with a unique identifier token.</span></span> <span data-ttu-id="2d749-232">Dieses `userState` Token oder diese Nachrichten Kennung ermöglicht einem Betriebssystem, eine Nachricht an einen einzelnen empfangenden Prozess zu übermitteln, nachdem die Nachricht in der Nachrichten Warteschlange abgelegt wurde.</span><span class="sxs-lookup"><span data-stu-id="2d749-232">This `userState` token or message identifier allows an operating system to deliver a message to a single receiving process after the message has been placed on the message queue.</span></span>  
  
 <span data-ttu-id="2d749-233">Das <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> Ereignis wird ausgelöst, wenn der Auflösungs Vorgang fehlerhaft abgeschlossen oder abgebrochen wird.</span><span class="sxs-lookup"><span data-stu-id="2d749-233">The <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> event will be raised if the resolve operation completes in error or is canceled.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2d749-234">Ein oder beide <paramref name="peerName" />- und <paramref name="userState" />-Parameter werden auf <see langword="null" /> festgelegt.</span><span class="sxs-lookup"><span data-stu-id="2d749-234">One or both of the <paramref name="peerName" /> and <paramref name="userState" /> parameters are set to <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ResolveAsync">
      <MemberSignature Language="C#" Value="public void ResolveAsync (System.Net.PeerToPeer.PeerName peerName, System.Net.PeerToPeer.Cloud cloud, int maxRecords, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResolveAsync(class System.Net.PeerToPeer.PeerName peerName, class System.Net.PeerToPeer.Cloud cloud, int32 maxRecords, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResolveAsync (peerName As PeerName, cloud As Cloud, maxRecords As Integer, userState As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResolveAsync(System::Net::PeerToPeer::PeerName ^ peerName, System::Net::PeerToPeer::Cloud ^ cloud, int maxRecords, System::Object ^ userState);" />
      <MemberSignature Language="F#" Value="member this.ResolveAsync : System.Net.PeerToPeer.PeerName * System.Net.PeerToPeer.Cloud * int * obj -&gt; unit" Usage="peerNameResolver.ResolveAsync (peerName, cloud, maxRecords, userState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerName" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="cloud" Type="System.Net.PeerToPeer.Cloud" />
        <Parameter Name="maxRecords" Type="System.Int32" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="peerName"><span data-ttu-id="2d749-235">Der aufzulösende <paramref name="peerName" />.</span><span class="sxs-lookup"><span data-stu-id="2d749-235">The <paramref name="peerName" /> to resolve.</span></span></param>
        <param name="cloud"><span data-ttu-id="2d749-236">Die <paramref name="cloud" />, in der der <paramref name="peerName" /> aufgelöst werden soll.</span><span class="sxs-lookup"><span data-stu-id="2d749-236">The <paramref name="cloud" /> in which to resolve <paramref name="peerName" />.</span></span></param>
        <param name="maxRecords"><span data-ttu-id="2d749-237">Die maximale Anzahl von Datensätzen, die aus der <paramref name="cloud" /> für den <paramref name="peerName" /> abgerufen werden sollen.</span><span class="sxs-lookup"><span data-stu-id="2d749-237">The maximum number of records to obtain from <paramref name="cloud" /> for <paramref name="peerName" />.</span></span></param>
        <param name="userState"><span data-ttu-id="2d749-238">Ein benutzerdefiniertes Objekt, das Informationen über die Peernamensauflösung enthält.</span><span class="sxs-lookup"><span data-stu-id="2d749-238">A user-defined object that contains information about the peer name resolution operation.</span></span></param>
        <summary><span data-ttu-id="2d749-239">Beginnt eine asynchrone Peernamensauflösung für den angegebenen <see cref="T:System.Net.PeerToPeer.PeerName" /> in der angegebenen <see cref="T:System.Net.PeerToPeer.Cloud" />.</span><span class="sxs-lookup"><span data-stu-id="2d749-239">Begins an asynchronous peer name resolution operation for the specified <see cref="T:System.Net.PeerToPeer.PeerName" /> in the specified <see cref="T:System.Net.PeerToPeer.Cloud" />.</span></span>  <span data-ttu-id="2d749-240">Der Auflösungsvorgang löst höchstens so viele Einträge für den angegebenen Peernamen auf, wie in <paramref name="maxRecords" /> festgelegt.</span><span class="sxs-lookup"><span data-stu-id="2d749-240">The resolution operation will resolve no more than <paramref name="maxRecords" /> entries for the specified peer name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d749-241">Bei ungesicherten Peernamen kann derselbe Name von verschiedenen Peers innerhalb derselben Cloud registriert (und mit anderen Endpunkten verknüpft) werden.</span><span class="sxs-lookup"><span data-stu-id="2d749-241">For unsecured peer names, the same name can be registered (and associated with different endpoints) by different peers within the same cloud.</span></span>  
  
 <span data-ttu-id="2d749-242">Diese Methode löst das- <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> Ereignis aus, das an die-Methode zurückgibt <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A> .</span><span class="sxs-lookup"><span data-stu-id="2d749-242">This method raises the <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> event, which calls back to the <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A> method.</span></span> <span data-ttu-id="2d749-243">Oder es wird das- <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged> Ereignis ausgelöst, das an die- <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A> Methode zurückgibt.</span><span class="sxs-lookup"><span data-stu-id="2d749-243">Or, it raises the <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged> event, which calls back to the <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A> method.</span></span>  
  
 <span data-ttu-id="2d749-244">Wenn der- <xref:System.Net.PeerToPeer.Cloud> Parameter ist `null` , wird der Name mithilfe der <xref:System.Net.PeerToPeer.Cloud.Available> Verknüpfung aufgelöst, von der Standardwerte für die <xref:System.Net.PeerToPeer.Cloud.Name%2A> Eigenschaften, und initialisiert werden <xref:System.Net.PeerToPeer.Cloud.Scope%2A> <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A> .</span><span class="sxs-lookup"><span data-stu-id="2d749-244">If the <xref:System.Net.PeerToPeer.Cloud> parameter is `null`, the name is resolved using the <xref:System.Net.PeerToPeer.Cloud.Available> shortcut, which initializes default values for the <xref:System.Net.PeerToPeer.Cloud.Name%2A>, <xref:System.Net.PeerToPeer.Cloud.Scope%2A>, and <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A> properties.</span></span>  
  
 <span data-ttu-id="2d749-245">Für jede <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> Methode gibt es eine äquivalente <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="2d749-245">For every <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> method, there is an equivalent <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> method.</span></span>  <span data-ttu-id="2d749-246">Die Parameterlisten sind identisch, mit der Ausnahme, dass die ResolveAsync-Methode ein System Token für die asynchrone Ereignisverarbeitung enthält und die Resolve-Methode für die synchrone Verarbeitung vorgesehen ist.</span><span class="sxs-lookup"><span data-stu-id="2d749-246">Their parameter lists are identical, except that the ResolveAsync method includes a system token for asynchronous event handling, and the Resolve method is intended for synchronous processing.</span></span>  
  
 <span data-ttu-id="2d749-247">Alle asynchronen Verweise auf das Peerresolver-Objekt werden mit einem eindeutigen Bezeichnertoken koordiniert <xref:System.Object> .</span><span class="sxs-lookup"><span data-stu-id="2d749-247">All asynchronous references to the peer resolver object are coordinated with a unique identifier token <xref:System.Object>.</span></span> <span data-ttu-id="2d749-248">Dieses `userState` Token oder diese Nachrichten Kennung ermöglicht einem Betriebssystem, eine Nachricht an einen einzelnen empfangenden Prozess zu übermitteln, nachdem die Nachricht in der Nachrichten Warteschlange abgelegt wurde.</span><span class="sxs-lookup"><span data-stu-id="2d749-248">This `userState` token or message identifier allows an operating system to deliver a message to a single receiving process after the message has been placed on the message queue.</span></span>  
  
 <span data-ttu-id="2d749-249">Das <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> Ereignis wird ausgelöst, wenn der Auflösungs Vorgang fehlerhaft abgeschlossen oder abgebrochen wird.</span><span class="sxs-lookup"><span data-stu-id="2d749-249">The <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> event will be raised if the resolve operation completes in error or is canceled.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2d749-250">Ein oder beide <paramref name="peerName" />- und <paramref name="userState" />-Parameter werden auf <see langword="null" /> festgelegt.</span><span class="sxs-lookup"><span data-stu-id="2d749-250">One or both of the <paramref name="peerName" /> and <paramref name="userState" /> parameters are set to <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2d749-251">Mindestens ein angegebener Parameter ist ungültig.</span><span class="sxs-lookup"><span data-stu-id="2d749-251">One or more supplied parameters are invalid.</span></span></exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException"><span data-ttu-id="2d749-252">Für den erfolgreichen Abschluss dieses Vorgangs ist mindestens ein Ereignishandler erforderlich.</span><span class="sxs-lookup"><span data-stu-id="2d749-252">Successful completion of this operation requires at least one event handler.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="2d749-253">Der <paramref name="maxRecords" />-Parameter ist kleiner oder gleich 0 (null).</span><span class="sxs-lookup"><span data-stu-id="2d749-253">The <paramref name="maxRecords" /> parameter is less than or equal to zero.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ResolveAsyncCancel">
      <MemberSignature Language="C#" Value="public void ResolveAsyncCancel (object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResolveAsyncCancel(object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsyncCancel(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResolveAsyncCancel (userState As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResolveAsyncCancel(System::Object ^ userState);" />
      <MemberSignature Language="F#" Value="member this.ResolveAsyncCancel : obj -&gt; unit" Usage="peerNameResolver.ResolveAsyncCancel userState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="userState"><span data-ttu-id="2d749-254">Das für die <see cref="Overload:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync" />-Methodeninstanz, die den Auflösungsvorgang gestartet hat, bereitgestellte Objekt.</span><span class="sxs-lookup"><span data-stu-id="2d749-254">The object provided to the <see cref="Overload:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync" /> method instance which started the resolve operation.</span></span></param>
        <summary><span data-ttu-id="2d749-255">Bricht die angegebene Anforderung zur Auflösung des asynchronen Peernamens ab.</span><span class="sxs-lookup"><span data-stu-id="2d749-255">Cancels the specified asynchronous peer name resolution request.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d749-256">Durch das Aufrufen dieser Methode wird sichergestellt, dass das System nicht versucht, zusätzliche Datensätze für den angegebenen abzurufen <xref:System.Net.PeerToPeer.PeerName> .</span><span class="sxs-lookup"><span data-stu-id="2d749-256">Calling this method guarantees the system will not attempt to obtain additional records for the specified <xref:System.Net.PeerToPeer.PeerName>.</span></span>  <span data-ttu-id="2d749-257">Wenn diese Methode aufgerufen wird, wenn eine asynchrone Peer Namensauflösung nicht aussteht, fungiert sie als "kein Vorgang" (kein OP).</span><span class="sxs-lookup"><span data-stu-id="2d749-257">If this method is called when an asynchronous peer name resolution operation is not outstanding, it acts as a "no operation" (NO OP).</span></span>  
  
 <span data-ttu-id="2d749-258">Das- `userState` Objekt muss bereitgestellt werden, da es zum Nachverfolgen eines bestimmten asynchronen Aufrufs verwendet wird, wenn mehrere Aufrufe ausgeführt werden.</span><span class="sxs-lookup"><span data-stu-id="2d749-258">The `userState` object must be provided since it is used to track a specific asynchronous call when multiple calls are in progress.</span></span> <span data-ttu-id="2d749-259">Dieses vom Aufrufer bereitgestellte Objekt ist für jede Anforderung zur Peer Namensauflösung eindeutig.</span><span class="sxs-lookup"><span data-stu-id="2d749-259">This caller-supplied object is unique for each peer name resolution request.</span></span>  
  
 <span data-ttu-id="2d749-260">Diese Methode wird sofort zurückgegeben, der Vorgang kann jedoch möglicherweise nicht sofort abgebrochen werden.</span><span class="sxs-lookup"><span data-stu-id="2d749-260">This method will return immediately, but the operation may or may not immediately cancel.</span></span> <span data-ttu-id="2d749-261">Die vom Ereignis zurückgegebenen Ereignis Argumente <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> enthalten ein Feld, das von Clients abgerufen werden kann, um zu bestimmen, ob ein Abbruch aufgetreten ist.</span><span class="sxs-lookup"><span data-stu-id="2d749-261">The event arguments returned by the <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> event contains a field which can be polled by clients to determine whether cancellation occurred.</span></span>  
  
 <span data-ttu-id="2d749-262">Durch Aufrufen dieser Methode wird sichergestellt, dass das Ereignis resolveabgeschlossene so bald wie möglich signalisiert wird, wenn das Ereignis Argument <xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A> auf festgelegt ist `true` .</span><span class="sxs-lookup"><span data-stu-id="2d749-262">Calling this method ensures the ResolveCompleted event will be signaled as soon as possible with the event argument <xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A> set to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2d749-263">Die <paramref name="userState" />-Parameter dürfen nicht <see langword="null" /> sein.</span><span class="sxs-lookup"><span data-stu-id="2d749-263">The <paramref name="userState" /> parameters cannot be <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.ComponentModel.AsyncCompletedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="ResolveCompleted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Net.PeerToPeer.ResolveCompletedEventArgs&gt; ResolveCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Net.PeerToPeer.ResolveCompletedEventArgs&gt; ResolveCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ResolveCompleted As EventHandler(Of ResolveCompletedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Net::PeerToPeer::ResolveCompletedEventArgs ^&gt; ^ ResolveCompleted;" />
      <MemberSignature Language="F#" Value="member this.ResolveCompleted : EventHandler&lt;System.Net.PeerToPeer.ResolveCompletedEventArgs&gt; " Usage="member this.ResolveCompleted : System.EventHandler&lt;System.Net.PeerToPeer.ResolveCompletedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Net.PeerToPeer.ResolveCompletedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2d749-264">Das <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted" />-Ereignis wird signalisiert, wenn eine Anforderung zur Auflösung eines Peernamens für einen bestimmten <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> abgeschlossen wurde.</span><span class="sxs-lookup"><span data-stu-id="2d749-264">The <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted" /> event is signaled when a peer name resolution request for a specific <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> has completed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d749-265">Das <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged> Ereignis wird für jeden gefundenen Endpunkt einmal ausgelöst, und dieses Ereignis wird nur einmal ausgelöst, wenn alle Endpunkte gefunden wurden.</span><span class="sxs-lookup"><span data-stu-id="2d749-265">The <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged> event will be raised once for each endpoint found, and this event will be raised only once when all endpoints have been found.</span></span>  
  
 <span data-ttu-id="2d749-266">Dieses Ereignis wird auch ausgelöst, wenn der <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> Vorgang mit einem Fehler abgeschlossen oder abgebrochen wird.</span><span class="sxs-lookup"><span data-stu-id="2d749-266">This event will also be raised if the <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> operation completes in error or is canceled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged" />
      </Docs>
    </Member>
    <Member MemberName="ResolveProgressChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Net.PeerToPeer.ResolveProgressChangedEventArgs&gt; ResolveProgressChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Net.PeerToPeer.ResolveProgressChangedEventArgs&gt; ResolveProgressChanged" />
      <MemberSignature Language="DocId" Value="E:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ResolveProgressChanged As EventHandler(Of ResolveProgressChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Net::PeerToPeer::ResolveProgressChangedEventArgs ^&gt; ^ ResolveProgressChanged;" />
      <MemberSignature Language="F#" Value="member this.ResolveProgressChanged : EventHandler&lt;System.Net.PeerToPeer.ResolveProgressChangedEventArgs&gt; " Usage="member this.ResolveProgressChanged : System.EventHandler&lt;System.Net.PeerToPeer.ResolveProgressChangedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Net.PeerToPeer.ResolveProgressChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2d749-267">Dieses Ereignis wird signalisiert, wenn ein <see cref="T:System.Net.PeerToPeer.PeerNameRecord" />-Objekt als Reaktion auf einen <see cref="Overload:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync" />-Vorgang für einen bestimmten <see cref="T:System.Net.PeerToPeer.PeerName" /> gefunden wird.</span><span class="sxs-lookup"><span data-stu-id="2d749-267">This event is signaled whenever a <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> object is found in response to a <see cref="Overload:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync" /> operation for a specific <see cref="T:System.Net.PeerToPeer.PeerName" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d749-268">Wenn <xref:System.Net.PeerToPeer.PeerName> in der abgefragten Cloud (n) mehrere Objekte vorhanden sind, wird dieses Ereignis einmal für jedes gefundene Gerät signalisiert <xref:System.Net.PeerToPeer.PeerNameRecord> .</span><span class="sxs-lookup"><span data-stu-id="2d749-268">If multiple <xref:System.Net.PeerToPeer.PeerName> objects exist in the cloud(s) being queried, this event is signaled once for each <xref:System.Net.PeerToPeer.PeerNameRecord> found.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted" />
      </Docs>
    </Member>
  </Members>
</Type>
