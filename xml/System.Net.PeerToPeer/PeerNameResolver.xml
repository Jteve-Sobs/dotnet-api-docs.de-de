<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="PeerNameResolver.xml" source-language="en-US" target-language="de-DE">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac58fbb46569ea8c3e2c36d884eb360682eca12794a.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8fbb46569ea8c3e2c36d884eb360682eca12794a</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Net.PeerToPeer.PeerNameResolver">
          <source>Specifies the values that resolve a <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRecord" /&gt;</ph> using the PNRP Namespace Provider API protocol.</source>
          <target state="translated">Gibt die Werte an, die einen <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> unter Verwendung des Protokolls für die PNRP Namespace Provider-API in einen <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRecord" /&gt;</ph> auflösen.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.PeerToPeer.PeerNameResolver">
          <source>A <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRecord&gt;</ph> which contains all the information for the <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerName&gt;</ph> that was published in the <ph id="ph3">&lt;xref:System.Net.PeerToPeer.Cloud&gt;</ph> or cloud(s) that were queried during the resolve process.</source>
          <target state="translated">Ein <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRecord&gt;</ph> enthält alle Informationen für die <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerName&gt;</ph> , veröffentlicht wurde, der <ph id="ph3">&lt;xref:System.Net.PeerToPeer.Cloud&gt;</ph> oder Wolken, die während des Prozesses Resolve abgefragt wurden.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameResolver.#ctor">
          <source>Initializes a new default instance of the <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameResolver" /&gt;</ph> class.</source>
          <target state="translated">Initialisiert eine neue Standardinstanz der <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameResolver" /&gt;</ph>-Klasse.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.#ctor">
          <source>After successfully resolving a <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerName&gt;</ph>, the <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameRecord&gt;</ph> contains all the information for the specified <ph id="ph3">&lt;xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A&gt;</ph> that was published in the cloud(s) that were queried during the <ph id="ph4">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A&gt;</ph> operation.</source>
          <target state="translated">Nachdem Sie erfolgreich behoben eine <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerName&gt;</ph>, die <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameRecord&gt;</ph> enthält alle Informationen für den angegebenen <ph id="ph3">&lt;xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A&gt;</ph> , die in den Wolken, die während der abgefragt wurden veröffentlicht wurde die <ph id="ph4">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A&gt;</ph> Vorgang.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted(System.Net.PeerToPeer.ResolveCompletedEventArgs)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.ResolveCompletedEventArgs" /&gt;</ph> object that contains the data returned by the <ph id="ph2">&lt;see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted" /&gt;</ph> event.</source>
          <target state="translated">Das <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.ResolveCompletedEventArgs" /&gt;</ph>-Objekt, das die Ereignisdaten enthält, die vom <ph id="ph2">&lt;see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted" /&gt;</ph>-Ereignis zurückgegeben werden.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted(System.Net.PeerToPeer.ResolveCompletedEventArgs)">
          <source>Returns peer resolution data after the <ph id="ph1">&lt;see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted" /&gt;</ph> event is raised.</source>
          <target state="translated">Gibt die Peerauflösungsdaten zurück, nachdem das <ph id="ph1">&lt;see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted" /&gt;</ph>-Ereignis ausgelöst wurde.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted(System.Net.PeerToPeer.ResolveCompletedEventArgs)">
          <source>This method is an asynchronous callback used to process peer name resolution data after peer resolution has completed.</source>
          <target state="translated">Diese Methode ist ein asynchroner Rückruf, der zum Verarbeiten von Peer Name Resolution-Daten nach Abschluss der Peer-Auflösung verwendet.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted(System.Net.PeerToPeer.ResolveCompletedEventArgs)">
          <source>Derived types can override this method to perform additional tasks when the <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted&gt;</ph> event is raised by the peer resolver object.</source>
          <target state="translated">Abgeleitete Typen können dies außer Kraft setzen Methode, um zusätzliche führen Vorgänge fest, wenn die <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted&gt;</ph> Ereignis wird durch die Peerresolverobjekt ausgelöst.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged(System.Net.PeerToPeer.ResolveProgressChangedEventArgs)">
          <source><ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.ResolveProgressChangedEventArgs" /&gt;</ph> object that contains peer name resolution progress information returned by the <ph id="ph2">&lt;see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.ResolveProgressChangedEventArgs" /&gt;</ph>-Objekt, das vom <ph id="ph2">&lt;see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged" /&gt;</ph>-Ereignis zurückgegebene Statusinformationen der Peernamensauflösung enthält.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged(System.Net.PeerToPeer.ResolveProgressChangedEventArgs)">
          <source>Returns peer resolution progress data when the <ph id="ph1">&lt;see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged" /&gt;</ph> event is raised.</source>
          <target state="translated">Gibt die Statusdaten der Peerauflösung zurück, nachdem das <ph id="ph1">&lt;see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged" /&gt;</ph>-Ereignis ausgelöst wurde.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged(System.Net.PeerToPeer.ResolveProgressChangedEventArgs)">
          <source>This method is an asynchronous callback used to process peer resolution data after peer resolution progress has been requested.</source>
          <target state="translated">Diese Methode ist ein asynchroner Rückruf, der zur Verarbeitung von Peer-Lösungsdaten, nachdem Fortschritte bei der Peer-Lösung angefordert wurde verwendet.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged(System.Net.PeerToPeer.ResolveProgressChangedEventArgs)">
          <source>Derived types can override this method to perform additional tasks when the <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged&gt;</ph> event occurs.</source>
          <target state="translated">Abgeleitete Typen können überschreiben diese Methode, um zusätzliche führen Vorgänge fest, wenn die <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged&gt;</ph> Ereignis tritt auf.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged(System.Net.PeerToPeer.ResolveProgressChangedEventArgs)">
          <source>When overriding this method in a derived type, be sure to call the base type's <ph id="ph1">&lt;see cref="M:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged(System.Net.PeerToPeer.ResolveProgressChangedEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Überschreiben diese Methode in einem abgeleiteten Typ, achten Sie beim Aufrufen des Basistyps <ph id="ph1">&lt;see cref="M:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged(System.Net.PeerToPeer.ResolveProgressChangedEventArgs)" /&gt;</ph> Methode, damit registrierte Delegaten das Ereignis empfangen.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="T:System.Net.PeerToPeer.PeerNameResolver">
          <source>Resolves a <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> object to a <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRecord" /&gt;</ph> using the PNRP protocol.</source>
          <target state="translated">Löst ein <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph>-Objekt unter Verwendung des Protokolls PNRP in ein <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRecord" /&gt;</ph>-Objekt auf.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.PeerToPeer.PeerNameResolver">
          <source>This method associates peer names to clouds.</source>
          <target state="translated">Diese Methode ordnet Peernamen in Clouds.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.PeerToPeer.PeerNameResolver">
          <source>Calling the <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameResolver&gt;</ph> method is similar to calling the <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A&gt;</ph> method for each peer name record in the <ph id="ph3">&lt;xref:System.Net.PeerToPeer.PeerNameRecordCollection&gt;</ph>.</source>
          <target state="translated">Aufrufen der <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameResolver&gt;</ph> Methode ist vergleichbar mit einem Aufruf der <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A&gt;</ph> Methode für jeden Peer Name Datensatz in die <ph id="ph3">&lt;xref:System.Net.PeerToPeer.PeerNameRecordCollection&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.PeerToPeer.PeerNameResolver">
          <source>Note that using the Resolve method on an individual peer name record does not invalidate resolving multiple peer names.</source>
          <target state="translated">Beachten Sie, dass die Resolve-Methode auf einem einzelnen Peer Name Datensatz mit nicht auflösen von mehreren Peernamen ungültig wird.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.PeerToPeer.PeerNameResolver">
          <source>For every <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A&gt;</ph> method, there is an equivalent <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A&gt;</ph> method.</source>
          <target state="translated">Für jede <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A&gt;</ph> -Methode, ist es ein entsprechendes <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.PeerToPeer.PeerNameResolver">
          <source>They are identical in the parameters they are passed, except that the ResolveAsync method includes a system token in its parameter list for asynchronous event handling.</source>
          <target state="translated">Sie sind in den Parametern, die sie übergeben werden, die identisch, außer dass die ResolveAsync-Methode ein System-Tokens in der Parameterliste für die asynchrone Ereignisbehandlung enthält.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.PeerToPeer.PeerNameResolver">
          <source>If the <ph id="ph1">&lt;xref:System.Net.PeerToPeer.Cloud&gt;</ph> parameter is not supplied, the method uses the <ph id="ph2">&lt;xref:System.Net.PeerToPeer.Cloud.Available&gt;</ph> shortcut to fill in cloud parameters.</source>
          <target state="translated">Wenn die <ph id="ph1">&lt;xref:System.Net.PeerToPeer.Cloud&gt;</ph> Parameter nicht angegeben wird, verwendet die Methode die <ph id="ph2">&lt;xref:System.Net.PeerToPeer.Cloud.Available&gt;</ph> Verknüpfung Cloud Parameter ausfüllen.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.PeerToPeer.PeerNameResolver">
          <source>If the <ph id="ph1">`maxRecords`</ph> parameter is missing, the default value of zero causes an <ph id="ph2">&lt;xref:System.ArgumentOutOfRangeException&gt;</ph> exception to be thrown.</source>
          <target state="translated">Wenn die <ph id="ph1">`maxRecords`</ph> Parameter fehlt, ist den Standardwert von NULL festgelegt, wird ein <ph id="ph2">&lt;xref:System.ArgumentOutOfRangeException&gt;</ph> Ausnahme ausgelöst wird.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.PeerToPeer.PeerNameResolver">
          <source>This event will also be raised if the resolve operation completes in error or is canceled.</source>
          <target state="translated">Dieses Ereignis wird auch ausgelöst werden, wenn der Auflösungsvorgang Fehler abgeschlossen oder abgebrochen wird.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> to resolve.</source>
          <target state="translated">Der aufzulösende <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName)">
          <source>Resolves the specified <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> in all clouds known to the calling peer.</source>
          <target state="translated">Löst den angegebenen <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> in allen Wolken auf, die dem aufrufenden Peer bekannt sind.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRecordCollection" /&gt;</ph> that contains all peer name records (represented as <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRecord" /&gt;</ph> objects) associated with the specified peer name.</source>
          <target state="translated">Eine <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRecordCollection" /&gt;</ph>, die alle Peernamensdatensätze enthält (als <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRecord" /&gt;</ph>-Objekte dargestellt), die dem angegebenen Peernamen zugeordnet sind.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName)">
          <source>For unsecured peer names, the same <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> can be registered by different users in the same <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.Cloud" /&gt;</ph>, and associated with different endpoints.</source>
          <target state="translated">Bei ungesicherten Peernamen kann der gleiche <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> von mehreren Benutzern in derselben <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.Cloud" /&gt;</ph> registriert werden und unterschiedlichen Endpunkten zugeordnet werden.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName)">
          <source>This method associates a peer name to clouds.</source>
          <target state="translated">Diese Methode ordnet eine PeerName-zu Clouds.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName)">
          <source>All clouds are queried for the <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerName&gt;</ph>.</source>
          <target state="translated">Alle Clouds werden abgefragt, für die <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerName&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName)">
          <source>If the peer name cannot be resolved or is <ph id="ph1">`null`</ph>, an <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerToPeerException&gt;</ph> is thrown.</source>
          <target state="translated">Wenn der Name des Peers kann nicht aufgelöst werden oder ist <ph id="ph1">`null`</ph>, wird eine <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerToPeerException&gt;</ph> ausgelöst wird.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName)">
          <source>For unsecured peer names, the same name can be registered (and associated with different endpoints) by different peers within the same cloud.</source>
          <target state="translated">Für unsichere Peernamen, der gleiche Namen kann werden (mit registriert und verknüpft verschiedene Endpunkte) von anderen Peers innerhalb derselben Cloud.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName)">
          <source>Calling the <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameResolver&gt;</ph> method is similar to calling the <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A&gt;</ph> method for each peer name record in the <ph id="ph3">&lt;xref:System.Net.PeerToPeer.PeerNameRecordCollection&gt;</ph>.</source>
          <target state="translated">Aufrufen der <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameResolver&gt;</ph> Methode ist vergleichbar mit einem Aufruf der <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A&gt;</ph> Methode für jeden Peer Name Datensatz in die <ph id="ph3">&lt;xref:System.Net.PeerToPeer.PeerNameRecordCollection&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName)">
          <source>Note that using the Resolve method on an individual peer name record does not invalidate resolving multiple peer names.</source>
          <target state="translated">Beachten Sie, dass die Resolve-Methode auf einem einzelnen Peer Name Datensatz mit nicht auflösen von mehreren Peernamen ungültig wird.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName)">
          <source>For every <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A&gt;</ph> method, there is an equivalent <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A&gt;</ph> method.</source>
          <target state="translated">Für jede <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A&gt;</ph> -Methode, ist es ein entsprechendes <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName)">
          <source>Their parameter lists are identical, except that the ResolveAsync method includes a system token for asynchronous event handling.</source>
          <target state="translated">Ihre Parameterlisten sind nahezu identisch, außer dass die ResolveAsync-Methode ein System-Tokens für die asynchrone Ereignisbehandlung enthält.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName)">
          <source>If the <ph id="ph1">&lt;xref:System.Net.PeerToPeer.Cloud&gt;</ph> parameter is not supplied, the method uses the <ph id="ph2">&lt;xref:System.Net.PeerToPeer.Cloud.Available&gt;</ph> shortcut to fill in cloud parameters.</source>
          <target state="translated">Wenn die <ph id="ph1">&lt;xref:System.Net.PeerToPeer.Cloud&gt;</ph> Parameter nicht angegeben wird, verwendet die Methode die <ph id="ph2">&lt;xref:System.Net.PeerToPeer.Cloud.Available&gt;</ph> Verknüpfung Cloud Parameter ausfüllen.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName)">
          <source>The <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted&gt;</ph> event will be raised if the resolve operation completes in error or is canceled.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted&gt;</ph> Ereignis wird ausgelöst, wenn der Auflösungsvorgang Fehler abgeschlossen oder abgebrochen wird.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName)">
          <source>The following code example illustrates how to resolve a <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerName&gt;</ph> published in any <ph id="ph2">&lt;xref:System.Net.PeerToPeer.Cloud&gt;</ph>.</source>
          <target state="translated">Im folgenden Codebeispiel wird veranschaulicht, wie zum Auflösen einer <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerName&gt;</ph> in einem veröffentlichten <ph id="ph2">&lt;xref:System.Net.PeerToPeer.Cloud&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName)">
          <source>The <ph id="ph1">&lt;paramref name="peerName" /&gt;</ph> parameter is set to <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Der <ph id="ph1">&lt;paramref name="peerName" /&gt;</ph>-Parameter ist auf <ph id="ph2">&lt;see langword="null" /&gt;</ph> festgelegt.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName)">
          <source>The peer name specified cannot be resolved.</source>
          <target state="translated">Der angegebene Peername kann nicht aufgelöst werden.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> to resolve.</source>
          <target state="translated">Der aufzulösende <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Int32)">
          <source>The maximum number of <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRecord" /&gt;</ph> objects to obtain from all <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.Cloud" /&gt;</ph> objects for the supplied <bpt id="p1">&lt;c&gt;</bpt>peerName<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Die maximale Anzahl von <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRecord" /&gt;</ph>-Objekten, die aus allen <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.Cloud" /&gt;</ph>-Objekten für den angegebenen <bpt id="p1">&lt;c&gt;</bpt>PeerName<ept id="p1">&lt;/c&gt;</ept> abgerufen werden können.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Int32)">
          <source>Resolves the specified peer name in all clouds known to the calling peer, returning no more than the specified number of <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRecord" /&gt;</ph> objects.</source>
          <target state="translated">Löst den angegebenen Peernamen in allen Wolken auf, die dem aufrufenden Peer bekannt sind, und gibt nicht mehr als die angegebene Anzahl von <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRecord" /&gt;</ph>-Objekten zurück.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Int32)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRecordCollection" /&gt;</ph> whose size is less than or equal to <ph id="ph2">&lt;paramref name="maxRecords" /&gt;</ph> entries.</source>
          <target state="translated">Eine <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRecordCollection" /&gt;</ph>, deren Größe kleiner oder gleich der mit <ph id="ph2">&lt;paramref name="maxRecords" /&gt;</ph> angegebenen Anzahl von Einträgen ist.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Int32)">
          <source>This collection contains peer name records associated with the <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> that was resolved.</source>
          <target state="translated">Diese Auflistung enthält Peernamensdatensätze, die dem aufgelösten <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> zugeordnet sind.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Int32)">
          <source>This method associates a peer name to clouds.</source>
          <target state="translated">Diese Methode ordnet eine PeerName-zu Clouds.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Int32)">
          <source>All clouds are queried for the peer name.</source>
          <target state="translated">Der Name des Peers werden alle Clouds abgefragt.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Int32)">
          <source>For unsecured peer names, the same peer name can be registered by different users in the same <ph id="ph1">&lt;xref:System.Net.PeerToPeer.Cloud&gt;</ph>, and associated with different endpoints.</source>
          <target state="translated">Für unsichere Peernamen Peernamen registriert werden kann, von anderen Benutzern in der gleichen <ph id="ph1">&lt;xref:System.Net.PeerToPeer.Cloud&gt;</ph>, und die zugehörigen mit verschiedenen Endpunkten.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Int32)">
          <source>If the <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerName&gt;</ph> cannot be resolved (for example, the peer name is not published) an <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerToPeerException&gt;</ph> is thrown.</source>
          <target state="translated">Wenn die <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerName&gt;</ph> kann nicht aufgelöst werden (z. B. der Name des Peers nicht veröffentlicht wurde) eine <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerToPeerException&gt;</ph> ausgelöst wird.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Int32)">
          <source>For every <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A&gt;</ph> method, there is an equivalent <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A&gt;</ph> method.</source>
          <target state="translated">Für jede <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A&gt;</ph> -Methode, ist es ein entsprechendes <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Int32)">
          <source>Their parameter lists are identical, except that the ResolveAsync method includes a system token for asynchronous event handling.</source>
          <target state="translated">Ihre Parameterlisten sind nahezu identisch, außer dass die ResolveAsync-Methode ein System-Tokens für die asynchrone Ereignisbehandlung enthält.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted&gt;</ph> event will be raised if the resolve operation completes in error or is canceled.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted&gt;</ph> Ereignis wird ausgelöst, wenn der Auflösungsvorgang Fehler abgeschlossen oder abgebrochen wird.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="peerName" /&gt;</ph> parameter is set to <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Der <ph id="ph1">&lt;paramref name="peerName" /&gt;</ph>-Parameter ist auf <ph id="ph2">&lt;see langword="null" /&gt;</ph> festgelegt.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="maxRecords" /&gt;</ph> parameter is less than or equal to zero.</source>
          <target state="translated">Der <ph id="ph1">&lt;paramref name="maxRecords" /&gt;</ph>-Parameter ist kleiner oder gleich 0 (null).</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Int32)">
          <source>The supplied peer name cannot be resolved.</source>
          <target state="translated">Der angegebene Peername kann nicht aufgelöst werden.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> to resolve.</source>
          <target state="translated">Der aufzulösende <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.Cloud" /&gt;</ph> in which to resolve the peer name.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.Cloud" /&gt;</ph>, in der der Peername aufgelöst werden soll.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud)">
          <source>Resolves the specified <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" /&gt;</ph> in the specified <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.Cloud" /&gt;</ph>.</source>
          <target state="translated">Löst den angegebenen <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" /&gt;</ph> in der angegebenen <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.Cloud" /&gt;</ph> auf.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud)">
          <source><ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRecordCollection" /&gt;</ph> that contains all peer name records (represented as <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRecord" /&gt;</ph> objects) associated with the specified peer name.</source>
          <target state="translated">Eine <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRecordCollection" /&gt;</ph>, die alle Peernamensdatensätze enthält (als <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRecord" /&gt;</ph>-Objekte dargestellt), die dem angegebenen Peernamen zugeordnet sind.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud)">
          <source>For unsecured peer names, the same <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> can be registered by different users in the same <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.Cloud" /&gt;</ph>, and associated with different endpoints.</source>
          <target state="translated">Bei ungesicherten Peernamen kann der gleiche <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> von mehreren Benutzern in derselben <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.Cloud" /&gt;</ph> registriert werden und unterschiedlichen Endpunkten zugeordnet werden.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud)">
          <source>If the <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerName&gt;</ph> cannot be resolved (i.e., the peer name is not published) an <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerToPeerException&gt;</ph> is thrown.</source>
          <target state="translated">Wenn die <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerName&gt;</ph> kann nicht aufgelöst werden (d. h. der Name des Peers nicht veröffentlicht wurde) eine <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerToPeerException&gt;</ph> ausgelöst wird.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud)">
          <source>For unsecured peer names, the same name can be registered (and associated with different endpoints) by different peers within the same cloud.</source>
          <target state="translated">Für unsichere Peernamen, der gleiche Namen kann werden (mit registriert und verknüpft verschiedene Endpunkte) von anderen Peers innerhalb derselben Cloud.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud)">
          <source>For every <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A&gt;</ph> method, there is an equivalent <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A&gt;</ph> method.</source>
          <target state="translated">Für jede <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A&gt;</ph> -Methode, ist es ein entsprechendes <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud)">
          <source>Their parameter lists are identical, except that the ResolveAsync method includes a system token for asynchronous event handling.</source>
          <target state="translated">Ihre Parameterlisten sind nahezu identisch, außer dass die ResolveAsync-Methode ein System-Tokens für die asynchrone Ereignisbehandlung enthält.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud)">
          <source>If the <ph id="ph1">&lt;xref:System.Net.PeerToPeer.Cloud&gt;</ph> parameter is <ph id="ph2">`null`</ph>, the <ph id="ph3">&lt;xref:System.Net.PeerToPeer.PeerNameResolver&gt;</ph> uses the <ph id="ph4">&lt;xref:System.Net.PeerToPeer.Cloud.Available&gt;</ph> shortcut to fill in the <ph id="ph5">&lt;xref:System.Net.PeerToPeer.Cloud.Name%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Net.PeerToPeer.Cloud.Scope%2A&gt;</ph>, and <ph id="ph7">&lt;xref:System.Net.PeerToPeer.Cloud.ScopeId%2A&gt;</ph>.</source>
          <target state="translated">Wenn die <ph id="ph1">&lt;xref:System.Net.PeerToPeer.Cloud&gt;</ph> Parameter ist <ph id="ph2">`null`</ph>, <ph id="ph3">&lt;xref:System.Net.PeerToPeer.PeerNameResolver&gt;</ph> verwendet die <ph id="ph4">&lt;xref:System.Net.PeerToPeer.Cloud.Available&gt;</ph> Verknüpfung zum Füllen der <ph id="ph5">&lt;xref:System.Net.PeerToPeer.Cloud.Name%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Net.PeerToPeer.Cloud.Scope%2A&gt;</ph>, und <ph id="ph7">&lt;xref:System.Net.PeerToPeer.Cloud.ScopeId%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud)">
          <source>The <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted&gt;</ph> event will be raised if the resolve operation completes in error or is canceled.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted&gt;</ph> Ereignis wird ausgelöst, wenn der Auflösungsvorgang Fehler abgeschlossen oder abgebrochen wird.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud)">
          <source>The <ph id="ph1">&lt;paramref name="peerName" /&gt;</ph> parameter is set to <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Der <ph id="ph1">&lt;paramref name="peerName" /&gt;</ph>-Parameter ist auf <ph id="ph2">&lt;see langword="null" /&gt;</ph> festgelegt.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud)">
          <source>The supplied peer name cannot be resolved.</source>
          <target state="translated">Der angegebene Peername kann nicht aufgelöst werden.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> to resolve.</source>
          <target state="translated">Der aufzulösende <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.Cloud" /&gt;</ph> in which to resolve the <bpt id="p1">&lt;c&gt;</bpt>peerName<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.Cloud" /&gt;</ph>, in der der <bpt id="p1">&lt;c&gt;</bpt>PeerName<ept id="p1">&lt;/c&gt;</ept> aufgelöst werden soll.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32)">
          <source>The maximum number of peer name record objects to obtain from the specified cloud for the specified <bpt id="p1">&lt;c&gt;</bpt>peerName<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Die maximale Anzahl von Peernamendatensatz-Objekten, die aus der angegebenen Cloud für den angegebenen <bpt id="p1">&lt;c&gt;</bpt>PeerName<ept id="p1">&lt;/c&gt;</ept> abgerufen werden sollen.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32)">
          <source>Resolves the specified <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" /&gt;</ph> in the specified <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.Cloud" /&gt;</ph>, returning no more than the specified number of <ph id="ph3">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRecord" /&gt;</ph> objects.</source>
          <target state="translated">Löst den angegebenen <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" /&gt;</ph> in der angegebenen <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.Cloud" /&gt;</ph> auf und gibt nicht mehr als die angegebene Anzahl von <ph id="ph3">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRecord" /&gt;</ph>-Objekten zurück.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRecordCollection" /&gt;</ph> whose size is less than or equal to <ph id="ph2">&lt;paramref name="maxRecords" /&gt;</ph> entries.</source>
          <target state="translated">Eine <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRecordCollection" /&gt;</ph>, deren Größe kleiner oder gleich der mit <ph id="ph2">&lt;paramref name="maxRecords" /&gt;</ph> angegebenen Anzahl von Einträgen ist.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32)">
          <source>This collection contains peer name records associated with the <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> that was resolved.</source>
          <target state="translated">Diese Auflistung enthält Peernamensdatensätze, die dem aufgelösten <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> zugeordnet sind.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32)">
          <source>For unsecured peer names, the same name can be registered (and associated with different endpoints) by different peers within the same cloud.</source>
          <target state="translated">Für unsichere Peernamen, der gleiche Namen kann werden (mit registriert und verknüpft verschiedene Endpunkte) von anderen Peers innerhalb derselben Cloud.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32)">
          <source>If the peer name cannot be resolved, an <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerToPeerException&gt;</ph> is thrown.</source>
          <target state="translated">Wenn der Name des Peers aufgelöst werden, kann kein <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerToPeerException&gt;</ph> ausgelöst wird.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32)">
          <source>For every <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A&gt;</ph> method, there is an equivalent <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A&gt;</ph> method.</source>
          <target state="translated">Für jede <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A&gt;</ph> -Methode, ist es ein entsprechendes <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32)">
          <source>Their parameter lists are identical, except that the ResolveAsync method includes a system token for asynchronous event handling.</source>
          <target state="translated">Ihre Parameterlisten sind nahezu identisch, außer dass die ResolveAsync-Methode ein System-Tokens für die asynchrone Ereignisbehandlung enthält.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32)">
          <source>If the <ph id="ph1">&lt;xref:System.Net.PeerToPeer.Cloud&gt;</ph> parameter is <ph id="ph2">`null`</ph>, the <ph id="ph3">&lt;xref:System.Net.PeerToPeer.PeerNameResolver&gt;</ph> uses the <ph id="ph4">&lt;xref:System.Net.PeerToPeer.Cloud.Available&gt;</ph> shortcut to fill in the <ph id="ph5">&lt;xref:System.Net.PeerToPeer.Cloud.Name%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Net.PeerToPeer.Cloud.Scope%2A&gt;</ph>, and <ph id="ph7">&lt;xref:System.Net.PeerToPeer.Cloud.ScopeId%2A&gt;</ph>.</source>
          <target state="translated">Wenn die <ph id="ph1">&lt;xref:System.Net.PeerToPeer.Cloud&gt;</ph> Parameter ist <ph id="ph2">`null`</ph>, <ph id="ph3">&lt;xref:System.Net.PeerToPeer.PeerNameResolver&gt;</ph> verwendet die <ph id="ph4">&lt;xref:System.Net.PeerToPeer.Cloud.Available&gt;</ph> Verknüpfung zum Füllen der <ph id="ph5">&lt;xref:System.Net.PeerToPeer.Cloud.Name%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Net.PeerToPeer.Cloud.Scope%2A&gt;</ph>, und <ph id="ph7">&lt;xref:System.Net.PeerToPeer.Cloud.ScopeId%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted&gt;</ph> event will be raised if the resolve operation completes in error or is canceled.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted&gt;</ph> Ereignis wird ausgelöst, wenn der Auflösungsvorgang Fehler abgeschlossen oder abgebrochen wird.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="peerName" /&gt;</ph> parameter is set to <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Der <ph id="ph1">&lt;paramref name="peerName" /&gt;</ph>-Parameter ist auf <ph id="ph2">&lt;see langword="null" /&gt;</ph> festgelegt.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="maxRecords" /&gt;</ph> parameter is less than or equal to zero.</source>
          <target state="translated">Der <ph id="ph1">&lt;paramref name="maxRecords" /&gt;</ph>-Parameter ist kleiner oder gleich 0 (null).</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32)">
          <source>The supplied peer name cannot be resolved.</source>
          <target state="translated">Der angegebene Peername kann nicht aufgelöst werden.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="T:System.Net.PeerToPeer.PeerNameResolver">
          <source>These methods begin an asynchronous resolution operation for the specified <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> in all clouds known to the calling peer.</source>
          <target state="translated">Diese Methoden starten die asynchrone Auflösung für den angegebenen <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> in allen Wolken, die dem aufrufenden Peer bekannt sind.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.PeerToPeer.PeerNameResolver">
          <source>For every <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A&gt;</ph> method, there is an equivalent <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A&gt;</ph> method, which is used when asynchronous processing is required.</source>
          <target state="translated">Für jede <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A&gt;</ph> -Methode, ist es ein entsprechendes <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A&gt;</ph> -Methode, die verwendet wird, wenn die asynchrone Verarbeitung erforderlich ist.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.PeerToPeer.PeerNameResolver">
          <source>They are identical in the parameters they are passed, except that ResolveAsync includes a system token in its parameter list for event handling.</source>
          <target state="translated">Sie sind in den Parametern, die sie übergeben werden, die identisch, außer dass ResolveAsync ein Systemtoken in der Parameterliste für die Ereignisbehandlung enthält.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.PeerToPeer.PeerNameResolver">
          <source>If a parameter mismatch occurs between the Resolve method and the ResolveAsync method, and the <ph id="ph1">&lt;xref:System.Net.PeerToPeer.Cloud&gt;</ph> parameter is not supplied, the method uses the <ph id="ph2">&lt;xref:System.Net.PeerToPeer.Cloud.Available&gt;</ph> shortcut to fill in cloud parameters.</source>
          <target state="translated">Wenn ein Parameter-Konflikt zwischen die Resolve-Methode und der ResolveAsync-Methode ausgeführt wird und die <ph id="ph1">&lt;xref:System.Net.PeerToPeer.Cloud&gt;</ph> Parameter nicht angegeben wird, verwendet die Methode die <ph id="ph2">&lt;xref:System.Net.PeerToPeer.Cloud.Available&gt;</ph> Verknüpfung Cloud Parameter ausfüllen.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> to resolve.</source>
          <target state="translated">Der aufzulösende <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Object)">
          <source>A user-defined object that contains state information about the peer name resolution operation.</source>
          <target state="translated">Ein benutzerdefiniertes Objekt, das Statusinformationen über die Peernamenauflösung enthält.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Object)">
          <source>Begins an asynchronous peer name resolution operation for the specified <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" /&gt;</ph> in all clouds known to the calling peer.</source>
          <target state="translated">Beginnt eine asynchrone Peernamenauflösung für den angegebenen <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" /&gt;</ph> in allen Clouds, die dem aufrufenden Peer bekannt sind.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Object)">
          <source>This method asynchronously associates a peer name to clouds.</source>
          <target state="translated">Diese Methode ordnet asynchron eine PeerName-zu Clouds.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Object)">
          <source>All clouds are queried for the <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerName&gt;</ph>.</source>
          <target state="translated">Alle Clouds werden abgefragt, für die <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerName&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Object)">
          <source>It raises the <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted&gt;</ph> event, which calls back to the <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A&gt;</ph> method.</source>
          <target state="translated">Es wird ausgelöst, die <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted&gt;</ph> -Ereignis, das Aufrufe zurück an die <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Object)">
          <source>Or, it raises the <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged&gt;</ph> event, which calls back to the <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A&gt;</ph> method.</source>
          <target state="translated">Oder es wird ausgelöst, die <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged&gt;</ph> -Ereignis, das Aufrufe zurück an die <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Object)">
          <source>If the peer name cannot be resolved, an <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerToPeerException&gt;</ph> is thrown.</source>
          <target state="translated">Wenn der Name des Peers aufgelöst werden, kann kein <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerToPeerException&gt;</ph> ausgelöst wird.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Object)">
          <source>For unsecured peer names, the same name can be registered (and associated with different endpoints) by different peers within the same cloud.</source>
          <target state="translated">Für unsichere Peernamen, der gleiche Namen kann werden (mit registriert und verknüpft verschiedene Endpunkte) von anderen Peers innerhalb derselben Cloud.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Object)">
          <source>Calling the <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameResolver&gt;</ph> method is similar to calling the <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A&gt;</ph> method for each peer name record in the <ph id="ph3">&lt;xref:System.Net.PeerToPeer.PeerNameRecordCollection&gt;</ph>.</source>
          <target state="translated">Aufrufen der <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameResolver&gt;</ph> Methode ist vergleichbar mit einem Aufruf der <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A&gt;</ph> Methode für jeden Peer Name Datensatz in die <ph id="ph3">&lt;xref:System.Net.PeerToPeer.PeerNameRecordCollection&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Object)">
          <source>Note that using the Resolve method on an individual peer name record does not invalidate resolving multiple peer names.</source>
          <target state="translated">Beachten Sie, dass die Resolve-Methode auf einem einzelnen Peer Name Datensatz mit nicht auflösen von mehreren Peernamen ungültig wird.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Object)">
          <source>For every <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A&gt;</ph> method, there is an equivalent <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A&gt;</ph> method.</source>
          <target state="translated">Für jede <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A&gt;</ph> -Methode, ist es ein entsprechendes <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Object)">
          <source>Their parameter lists are identical, except that the ResolveAsync method includes a system token for asynchronous event handling, and the Resolve method is intended for synchronous processing.</source>
          <target state="translated">Ihre Parameterlisten sind nahezu identisch, außer dass die ResolveAsync-Methode ein Systemtoken für die asynchrone Ereignisbehandlung enthält und sich an die Resolve-Methode für die synchrone Verarbeitung richtet.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Object)">
          <source>All asynchronous references to the resolver object are coordinated with a unique identifier token.</source>
          <target state="translated">Alle asynchronen Verweise auf das Objekt Konfliktlöser werden mit einem eindeutigen Bezeichnertoken koordiniert.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Object)">
          <source>This <ph id="ph1">`userState`</ph> token or message identifier allows an operating system to deliver a message to a single receiving process after the message has been placed on the message queue.</source>
          <target state="translated">Dies <ph id="ph1">`userState`</ph> Token oder Nachricht Bezeichner ermöglicht ein Betriebssystems auf eine Nachricht an einen einzelnen empfangenden Prozess zu übermitteln, nachdem die Nachricht in die Nachrichtenwarteschlange angeordnet wurde.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted&gt;</ph> event will be raised if the resolve operation completes in error or is canceled.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted&gt;</ph> Ereignis wird ausgelöst, wenn der Auflösungsvorgang Fehler abgeschlossen oder abgebrochen wird.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Object)">
          <source>One or both of the <ph id="ph1">&lt;paramref name="peerName" /&gt;</ph> and <ph id="ph2">&lt;paramref name="userState" /&gt;</ph> parameters are set to <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Ein oder beide <ph id="ph1">&lt;paramref name="peerName" /&gt;</ph>- und <ph id="ph2">&lt;paramref name="userState" /&gt;</ph>-Parameter werden auf <ph id="ph3">&lt;see langword="null" /&gt;</ph> festgelegt.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Int32,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> to resolve.</source>
          <target state="translated">Der aufzulösende <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Int32,System.Object)">
          <source>The maximum number of records to obtain for the Peer Name.</source>
          <target state="translated">Die maximale Anzahl von Datensätzen, die für den Peernamen abgerufen werden sollen.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Int32,System.Object)">
          <source>A user-defined object that contains information about the resolve operation.</source>
          <target state="translated">Ein benutzerdefiniertes Objekt, das Informationen über den Auflösungsvorgang enthält.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Int32,System.Object)">
          <source>Begins an asynchronous peer name resolution operation for the specified <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> in all clouds known to the calling peer, returning no more than <ph id="ph2">&lt;paramref name="maxRecords" /&gt;</ph> entries for the peer name.</source>
          <target state="translated">Beginnt eine asynchrone Peernamenauflösung für den angegebenen <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> in allen Clouds, die dem aufrufenden Peer bekannt sind, wobei nicht mehr als <ph id="ph2">&lt;paramref name="maxRecords" /&gt;</ph> Einträge für den Peernamen zurückgegeben werden.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Int32,System.Object)">
          <source>This method asynchronously associates a peer name to clouds.</source>
          <target state="translated">Diese Methode ordnet asynchron eine PeerName-zu Clouds.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Int32,System.Object)">
          <source>All clouds are queried for the <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerName&gt;</ph>.</source>
          <target state="translated">Alle Clouds werden abgefragt, für die <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerName&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Int32,System.Object)">
          <source>For unsecured peer names, the same name can be registered (and associated with different endpoints) by different peers within the same cloud.</source>
          <target state="translated">Für unsichere Peernamen, der gleiche Namen kann werden (mit registriert und verknüpft verschiedene Endpunkte) von anderen Peers innerhalb derselben Cloud.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Int32,System.Object)">
          <source>If the peer name cannot be resolved or is <ph id="ph1">`null`</ph>, an <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerToPeerException&gt;</ph> is thrown.</source>
          <target state="translated">Wenn der Name des Peers kann nicht aufgelöst werden oder ist <ph id="ph1">`null`</ph>, wird eine <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerToPeerException&gt;</ph> ausgelöst wird.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Int32,System.Object)">
          <source>This method raises the <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted&gt;</ph> event, which calls back to the <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A&gt;</ph> method.</source>
          <target state="translated">Diese Methode löst die <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted&gt;</ph> -Ereignis, das Aufrufe zurück an die <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Int32,System.Object)">
          <source>Or, it raises the <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged&gt;</ph> event, which calls back to the <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A&gt;</ph> method.</source>
          <target state="translated">Oder es wird ausgelöst, die <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged&gt;</ph> -Ereignis, das Aufrufe zurück an die <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Int32,System.Object)">
          <source>For every <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A&gt;</ph> method, there is an equivalent <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A&gt;</ph> method.</source>
          <target state="translated">Für jede <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A&gt;</ph> -Methode, ist es ein entsprechendes <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Int32,System.Object)">
          <source>Their parameter lists are identical, except that the ResolveAsync method includes a system token for asynchronous event handling, and the Resolve method is intended for synchronous processing.</source>
          <target state="translated">Ihre Parameterlisten sind nahezu identisch, außer dass die ResolveAsync-Methode ein Systemtoken für die asynchrone Ereignisbehandlung enthält und sich an die Resolve-Methode für die synchrone Verarbeitung richtet.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Int32,System.Object)">
          <source>All asynchronous references to the resolver object are coordinated with a unique identifier token <ph id="ph1">&lt;xref:System.Object&gt;</ph>.</source>
          <target state="translated">Alle asynchronen Verweise auf das Objekt Konfliktlöser werden mit einem eindeutigen Bezeichnertoken koordiniert <ph id="ph1">&lt;xref:System.Object&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Int32,System.Object)">
          <source>This <ph id="ph1">`userState`</ph> token or message identifier allows an operating system to deliver a message to a single receiving process after the message has been placed on the message queue.</source>
          <target state="translated">Dies <ph id="ph1">`userState`</ph> Token oder Nachricht Bezeichner ermöglicht ein Betriebssystems auf eine Nachricht an einen einzelnen empfangenden Prozess zu übermitteln, nachdem die Nachricht in die Nachrichtenwarteschlange angeordnet wurde.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Int32,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted&gt;</ph> event will be raised if the resolve operation completes in error or is canceled.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted&gt;</ph> Ereignis wird ausgelöst, wenn der Auflösungsvorgang Fehler abgeschlossen oder abgebrochen wird.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Int32,System.Object)">
          <source>One or both of the <ph id="ph1">&lt;paramref name="peerName" /&gt;</ph> and <ph id="ph2">&lt;paramref name="userState" /&gt;</ph> parameters are set to <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Ein oder beide <ph id="ph1">&lt;paramref name="peerName" /&gt;</ph>- und <ph id="ph2">&lt;paramref name="userState" /&gt;</ph>-Parameter werden auf <ph id="ph3">&lt;see langword="null" /&gt;</ph> festgelegt.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Int32,System.Object)">
          <source>The <ph id="ph1">&lt;paramref name="maxRecords" /&gt;</ph> parameter is less than or equal to zero.</source>
          <target state="translated">Der <ph id="ph1">&lt;paramref name="maxRecords" /&gt;</ph>-Parameter ist kleiner oder gleich 0 (null).</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> to resolve.</source>
          <target state="translated">Der aufzulösende <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.Cloud" /&gt;</ph> in which to resolve the <bpt id="p1">&lt;c&gt;</bpt>peerName<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.Cloud" /&gt;</ph>, in der der <bpt id="p1">&lt;c&gt;</bpt>PeerName<ept id="p1">&lt;/c&gt;</ept> aufgelöst werden soll.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Object)">
          <source>A user-defined <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> that contains information about the peer name resolution operation.</source>
          <target state="translated">Ein benutzerdefiniertes <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>, das Informationen über die Peernamenauflösung enthält.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Object)">
          <source>Begins an asynchronous peer name resolution operation for the specified <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> in the specified <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.Cloud" /&gt;</ph>.</source>
          <target state="translated">Beginnt eine asynchrone Peernamenauflösung für den angegebenen <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> in der angegebenen <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.Cloud" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Object)">
          <source>This method raises the <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted&gt;</ph> event, which calls back to the <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A&gt;</ph> method.</source>
          <target state="translated">Diese Methode löst die <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted&gt;</ph> -Ereignis, das Aufrufe zurück an die <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Object)">
          <source>Or, it raises the <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged&gt;</ph> event, which calls back to the <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A&gt;</ph> method.</source>
          <target state="translated">Oder es wird ausgelöst, die <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged&gt;</ph> -Ereignis, das Aufrufe zurück an die <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Object)">
          <source>For unsecured peer names, the same name can be registered (and associated with different endpoints) by different peers within the same cloud.</source>
          <target state="translated">Für unsichere Peernamen, der gleiche Namen kann werden (mit registriert und verknüpft verschiedene Endpunkte) von anderen Peers innerhalb derselben Cloud.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Object)">
          <source>If the <ph id="ph1">&lt;xref:System.Net.PeerToPeer.Cloud&gt;</ph> parameter is <ph id="ph2">`null`</ph>, the name is resolved using the <ph id="ph3">&lt;xref:System.Net.PeerToPeer.Cloud.Available&gt;</ph> shortcut, which initializes default values for the <ph id="ph4">&lt;xref:System.Net.PeerToPeer.Cloud.Name%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Net.PeerToPeer.Cloud.Scope%2A&gt;</ph>, and <ph id="ph6">&lt;xref:System.Net.PeerToPeer.Cloud.ScopeId%2A&gt;</ph> properties.</source>
          <target state="translated">Wenn die <ph id="ph1">&lt;xref:System.Net.PeerToPeer.Cloud&gt;</ph> Parameter ist <ph id="ph2">`null`</ph>, der Name aufgelöst wird, mithilfe der <ph id="ph3">&lt;xref:System.Net.PeerToPeer.Cloud.Available&gt;</ph> Verknüpfung, die Standardwerte für initialisiert die <ph id="ph4">&lt;xref:System.Net.PeerToPeer.Cloud.Name%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Net.PeerToPeer.Cloud.Scope%2A&gt;</ph>, und <ph id="ph6">&lt;xref:System.Net.PeerToPeer.Cloud.ScopeId%2A&gt;</ph> Eigenschaften.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Object)">
          <source>For every <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A&gt;</ph> method, there is an equivalent <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A&gt;</ph> method.</source>
          <target state="translated">Für jede <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A&gt;</ph> -Methode, ist es ein entsprechendes <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Object)">
          <source>Their parameter lists are identical, except that the ResolveAsync method includes a system token for asynchronous event handling, and the Resolve method is intended for synchronous processing.</source>
          <target state="translated">Ihre Parameterlisten sind nahezu identisch, außer dass die ResolveAsync-Methode ein Systemtoken für die asynchrone Ereignisbehandlung enthält und sich an die Resolve-Methode für die synchrone Verarbeitung richtet.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Object)">
          <source>All asynchronous references to the resolver object are coordinated with a unique identifier token.</source>
          <target state="translated">Alle asynchronen Verweise auf das Objekt Konfliktlöser werden mit einem eindeutigen Bezeichnertoken koordiniert.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Object)">
          <source>This <ph id="ph1">`userState`</ph> token or message identifier allows an operating system to deliver a message to a single receiving process after the message has been placed on the message queue.</source>
          <target state="translated">Dies <ph id="ph1">`userState`</ph> Token oder Nachricht Bezeichner ermöglicht ein Betriebssystems auf eine Nachricht an einen einzelnen empfangenden Prozess zu übermitteln, nachdem die Nachricht in die Nachrichtenwarteschlange angeordnet wurde.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted&gt;</ph> event will be raised if the resolve operation completes in error or is canceled.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted&gt;</ph> Ereignis wird ausgelöst, wenn der Auflösungsvorgang Fehler abgeschlossen oder abgebrochen wird.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Object)">
          <source>One or both of the <ph id="ph1">&lt;paramref name="peerName" /&gt;</ph> and <ph id="ph2">&lt;paramref name="userState" /&gt;</ph> parameters are set to <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Ein oder beide <ph id="ph1">&lt;paramref name="peerName" /&gt;</ph>- und <ph id="ph2">&lt;paramref name="userState" /&gt;</ph>-Parameter werden auf <ph id="ph3">&lt;see langword="null" /&gt;</ph> festgelegt.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32,System.Object)">
          <source>The <bpt id="p1">&lt;c&gt;</bpt>peerName<ept id="p1">&lt;/c&gt;</ept> to resolve.</source>
          <target state="translated">Der aufzulösende <bpt id="p1">&lt;c&gt;</bpt>PeerName<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32,System.Object)">
          <source>The <bpt id="p1">&lt;c&gt;</bpt>cloud<ept id="p1">&lt;/c&gt;</ept> in which to resolve <bpt id="p2">&lt;c&gt;</bpt>peerName<ept id="p2">&lt;/c&gt;</ept>.</source>
          <target state="translated">Die <bpt id="p1">&lt;c&gt;</bpt>Cloud<ept id="p1">&lt;/c&gt;</ept>, in der der <bpt id="p2">&lt;c&gt;</bpt>PeerName<ept id="p2">&lt;/c&gt;</ept> aufgelöst werden soll.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32,System.Object)">
          <source>The maximum number of records to obtain from <bpt id="p1">&lt;c&gt;</bpt>cloud<ept id="p1">&lt;/c&gt;</ept> for <bpt id="p2">&lt;c&gt;</bpt>peerName<ept id="p2">&lt;/c&gt;</ept>.</source>
          <target state="translated">Die maximale Anzahl von Datensätzen, die aus der <bpt id="p1">&lt;c&gt;</bpt>Cloud<ept id="p1">&lt;/c&gt;</ept> für <bpt id="p2">&lt;c&gt;</bpt>PeerName<ept id="p2">&lt;/c&gt;</ept> abgerufen werden sollen.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32,System.Object)">
          <source>A user-defined object that contains information about the peer name resolution operation.</source>
          <target state="translated">Ein benutzerdefiniertes Objekt, das Informationen über die Peernamensauflösung enthält.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32,System.Object)">
          <source>Begins an asynchronous peer name resolution operation for the specified <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> in the specified <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.Cloud" /&gt;</ph>.</source>
          <target state="translated">Beginnt eine asynchrone Peernamenauflösung für den angegebenen <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> in der angegebenen <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.Cloud" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32,System.Object)">
          <source>The resolution operation will resolve no more than <ph id="ph1">&lt;paramref name="maxRecords" /&gt;</ph> entries for the specified peer name.</source>
          <target state="translated">Der Auflösungsvorgang löst höchstens so viele Einträge für den angegebenen Peernamen auf, wie in <ph id="ph1">&lt;paramref name="maxRecords" /&gt;</ph> festgelegt.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32,System.Object)">
          <source>For unsecured peer names, the same name can be registered (and associated with different endpoints) by different peers within the same cloud.</source>
          <target state="translated">Für unsichere Peernamen, der gleiche Namen kann werden (mit registriert und verknüpft verschiedene Endpunkte) von anderen Peers innerhalb derselben Cloud.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32,System.Object)">
          <source>This method raises the <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted&gt;</ph> event, which calls back to the <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A&gt;</ph> method.</source>
          <target state="translated">Diese Methode löst die <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted&gt;</ph> -Ereignis, das Aufrufe zurück an die <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32,System.Object)">
          <source>Or, it raises the <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged&gt;</ph> event, which calls back to the <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A&gt;</ph> method.</source>
          <target state="translated">Oder es wird ausgelöst, die <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged&gt;</ph> -Ereignis, das Aufrufe zurück an die <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32,System.Object)">
          <source>If the <ph id="ph1">&lt;xref:System.Net.PeerToPeer.Cloud&gt;</ph> parameter is <ph id="ph2">`null`</ph>, the name is resolved using the <ph id="ph3">&lt;xref:System.Net.PeerToPeer.Cloud.Available&gt;</ph> shortcut, which initializes default values for the <ph id="ph4">&lt;xref:System.Net.PeerToPeer.Cloud.Name%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Net.PeerToPeer.Cloud.Scope%2A&gt;</ph>, and <ph id="ph6">&lt;xref:System.Net.PeerToPeer.Cloud.ScopeId%2A&gt;</ph> properties.</source>
          <target state="translated">Wenn die <ph id="ph1">&lt;xref:System.Net.PeerToPeer.Cloud&gt;</ph> Parameter ist <ph id="ph2">`null`</ph>, der Name aufgelöst wird, mithilfe der <ph id="ph3">&lt;xref:System.Net.PeerToPeer.Cloud.Available&gt;</ph> Verknüpfung, die Standardwerte für initialisiert die <ph id="ph4">&lt;xref:System.Net.PeerToPeer.Cloud.Name%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Net.PeerToPeer.Cloud.Scope%2A&gt;</ph>, und <ph id="ph6">&lt;xref:System.Net.PeerToPeer.Cloud.ScopeId%2A&gt;</ph> Eigenschaften.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32,System.Object)">
          <source>For every <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A&gt;</ph> method, there is an equivalent <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A&gt;</ph> method.</source>
          <target state="translated">Für jede <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A&gt;</ph> -Methode, ist es ein entsprechendes <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32,System.Object)">
          <source>Their parameter lists are identical, except that the ResolveAsync method includes a system token for asynchronous event handling, and the Resolve method is intended for synchronous processing.</source>
          <target state="translated">Ihre Parameterlisten sind nahezu identisch, außer dass die ResolveAsync-Methode ein Systemtoken für die asynchrone Ereignisbehandlung enthält und sich an die Resolve-Methode für die synchrone Verarbeitung richtet.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32,System.Object)">
          <source>All asynchronous references to the peer resolver object are coordinated with a unique identifier token <ph id="ph1">&lt;xref:System.Object&gt;</ph>.</source>
          <target state="translated">Alle asynchronen Verweise auf das Peerresolverobjekt werden mit einem eindeutigen Bezeichnertoken koordiniert <ph id="ph1">&lt;xref:System.Object&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32,System.Object)">
          <source>This <ph id="ph1">`userState`</ph> token or message identifier allows an operating system to deliver a message to a single receiving process after the message has been placed on the message queue.</source>
          <target state="translated">Dies <ph id="ph1">`userState`</ph> Token oder Nachricht Bezeichner ermöglicht ein Betriebssystems auf eine Nachricht an einen einzelnen empfangenden Prozess zu übermitteln, nachdem die Nachricht in die Nachrichtenwarteschlange angeordnet wurde.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted&gt;</ph> event will be raised if the resolve operation completes in error or is canceled.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted&gt;</ph> Ereignis wird ausgelöst, wenn der Auflösungsvorgang Fehler abgeschlossen oder abgebrochen wird.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32,System.Object)">
          <source>One or both of the <ph id="ph1">&lt;paramref name="peerName" /&gt;</ph> and <ph id="ph2">&lt;paramref name="userState" /&gt;</ph> parameters are set to <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Ein oder beide <ph id="ph1">&lt;paramref name="peerName" /&gt;</ph>- und <ph id="ph2">&lt;paramref name="userState" /&gt;</ph>-Parameter werden auf <ph id="ph3">&lt;see langword="null" /&gt;</ph> festgelegt.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32,System.Object)">
          <source>One or more supplied parameters are invalid.</source>
          <target state="translated">Mindestens ein angegebener Parameter ist ungültig.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32,System.Object)">
          <source>Successful completion of this operation requires at least one event handler.</source>
          <target state="translated">Für den erfolgreichen Abschluss dieses Vorgangs ist mindestens ein Ereignishandler erforderlich.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32,System.Object)">
          <source>The <ph id="ph1">&lt;paramref name="maxRecords" /&gt;</ph> parameter is less than or equal to zero.</source>
          <target state="translated">Der <ph id="ph1">&lt;paramref name="maxRecords" /&gt;</ph>-Parameter ist kleiner oder gleich 0 (null).</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsyncCancel(System.Object)">
          <source>The object provided to the <ph id="ph1">&lt;see cref="Overload:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync" /&gt;</ph> method instance which started the resolve operation.</source>
          <target state="translated">Das für die <ph id="ph1">&lt;see cref="Overload:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync" /&gt;</ph>-Methodeninstanz, die den Auflösungsvorgang gestartet hat, bereitgestellte Objekt.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsyncCancel(System.Object)">
          <source>Cancels the specified asynchronous peer name resolution request.</source>
          <target state="translated">Bricht die angegebene Anforderung zur Auflösung des asynchronen Peernamens ab.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsyncCancel(System.Object)">
          <source>Calling this method guarantees the system will not attempt to obtain additional records for the specified <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerName&gt;</ph>.</source>
          <target state="translated">Beim Aufrufen dieser Methode wird sichergestellt, die das System versucht nicht, um zusätzliche Datensätze für den angegebenen erhalten <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerName&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsyncCancel(System.Object)">
          <source>If this method is called when an asynchronous peer name resolution operation is not outstanding, it acts as a "no operation" (NO OP).</source>
          <target state="translated">Wenn diese Methode aufgerufen wird, wenn eine asynchrone Peer Name Auflösungsvorgang nicht ausstehende ist, fungiert Sie als "kein Vorgang" ("NO" OP).</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsyncCancel(System.Object)">
          <source>The <ph id="ph1">`userState`</ph> object must be provided since it is used to track a specific asynchronous call when multiple calls are in progress.</source>
          <target state="translated">Die <ph id="ph1">`userState`</ph> Objekt muss angegeben werden, da es verwendet wird, um einen bestimmten asynchronen Aufruf nachzuverfolgen, wenn mehrere Aufrufe ausgeführt werden.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsyncCancel(System.Object)">
          <source>This caller-supplied object is unique for each peer name resolution request.</source>
          <target state="translated">Diese vom Aufrufer bereitgestellte Objekt ist für jede Peer Name Resolution-Anforderung eindeutig.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsyncCancel(System.Object)">
          <source>This method will return immediately, but the operation may or may not immediately cancel.</source>
          <target state="translated">Diese Methode wird sofort zurückgegeben, aber des Vorgangs möglicherweise möglicherweise nicht sofort abgebrochen.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsyncCancel(System.Object)">
          <source>The event arguments returned by the <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted&gt;</ph> event contains a field which can be polled by clients to determine whether cancellation occurred.</source>
          <target state="translated">Die Ereignisargumente, die zurückgegeben werden, indem die <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted&gt;</ph> Ereignis enthält ein Feld, das abgefragt werden kann, von Clients zu bestimmen, ob ein Abbruch aufgetreten ist.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsyncCancel(System.Object)">
          <source>Calling this method ensures the ResolveCompleted event will be signaled as soon as possible with the event argument <ph id="ph1">&lt;xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A&gt;</ph> set to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Beim Aufrufen dieser Methode wird sichergestellt, dass das Ereignis ResolveCompleted so bald wie möglich mit der das Ereignisargument signalisiert wird <ph id="ph1">&lt;xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A&gt;</ph> festgelegt <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsyncCancel(System.Object)">
          <source>The <ph id="ph1">&lt;paramref name="userState" /&gt;</ph> parameters cannot be <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Die <ph id="ph1">&lt;paramref name="userState" /&gt;</ph>-Parameter dürfen nicht <ph id="ph2">&lt;see langword="null" /&gt;</ph> sein.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="E:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted">
          <source>The <ph id="ph1">&lt;see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted" /&gt;</ph> event is signaled when a peer name resolution request for a specific <ph id="ph2">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /&gt;</ph> has completed.</source>
          <target state="translated">Das <ph id="ph1">&lt;see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted" /&gt;</ph>-Ereignis wird signalisiert, wenn eine Anforderung zur Auflösung eines Peernamens für einen bestimmten <ph id="ph2">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /&gt;</ph> abgeschlossen wurde.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted">
          <source>The <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged&gt;</ph> event will be raised once for each endpoint found, and this event will be raised only once when all endpoints have been found.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged&gt;</ph> -Ereignis wird einmal für jeden gefundenen Endpunkt ausgelöst werden, und dieses Ereignis wird werden nur einmal ausgelöst, wenn alle Endpunkte gefunden wurden.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted">
          <source>This event will also be raised if the <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A&gt;</ph> operation completes in error or is canceled.</source>
          <target state="translated">Dieses Ereignis wird auch ausgelöst, wenn die <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A&gt;</ph> Vorgang Fehler abgeschlossen oder abgebrochen wird.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="E:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged">
          <source>This event is signaled whenever a <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRecord" /&gt;</ph> object is found in response to a <ph id="ph2">&lt;see cref="Overload:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync" /&gt;</ph> operation for a specific <ph id="ph3">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph>.</source>
          <target state="translated">Dieses Ereignis wird signalisiert, wenn ein <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRecord" /&gt;</ph>-Objekt als Reaktion auf einen <ph id="ph2">&lt;see cref="Overload:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync" /&gt;</ph>-Vorgang für einen bestimmten <ph id="ph3">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> gefunden wird.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged">
          <source>If multiple <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerName&gt;</ph> objects exist in the cloud(s) being queried, this event is signaled once for each <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameRecord&gt;</ph> found.</source>
          <target state="translated">Wenn mehrere <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerName&gt;</ph> Objekte, die in den abgefragten vorhanden sind, dieses Ereignis signalisiert wird einmal für jede <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameRecord&gt;</ph> gefunden.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>