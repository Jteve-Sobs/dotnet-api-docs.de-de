<Type Name="PeerNameResolver" FullName="System.Net.PeerToPeer.PeerNameResolver">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8fbb46569ea8c3e2c36d884eb360682eca12794a" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30461044" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class PeerNameResolver" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi PeerNameResolver extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.PeerToPeer.PeerNameResolver" />
  <TypeSignature Language="VB.NET" Value="Public Class PeerNameResolver" />
  <TypeSignature Language="C++ CLI" Value="public ref class PeerNameResolver" />
  <AssemblyInfo>
    <AssemblyName>System.Net</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="0c965-101">Gibt die Werte an, die einen <see cref="T:System.Net.PeerToPeer.PeerName" /> unter Verwendung des Protokolls für die PNRP Namespace Provider-API in einen <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> auflösen.</span>
      <span class="sxs-lookup">
        <span data-stu-id="0c965-101">Specifies the values that resolve a <see cref="T:System.Net.PeerToPeer.PeerName" /> to a <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> using the PNRP Namespace Provider API protocol.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c965-102">Ein <xref:System.Net.PeerToPeer.PeerNameRecord> enthält alle Informationen für die <xref:System.Net.PeerToPeer.PeerName> , veröffentlicht wurde, der <xref:System.Net.PeerToPeer.Cloud> oder Wolken, die während des Prozesses Resolve abgefragt wurden.</span><span class="sxs-lookup"><span data-stu-id="0c965-102">A <xref:System.Net.PeerToPeer.PeerNameRecord> which contains all the information for the <xref:System.Net.PeerToPeer.PeerName> that was published in the <xref:System.Net.PeerToPeer.Cloud> or cloud(s) that were queried during the resolve process.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PeerNameResolver ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PeerNameResolver();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0c965-103">Initialisiert eine neue Standardinstanz der <see cref="T:System.Net.PeerToPeer.PeerNameResolver" />-Klasse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c965-103">Initializes a new default instance of the <see cref="T:System.Net.PeerToPeer.PeerNameResolver" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c965-104">Nachdem Sie erfolgreich behoben eine <xref:System.Net.PeerToPeer.PeerName>, die <xref:System.Net.PeerToPeer.PeerNameRecord> enthält alle Informationen für den angegebenen <xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A> , die in den Wolken, die während der abgefragt wurden veröffentlicht wurde die <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> Vorgang.</span><span class="sxs-lookup"><span data-stu-id="0c965-104">After successfully resolving a <xref:System.Net.PeerToPeer.PeerName>, the <xref:System.Net.PeerToPeer.PeerNameRecord> contains all the information for the specified <xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A> that was published in the cloud(s) that were queried during the <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnResolveCompleted">
      <MemberSignature Language="C#" Value="protected void OnResolveCompleted (System.Net.PeerToPeer.ResolveCompletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void OnResolveCompleted(class System.Net.PeerToPeer.ResolveCompletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted(System.Net.PeerToPeer.ResolveCompletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub OnResolveCompleted (e As ResolveCompletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void OnResolveCompleted(System::Net::PeerToPeer::ResolveCompletedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.PeerToPeer.ResolveCompletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="0c965-105">Das <see cref="T:System.Net.PeerToPeer.ResolveCompletedEventArgs" />-Objekt, das die Ereignisdaten enthält, die vom <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted" />-Ereignis zurückgegeben werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c965-105">The <see cref="T:System.Net.PeerToPeer.ResolveCompletedEventArgs" /> object that contains the data returned by the <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted" /> event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c965-106">Gibt die Peerauflösungsdaten zurück, nachdem das <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted" />-Ereignis ausgelöst wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c965-106">Returns peer resolution data after the <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted" /> event is raised.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c965-107">Diese Methode ist ein asynchroner Rückruf, der zum Verarbeiten von Peer Name Resolution-Daten nach Abschluss der Peer-Auflösung verwendet.</span><span class="sxs-lookup"><span data-stu-id="0c965-107">This method is an asynchronous callback used to process peer name resolution data after peer resolution has completed.</span></span>  
  
 <span data-ttu-id="0c965-108">Abgeleitete Typen können dies außer Kraft setzen Methode, um zusätzliche führen Vorgänge fest, wenn die <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> Ereignis wird durch die Peerresolverobjekt ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="0c965-108">Derived types can override this method to perform additional tasks when the <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> event is raised by the peer resolver object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsyncCancel(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="OnResolveProgressChanged">
      <MemberSignature Language="C#" Value="protected void OnResolveProgressChanged (System.Net.PeerToPeer.ResolveProgressChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void OnResolveProgressChanged(class System.Net.PeerToPeer.ResolveProgressChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged(System.Net.PeerToPeer.ResolveProgressChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub OnResolveProgressChanged (e As ResolveProgressChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void OnResolveProgressChanged(System::Net::PeerToPeer::ResolveProgressChangedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.PeerToPeer.ResolveProgressChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="0c965-109">
            <see cref="T:System.Net.PeerToPeer.ResolveProgressChangedEventArgs" />-Objekt, das vom <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged" />-Ereignis zurückgegebene Statusinformationen der Peernamensauflösung enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c965-109">
              <see cref="T:System.Net.PeerToPeer.ResolveProgressChangedEventArgs" /> object that contains peer name resolution progress information returned by the <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged" /> event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c965-110">Gibt die Statusdaten der Peerauflösung zurück, nachdem das <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged" />-Ereignis ausgelöst wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c965-110">Returns peer resolution progress data when the <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged" /> event is raised.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c965-111">Diese Methode ist ein asynchroner Rückruf, der zur Verarbeitung von Peer-Lösungsdaten, nachdem Fortschritte bei der Peer-Lösung angefordert wurde verwendet.</span><span class="sxs-lookup"><span data-stu-id="0c965-111">This method is an asynchronous callback used to process peer resolution data after peer resolution progress has been requested.</span></span>  
  
 <span data-ttu-id="0c965-112">Abgeleitete Typen können überschreiben diese Methode, um zusätzliche führen Vorgänge fest, wenn die <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged> Ereignis tritt auf.</span><span class="sxs-lookup"><span data-stu-id="0c965-112">Derived types can override this method to perform additional tasks when the <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged> event occurs.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="0c965-113">Überschreiben diese Methode in einem abgeleiteten Typ, achten Sie beim Aufrufen des Basistyps <see cref="M:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged(System.Net.PeerToPeer.ResolveProgressChangedEventArgs)" /> Methode, damit registrierte Delegaten das Ereignis empfangen.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0c965-113">When overriding this method in a derived type, be sure to call the base type's <see cref="M:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged(System.Net.PeerToPeer.ResolveProgressChangedEventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <MemberGroup MemberName="Resolve">
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0c965-114">Löst ein <see cref="T:System.Net.PeerToPeer.PeerName" />-Objekt unter Verwendung des Protokolls PNRP in ein <see cref="T:System.Net.PeerToPeer.PeerNameRecord" />-Objekt auf.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c965-114">Resolves a <see cref="T:System.Net.PeerToPeer.PeerName" /> object to a <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> using the PNRP protocol.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c965-115">Diese Methode ordnet Peernamen in Clouds.</span><span class="sxs-lookup"><span data-stu-id="0c965-115">This method associates peer names to clouds.</span></span> <span data-ttu-id="0c965-116">Aufrufen der <xref:System.Net.PeerToPeer.PeerNameResolver> Methode ist vergleichbar mit einem Aufruf der <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> Methode für jeden Peer Name Datensatz in die <xref:System.Net.PeerToPeer.PeerNameRecordCollection>.</span><span class="sxs-lookup"><span data-stu-id="0c965-116">Calling the <xref:System.Net.PeerToPeer.PeerNameResolver> method is similar to calling the <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> method for each peer name record in the <xref:System.Net.PeerToPeer.PeerNameRecordCollection>.</span></span> <span data-ttu-id="0c965-117">Beachten Sie, dass die Resolve-Methode auf einem einzelnen Peer Name Datensatz mit nicht auflösen von mehreren Peernamen ungültig wird.</span><span class="sxs-lookup"><span data-stu-id="0c965-117">Note that using the Resolve method on an individual peer name record does not invalidate resolving multiple peer names.</span></span>  
  
 <span data-ttu-id="0c965-118">Für jede <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> -Methode, ist es ein entsprechendes <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="0c965-118">For every <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> method, there is an equivalent <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> method.</span></span>  <span data-ttu-id="0c965-119">Sie sind in den Parametern, die sie übergeben werden, die identisch, außer dass die ResolveAsync-Methode ein System-Tokens in der Parameterliste für die asynchrone Ereignisbehandlung enthält.</span><span class="sxs-lookup"><span data-stu-id="0c965-119">They are identical in the parameters they are passed, except that the ResolveAsync method includes a system token in its parameter list for asynchronous event handling.</span></span>  
  
 <span data-ttu-id="0c965-120">Wenn die <xref:System.Net.PeerToPeer.Cloud> Parameter nicht angegeben wird, verwendet die Methode die <xref:System.Net.PeerToPeer.Cloud.Available> Verknüpfung Cloud Parameter ausfüllen.</span><span class="sxs-lookup"><span data-stu-id="0c965-120">If the <xref:System.Net.PeerToPeer.Cloud> parameter is not supplied, the method uses the <xref:System.Net.PeerToPeer.Cloud.Available> shortcut to fill in cloud parameters.</span></span>  <span data-ttu-id="0c965-121">Wenn die `maxRecords` Parameter fehlt, ist den Standardwert von NULL festgelegt, wird ein <xref:System.ArgumentOutOfRangeException> Ausnahme ausgelöst wird.</span><span class="sxs-lookup"><span data-stu-id="0c965-121">If the `maxRecords` parameter is missing, the default value of zero causes an <xref:System.ArgumentOutOfRangeException> exception to be thrown.</span></span>  
  
 <span data-ttu-id="0c965-122">Dieses Ereignis wird auch ausgelöst werden, wenn der Auflösungsvorgang Fehler abgeschlossen oder abgebrochen wird.</span><span class="sxs-lookup"><span data-stu-id="0c965-122">This event will also be raised if the resolve operation completes in error or is canceled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.PeerToPeer.PeerNameRegistration" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.PeerNameRecordCollection Resolve (System.Net.PeerToPeer.PeerName peerName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.PeerToPeer.PeerNameRecordCollection Resolve(class System.Net.PeerToPeer.PeerName peerName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::PeerToPeer::PeerNameRecordCollection ^ Resolve(System::Net::PeerToPeer::PeerName ^ peerName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.PeerNameRecordCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerName" Type="System.Net.PeerToPeer.PeerName" />
      </Parameters>
      <Docs>
        <param name="peerName">
          <span data-ttu-id="0c965-123">Der aufzulösende <see cref="T:System.Net.PeerToPeer.PeerName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c965-123">The <see cref="T:System.Net.PeerToPeer.PeerName" /> to resolve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c965-124">Löst den angegebenen <see cref="T:System.Net.PeerToPeer.PeerName" /> in allen Wolken auf, die dem aufrufenden Peer bekannt sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c965-124">Resolves the specified <see cref="T:System.Net.PeerToPeer.PeerName" /> in all clouds known to the calling peer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0c965-125">Eine <see cref="T:System.Net.PeerToPeer.PeerNameRecordCollection" />, die alle Peernamensdatensätze enthält (als <see cref="T:System.Net.PeerToPeer.PeerNameRecord" />-Objekte dargestellt), die dem angegebenen Peernamen zugeordnet sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c965-125">A <see cref="T:System.Net.PeerToPeer.PeerNameRecordCollection" /> that contains all peer name records (represented as <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> objects) associated with the specified peer name.</span>
          </span>
          <span data-ttu-id="0c965-126">Bei ungesicherten Peernamen kann der gleiche <see cref="T:System.Net.PeerToPeer.PeerName" /> von mehreren Benutzern in derselben <see cref="T:System.Net.PeerToPeer.Cloud" /> registriert werden und unterschiedlichen Endpunkten zugeordnet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c965-126">For unsecured peer names, the same <see cref="T:System.Net.PeerToPeer.PeerName" /> can be registered by different users in the same <see cref="T:System.Net.PeerToPeer.Cloud" />, and associated with different endpoints.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c965-127">Diese Methode ordnet eine PeerName-zu Clouds.</span><span class="sxs-lookup"><span data-stu-id="0c965-127">This method associates a peer name to clouds.</span></span> <span data-ttu-id="0c965-128">Alle Clouds werden abgefragt, für die <xref:System.Net.PeerToPeer.PeerName>.</span><span class="sxs-lookup"><span data-stu-id="0c965-128">All clouds are queried for the <xref:System.Net.PeerToPeer.PeerName>.</span></span> <span data-ttu-id="0c965-129">Wenn der Name des Peers kann nicht aufgelöst werden oder ist `null`, wird eine <xref:System.Net.PeerToPeer.PeerToPeerException> ausgelöst wird.</span><span class="sxs-lookup"><span data-stu-id="0c965-129">If the peer name cannot be resolved or is `null`, an <xref:System.Net.PeerToPeer.PeerToPeerException> is thrown.</span></span>  
  
 <span data-ttu-id="0c965-130">Für unsichere Peernamen, der gleiche Namen kann werden (mit registriert und verknüpft verschiedene Endpunkte) von anderen Peers innerhalb derselben Cloud.</span><span class="sxs-lookup"><span data-stu-id="0c965-130">For unsecured peer names, the same name can be registered (and associated with different endpoints) by different peers within the same cloud.</span></span>  
  
 <span data-ttu-id="0c965-131">Aufrufen der <xref:System.Net.PeerToPeer.PeerNameResolver> Methode ist vergleichbar mit einem Aufruf der <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> Methode für jeden Peer Name Datensatz in die <xref:System.Net.PeerToPeer.PeerNameRecordCollection>.</span><span class="sxs-lookup"><span data-stu-id="0c965-131">Calling the <xref:System.Net.PeerToPeer.PeerNameResolver> method is similar to calling the <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> method for each peer name record in the <xref:System.Net.PeerToPeer.PeerNameRecordCollection>.</span></span> <span data-ttu-id="0c965-132">Beachten Sie, dass die Resolve-Methode auf einem einzelnen Peer Name Datensatz mit nicht auflösen von mehreren Peernamen ungültig wird.</span><span class="sxs-lookup"><span data-stu-id="0c965-132">Note that using the Resolve method on an individual peer name record does not invalidate resolving multiple peer names.</span></span>  
  
 <span data-ttu-id="0c965-133">Für jede <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> -Methode, ist es ein entsprechendes <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="0c965-133">For every <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> method, there is an equivalent <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> method.</span></span>  <span data-ttu-id="0c965-134">Ihre Parameterlisten sind nahezu identisch, außer dass die ResolveAsync-Methode ein System-Tokens für die asynchrone Ereignisbehandlung enthält.</span><span class="sxs-lookup"><span data-stu-id="0c965-134">Their parameter lists are identical, except that the ResolveAsync method includes a system token for asynchronous event handling.</span></span>  
  
 <span data-ttu-id="0c965-135">Wenn die <xref:System.Net.PeerToPeer.Cloud> Parameter nicht angegeben wird, verwendet die Methode die <xref:System.Net.PeerToPeer.Cloud.Available> Verknüpfung Cloud Parameter ausfüllen.</span><span class="sxs-lookup"><span data-stu-id="0c965-135">If the <xref:System.Net.PeerToPeer.Cloud> parameter is not supplied, the method uses the <xref:System.Net.PeerToPeer.Cloud.Available> shortcut to fill in cloud parameters.</span></span>  
  
 <span data-ttu-id="0c965-136">Die <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> Ereignis wird ausgelöst, wenn der Auflösungsvorgang Fehler abgeschlossen oder abgebrochen wird.</span><span class="sxs-lookup"><span data-stu-id="0c965-136">The <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> event will be raised if the resolve operation completes in error or is canceled.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c965-137">Im folgenden Codebeispiel wird veranschaulicht, wie zum Auflösen einer <xref:System.Net.PeerToPeer.PeerName> in einem veröffentlichten <xref:System.Net.PeerToPeer.Cloud>.</span><span class="sxs-lookup"><span data-stu-id="0c965-137">The following code example illustrates how to resolve a <xref:System.Net.PeerToPeer.PeerName> published in any <xref:System.Net.PeerToPeer.Cloud>.</span></span>  
  
 [!code-csharp[NCLPNRPPeerNameResolver#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPNRPPeerNameResolver/CS/PeerNameResolver.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0c965-138">Der <paramref name="peerName" />-Parameter ist auf <see langword="null" /> festgelegt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c965-138">The <paramref name="peerName" /> parameter is set to <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">
          <span data-ttu-id="0c965-139">Der angegebene Peername kann nicht aufgelöst werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c965-139">The peer name specified cannot be resolved.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.PeerToPeer.PeerNameRegistration" />
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.PeerNameRecordCollection Resolve (System.Net.PeerToPeer.PeerName peerName, int maxRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.PeerToPeer.PeerNameRecordCollection Resolve(class System.Net.PeerToPeer.PeerName peerName, int32 maxRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::PeerToPeer::PeerNameRecordCollection ^ Resolve(System::Net::PeerToPeer::PeerName ^ peerName, int maxRecords);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.PeerNameRecordCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerName" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="maxRecords" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="peerName">
          <span data-ttu-id="0c965-140">Der aufzulösende <see cref="T:System.Net.PeerToPeer.PeerName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c965-140">The <see cref="T:System.Net.PeerToPeer.PeerName" /> to resolve.</span>
          </span>
        </param>
        <param name="maxRecords">
          <span data-ttu-id="0c965-141">Die maximale Anzahl von <see cref="T:System.Net.PeerToPeer.PeerNameRecord" />-Objekten, die aus allen <see cref="T:System.Net.PeerToPeer.Cloud" />-Objekten für den angegebenen <c>PeerName</c> abgerufen werden können.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c965-141">The maximum number of <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> objects to obtain from all <see cref="T:System.Net.PeerToPeer.Cloud" /> objects for the supplied <c>peerName</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c965-142">Löst den angegebenen Peernamen in allen Wolken auf, die dem aufrufenden Peer bekannt sind, und gibt nicht mehr als die angegebene Anzahl von <see cref="T:System.Net.PeerToPeer.PeerNameRecord" />-Objekten zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c965-142">Resolves the specified peer name in all clouds known to the calling peer, returning no more than the specified number of <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> objects.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0c965-143">Eine <see cref="T:System.Net.PeerToPeer.PeerNameRecordCollection" />, deren Größe kleiner oder gleich der mit <paramref name="maxRecords" /> angegebenen Anzahl von Einträgen ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c965-143">A <see cref="T:System.Net.PeerToPeer.PeerNameRecordCollection" /> whose size is less than or equal to <paramref name="maxRecords" /> entries.</span>
          </span>
          <span data-ttu-id="0c965-144">Diese Auflistung enthält Peernamensdatensätze, die dem aufgelösten <see cref="T:System.Net.PeerToPeer.PeerName" /> zugeordnet sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c965-144">This collection contains peer name records associated with the <see cref="T:System.Net.PeerToPeer.PeerName" /> that was resolved.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c965-145">Diese Methode ordnet eine PeerName-zu Clouds.</span><span class="sxs-lookup"><span data-stu-id="0c965-145">This method associates a peer name to clouds.</span></span> <span data-ttu-id="0c965-146">Der Name des Peers werden alle Clouds abgefragt.</span><span class="sxs-lookup"><span data-stu-id="0c965-146">All clouds are queried for the peer name.</span></span> <span data-ttu-id="0c965-147">Für unsichere Peernamen Peernamen registriert werden kann, von anderen Benutzern in der gleichen <xref:System.Net.PeerToPeer.Cloud>, und die zugehörigen mit verschiedenen Endpunkten.</span><span class="sxs-lookup"><span data-stu-id="0c965-147">For unsecured peer names, the same peer name can be registered by different users in the same <xref:System.Net.PeerToPeer.Cloud>, and associated with different endpoints.</span></span> <span data-ttu-id="0c965-148">Wenn die <xref:System.Net.PeerToPeer.PeerName> kann nicht aufgelöst werden (z. B. der Name des Peers nicht veröffentlicht wurde) eine <xref:System.Net.PeerToPeer.PeerToPeerException> ausgelöst wird.</span><span class="sxs-lookup"><span data-stu-id="0c965-148">If the <xref:System.Net.PeerToPeer.PeerName> cannot be resolved (for example, the peer name is not published) an <xref:System.Net.PeerToPeer.PeerToPeerException> is thrown.</span></span>  
  
 <span data-ttu-id="0c965-149">Für jede <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> -Methode, ist es ein entsprechendes <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="0c965-149">For every <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> method, there is an equivalent <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> method.</span></span>  <span data-ttu-id="0c965-150">Ihre Parameterlisten sind nahezu identisch, außer dass die ResolveAsync-Methode ein System-Tokens für die asynchrone Ereignisbehandlung enthält.</span><span class="sxs-lookup"><span data-stu-id="0c965-150">Their parameter lists are identical, except that the ResolveAsync method includes a system token for asynchronous event handling.</span></span>  
  
 <span data-ttu-id="0c965-151">Die <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> Ereignis wird ausgelöst, wenn der Auflösungsvorgang Fehler abgeschlossen oder abgebrochen wird.</span><span class="sxs-lookup"><span data-stu-id="0c965-151">The <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> event will be raised if the resolve operation completes in error or is canceled.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0c965-152">Der <paramref name="peerName" />-Parameter ist auf <see langword="null" /> festgelegt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c965-152">The <paramref name="peerName" /> parameter is set to <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0c965-153">Der <paramref name="maxRecords" />-Parameter ist kleiner oder gleich 0 (null).</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c965-153">The <paramref name="maxRecords" /> parameter is less than or equal to zero.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">
          <span data-ttu-id="0c965-154">Der angegebene Peername kann nicht aufgelöst werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c965-154">The supplied peer name cannot be resolved.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.PeerNameRecordCollection Resolve (System.Net.PeerToPeer.PeerName peerName, System.Net.PeerToPeer.Cloud cloud);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.PeerToPeer.PeerNameRecordCollection Resolve(class System.Net.PeerToPeer.PeerName peerName, class System.Net.PeerToPeer.Cloud cloud) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::PeerToPeer::PeerNameRecordCollection ^ Resolve(System::Net::PeerToPeer::PeerName ^ peerName, System::Net::PeerToPeer::Cloud ^ cloud);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.PeerNameRecordCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerName" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="cloud" Type="System.Net.PeerToPeer.Cloud" />
      </Parameters>
      <Docs>
        <param name="peerName">
          <span data-ttu-id="0c965-155">Der aufzulösende <see cref="T:System.Net.PeerToPeer.PeerName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c965-155">The <see cref="T:System.Net.PeerToPeer.PeerName" /> to resolve.</span>
          </span>
        </param>
        <param name="cloud">
          <span data-ttu-id="0c965-156">Die <see cref="T:System.Net.PeerToPeer.Cloud" />, in der der Peername aufgelöst werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c965-156">The <see cref="T:System.Net.PeerToPeer.Cloud" /> in which to resolve the peer name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c965-157">Löst den angegebenen <see cref="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" /> in der angegebenen <see cref="T:System.Net.PeerToPeer.Cloud" /> auf.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c965-157">Resolves the specified <see cref="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" /> in the specified <see cref="T:System.Net.PeerToPeer.Cloud" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0c965-158">Eine <see cref="T:System.Net.PeerToPeer.PeerNameRecordCollection" />, die alle Peernamensdatensätze enthält (als <see cref="T:System.Net.PeerToPeer.PeerNameRecord" />-Objekte dargestellt), die dem angegebenen Peernamen zugeordnet sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c965-158">
              <see cref="T:System.Net.PeerToPeer.PeerNameRecordCollection" /> that contains all peer name records (represented as <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> objects) associated with the specified peer name.</span>
          </span>
          <span data-ttu-id="0c965-159">Bei ungesicherten Peernamen kann der gleiche <see cref="T:System.Net.PeerToPeer.PeerName" /> von mehreren Benutzern in derselben <see cref="T:System.Net.PeerToPeer.Cloud" /> registriert werden und unterschiedlichen Endpunkten zugeordnet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c965-159">For unsecured peer names, the same <see cref="T:System.Net.PeerToPeer.PeerName" /> can be registered by different users in the same <see cref="T:System.Net.PeerToPeer.Cloud" />, and associated with different endpoints.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c965-160">Wenn die <xref:System.Net.PeerToPeer.PeerName> kann nicht aufgelöst werden (d. h. der Name des Peers nicht veröffentlicht wurde) eine <xref:System.Net.PeerToPeer.PeerToPeerException> ausgelöst wird.</span><span class="sxs-lookup"><span data-stu-id="0c965-160">If the <xref:System.Net.PeerToPeer.PeerName> cannot be resolved (i.e., the peer name is not published) an <xref:System.Net.PeerToPeer.PeerToPeerException> is thrown.</span></span>  
  
 <span data-ttu-id="0c965-161">Für unsichere Peernamen, der gleiche Namen kann werden (mit registriert und verknüpft verschiedene Endpunkte) von anderen Peers innerhalb derselben Cloud.</span><span class="sxs-lookup"><span data-stu-id="0c965-161">For unsecured peer names, the same name can be registered (and associated with different endpoints) by different peers within the same cloud.</span></span>  
  
 <span data-ttu-id="0c965-162">Für jede <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> -Methode, ist es ein entsprechendes <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="0c965-162">For every <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> method, there is an equivalent <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> method.</span></span>  <span data-ttu-id="0c965-163">Ihre Parameterlisten sind nahezu identisch, außer dass die ResolveAsync-Methode ein System-Tokens für die asynchrone Ereignisbehandlung enthält.</span><span class="sxs-lookup"><span data-stu-id="0c965-163">Their parameter lists are identical, except that the ResolveAsync method includes a system token for asynchronous event handling.</span></span>  
  
 <span data-ttu-id="0c965-164">Wenn die <xref:System.Net.PeerToPeer.Cloud> Parameter ist `null`, <xref:System.Net.PeerToPeer.PeerNameResolver> verwendet die <xref:System.Net.PeerToPeer.Cloud.Available> Verknüpfung zum Füllen der <xref:System.Net.PeerToPeer.Cloud.Name%2A>, <xref:System.Net.PeerToPeer.Cloud.Scope%2A>, und <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A>.</span><span class="sxs-lookup"><span data-stu-id="0c965-164">If the <xref:System.Net.PeerToPeer.Cloud> parameter is `null`, the <xref:System.Net.PeerToPeer.PeerNameResolver> uses the <xref:System.Net.PeerToPeer.Cloud.Available> shortcut to fill in the <xref:System.Net.PeerToPeer.Cloud.Name%2A>, <xref:System.Net.PeerToPeer.Cloud.Scope%2A>, and <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A>.</span></span>  
  
 <span data-ttu-id="0c965-165">Die <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> Ereignis wird ausgelöst, wenn der Auflösungsvorgang Fehler abgeschlossen oder abgebrochen wird.</span><span class="sxs-lookup"><span data-stu-id="0c965-165">The <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> event will be raised if the resolve operation completes in error or is canceled.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0c965-166">Der <paramref name="peerName" />-Parameter ist auf <see langword="null" /> festgelegt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c965-166">The <paramref name="peerName" /> parameter is set to <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">
          <span data-ttu-id="0c965-167">Der angegebene Peername kann nicht aufgelöst werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c965-167">The supplied peer name cannot be resolved.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.PeerNameRecordCollection Resolve (System.Net.PeerToPeer.PeerName peerName, System.Net.PeerToPeer.Cloud cloud, int maxRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.PeerToPeer.PeerNameRecordCollection Resolve(class System.Net.PeerToPeer.PeerName peerName, class System.Net.PeerToPeer.Cloud cloud, int32 maxRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::PeerToPeer::PeerNameRecordCollection ^ Resolve(System::Net::PeerToPeer::PeerName ^ peerName, System::Net::PeerToPeer::Cloud ^ cloud, int maxRecords);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.PeerNameRecordCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerName" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="cloud" Type="System.Net.PeerToPeer.Cloud" />
        <Parameter Name="maxRecords" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="peerName">
          <span data-ttu-id="0c965-168">Der aufzulösende <see cref="T:System.Net.PeerToPeer.PeerName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c965-168">The <see cref="T:System.Net.PeerToPeer.PeerName" /> to resolve.</span>
          </span>
        </param>
        <param name="cloud">
          <span data-ttu-id="0c965-169">Die <see cref="T:System.Net.PeerToPeer.Cloud" />, in der der <c>PeerName</c> aufgelöst werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c965-169">The <see cref="T:System.Net.PeerToPeer.Cloud" /> in which to resolve the <c>peerName</c>.</span>
          </span>
        </param>
        <param name="maxRecords">
          <span data-ttu-id="0c965-170">Die maximale Anzahl von Peernamendatensatz-Objekten, die aus der angegebenen Cloud für den angegebenen <c>PeerName</c> abgerufen werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c965-170">The maximum number of peer name record objects to obtain from the specified cloud for the specified <c>peerName</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c965-171">Löst den angegebenen <see cref="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" /> in der angegebenen <see cref="T:System.Net.PeerToPeer.Cloud" /> auf und gibt nicht mehr als die angegebene Anzahl von <see cref="T:System.Net.PeerToPeer.PeerNameRecord" />-Objekten zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c965-171">Resolves the specified <see cref="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" /> in the specified <see cref="T:System.Net.PeerToPeer.Cloud" />, returning no more than the specified number of <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> objects.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0c965-172">Eine <see cref="T:System.Net.PeerToPeer.PeerNameRecordCollection" />, deren Größe kleiner oder gleich der mit <paramref name="maxRecords" /> angegebenen Anzahl von Einträgen ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c965-172">A <see cref="T:System.Net.PeerToPeer.PeerNameRecordCollection" /> whose size is less than or equal to <paramref name="maxRecords" /> entries.</span>
          </span>
          <span data-ttu-id="0c965-173">Diese Auflistung enthält Peernamensdatensätze, die dem aufgelösten <see cref="T:System.Net.PeerToPeer.PeerName" /> zugeordnet sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c965-173">This collection contains peer name records associated with the <see cref="T:System.Net.PeerToPeer.PeerName" /> that was resolved.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c965-174">Für unsichere Peernamen, der gleiche Namen kann werden (mit registriert und verknüpft verschiedene Endpunkte) von anderen Peers innerhalb derselben Cloud.</span><span class="sxs-lookup"><span data-stu-id="0c965-174">For unsecured peer names, the same name can be registered (and associated with different endpoints) by different peers within the same cloud.</span></span> <span data-ttu-id="0c965-175">Wenn der Name des Peers aufgelöst werden, kann kein <xref:System.Net.PeerToPeer.PeerToPeerException> ausgelöst wird.</span><span class="sxs-lookup"><span data-stu-id="0c965-175">If the peer name cannot be resolved, an <xref:System.Net.PeerToPeer.PeerToPeerException> is thrown.</span></span>  
  
 <span data-ttu-id="0c965-176">Für jede <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> -Methode, ist es ein entsprechendes <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="0c965-176">For every <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> method, there is an equivalent <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> method.</span></span>  <span data-ttu-id="0c965-177">Ihre Parameterlisten sind nahezu identisch, außer dass die ResolveAsync-Methode ein System-Tokens für die asynchrone Ereignisbehandlung enthält.</span><span class="sxs-lookup"><span data-stu-id="0c965-177">Their parameter lists are identical, except that the ResolveAsync method includes a system token for asynchronous event handling.</span></span>  
  
 <span data-ttu-id="0c965-178">Wenn die <xref:System.Net.PeerToPeer.Cloud> Parameter ist `null`, <xref:System.Net.PeerToPeer.PeerNameResolver> verwendet die <xref:System.Net.PeerToPeer.Cloud.Available> Verknüpfung zum Füllen der <xref:System.Net.PeerToPeer.Cloud.Name%2A>, <xref:System.Net.PeerToPeer.Cloud.Scope%2A>, und <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A>.</span><span class="sxs-lookup"><span data-stu-id="0c965-178">If the <xref:System.Net.PeerToPeer.Cloud> parameter is `null`, the <xref:System.Net.PeerToPeer.PeerNameResolver> uses the <xref:System.Net.PeerToPeer.Cloud.Available> shortcut to fill in the <xref:System.Net.PeerToPeer.Cloud.Name%2A>, <xref:System.Net.PeerToPeer.Cloud.Scope%2A>, and <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A>.</span></span>  
  
 <span data-ttu-id="0c965-179">Die <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> Ereignis wird ausgelöst, wenn der Auflösungsvorgang Fehler abgeschlossen oder abgebrochen wird.</span><span class="sxs-lookup"><span data-stu-id="0c965-179">The <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> event will be raised if the resolve operation completes in error or is canceled.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0c965-180">Der <paramref name="peerName" />-Parameter ist auf <see langword="null" /> festgelegt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c965-180">The <paramref name="peerName" /> parameter is set to <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0c965-181">Der <paramref name="maxRecords" />-Parameter ist kleiner oder gleich 0 (null).</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c965-181">The <paramref name="maxRecords" /> parameter is less than or equal to zero.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">
          <span data-ttu-id="0c965-182">Der angegebene Peername kann nicht aufgelöst werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c965-182">The supplied peer name cannot be resolved.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ResolveAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0c965-183">Diese Methoden starten die asynchrone Auflösung für den angegebenen <see cref="T:System.Net.PeerToPeer.PeerName" /> in allen Wolken, die dem aufrufenden Peer bekannt sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c965-183">These methods begin an asynchronous resolution operation for the specified <see cref="T:System.Net.PeerToPeer.PeerName" /> in all clouds known to the calling peer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c965-184">Für jede <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> -Methode, ist es ein entsprechendes <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> -Methode, die verwendet wird, wenn die asynchrone Verarbeitung erforderlich ist.</span><span class="sxs-lookup"><span data-stu-id="0c965-184">For every <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> method, there is an equivalent <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> method, which is used when asynchronous processing is required.</span></span>  <span data-ttu-id="0c965-185">Sie sind in den Parametern, die sie übergeben werden, die identisch, außer dass ResolveAsync ein Systemtoken in der Parameterliste für die Ereignisbehandlung enthält.</span><span class="sxs-lookup"><span data-stu-id="0c965-185">They are identical in the parameters they are passed, except that ResolveAsync includes a system token in its parameter list for event handling.</span></span>  
  
 <span data-ttu-id="0c965-186">Wenn ein Parameter-Konflikt zwischen die Resolve-Methode und der ResolveAsync-Methode ausgeführt wird und die <xref:System.Net.PeerToPeer.Cloud> Parameter nicht angegeben wird, verwendet die Methode die <xref:System.Net.PeerToPeer.Cloud.Available> Verknüpfung Cloud Parameter ausfüllen.</span><span class="sxs-lookup"><span data-stu-id="0c965-186">If a parameter mismatch occurs between the Resolve method and the ResolveAsync method, and the <xref:System.Net.PeerToPeer.Cloud> parameter is not supplied, the method uses the <xref:System.Net.PeerToPeer.Cloud.Available> shortcut to fill in cloud parameters.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="ResolveAsync">
      <MemberSignature Language="C#" Value="public void ResolveAsync (System.Net.PeerToPeer.PeerName peerName, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResolveAsync(class System.Net.PeerToPeer.PeerName peerName, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResolveAsync(System::Net::PeerToPeer::PeerName ^ peerName, System::Object ^ userState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerName" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="peerName">
          <span data-ttu-id="0c965-187">Der aufzulösende <see cref="T:System.Net.PeerToPeer.PeerName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c965-187">The <see cref="T:System.Net.PeerToPeer.PeerName" /> to resolve.</span>
          </span>
        </param>
        <param name="userState">
          <span data-ttu-id="0c965-188">Ein benutzerdefiniertes Objekt, das Statusinformationen über die Peernamenauflösung enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c965-188">A user-defined object that contains state information about the peer name resolution operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c965-189">Beginnt eine asynchrone Peernamenauflösung für den angegebenen <see cref="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" /> in allen Clouds, die dem aufrufenden Peer bekannt sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c965-189">Begins an asynchronous peer name resolution operation for the specified <see cref="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" /> in all clouds known to the calling peer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c965-190">Diese Methode ordnet asynchron eine PeerName-zu Clouds.</span><span class="sxs-lookup"><span data-stu-id="0c965-190">This method asynchronously associates a peer name to clouds.</span></span> <span data-ttu-id="0c965-191">Alle Clouds werden abgefragt, für die <xref:System.Net.PeerToPeer.PeerName>.</span><span class="sxs-lookup"><span data-stu-id="0c965-191">All clouds are queried for the <xref:System.Net.PeerToPeer.PeerName>.</span></span> <span data-ttu-id="0c965-192">Es wird ausgelöst, die <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> -Ereignis, das Aufrufe zurück an die <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="0c965-192">It raises the <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> event, which calls back to the <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A> method.</span></span> <span data-ttu-id="0c965-193">Oder es wird ausgelöst, die <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged> -Ereignis, das Aufrufe zurück an die <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="0c965-193">Or, it raises the <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged> event, which calls back to the <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A> method.</span></span>  
  
 <span data-ttu-id="0c965-194">Wenn der Name des Peers aufgelöst werden, kann kein <xref:System.Net.PeerToPeer.PeerToPeerException> ausgelöst wird.</span><span class="sxs-lookup"><span data-stu-id="0c965-194">If the peer name cannot be resolved, an <xref:System.Net.PeerToPeer.PeerToPeerException> is thrown.</span></span>  
  
 <span data-ttu-id="0c965-195">Für unsichere Peernamen, der gleiche Namen kann werden (mit registriert und verknüpft verschiedene Endpunkte) von anderen Peers innerhalb derselben Cloud.</span><span class="sxs-lookup"><span data-stu-id="0c965-195">For unsecured peer names, the same name can be registered (and associated with different endpoints) by different peers within the same cloud.</span></span>  
  
 <span data-ttu-id="0c965-196">Aufrufen der <xref:System.Net.PeerToPeer.PeerNameResolver> Methode ist vergleichbar mit einem Aufruf der <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> Methode für jeden Peer Name Datensatz in die <xref:System.Net.PeerToPeer.PeerNameRecordCollection>.</span><span class="sxs-lookup"><span data-stu-id="0c965-196">Calling the <xref:System.Net.PeerToPeer.PeerNameResolver> method is similar to calling the <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> method for each peer name record in the <xref:System.Net.PeerToPeer.PeerNameRecordCollection>.</span></span> <span data-ttu-id="0c965-197">Beachten Sie, dass die Resolve-Methode auf einem einzelnen Peer Name Datensatz mit nicht auflösen von mehreren Peernamen ungültig wird.</span><span class="sxs-lookup"><span data-stu-id="0c965-197">Note that using the Resolve method on an individual peer name record does not invalidate resolving multiple peer names.</span></span>  
  
 <span data-ttu-id="0c965-198">Für jede <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> -Methode, ist es ein entsprechendes <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="0c965-198">For every <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> method, there is an equivalent <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> method.</span></span>  <span data-ttu-id="0c965-199">Ihre Parameterlisten sind nahezu identisch, außer dass die ResolveAsync-Methode ein Systemtoken für die asynchrone Ereignisbehandlung enthält und sich an die Resolve-Methode für die synchrone Verarbeitung richtet.</span><span class="sxs-lookup"><span data-stu-id="0c965-199">Their parameter lists are identical, except that the ResolveAsync method includes a system token for asynchronous event handling, and the Resolve method is intended for synchronous processing.</span></span>  
  
 <span data-ttu-id="0c965-200">Alle asynchronen Verweise auf das Objekt Konfliktlöser werden mit einem eindeutigen Bezeichnertoken koordiniert.</span><span class="sxs-lookup"><span data-stu-id="0c965-200">All asynchronous references to the resolver object are coordinated with a unique identifier token.</span></span> <span data-ttu-id="0c965-201">Dies `userState` Token oder Nachricht Bezeichner ermöglicht ein Betriebssystems auf eine Nachricht an einen einzelnen empfangenden Prozess zu übermitteln, nachdem die Nachricht in die Nachrichtenwarteschlange angeordnet wurde.</span><span class="sxs-lookup"><span data-stu-id="0c965-201">This `userState` token or message identifier allows an operating system to deliver a message to a single receiving process after the message has been placed on the message queue.</span></span>  
  
 <span data-ttu-id="0c965-202">Die <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> Ereignis wird ausgelöst, wenn der Auflösungsvorgang Fehler abgeschlossen oder abgebrochen wird.</span><span class="sxs-lookup"><span data-stu-id="0c965-202">The <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> event will be raised if the resolve operation completes in error or is canceled.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0c965-203">Ein oder beide <paramref name="peerName" />- und <paramref name="userState" />-Parameter werden auf <see langword="null" /> festgelegt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c965-203">One or both of the <paramref name="peerName" /> and <paramref name="userState" /> parameters are set to <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ResolveAsync">
      <MemberSignature Language="C#" Value="public void ResolveAsync (System.Net.PeerToPeer.PeerName peerName, int maxRecords, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResolveAsync(class System.Net.PeerToPeer.PeerName peerName, int32 maxRecords, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Int32,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResolveAsync(System::Net::PeerToPeer::PeerName ^ peerName, int maxRecords, System::Object ^ userState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerName" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="maxRecords" Type="System.Int32" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="peerName">
          <span data-ttu-id="0c965-204">Der aufzulösende <see cref="T:System.Net.PeerToPeer.PeerName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c965-204">The <see cref="T:System.Net.PeerToPeer.PeerName" /> to resolve.</span>
          </span>
        </param>
        <param name="maxRecords">
          <span data-ttu-id="0c965-205">Die maximale Anzahl von Datensätzen, die für den Peernamen abgerufen werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c965-205">The maximum number of records to obtain for the Peer Name.</span>
          </span>
        </param>
        <param name="userState">
          <span data-ttu-id="0c965-206">Ein benutzerdefiniertes Objekt, das Informationen über den Auflösungsvorgang enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c965-206">A user-defined object that contains information about the resolve operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c965-207">Beginnt eine asynchrone Peernamenauflösung für den angegebenen <see cref="T:System.Net.PeerToPeer.PeerName" /> in allen Clouds, die dem aufrufenden Peer bekannt sind, wobei nicht mehr als <paramref name="maxRecords" /> Einträge für den Peernamen zurückgegeben werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c965-207">Begins an asynchronous peer name resolution operation for the specified <see cref="T:System.Net.PeerToPeer.PeerName" /> in all clouds known to the calling peer, returning no more than <paramref name="maxRecords" /> entries for the peer name.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c965-208">Diese Methode ordnet asynchron eine PeerName-zu Clouds.</span><span class="sxs-lookup"><span data-stu-id="0c965-208">This method asynchronously associates a peer name to clouds.</span></span> <span data-ttu-id="0c965-209">Alle Clouds werden abgefragt, für die <xref:System.Net.PeerToPeer.PeerName>.</span><span class="sxs-lookup"><span data-stu-id="0c965-209">All clouds are queried for the <xref:System.Net.PeerToPeer.PeerName>.</span></span> <span data-ttu-id="0c965-210">Für unsichere Peernamen, der gleiche Namen kann werden (mit registriert und verknüpft verschiedene Endpunkte) von anderen Peers innerhalb derselben Cloud.</span><span class="sxs-lookup"><span data-stu-id="0c965-210">For unsecured peer names, the same name can be registered (and associated with different endpoints) by different peers within the same cloud.</span></span> <span data-ttu-id="0c965-211">Wenn der Name des Peers kann nicht aufgelöst werden oder ist `null`, wird eine <xref:System.Net.PeerToPeer.PeerToPeerException> ausgelöst wird.</span><span class="sxs-lookup"><span data-stu-id="0c965-211">If the peer name cannot be resolved or is `null`, an <xref:System.Net.PeerToPeer.PeerToPeerException> is thrown.</span></span>  
  
 <span data-ttu-id="0c965-212">Diese Methode löst die <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> -Ereignis, das Aufrufe zurück an die <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="0c965-212">This method raises the <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> event, which calls back to the <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A> method.</span></span> <span data-ttu-id="0c965-213">Oder es wird ausgelöst, die <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged> -Ereignis, das Aufrufe zurück an die <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="0c965-213">Or, it raises the <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged> event, which calls back to the <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A> method.</span></span>  
  
 <span data-ttu-id="0c965-214">Für jede <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> -Methode, ist es ein entsprechendes <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="0c965-214">For every <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> method, there is an equivalent <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> method.</span></span>  <span data-ttu-id="0c965-215">Ihre Parameterlisten sind nahezu identisch, außer dass die ResolveAsync-Methode ein Systemtoken für die asynchrone Ereignisbehandlung enthält und sich an die Resolve-Methode für die synchrone Verarbeitung richtet.</span><span class="sxs-lookup"><span data-stu-id="0c965-215">Their parameter lists are identical, except that the ResolveAsync method includes a system token for asynchronous event handling, and the Resolve method is intended for synchronous processing.</span></span>  
  
 <span data-ttu-id="0c965-216">Alle asynchronen Verweise auf das Objekt Konfliktlöser werden mit einem eindeutigen Bezeichnertoken koordiniert <xref:System.Object>.</span><span class="sxs-lookup"><span data-stu-id="0c965-216">All asynchronous references to the resolver object are coordinated with a unique identifier token <xref:System.Object>.</span></span> <span data-ttu-id="0c965-217">Dies `userState` Token oder Nachricht Bezeichner ermöglicht ein Betriebssystems auf eine Nachricht an einen einzelnen empfangenden Prozess zu übermitteln, nachdem die Nachricht in die Nachrichtenwarteschlange angeordnet wurde.</span><span class="sxs-lookup"><span data-stu-id="0c965-217">This `userState` token or message identifier allows an operating system to deliver a message to a single receiving process after the message has been placed on the message queue.</span></span>  
  
 <span data-ttu-id="0c965-218">Die <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> Ereignis wird ausgelöst, wenn der Auflösungsvorgang Fehler abgeschlossen oder abgebrochen wird.</span><span class="sxs-lookup"><span data-stu-id="0c965-218">The <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> event will be raised if the resolve operation completes in error or is canceled.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0c965-219">Ein oder beide <paramref name="peerName" />- und <paramref name="userState" />-Parameter werden auf <see langword="null" /> festgelegt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c965-219">One or both of the <paramref name="peerName" /> and <paramref name="userState" /> parameters are set to <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0c965-220">Der <paramref name="maxRecords" />-Parameter ist kleiner oder gleich 0 (null).</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c965-220">The <paramref name="maxRecords" /> parameter is less than or equal to zero.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ResolveAsync">
      <MemberSignature Language="C#" Value="public void ResolveAsync (System.Net.PeerToPeer.PeerName peerName, System.Net.PeerToPeer.Cloud cloud, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResolveAsync(class System.Net.PeerToPeer.PeerName peerName, class System.Net.PeerToPeer.Cloud cloud, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResolveAsync(System::Net::PeerToPeer::PeerName ^ peerName, System::Net::PeerToPeer::Cloud ^ cloud, System::Object ^ userState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerName" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="cloud" Type="System.Net.PeerToPeer.Cloud" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="peerName">
          <span data-ttu-id="0c965-221">Der aufzulösende <see cref="T:System.Net.PeerToPeer.PeerName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c965-221">The <see cref="T:System.Net.PeerToPeer.PeerName" /> to resolve.</span>
          </span>
        </param>
        <param name="cloud">
          <span data-ttu-id="0c965-222">Die <see cref="T:System.Net.PeerToPeer.Cloud" />, in der der <c>PeerName</c> aufgelöst werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c965-222">The <see cref="T:System.Net.PeerToPeer.Cloud" /> in which to resolve the <c>peerName</c>.</span>
          </span>
        </param>
        <param name="userState">
          <span data-ttu-id="0c965-223">Ein benutzerdefiniertes <see cref="T:System.Object" />, das Informationen über die Peernamenauflösung enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c965-223">A user-defined <see cref="T:System.Object" /> that contains information about the peer name resolution operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c965-224">Beginnt eine asynchrone Peernamenauflösung für den angegebenen <see cref="T:System.Net.PeerToPeer.PeerName" /> in der angegebenen <see cref="T:System.Net.PeerToPeer.Cloud" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c965-224">Begins an asynchronous peer name resolution operation for the specified <see cref="T:System.Net.PeerToPeer.PeerName" /> in the specified <see cref="T:System.Net.PeerToPeer.Cloud" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c965-225">Diese Methode löst die <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> -Ereignis, das Aufrufe zurück an die <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="0c965-225">This method raises the <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> event, which calls back to the <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A> method.</span></span> <span data-ttu-id="0c965-226">Oder es wird ausgelöst, die <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged> -Ereignis, das Aufrufe zurück an die <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="0c965-226">Or, it raises the <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged> event, which calls back to the <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A> method.</span></span>  
  
 <span data-ttu-id="0c965-227">Für unsichere Peernamen, der gleiche Namen kann werden (mit registriert und verknüpft verschiedene Endpunkte) von anderen Peers innerhalb derselben Cloud.</span><span class="sxs-lookup"><span data-stu-id="0c965-227">For unsecured peer names, the same name can be registered (and associated with different endpoints) by different peers within the same cloud.</span></span>  
  
 <span data-ttu-id="0c965-228">Wenn die <xref:System.Net.PeerToPeer.Cloud> Parameter ist `null`, der Name aufgelöst wird, mithilfe der <xref:System.Net.PeerToPeer.Cloud.Available> Verknüpfung, die Standardwerte für initialisiert die <xref:System.Net.PeerToPeer.Cloud.Name%2A>, <xref:System.Net.PeerToPeer.Cloud.Scope%2A>, und <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A> Eigenschaften.</span><span class="sxs-lookup"><span data-stu-id="0c965-228">If the <xref:System.Net.PeerToPeer.Cloud> parameter is `null`, the name is resolved using the <xref:System.Net.PeerToPeer.Cloud.Available> shortcut, which initializes default values for the <xref:System.Net.PeerToPeer.Cloud.Name%2A>, <xref:System.Net.PeerToPeer.Cloud.Scope%2A>, and <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A> properties.</span></span>  
  
 <span data-ttu-id="0c965-229">Für jede <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> -Methode, ist es ein entsprechendes <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="0c965-229">For every <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> method, there is an equivalent <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> method.</span></span>  <span data-ttu-id="0c965-230">Ihre Parameterlisten sind nahezu identisch, außer dass die ResolveAsync-Methode ein Systemtoken für die asynchrone Ereignisbehandlung enthält und sich an die Resolve-Methode für die synchrone Verarbeitung richtet.</span><span class="sxs-lookup"><span data-stu-id="0c965-230">Their parameter lists are identical, except that the ResolveAsync method includes a system token for asynchronous event handling, and the Resolve method is intended for synchronous processing.</span></span>  
  
 <span data-ttu-id="0c965-231">Alle asynchronen Verweise auf das Objekt Konfliktlöser werden mit einem eindeutigen Bezeichnertoken koordiniert.</span><span class="sxs-lookup"><span data-stu-id="0c965-231">All asynchronous references to the resolver object are coordinated with a unique identifier token.</span></span> <span data-ttu-id="0c965-232">Dies `userState` Token oder Nachricht Bezeichner ermöglicht ein Betriebssystems auf eine Nachricht an einen einzelnen empfangenden Prozess zu übermitteln, nachdem die Nachricht in die Nachrichtenwarteschlange angeordnet wurde.</span><span class="sxs-lookup"><span data-stu-id="0c965-232">This `userState` token or message identifier allows an operating system to deliver a message to a single receiving process after the message has been placed on the message queue.</span></span>  
  
 <span data-ttu-id="0c965-233">Die <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> Ereignis wird ausgelöst, wenn der Auflösungsvorgang Fehler abgeschlossen oder abgebrochen wird.</span><span class="sxs-lookup"><span data-stu-id="0c965-233">The <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> event will be raised if the resolve operation completes in error or is canceled.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0c965-234">Ein oder beide <paramref name="peerName" />- und <paramref name="userState" />-Parameter werden auf <see langword="null" /> festgelegt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c965-234">One or both of the <paramref name="peerName" /> and <paramref name="userState" /> parameters are set to <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ResolveAsync">
      <MemberSignature Language="C#" Value="public void ResolveAsync (System.Net.PeerToPeer.PeerName peerName, System.Net.PeerToPeer.Cloud cloud, int maxRecords, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResolveAsync(class System.Net.PeerToPeer.PeerName peerName, class System.Net.PeerToPeer.Cloud cloud, int32 maxRecords, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResolveAsync(System::Net::PeerToPeer::PeerName ^ peerName, System::Net::PeerToPeer::Cloud ^ cloud, int maxRecords, System::Object ^ userState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerName" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="cloud" Type="System.Net.PeerToPeer.Cloud" />
        <Parameter Name="maxRecords" Type="System.Int32" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="peerName">
          <span data-ttu-id="0c965-235">Der aufzulösende <c>PeerName</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c965-235">The <c>peerName</c> to resolve.</span>
          </span>
        </param>
        <param name="cloud">
          <span data-ttu-id="0c965-236">Die <c>Cloud</c>, in der der <c>PeerName</c> aufgelöst werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c965-236">The <c>cloud</c> in which to resolve <c>peerName</c>.</span>
          </span>
        </param>
        <param name="maxRecords">
          <span data-ttu-id="0c965-237">Die maximale Anzahl von Datensätzen, die aus der <c>Cloud</c> für <c>PeerName</c> abgerufen werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c965-237">The maximum number of records to obtain from <c>cloud</c> for <c>peerName</c>.</span>
          </span>
        </param>
        <param name="userState">
          <span data-ttu-id="0c965-238">Ein benutzerdefiniertes Objekt, das Informationen über die Peernamensauflösung enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c965-238">A user-defined object that contains information about the peer name resolution operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c965-239">Beginnt eine asynchrone Peernamenauflösung für den angegebenen <see cref="T:System.Net.PeerToPeer.PeerName" /> in der angegebenen <see cref="T:System.Net.PeerToPeer.Cloud" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c965-239">Begins an asynchronous peer name resolution operation for the specified <see cref="T:System.Net.PeerToPeer.PeerName" /> in the specified <see cref="T:System.Net.PeerToPeer.Cloud" />.</span>
          </span>
          <span data-ttu-id="0c965-240">Der Auflösungsvorgang löst höchstens so viele Einträge für den angegebenen Peernamen auf, wie in <paramref name="maxRecords" /> festgelegt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c965-240">The resolution operation will resolve no more than <paramref name="maxRecords" /> entries for the specified peer name.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c965-241">Für unsichere Peernamen, der gleiche Namen kann werden (mit registriert und verknüpft verschiedene Endpunkte) von anderen Peers innerhalb derselben Cloud.</span><span class="sxs-lookup"><span data-stu-id="0c965-241">For unsecured peer names, the same name can be registered (and associated with different endpoints) by different peers within the same cloud.</span></span>  
  
 <span data-ttu-id="0c965-242">Diese Methode löst die <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> -Ereignis, das Aufrufe zurück an die <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="0c965-242">This method raises the <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> event, which calls back to the <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A> method.</span></span> <span data-ttu-id="0c965-243">Oder es wird ausgelöst, die <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged> -Ereignis, das Aufrufe zurück an die <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="0c965-243">Or, it raises the <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged> event, which calls back to the <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A> method.</span></span>  
  
 <span data-ttu-id="0c965-244">Wenn die <xref:System.Net.PeerToPeer.Cloud> Parameter ist `null`, der Name aufgelöst wird, mithilfe der <xref:System.Net.PeerToPeer.Cloud.Available> Verknüpfung, die Standardwerte für initialisiert die <xref:System.Net.PeerToPeer.Cloud.Name%2A>, <xref:System.Net.PeerToPeer.Cloud.Scope%2A>, und <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A> Eigenschaften.</span><span class="sxs-lookup"><span data-stu-id="0c965-244">If the <xref:System.Net.PeerToPeer.Cloud> parameter is `null`, the name is resolved using the <xref:System.Net.PeerToPeer.Cloud.Available> shortcut, which initializes default values for the <xref:System.Net.PeerToPeer.Cloud.Name%2A>, <xref:System.Net.PeerToPeer.Cloud.Scope%2A>, and <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A> properties.</span></span>  
  
 <span data-ttu-id="0c965-245">Für jede <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> -Methode, ist es ein entsprechendes <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="0c965-245">For every <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> method, there is an equivalent <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> method.</span></span>  <span data-ttu-id="0c965-246">Ihre Parameterlisten sind nahezu identisch, außer dass die ResolveAsync-Methode ein Systemtoken für die asynchrone Ereignisbehandlung enthält und sich an die Resolve-Methode für die synchrone Verarbeitung richtet.</span><span class="sxs-lookup"><span data-stu-id="0c965-246">Their parameter lists are identical, except that the ResolveAsync method includes a system token for asynchronous event handling, and the Resolve method is intended for synchronous processing.</span></span>  
  
 <span data-ttu-id="0c965-247">Alle asynchronen Verweise auf das Peerresolverobjekt werden mit einem eindeutigen Bezeichnertoken koordiniert <xref:System.Object>.</span><span class="sxs-lookup"><span data-stu-id="0c965-247">All asynchronous references to the peer resolver object are coordinated with a unique identifier token <xref:System.Object>.</span></span> <span data-ttu-id="0c965-248">Dies `userState` Token oder Nachricht Bezeichner ermöglicht ein Betriebssystems auf eine Nachricht an einen einzelnen empfangenden Prozess zu übermitteln, nachdem die Nachricht in die Nachrichtenwarteschlange angeordnet wurde.</span><span class="sxs-lookup"><span data-stu-id="0c965-248">This `userState` token or message identifier allows an operating system to deliver a message to a single receiving process after the message has been placed on the message queue.</span></span>  
  
 <span data-ttu-id="0c965-249">Die <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> Ereignis wird ausgelöst, wenn der Auflösungsvorgang Fehler abgeschlossen oder abgebrochen wird.</span><span class="sxs-lookup"><span data-stu-id="0c965-249">The <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> event will be raised if the resolve operation completes in error or is canceled.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0c965-250">Ein oder beide <paramref name="peerName" />- und <paramref name="userState" />-Parameter werden auf <see langword="null" /> festgelegt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c965-250">One or both of the <paramref name="peerName" /> and <paramref name="userState" /> parameters are set to <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0c965-251">Mindestens ein angegebener Parameter ist ungültig.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c965-251">One or more supplied parameters are invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">
          <span data-ttu-id="0c965-252">Für den erfolgreichen Abschluss dieses Vorgangs ist mindestens ein Ereignishandler erforderlich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c965-252">Successful completion of this operation requires at least one event handler.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0c965-253">Der <paramref name="maxRecords" />-Parameter ist kleiner oder gleich 0 (null).</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c965-253">The <paramref name="maxRecords" /> parameter is less than or equal to zero.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ResolveAsyncCancel">
      <MemberSignature Language="C#" Value="public void ResolveAsyncCancel (object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResolveAsyncCancel(object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsyncCancel(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResolveAsyncCancel (userState As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResolveAsyncCancel(System::Object ^ userState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="userState">
          <span data-ttu-id="0c965-254">Das für die <see cref="Overload:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync" />-Methodeninstanz, die den Auflösungsvorgang gestartet hat, bereitgestellte Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c965-254">The object provided to the <see cref="Overload:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync" /> method instance which started the resolve operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c965-255">Bricht die angegebene Anforderung zur Auflösung des asynchronen Peernamens ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c965-255">Cancels the specified asynchronous peer name resolution request.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c965-256">Beim Aufrufen dieser Methode wird sichergestellt, die das System versucht nicht, um zusätzliche Datensätze für den angegebenen erhalten <xref:System.Net.PeerToPeer.PeerName>.</span><span class="sxs-lookup"><span data-stu-id="0c965-256">Calling this method guarantees the system will not attempt to obtain additional records for the specified <xref:System.Net.PeerToPeer.PeerName>.</span></span>  <span data-ttu-id="0c965-257">Wenn diese Methode aufgerufen wird, wenn eine asynchrone Peer Name Auflösungsvorgang nicht ausstehende ist, fungiert Sie als "kein Vorgang" ("NO" OP).</span><span class="sxs-lookup"><span data-stu-id="0c965-257">If this method is called when an asynchronous peer name resolution operation is not outstanding, it acts as a "no operation" (NO OP).</span></span>  
  
 <span data-ttu-id="0c965-258">Die `userState` Objekt muss angegeben werden, da es verwendet wird, um einen bestimmten asynchronen Aufruf nachzuverfolgen, wenn mehrere Aufrufe ausgeführt werden.</span><span class="sxs-lookup"><span data-stu-id="0c965-258">The `userState` object must be provided since it is used to track a specific asynchronous call when multiple calls are in progress.</span></span> <span data-ttu-id="0c965-259">Diese vom Aufrufer bereitgestellte Objekt ist für jede Peer Name Resolution-Anforderung eindeutig.</span><span class="sxs-lookup"><span data-stu-id="0c965-259">This caller-supplied object is unique for each peer name resolution request.</span></span>  
  
 <span data-ttu-id="0c965-260">Diese Methode wird sofort zurückgegeben, aber des Vorgangs möglicherweise möglicherweise nicht sofort abgebrochen.</span><span class="sxs-lookup"><span data-stu-id="0c965-260">This method will return immediately, but the operation may or may not immediately cancel.</span></span> <span data-ttu-id="0c965-261">Die Ereignisargumente, die zurückgegeben werden, indem die <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> Ereignis enthält ein Feld, das abgefragt werden kann, von Clients zu bestimmen, ob ein Abbruch aufgetreten ist.</span><span class="sxs-lookup"><span data-stu-id="0c965-261">The event arguments returned by the <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> event contains a field which can be polled by clients to determine whether cancellation occurred.</span></span>  
  
 <span data-ttu-id="0c965-262">Beim Aufrufen dieser Methode wird sichergestellt, dass das Ereignis ResolveCompleted so bald wie möglich mit der das Ereignisargument signalisiert wird <xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A> festgelegt `true`.</span><span class="sxs-lookup"><span data-stu-id="0c965-262">Calling this method ensures the ResolveCompleted event will be signaled as soon as possible with the event argument <xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A> set to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0c965-263">Die <paramref name="userState" />-Parameter dürfen nicht <see langword="null" /> sein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c965-263">The <paramref name="userState" /> parameters cannot be <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.AsyncCompletedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="ResolveCompleted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Net.PeerToPeer.ResolveCompletedEventArgs&gt; ResolveCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Net.PeerToPeer.ResolveCompletedEventArgs&gt; ResolveCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ResolveCompleted As EventHandler(Of ResolveCompletedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Net::PeerToPeer::ResolveCompletedEventArgs ^&gt; ^ ResolveCompleted;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Net.PeerToPeer.ResolveCompletedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0c965-264">Das <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted" />-Ereignis wird signalisiert, wenn eine Anforderung zur Auflösung eines Peernamens für einen bestimmten <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> abgeschlossen wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c965-264">The <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted" /> event is signaled when a peer name resolution request for a specific <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> has completed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c965-265">Die <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged> -Ereignis wird einmal für jeden gefundenen Endpunkt ausgelöst werden, und dieses Ereignis wird werden nur einmal ausgelöst, wenn alle Endpunkte gefunden wurden.</span><span class="sxs-lookup"><span data-stu-id="0c965-265">The <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged> event will be raised once for each endpoint found, and this event will be raised only once when all endpoints have been found.</span></span>  
  
 <span data-ttu-id="0c965-266">Dieses Ereignis wird auch ausgelöst, wenn die <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> Vorgang Fehler abgeschlossen oder abgebrochen wird.</span><span class="sxs-lookup"><span data-stu-id="0c965-266">This event will also be raised if the <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> operation completes in error or is canceled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged" />
      </Docs>
    </Member>
    <Member MemberName="ResolveProgressChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Net.PeerToPeer.ResolveProgressChangedEventArgs&gt; ResolveProgressChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Net.PeerToPeer.ResolveProgressChangedEventArgs&gt; ResolveProgressChanged" />
      <MemberSignature Language="DocId" Value="E:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ResolveProgressChanged As EventHandler(Of ResolveProgressChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Net::PeerToPeer::ResolveProgressChangedEventArgs ^&gt; ^ ResolveProgressChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Net.PeerToPeer.ResolveProgressChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0c965-267">Dieses Ereignis wird signalisiert, wenn ein <see cref="T:System.Net.PeerToPeer.PeerNameRecord" />-Objekt als Reaktion auf einen <see cref="Overload:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync" />-Vorgang für einen bestimmten <see cref="T:System.Net.PeerToPeer.PeerName" /> gefunden wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c965-267">This event is signaled whenever a <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> object is found in response to a <see cref="Overload:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync" /> operation for a specific <see cref="T:System.Net.PeerToPeer.PeerName" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c965-268">Wenn mehrere <xref:System.Net.PeerToPeer.PeerName> Objekte, die in den abgefragten vorhanden sind, dieses Ereignis signalisiert wird einmal für jede <xref:System.Net.PeerToPeer.PeerNameRecord> gefunden.</span><span class="sxs-lookup"><span data-stu-id="0c965-268">If multiple <xref:System.Net.PeerToPeer.PeerName> objects exist in the cloud(s) being queried, this event is signaled once for each <xref:System.Net.PeerToPeer.PeerNameRecord> found.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted" />
      </Docs>
    </Member>
  </Members>
</Type>