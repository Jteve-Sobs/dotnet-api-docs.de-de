<Type Name="PeerNameType" FullName="System.Net.PeerToPeer.PeerNameType">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3837789334314024be8b25d6946e0de8d8d07109" />
    <Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="11/17/2018" />
    <Meta Name="ms.locfileid" Value="51895844" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum PeerNameType" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed PeerNameType extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Net.PeerToPeer.PeerNameType" />
  <TypeSignature Language="VB.NET" Value="Public Enum PeerNameType" />
  <TypeSignature Language="C++ CLI" Value="public enum class PeerNameType" />
  <TypeSignature Language="F#" Value="type PeerNameType = " />
  <AssemblyInfo>
    <AssemblyName>System.Net</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>Definiert den Typ des zu erstellenden <see cref="T:System.Net.PeerToPeer.PeerName" />. Ein Peername ist entweder gesichert oder ungesichert. Ein gesicherter Peername stellt einen Besitznachweis für den Namen bereit. Einem ungesicherten Peernamen ist keine Identität zugeordnet.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein Knoten benötigen Zugriff auf den privaten Schlüssel verknüpft ist, mit dem öffentlichen Schlüssel, Erstellen des gesicherten verwendet <xref:System.Net.PeerToPeer.PeerName>, um den Besitz des nachzuweisen. Der Knoten muss eine Beziehung zu einem öffentlichen Schlüssel nicht.  
  
 Das Format des ein Peername ist: *Zertifizierungsstelle.Klassifizierung*. Der Wert des <xref:System.Net.PeerToPeer.PeerName.Authority%2A> hängt davon ab, ob der Name ein gesicherter Peername oder einem ungesicherten Peernamen ist. Die <xref:System.Net.PeerToPeer.PeerName.Classifier%2A> Teil des Namens kann festgelegt werden, auf eine beliebige Zeichenfolge, die höchstens 15 Unicode-Zeichen, einschließlich der `null` Abschlusszeichen. Sobald die <xref:System.Net.PeerToPeer.PeerName.Authority%2A>, <xref:System.Net.PeerToPeer.PeerName.Classifier%2A> und Sicherheitsebene für einen Peer eingerichtet wurden, ein Peer kann auch verwiesen werden mit einem relativen Namen oder einen Hostnamen an.  
  
 Nur der Besitzer oder Peer-Hosts kann registrieren ein sicheren Peernamens mit der [PNRP Namespace Provider-API](https://go.microsoft.com/fwlink?LinkID=92731). Alle Knoten kann Eigentumsrechte an ungesichert <xref:System.Net.PeerToPeer.PeerName>.  
  
 **Beachten Sie** mithilfe eines gesicherten <xref:System.Net.PeerToPeer.PeerName> gewährleistet nicht die gesamtsicherheit einer Netzwerk-Anwendung. Die Sicherheit der Anwendung ist implementierungsabhängig.  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Net.PeerToPeer.PeerName.CreateFromPeerHostName(System.String)" />
    <altmember cref="M:System.Net.PeerToPeer.PeerName.CreateRelativePeerName(System.Net.PeerToPeer.PeerName,System.String)" />
    <altmember cref="P:System.Net.PeerToPeer.PeerName.IsSecured" />
  </Docs>
  <Members>
    <Member MemberName="Secured">
      <MemberSignature Language="C#" Value="Secured" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Net.PeerToPeer.PeerNameType Secured = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Net.PeerToPeer.PeerNameType.Secured" />
      <MemberSignature Language="VB.NET" Value="Secured" />
      <MemberSignature Language="C++ CLI" Value="Secured" />
      <MemberSignature Language="F#" Value="Secured = 0" Usage="System.Net.PeerToPeer.PeerNameType.Secured" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.PeerNameType</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Erstellt einen gesicherten <see cref="T:System.Net.PeerToPeer.PeerName" /> mit der Identität des aktuellen Benutzers.</summary>
      </Docs>
    </Member>
    <Member MemberName="Unsecured">
      <MemberSignature Language="C#" Value="Unsecured" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Net.PeerToPeer.PeerNameType Unsecured = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Net.PeerToPeer.PeerNameType.Unsecured" />
      <MemberSignature Language="VB.NET" Value="Unsecured" />
      <MemberSignature Language="C++ CLI" Value="Unsecured" />
      <MemberSignature Language="F#" Value="Unsecured = 1" Usage="System.Net.PeerToPeer.PeerNameType.Unsecured" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.PeerNameType</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Erstellt einen ungesicherten <see cref="T:System.Net.PeerToPeer.PeerName" /> mit der Identität des aktuellen Benutzers.</summary>
      </Docs>
    </Member>
  </Members>
</Type>