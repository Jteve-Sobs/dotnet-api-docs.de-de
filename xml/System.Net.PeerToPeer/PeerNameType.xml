<Type Name="PeerNameType" FullName="System.Net.PeerToPeer.PeerNameType">
  <Metadata><Meta Name="ms.openlocfilehash" Value="67da5f0724524bf06b76af977df03e2304437cea" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70591411" /></Metadata><TypeSignature Language="C#" Value="public enum PeerNameType" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed PeerNameType extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Net.PeerToPeer.PeerNameType" />
  <TypeSignature Language="VB.NET" Value="Public Enum PeerNameType" />
  <TypeSignature Language="C++ CLI" Value="public enum class PeerNameType" />
  <TypeSignature Language="F#" Value="type PeerNameType = " />
  <AssemblyInfo>
    <AssemblyName>System.Net</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>Definiert den Typ des zu erstellenden <see cref="T:System.Net.PeerToPeer.PeerName" />. Ein Peername ist entweder gesichert oder ungesichert. Ein gesicherter Peername stellt einen Besitznachweis für den Namen bereit. Einem ungesicherten Peernamen ist keine Identität zugeordnet.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein Knoten muss Zugriff auf den privaten Schlüssel haben, der dem öffentlichen Schlüssel zugeordnet ist, der zum Erstellen <xref:System.Net.PeerToPeer.PeerName>des gesicherten verwendet wird, um den Besitz zu belegen. Der Knoten verfügt nicht über eine Beziehung zu einem öffentlichen Schlüssel.  
  
 Der PeerName weist das folgende Format auf: *Authority. Classifier*. Der Wert von <xref:System.Net.PeerToPeer.PeerName.Authority%2A> hängt davon ab, ob der Name ein sicherer PeerName oder ein ungesicherter PeerName ist. Der <xref:System.Net.PeerToPeer.PeerName.Classifier%2A> Teil des Namens kann auf eine beliebige Zeichenfolge festgelegt werden, die 15 oder weniger Unicode-Zeichen `null` enthält, einschließlich des Abschluss Zeichens. Nachdem der <xref:System.Net.PeerToPeer.PeerName.Authority%2A> <xref:System.Net.PeerToPeer.PeerName.Classifier%2A> und die Sicherheitsstufe eines Peers festgelegt wurden, kann auf einen Peer auch mit einem relativen Namen oder einem Hostnamen verwiesen werden.  
  
 Nur der Besitzer oder der Peerhost kann einen sicheren Peer Namen bei der [PNRP-Namespace Anbieter-API](https://go.microsoft.com/fwlink?LinkID=92731)registrieren. Jeder Knoten kann den Besitz für alle <xref:System.Net.PeerToPeer.PeerName>unsicheren Ansprüche beanspruchen.  
  
 **Hinweis** Die Verwendung einer <xref:System.Net.PeerToPeer.PeerName> gesicherten gewährleistet nicht die Gesamtsicherheit einer Netzwerk Anwendung. Die Sicherheit der Anwendung ist implementierungsabhängig.  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Net.PeerToPeer.PeerName.CreateFromPeerHostName(System.String)" />
    <altmember cref="M:System.Net.PeerToPeer.PeerName.CreateRelativePeerName(System.Net.PeerToPeer.PeerName,System.String)" />
    <altmember cref="P:System.Net.PeerToPeer.PeerName.IsSecured" />
  </Docs>
  <Members>
    <Member MemberName="Secured">
      <MemberSignature Language="C#" Value="Secured" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Net.PeerToPeer.PeerNameType Secured = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Net.PeerToPeer.PeerNameType.Secured" />
      <MemberSignature Language="VB.NET" Value="Secured" />
      <MemberSignature Language="C++ CLI" Value="Secured" />
      <MemberSignature Language="F#" Value="Secured = 0" Usage="System.Net.PeerToPeer.PeerNameType.Secured" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.PeerNameType</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Erstellt einen gesicherten <see cref="T:System.Net.PeerToPeer.PeerName" /> mit der Identität des aktuellen Benutzers.</summary>
      </Docs>
    </Member>
    <Member MemberName="Unsecured">
      <MemberSignature Language="C#" Value="Unsecured" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Net.PeerToPeer.PeerNameType Unsecured = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Net.PeerToPeer.PeerNameType.Unsecured" />
      <MemberSignature Language="VB.NET" Value="Unsecured" />
      <MemberSignature Language="C++ CLI" Value="Unsecured" />
      <MemberSignature Language="F#" Value="Unsecured = 1" Usage="System.Net.PeerToPeer.PeerNameType.Unsecured" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.PeerNameType</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Erstellt einen ungesicherten <see cref="T:System.Net.PeerToPeer.PeerName" /> mit der Identität des aktuellen Benutzers.</summary>
      </Docs>
    </Member>
  </Members>
</Type>
