<Type Name="PeerName" FullName="System.Net.PeerToPeer.PeerName">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8eecfd6315ebb67cb6f50a11a6e9a81bca1ebbbf" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86800235" /></Metadata><TypeSignature Language="C#" Value="public class PeerName : IEquatable&lt;System.Net.PeerToPeer.PeerName&gt;, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable PeerName extends System.Object implements class System.IEquatable`1&lt;class System.Net.PeerToPeer.PeerName&gt;, class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Net.PeerToPeer.PeerName" />
  <TypeSignature Language="VB.NET" Value="Public Class PeerName&#xA;Implements IEquatable(Of PeerName), ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class PeerName : IEquatable&lt;System::Net::PeerToPeer::PeerName ^&gt;, System::Runtime::Serialization::ISerializable" />
  <TypeSignature Language="F#" Value="type PeerName = class&#xA;    interface ISerializable&#xA;    interface IEquatable&lt;PeerName&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Net</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Net.PeerToPeer.PeerName&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Serializable]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Serializable&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="2601f-101">Gibt die Werte an, die ein Peer-to-Peer-<see cref="T:System.Net.PeerToPeer.PeerName" />-Objekt definieren.</span><span class="sxs-lookup"><span data-stu-id="2601f-101">Specifies the values that define a peer-to-peer <see cref="T:System.Net.PeerToPeer.PeerName" /> object.</span></span> <span data-ttu-id="2601f-102">Ein Peername ist i. d. R. eine Zeichenfolge, mit der eine Peerressource identifiziert wird.</span><span class="sxs-lookup"><span data-stu-id="2601f-102">A peer name is typically a string used to identify a peer resource.</span></span></summary>
    <remarks>To be added.</remarks>
    <altmember cref="N:System.Net.PeerToPeer" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2601f-103">Initialisiert eine neue Instanz der <see cref="T:System.Net.PeerToPeer.PeerName" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="2601f-103">Initializes a new instance of the <see cref="T:System.Net.PeerToPeer.PeerName" /> class.</span></span></summary>
        <altmember cref="M:System.Net.PeerToPeer.PeerName.CreateFromPeerHostName(System.String)" />
        <altmember cref="M:System.Net.PeerToPeer.PeerName.CreateRelativePeerName(System.Net.PeerToPeer.PeerName,System.String)" />
        <altmember cref="T:System.Net.PeerToPeer.PeerName" />
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PeerName (string remotePeerName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string remotePeerName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerName.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (remotePeerName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PeerName(System::String ^ remotePeerName);" />
      <MemberSignature Language="F#" Value="new System.Net.PeerToPeer.PeerName : string -&gt; System.Net.PeerToPeer.PeerName" Usage="new System.Net.PeerToPeer.PeerName remotePeerName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="remotePeerName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="remotePeerName"><span data-ttu-id="2601f-104">Enthält den Peernamen, der als <see cref="T:System.Net.PeerToPeer.PeerName" />-Instanz codiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="2601f-104">Contains the peer name to encode as a <see cref="T:System.Net.PeerToPeer.PeerName" /> instance.</span></span></param>
        <summary><span data-ttu-id="2601f-105">Initialisiert ein neues Objekt vom Typ <see cref="T:System.Net.PeerToPeer.PeerName" /> mit dem angegebenen <see cref="T:System.String" />-Wert des vollqualifizierten Peernamens.</span><span class="sxs-lookup"><span data-stu-id="2601f-105">Initializes a new object of type <see cref="T:System.Net.PeerToPeer.PeerName" /> with the supplied fully qualified peer name <see cref="T:System.String" /> value.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2601f-106">Die angegebene <see cref="T:System.String" /> ist kein gültiger <see cref="T:System.Net.PeerToPeer.PeerName" />.</span><span class="sxs-lookup"><span data-stu-id="2601f-106">The <see cref="T:System.String" /> provided is not a valid <see cref="T:System.Net.PeerToPeer.PeerName" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2601f-107"><paramref name="remotePeerName" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2601f-107"><paramref name="remotePeerName" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Net.PeerToPeer.PeerName" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PeerName (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerName.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PeerName(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new System.Net.PeerToPeer.PeerName : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; System.Net.PeerToPeer.PeerName" Usage="new System.Net.PeerToPeer.PeerName (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="2601f-108">Verweis auf das Objekt, das die zum Deserialisieren dieser Instanz benötigten Daten enthält.</span><span class="sxs-lookup"><span data-stu-id="2601f-108">Reference to the object that holds the data needed to deserialize this instance.</span></span></param>
        <param name="context"><span data-ttu-id="2601f-109">Kontext, der das Deserialisieren der Daten ermöglicht.</span><span class="sxs-lookup"><span data-stu-id="2601f-109">Context that provides the means for deserializing the data.</span></span> <span data-ttu-id="2601f-110">Auch als Quelle der serialisierten Daten bezeichnet.</span><span class="sxs-lookup"><span data-stu-id="2601f-110">Also referred to as the source of the serialized data.</span></span></param>
        <summary><span data-ttu-id="2601f-111">Füllt ein <see cref="T:System.Runtime.Serialization.SerializationInfo" />-Objekt mit den Daten auf, die zum Serialisieren des <see cref="T:System.Net.PeerToPeer.PeerName" /> erforderlich sind.</span><span class="sxs-lookup"><span data-stu-id="2601f-111">Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object with the data needed to serialize the <see cref="T:System.Net.PeerToPeer.PeerName" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2601f-112">Dieser Konstruktor ist für die Deserialisierung dieses Typs erforderlich.</span><span class="sxs-lookup"><span data-stu-id="2601f-112">This constructor is required for deserialization of this type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2601f-113">Mindestens ein Parameter ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2601f-113">One or more parameters are <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Net.PeerToPeer.PeerName" />
        <altmember cref="N:System.Runtime.Serialization" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PeerName (string classifier, System.Net.PeerToPeer.PeerNameType peerNameType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string classifier, valuetype System.Net.PeerToPeer.PeerNameType peerNameType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerName.#ctor(System.String,System.Net.PeerToPeer.PeerNameType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (classifier As String, peerNameType As PeerNameType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PeerName(System::String ^ classifier, System::Net::PeerToPeer::PeerNameType peerNameType);" />
      <MemberSignature Language="F#" Value="new System.Net.PeerToPeer.PeerName : string * System.Net.PeerToPeer.PeerNameType -&gt; System.Net.PeerToPeer.PeerName" Usage="new System.Net.PeerToPeer.PeerName (classifier, peerNameType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="classifier" Type="System.String" />
        <Parameter Name="peerNameType" Type="System.Net.PeerToPeer.PeerNameType" />
      </Parameters>
      <Docs>
        <param name="classifier"><span data-ttu-id="2601f-114"><see cref="T:System.String" />, die den Peernamen enthält, der als <see cref="T:System.Net.PeerToPeer.PeerName" /> codiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="2601f-114"><see cref="T:System.String" /> that contains the Peer Name to encode as a <see cref="T:System.Net.PeerToPeer.PeerName" />.</span></span></param>
        <param name="peerNameType"><span data-ttu-id="2601f-115"><see cref="T:System.Net.PeerToPeer.PeerNameType" />-Enumerationswert, der den Typ des Peernamens angibt, der erstellt werden soll.</span><span class="sxs-lookup"><span data-stu-id="2601f-115"><see cref="T:System.Net.PeerToPeer.PeerNameType" /> enumeration value that specifies the type of peer name to create.</span></span></param>
        <summary><span data-ttu-id="2601f-116">Initialisiert eine neue Instanz der <see cref="T:System.Net.PeerToPeer.PeerName" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="2601f-116">Initializes a new instance of the <see cref="T:System.Net.PeerToPeer.PeerName" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2601f-117">Dieser Konstruktor gibt ein Objekt vom Typ zurück <xref:System.Net.PeerToPeer.PeerName> , das den voll qualifizierten Namen des Peers enthält.</span><span class="sxs-lookup"><span data-stu-id="2601f-117">This constructor returns an object of type <xref:System.Net.PeerToPeer.PeerName> that contains the fully qualified name of the peer.</span></span> <span data-ttu-id="2601f-118">Außerdem wird angegeben, ob der Peername gesichert oder ungesichert ist.</span><span class="sxs-lookup"><span data-stu-id="2601f-118">It also specifies whether the peer name is secured or unsecured.</span></span>  
  
 <span data-ttu-id="2601f-119">Diese Instanz verwendet die Standard Peer Identität für den aktuellen Benutzer und den angegebenen <xref:System.Net.PeerToPeer.PeerName.Classifier%2A> , zusätzlich zum Typ des Peer namens, der mit dem angegebenen Klassifizierer und Typ erstellt werden soll.</span><span class="sxs-lookup"><span data-stu-id="2601f-119">This instance uses the default peer identity for the current user and the specified <xref:System.Net.PeerToPeer.PeerName.Classifier%2A>, in addition to the type of peer name to create with the specified classifier and type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2601f-120">Der <see cref="P:System.Net.PeerToPeer.PeerName.Classifier" /> enthält mindestens ein ungültiges Zeichen.</span><span class="sxs-lookup"><span data-stu-id="2601f-120">The <see cref="P:System.Net.PeerToPeer.PeerName.Classifier" /> includes one or more illegal characters.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2601f-121">Mindestens ein Parameter ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2601f-121">One or more parameters are <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException"><span data-ttu-id="2601f-122">–   Die Standardidentität, die als Basis von <see cref="T:System.Net.PeerToPeer.PeerName" /> verwendet wird, konnte nicht abgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="2601f-122">-   The Default Identity used as the basis of the <see cref="T:System.Net.PeerToPeer.PeerName" /> could not be retrieved.</span></span>  
  
<span data-ttu-id="2601f-123">–   Der <see cref="T:System.Net.PeerToPeer.PeerName" /> konnte nicht erstellt werden.</span><span class="sxs-lookup"><span data-stu-id="2601f-123">-   The <see cref="T:System.Net.PeerToPeer.PeerName" /> could not be created.</span></span></exception>
        <altmember cref="T:System.Net.PeerToPeer.PeerName" />
      </Docs>
    </Member>
    <Member MemberName="Authority">
      <MemberSignature Language="C#" Value="public string Authority { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Authority" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.PeerName.Authority" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Authority As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Authority { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Authority : string" Usage="System.Net.PeerToPeer.PeerName.Authority" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2601f-124">Gibt eine Zeichenfolge zurück, die die von diesem <see cref="P:System.Net.PeerToPeer.PeerName.Authority" />-Objekt verwendete <see cref="T:System.Net.PeerToPeer.PeerName" /> angibt.</span><span class="sxs-lookup"><span data-stu-id="2601f-124">Returns a string that specifies the <see cref="P:System.Net.PeerToPeer.PeerName.Authority" /> used by this <see cref="T:System.Net.PeerToPeer.PeerName" /> object.</span></span></summary>
        <value><span data-ttu-id="2601f-125">Die Zeichenfolge, die den Authentifizierungsteil des angegebenen <see cref="T:System.Net.PeerToPeer.PeerName" /> enthält.</span><span class="sxs-lookup"><span data-stu-id="2601f-125">The string which contains the authentication portion of the specified <see cref="T:System.Net.PeerToPeer.PeerName" />.</span></span> <span data-ttu-id="2601f-126">Für gesicherte Peernamen enthält diese Eigenschaft den öffentlichen Schlüssel als aus 40 Zeichen bestehende Hexadezimalzeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="2601f-126">For secured peer names, this property contains the public key as a forty-character hexadecimal string.</span></span> <span data-ttu-id="2601f-127">Für ungesicherte Peernamen wird diese Eigenschaft auf 0 (null) festgelegt.</span><span class="sxs-lookup"><span data-stu-id="2601f-127">For unsecured peer names, this property is set to zero (0).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2601f-128">Nur der Besitzer oder der Peerhost kann einen gesicherten Peernamen registrieren.</span><span class="sxs-lookup"><span data-stu-id="2601f-128">Only the owner, or peer host, can register a secured peer name.</span></span> <span data-ttu-id="2601f-129">Ein PeerName gilt als geschützt, wenn er von einem selbst signierten Zertifikat unterstützt wird.</span><span class="sxs-lookup"><span data-stu-id="2601f-129">A peer name is considered secured if it is backed by a self-signed certificate.</span></span>  
  
 <span data-ttu-id="2601f-130">Bei Peer Namen wird die Groß-/Kleinschreibung beachtet, und das Format eines Peer namens lautet *Authority. Classifier*.</span><span class="sxs-lookup"><span data-stu-id="2601f-130">Peer names are case-sensitive and the format of a peer name is: *Authority.Classifier*.</span></span> <span data-ttu-id="2601f-131">Beispielsweise ist "0. mypeername" ein wohlgeformter PeerName.</span><span class="sxs-lookup"><span data-stu-id="2601f-131">For example, "0.MyPeerName" is a well-formed peer name.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage"><para><span data-ttu-id="2601f-132">Wenn Sie einen gesicherten Peernamen verwenden, wird die Gesamtsicherheit der Netzwerk Anwendung nicht sichergestellt.</span><span class="sxs-lookup"><span data-stu-id="2601f-132">Using a secured peer name does not ensure the overall security of the networking application.</span></span> <span data-ttu-id="2601f-133">Die Sicherheit der Anwendung ist implementierungsabhängig.</span><span class="sxs-lookup"><span data-stu-id="2601f-133">Security of the application is implementation-dependent.</span></span></para></block>
        <altmember cref="P:System.Net.PeerToPeer.PeerName.Classifier" />
        <altmember cref="T:System.Net.PeerToPeer.PeerNameType" />
      </Docs>
    </Member>
    <Member MemberName="Classifier">
      <MemberSignature Language="C#" Value="public string Classifier { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Classifier" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.PeerName.Classifier" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Classifier As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Classifier { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Classifier : string" Usage="System.Net.PeerToPeer.PeerName.Classifier" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2601f-134">Gibt eine Zeichenfolge zurück, die die Klassifizierung für einen Peer-to-Peer-<see cref="T:System.Net.PeerToPeer.PeerName" /> enthält.</span><span class="sxs-lookup"><span data-stu-id="2601f-134">Returns a string that contains the classifier for a peer-to-peer <see cref="T:System.Net.PeerToPeer.PeerName" />.</span></span></summary>
        <value><span data-ttu-id="2601f-135">Die Zeichenfolge, die den Klassifizierungsteil enthält, mit dem ein Peername für die <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> oder die Auflösung in einer PNRP-<see cref="T:System.Net.PeerToPeer.Cloud" /> identifiziert wird.</span><span class="sxs-lookup"><span data-stu-id="2601f-135">The string which contains the classifier portion used to identify a peer name for <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> or resolution within a PNRP <see cref="T:System.Net.PeerToPeer.Cloud" />.</span></span>  
  
<span data-ttu-id="2601f-136">Sofern nicht ausdrücklich angegeben, ist der Standardwert für alle Eigenschaften <see langword="null" /> für Referenztypen und 0 (null) für Eigenschaften vom Typ <see langword="int" />.</span><span class="sxs-lookup"><span data-stu-id="2601f-136">Unless explicitly specified, the default value for all properties is <see langword="null" /> for reference types and zero (0) for properties of type <see langword="int" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2601f-137">Der PeerName weist das folgende Format auf: *Authority. Classifier*.</span><span class="sxs-lookup"><span data-stu-id="2601f-137">The format of a peer name is: *Authority.Classifier*.</span></span> <span data-ttu-id="2601f-138">Die Komponente "Peer Name *Classifier* " kann auf eine beliebige Zeichenfolge festgelegt werden, die 149 oder weniger Unicode-Zeichen enthält, einschließlich des Abschluss Zeichens `null` ("\ 0").</span><span class="sxs-lookup"><span data-stu-id="2601f-138">The peer name *Classifier* component can be set to any string that contains 149 or fewer Unicode characters, including the `null` ("\0") terminator.</span></span> <span data-ttu-id="2601f-139">Bei Peer Namen Zeichenfolgen wird die groß-/klein</span><span class="sxs-lookup"><span data-stu-id="2601f-139">Peer name strings are case-sensitive.</span></span>  
  
 <span data-ttu-id="2601f-140">Für gesicherte Peernamen sind der Klassifizierer und der Punkt (Punkt) nach der Autorisierungs Stelle optional.</span><span class="sxs-lookup"><span data-stu-id="2601f-140">For secured peer names, the classifier and the dot (period) after the authority are optional.</span></span> <span data-ttu-id="2601f-141">Bei ungesicherten Peernamen ist der Klassifizierer nicht optional.</span><span class="sxs-lookup"><span data-stu-id="2601f-141">For unsecured peer names, the classifier is not optional.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.PeerToPeer.PeerName.Authority" />
        <altmember cref="P:System.Net.PeerToPeer.PeerName.IsSecured" />
        <altmember cref="T:System.Net.PeerToPeer.PeerNameType" />
      </Docs>
    </Member>
    <Member MemberName="CreateFromPeerHostName">
      <MemberSignature Language="C#" Value="public static System.Net.PeerToPeer.PeerName CreateFromPeerHostName (string peerHostName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.PeerToPeer.PeerName CreateFromPeerHostName(string peerHostName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerName.CreateFromPeerHostName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateFromPeerHostName (peerHostName As String) As PeerName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::PeerToPeer::PeerName ^ CreateFromPeerHostName(System::String ^ peerHostName);" />
      <MemberSignature Language="F#" Value="static member CreateFromPeerHostName : string -&gt; System.Net.PeerToPeer.PeerName" Usage="System.Net.PeerToPeer.PeerName.CreateFromPeerHostName peerHostName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.PeerName</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerHostName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="peerHostName"><span data-ttu-id="2601f-142">Eine Zeichenfolge mit dem DNS-qualifizierten Hostnamen.</span><span class="sxs-lookup"><span data-stu-id="2601f-142">A string that contains the DNS-qualified host name.</span></span></param>
        <summary><span data-ttu-id="2601f-143">Erstellt eine neue Instanz des angegebenen <see cref="P:System.Net.PeerToPeer.PeerName.PeerHostName" />-Objekts mit dem angegebenen Peerhostnamen.</span><span class="sxs-lookup"><span data-stu-id="2601f-143">Creates a new instance of the specified <see cref="P:System.Net.PeerToPeer.PeerName.PeerHostName" /> object with the specified peer host name.</span></span></summary>
        <returns><span data-ttu-id="2601f-144">Ein <see cref="T:System.Net.PeerToPeer.PeerName" />-Objekt, das den angegebenen Peerhostnamen darstellt.</span><span class="sxs-lookup"><span data-stu-id="2601f-144">A <see cref="T:System.Net.PeerToPeer.PeerName" /> object that represents the specified peer host name.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2601f-145">Der Peer-to-Peer-Host ist der "Seed-Knoten", der für das Initiieren der Peer-zu-Peer-Netzwerksitzung zuständig ist. er lädt Peers zur Teilnahme an Anwendungen, für die diese Art von Netzwerk Konnektivität am besten für die Kommunikation wie Chatgruppen oder Spielsitzungen geeignet ist.</span><span class="sxs-lookup"><span data-stu-id="2601f-145">The peer-to-peer host is the "seed node" responsible for initiating the peer-to-peer networking session, inviting peers to participate in applications for which this type of network connectivity is most appropriate for communications such as chat groups or game sessions.</span></span>  
  
 <span data-ttu-id="2601f-146">Diese Methode kann verwendet werden, um ein- <xref:System.Net.PeerToPeer.PeerName> Objekt auf Grundlage der-Eigenschaft zu erstellen <xref:System.Net.PeerToPeer.PeerName.PeerHostName%2A> .</span><span class="sxs-lookup"><span data-stu-id="2601f-146">This method can be used to create a <xref:System.Net.PeerToPeer.PeerName> object based on the <xref:System.Net.PeerToPeer.PeerName.PeerHostName%2A> property.</span></span> <span data-ttu-id="2601f-147">Dieser Peername ist nicht der Identität des aufrufenden Knotens zugeordnet.</span><span class="sxs-lookup"><span data-stu-id="2601f-147">This peer name is not associated with the identity of the calling node.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2601f-148">Der bereitgestellte <see cref="T:System.String" /> ist keine gültige Zeichenfolge für Peerhostnamen.</span><span class="sxs-lookup"><span data-stu-id="2601f-148">The <see cref="T:System.String" /> provided is not a valid peer host name string.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2601f-149"><see cref="P:System.Net.PeerToPeer.PeerName.PeerHostName" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2601f-149"><see cref="P:System.Net.PeerToPeer.PeerName.PeerHostName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException"><span data-ttu-id="2601f-150">Ein <see cref="T:System.Net.PeerToPeer.PeerName" /> konnte nicht aus dem angegebenen <see cref="P:System.Net.PeerToPeer.PeerName.PeerHostName" /> erstellt werden</span><span class="sxs-lookup"><span data-stu-id="2601f-150">A <see cref="T:System.Net.PeerToPeer.PeerName" /> could not be created from the supplied <see cref="P:System.Net.PeerToPeer.PeerName.PeerHostName" /></span></span></exception>
        <altmember cref="M:System.Net.PeerToPeer.PeerName.CreateRelativePeerName(System.Net.PeerToPeer.PeerName,System.String)" />
        <altmember cref="T:System.Net.PeerToPeer.PeerName" />
      </Docs>
    </Member>
    <Member MemberName="CreateRelativePeerName">
      <MemberSignature Language="C#" Value="public static System.Net.PeerToPeer.PeerName CreateRelativePeerName (System.Net.PeerToPeer.PeerName peerName, string classifier);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.PeerToPeer.PeerName CreateRelativePeerName(class System.Net.PeerToPeer.PeerName peerName, string classifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerName.CreateRelativePeerName(System.Net.PeerToPeer.PeerName,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateRelativePeerName (peerName As PeerName, classifier As String) As PeerName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::PeerToPeer::PeerName ^ CreateRelativePeerName(System::Net::PeerToPeer::PeerName ^ peerName, System::String ^ classifier);" />
      <MemberSignature Language="F#" Value="static member CreateRelativePeerName : System.Net.PeerToPeer.PeerName * string -&gt; System.Net.PeerToPeer.PeerName" Usage="System.Net.PeerToPeer.PeerName.CreateRelativePeerName (peerName, classifier)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.PeerName</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerName" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="classifier" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="peerName"><span data-ttu-id="2601f-151">Das <see cref="T:System.Net.PeerToPeer.PeerName" />-Objekt, für das der neue Klassifizierungszeichenfolgenwert festgelegt werden soll.</span><span class="sxs-lookup"><span data-stu-id="2601f-151">The <see cref="T:System.Net.PeerToPeer.PeerName" /> object on which to set the new classifier string value.</span></span></param>
        <param name="classifier"><span data-ttu-id="2601f-152">Der <see cref="P:System.Net.PeerToPeer.PeerName.Classifier" />, der für den zurückgegebenen <see cref="T:System.Net.PeerToPeer.PeerName" /> festgelegt werden soll.</span><span class="sxs-lookup"><span data-stu-id="2601f-152">The <see cref="P:System.Net.PeerToPeer.PeerName.Classifier" /> to set on the returned <see cref="T:System.Net.PeerToPeer.PeerName" />.</span></span></param>
        <summary><span data-ttu-id="2601f-153">Erstellt einen neuen <see cref="T:System.Net.PeerToPeer.PeerName" />, indem das für das bereitgestellte <see cref="P:System.Net.PeerToPeer.PeerName.Classifier" />-Objekt definierte <see cref="T:System.Net.PeerToPeer.PeerName" />-Feld durch den angegebenen Klassifizierungszeichenfolgenwert ersetzt wird.</span><span class="sxs-lookup"><span data-stu-id="2601f-153">Creates a new <see cref="T:System.Net.PeerToPeer.PeerName" /> by replacing the <see cref="P:System.Net.PeerToPeer.PeerName.Classifier" /> field defined on the supplied <see cref="T:System.Net.PeerToPeer.PeerName" /> object with the specified classifier string value.</span></span></summary>
        <returns><span data-ttu-id="2601f-154">Das neue <see cref="T:System.Net.PeerToPeer.PeerName" />-Objekt, das die aktualisierte Klassifizierung enthält.</span><span class="sxs-lookup"><span data-stu-id="2601f-154">The new <see cref="T:System.Net.PeerToPeer.PeerName" /> object that contains the updated classifier.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2601f-155"><xref:System.Net.PeerToPeer.PeerName.Classifier%2A>Wird an den vorhandenen <xref:System.Net.PeerToPeer.PeerName.Authority%2A> Teil von angefügt <xref:System.Net.PeerToPeer.PeerName> .</span><span class="sxs-lookup"><span data-stu-id="2601f-155">The <xref:System.Net.PeerToPeer.PeerName.Classifier%2A> is appended to the existing <xref:System.Net.PeerToPeer.PeerName.Authority%2A> portion of the <xref:System.Net.PeerToPeer.PeerName>.</span></span> <span data-ttu-id="2601f-156">Diese Zeichenfolge ist nicht mehr als 149 Zeichen lang, einschließlich des Abschluss Zeichens `null` .</span><span class="sxs-lookup"><span data-stu-id="2601f-156">This string is no more than 149 characters long, including the `null` terminator.</span></span> <span data-ttu-id="2601f-157">`null`Gibt an, dass der PeerName der Identität zurückgegeben werden soll.</span><span class="sxs-lookup"><span data-stu-id="2601f-157">Specify `null` to return the peer name of the identity.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2601f-158">Der bereitgestellte <see cref="T:System.String" /> ist keine gültige Peernamensklassifizierung.</span><span class="sxs-lookup"><span data-stu-id="2601f-158">The <see cref="T:System.String" /> provided is not a valid peer name classifier.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2601f-159">Mindestens ein Parameter ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2601f-159">One or more parameters are <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException"><span data-ttu-id="2601f-160">Ein <see cref="T:System.Net.PeerToPeer.PeerName" /> konnte nicht aus dem angegebenen <see cref="P:System.Net.PeerToPeer.PeerName.PeerHostName" /> erstellt werden</span><span class="sxs-lookup"><span data-stu-id="2601f-160">A <see cref="T:System.Net.PeerToPeer.PeerName" /> could not be created from the supplied <see cref="P:System.Net.PeerToPeer.PeerName.PeerHostName" /></span></span></exception>
        <altmember cref="M:System.Net.PeerToPeer.PeerName.CreateFromPeerHostName(System.String)" />
        <altmember cref="P:System.Net.PeerToPeer.PeerName.PeerHostName" />
        <altmember cref="T:System.Net.PeerToPeer.PeerName" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2601f-161">Bestimmt, ob der Inhalt dieses <see cref="T:System.Net.PeerToPeer.PeerName" />-Objekts dem Inhalt eines anderen Objekts entspricht.</span><span class="sxs-lookup"><span data-stu-id="2601f-161">Determines whether the content of this <see cref="T:System.Net.PeerToPeer.PeerName" /> object is equivalent to the content of another object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2601f-162">Die Implementierung von ist Gleichheits definiert durch IEquatable \<T> .</span><span class="sxs-lookup"><span data-stu-id="2601f-162">The implementation of Equals is defined by IEquatable\<T>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.PeerToPeer.PeerName.Authority" />
        <altmember cref="P:System.Net.PeerToPeer.PeerName.Classifier" />
        <altmember cref="T:System.Net.PeerToPeer.PeerName" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Net.PeerToPeer.PeerName other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(class System.Net.PeerToPeer.PeerName other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerName.Equals(System.Net.PeerToPeer.PeerName)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As PeerName) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Net::PeerToPeer::PeerName ^ other);" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Net.PeerToPeer.PeerName -&gt; bool" Usage="peerName.Equals other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Net.PeerToPeer.PeerName" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="2601f-163">Der Peername, der mit diesem <see cref="T:System.Net.PeerToPeer.PeerName" /> verglichen werden soll.</span><span class="sxs-lookup"><span data-stu-id="2601f-163">The peer name to compare with this <see cref="T:System.Net.PeerToPeer.PeerName" />.</span></span></param>
        <summary><span data-ttu-id="2601f-164">Vergleicht unter Berücksichtigung von Groß- und Kleinschreibung den aktuellen <see cref="T:System.Net.PeerToPeer.PeerName" /> mit dem angegebenen Peernamen.</span><span class="sxs-lookup"><span data-stu-id="2601f-164">Performs a case-sensitive comparison of the current <see cref="T:System.Net.PeerToPeer.PeerName" /> and the specified peer name.</span></span></summary>
        <returns><span data-ttu-id="2601f-165"><see langword="true" />, wenn die angegebene <see cref="T:System.Net.PeerToPeer.PeerName" />-Klasse dieselbe Ressource wie das aktuelle Peernamensobjekt identifiziert. Andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2601f-165"><see langword="true" /> if the specified <see cref="T:System.Net.PeerToPeer.PeerName" /> identifies the same resource as the current peer name object; otherwise, <see langword="false" />.</span></span>  
  
<span data-ttu-id="2601f-166">Diese Methode gibt auch <see langword="false" /> zurück, wenn <paramref name="other" /> auf <see langword="null" /> festgelegt wird.</span><span class="sxs-lookup"><span data-stu-id="2601f-166">This method also returns <see langword="false" /> if <paramref name="other" /> is set to <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2601f-167">Zwei Peer Namen werden als gleich betrachtet, wenn Sie identische Zeichen in Ihren <xref:System.Net.PeerToPeer.PeerName.Authority%2A> -und- <xref:System.Net.PeerToPeer.PeerName.Classifier%2A> Komponenten enthalten.</span><span class="sxs-lookup"><span data-stu-id="2601f-167">Two peer names are considered equal if they contain identical characters in their <xref:System.Net.PeerToPeer.PeerName.Authority%2A> and <xref:System.Net.PeerToPeer.PeerName.Classifier%2A> components.</span></span>  
  
 <span data-ttu-id="2601f-168">In den Zeichen folgen werden vor dem Vergleich keine Normalisierungen ausgeführt.</span><span class="sxs-lookup"><span data-stu-id="2601f-168">No normalizations are performed on the strings prior to comparison.</span></span>  <span data-ttu-id="2601f-169">Alle Normalisierungen sollten während oder vor dem Erstellen der Peer Namen Objekte abgeschlossen worden sein.</span><span class="sxs-lookup"><span data-stu-id="2601f-169">All normalization should have been completed while or before constructing the peer name objects.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.PeerToPeer.PeerName" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerName.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="peerName.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="2601f-170">Das <see cref="T:System.Object" />, das mit dem aktuellen <see cref="T:System.Net.PeerToPeer.PeerName" /> verglichen werden soll.</span><span class="sxs-lookup"><span data-stu-id="2601f-170">The <see cref="T:System.Object" /> to compare with the current <see cref="T:System.Net.PeerToPeer.PeerName" />.</span></span></param>
        <summary><span data-ttu-id="2601f-171">Bestimmt, ob der Inhalt dieses <see cref="T:System.Net.PeerToPeer.PeerName" /> mit dem Inhalt eines anderen Objekts übereinstimmt.</span><span class="sxs-lookup"><span data-stu-id="2601f-171">Determines whether the content of this <see cref="T:System.Net.PeerToPeer.PeerName" /> is equal to the content of another object.</span></span></summary>
        <returns><span data-ttu-id="2601f-172"><see langword="true" />, wenn <see cref="T:System.Net.PeerToPeer.PeerName" /> und das Vergleichsobjekt die gleichen Informationen enthalten, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2601f-172"><see langword="true" /> if the <see cref="T:System.Net.PeerToPeer.PeerName" /> and the comparison object contain the same information; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2601f-173">Diese Methode erbt die Standard Signatur und das Standardverhalten von <xref:System.Object> .</span><span class="sxs-lookup"><span data-stu-id="2601f-173">This method inherits the default signature and behavior from <xref:System.Object>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.PeerToPeer.PeerName" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerName.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="peerName.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2601f-174">Setzt die <see cref="M:System.Object.GetHashCode" />-Methode außer Kraft.</span><span class="sxs-lookup"><span data-stu-id="2601f-174">Overrides the <see cref="M:System.Object.GetHashCode" /> method.</span></span></summary>
        <returns><span data-ttu-id="2601f-175">Ein Hashcode für das aktuelle <see cref="T:System.Object" />.</span><span class="sxs-lookup"><span data-stu-id="2601f-175">A hashcode for the current <see cref="T:System.Object" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2601f-176">Zwei-Objekte werden als gleich betrachtet, wenn diese Methode für beide den gleichen Hashcode zurückgibt.</span><span class="sxs-lookup"><span data-stu-id="2601f-176">Two objects are considered equal if this method returns the same hashcode for both of them.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.PeerToPeer.PeerName" />
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="protected virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerName.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="abstract member GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit&#xA;override this.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="peerName.GetObjectData (info, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="2601f-177">Enthält die serialisierten Daten, die dem <see cref="T:System.Net.PeerToPeer.PeerName" />-Objekt zugeordnet sind.</span><span class="sxs-lookup"><span data-stu-id="2601f-177">Holds the serialized data associated with the <see cref="T:System.Net.PeerToPeer.PeerName" /> object.</span></span></param>
        <param name="context"><span data-ttu-id="2601f-178">Enthält das Ziel für den serialisierten Datenstrom, der dem <see cref="T:System.Net.PeerToPeer.PeerName" />-Objekt zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="2601f-178">Contains the destination for the serialized stream associated with the <see cref="T:System.Net.PeerToPeer.PeerName" /> object.</span></span></param>
        <summary><span data-ttu-id="2601f-179">Füllt ein Serialisierungsinformationsobjekt mit den Daten auf, die zum Serialisieren des <see cref="T:System.Net.PeerToPeer.PeerName" /> erforderlich sind.</span><span class="sxs-lookup"><span data-stu-id="2601f-179">Populates a serialization information object with the data needed to serialize the <see cref="T:System.Net.PeerToPeer.PeerName" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2601f-180">Ein abgeleiteter Typ muss die <xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A>-Basistypmethode aufrufen.</span><span class="sxs-lookup"><span data-stu-id="2601f-180">A derived type must call the base type <xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.PeerToPeer.PeerName" />
      </Docs>
    </Member>
    <Member MemberName="IsSecured">
      <MemberSignature Language="C#" Value="public bool IsSecured { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSecured" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.PeerName.IsSecured" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSecured As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSecured { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSecured : bool" Usage="System.Net.PeerToPeer.PeerName.IsSecured" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2601f-181">Ruft einen booleschen Wert ab, der angibt, ob es sich um einen gesicherten Peernamen handelt.</span><span class="sxs-lookup"><span data-stu-id="2601f-181">Gets a Boolean value that specifies whether this is a secured peer name.</span></span></summary>
        <value><span data-ttu-id="2601f-182">Wenn <see langword="true" />, ist dieser Peername mit einem Schlüsselpaar aus einem öffentlichen und einem privaten Schlüssel gesichert.</span><span class="sxs-lookup"><span data-stu-id="2601f-182">If <see langword="true" />, this peer name is secured with a private key/ public key pair.</span></span> <span data-ttu-id="2601f-183">Der Name enthält den SHA (Secure Hash Algorithm)-Hash des öffentlichen Schlüssels für das Benutzerzertifikat des Peercomputers.</span><span class="sxs-lookup"><span data-stu-id="2601f-183">Its name contains the Secure Hash Algorithm (SHA) hash of the public key of the user certificate of that peer machine.</span></span> <span data-ttu-id="2601f-184">Andernfalls, wenn <see langword="false" />, ist dem Peernamen keine Identität zugeordnet.</span><span class="sxs-lookup"><span data-stu-id="2601f-184">Otherwise, if <see langword="false" />, the peer name has no associated identity.</span></span>  
  
<span data-ttu-id="2601f-185">Sofern nicht ausdrücklich angegeben, ist der Standardwert für alle Eigenschaften <see langword="null" /> für Referenztypen und 0 (null) für Eigenschaften vom Typ <see langword="int" />.</span><span class="sxs-lookup"><span data-stu-id="2601f-185">Unless explicitly specified, the default value for all properties is <see langword="null" /> for reference types and zero (0) for properties of type <see langword="int" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2601f-186">Ein PeerName gilt als geschützt, wenn er von einem selbst signierten Zertifikat unterstützt wird.</span><span class="sxs-lookup"><span data-stu-id="2601f-186">A peer name is considered secured if it is backed by a self-signed certificate.</span></span>  
  
 <span data-ttu-id="2601f-187">Nur der Besitzer kann einen gesicherten Peernamen bei PNRP registrieren.</span><span class="sxs-lookup"><span data-stu-id="2601f-187">Only the owner can register a secured peer name with PNRP.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage"><para><span data-ttu-id="2601f-188">Wenn Sie einen gesicherten Peernamen verwenden, wird die Gesamtsicherheit der Netzwerk Anwendung nicht sichergestellt.</span><span class="sxs-lookup"><span data-stu-id="2601f-188">Using a secured peer name does not ensure the overall security of the networking application.</span></span> <span data-ttu-id="2601f-189">Die Sicherheit der Anwendung ist implementierungsabhängig.</span><span class="sxs-lookup"><span data-stu-id="2601f-189">Security of the application is implementation-dependent.</span></span></para></block>
        <altmember cref="T:System.Net.PeerToPeer.PeerName" />
        <altmember cref="N:System.Security.Permissions" />
      </Docs>
    </Member>
    <Member MemberName="PeerHostName">
      <MemberSignature Language="C#" Value="public string PeerHostName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PeerHostName" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.PeerName.PeerHostName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PeerHostName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PeerHostName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PeerHostName : string" Usage="System.Net.PeerToPeer.PeerName.PeerHostName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2601f-190">Ruft den Namen des Peer-to-Peer-Hosts ab.</span><span class="sxs-lookup"><span data-stu-id="2601f-190">Gets the name of the peer-to-peer host.</span></span> <span data-ttu-id="2601f-191">Dies ist eine DNS-codierte Version des <see cref="T:System.Net.PeerToPeer.PeerName" />, der einem <see cref="P:System.Net.PeerToPeer.PeerName.PeerHostName" /> insofern entspricht, als beide Bezeichner sind.</span><span class="sxs-lookup"><span data-stu-id="2601f-191">This is a DNS-encoded version of the <see cref="T:System.Net.PeerToPeer.PeerName" /> which is equivalent to a <see cref="P:System.Net.PeerToPeer.PeerName.PeerHostName" /> in that they are both identifiers.</span></span>  <span data-ttu-id="2601f-192">Die beiden Bezeichner unterscheiden sich in der visuellen Darstellung.</span><span class="sxs-lookup"><span data-stu-id="2601f-192">The difference between the two is visual representation.</span></span></summary>
        <value><span data-ttu-id="2601f-193">Ein <see cref="T:System.String" />-Wert, bei dem es sich um den Namen des Peer-to-Peer-Hosts handelt.</span><span class="sxs-lookup"><span data-stu-id="2601f-193">A <see cref="T:System.String" /> value that is the name of the peer-to-peer host.</span></span> <span data-ttu-id="2601f-194">Sofern nicht ausdrücklich angegeben, ist für Referenztypen der Standardwert aller Eigenschaften <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2601f-194">Unless explicitly specified, the default value for all properties is <see langword="null" /> for reference types.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2601f-195">Der Peer-to-Peer-Host ist der "Seed-Knoten", der für das Initiieren der Peer-zu-Peer-Netzwerksitzung zuständig ist. er lädt Peers zur Teilnahme an Anwendungen, für die diese Art von Netzwerk Konnektivität am besten für die Kommunikation wie Chatgruppen oder Spielsitzungen geeignet ist.</span><span class="sxs-lookup"><span data-stu-id="2601f-195">The peer-to-peer host is the "seed node" responsible for initiating the peer-to-peer networking session, inviting peers to participate in applications for which this type of network connectivity is most appropriate for communications such as chat groups or game sessions.</span></span>  
  
 <span data-ttu-id="2601f-196">Die <xref:System.Net.PeerToPeer.PeerName.PeerHostName%2A> -Eigenschaft gibt den Namen eines Peers an, der die Peer-zu-Peer-Netzwerksitzung erstellt hat und der als Host der Sitzung angesehen wird.</span><span class="sxs-lookup"><span data-stu-id="2601f-196">The <xref:System.Net.PeerToPeer.PeerName.PeerHostName%2A> property specifies the name of a peer that created the peer-to-peer networking session, and which is considered the host of the session.</span></span>  <span data-ttu-id="2601f-197">Der Host einer Peer-zu-Peer-Netzwerksitzung kann Peers in mehr als einem Peer sammeln <xref:System.Net.PeerToPeer.Cloud> .</span><span class="sxs-lookup"><span data-stu-id="2601f-197">The host of a peer-to-peer networking session may collect peers into more than one <xref:System.Net.PeerToPeer.Cloud>.</span></span> <span data-ttu-id="2601f-198">Außerdem kann ein Peer gleichzeitig von mehr als einem Peerhost gehostet werden.</span><span class="sxs-lookup"><span data-stu-id="2601f-198">Also, a peer may simultaneously be hosted by more than one peer host.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.PeerToPeer.PeerName.CreateRelativePeerName(System.Net.PeerToPeer.PeerName,System.String)" />
        <altmember cref="T:System.Net.PeerToPeer.PeerName" />
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerName.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (info As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberSignature Language="F#" Value="abstract member System.Runtime.Serialization.ISerializable.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit&#xA;override this.System.Runtime.Serialization.ISerializable.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="peerName.System.Runtime.Serialization.ISerializable.GetObjectData (info, context)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="2601f-199">Enthält die serialisierten Daten, die dem <see cref="T:System.Net.PeerToPeer.PeerName" />-Objekt zugeordnet sind.</span><span class="sxs-lookup"><span data-stu-id="2601f-199">Holds the serialized data associated with the <see cref="T:System.Net.PeerToPeer.PeerName" /> object.</span></span></param>
        <param name="context"><span data-ttu-id="2601f-200">Enthält das Ziel für den serialisierten Datenstrom, der dem <see cref="T:System.Net.PeerToPeer.PeerName" />-Objekt zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="2601f-200">Contains the destination for the serialized stream associated with the <see cref="T:System.Net.PeerToPeer.PeerName" /> object.</span></span></param>
        <summary><span data-ttu-id="2601f-201">Implementiert die <see cref="T:System.Runtime.Serialization.ISerializable" />-Schnittstelle und gibt die zum Serialisieren der <see cref="T:System.Net.PeerToPeer.PeerName" />-Instanz erforderlichen Daten zurück.</span><span class="sxs-lookup"><span data-stu-id="2601f-201">Implements the <see cref="T:System.Runtime.Serialization.ISerializable" /> interface and returns the data needed to serialize the <see cref="T:System.Net.PeerToPeer.PeerName" /> instance.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Net.PeerToPeer.PeerName" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerName.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="peerName.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2601f-202">Gibt eine Zeichenfolgendarstellung des aktuellen <see cref="T:System.Net.PeerToPeer.PeerName" />-Objekts zurück.</span><span class="sxs-lookup"><span data-stu-id="2601f-202">Returns a string representation of the current <see cref="T:System.Net.PeerToPeer.PeerName" /> object.</span></span></summary>
        <returns><span data-ttu-id="2601f-203">Eine Zeichenfolge, die den aktuellen <see cref="T:System.Net.PeerToPeer.PeerName" /> darstellt und im folgenden Format angegeben wird: *Authority.Classifier*.</span><span class="sxs-lookup"><span data-stu-id="2601f-203">A string that represents the current <see cref="T:System.Net.PeerToPeer.PeerName" />, and specified in the following format: *Authority.Classifier*.</span></span> <span data-ttu-id="2601f-204">Beispiel: "0.MeinInternetPeer".</span><span class="sxs-lookup"><span data-stu-id="2601f-204">For example, "0.MyInternetPeer".</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2601f-205">Diese Methode erbt die Standard Signatur und das Standardverhalten von <xref:System.Object> .</span><span class="sxs-lookup"><span data-stu-id="2601f-205">This method inherits the default signature and behavior from <xref:System.Object>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.PeerToPeer.PeerName" />
      </Docs>
    </Member>
  </Members>
</Type>
