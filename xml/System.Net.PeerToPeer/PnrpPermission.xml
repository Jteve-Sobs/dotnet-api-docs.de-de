<Type Name="PnrpPermission" FullName="System.Net.PeerToPeer.PnrpPermission">
  <Metadata><Meta Name="ms.openlocfilehash" Value="35cc6e54bceafd19f471a8b506b673d622c5f5b6" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70591491" /></Metadata><TypeSignature Language="C#" Value="public sealed class PnrpPermission : System.Security.CodeAccessPermission, System.Security.Permissions.IUnrestrictedPermission" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit PnrpPermission extends System.Security.CodeAccessPermission implements class System.Security.Permissions.IUnrestrictedPermission" />
  <TypeSignature Language="DocId" Value="T:System.Net.PeerToPeer.PnrpPermission" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class PnrpPermission&#xA;Inherits CodeAccessPermission&#xA;Implements IUnrestrictedPermission" />
  <TypeSignature Language="C++ CLI" Value="public ref class PnrpPermission sealed : System::Security::CodeAccessPermission, System::Security::Permissions::IUnrestrictedPermission" />
  <TypeSignature Language="F#" Value="type PnrpPermission = class&#xA;    inherit CodeAccessPermission&#xA;    interface IUnrestrictedPermission" />
  <AssemblyInfo>
    <AssemblyName>System.Net</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.CodeAccessPermission</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Security.Permissions.IUnrestrictedPermission</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="d18e8-101">Gibt die Werte an, die in <see cref="N:System.Net.PeerToPeer" />-Objektberechtigungen verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="d18e8-101">Specifies the values that are used in <see cref="N:System.Net.PeerToPeer" /> object permissions.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d18e8-102">Mit den Standard Berechtigungen können alle lokalen und intranetzonenanwendungen auf PNRP-Dienste zugreifen.</span><span class="sxs-lookup"><span data-stu-id="d18e8-102">The default permissions allow all local and Intranet zone applications to access PNRP services.</span></span> <span data-ttu-id="d18e8-103">Wenn die Standard Berechtigungen nicht geändert werden, haben alle Verbindungs lokalen und Site lokalen Anwendungen Zugriff auf Peer-to-Peer-Dienste, aber globale (Internet-) Anwendungen haben keinen Zugriff.</span><span class="sxs-lookup"><span data-stu-id="d18e8-103">If the default permissions are not changed, all link-local and site-local applications have access to Peer-to-Peer services, but global (internet) applications have no access.</span></span>  
  
 <span data-ttu-id="d18e8-104">Instanzen dieses Typs haben zwei Berechtigungs Zustände: Sie haben keinen Zugriff auf die Ressourcen, die durch die Berechtigung geschützt sind, oder Sie haben uneingeschränkten vollständigen Zugriff auf diese Ressourcen.</span><span class="sxs-lookup"><span data-stu-id="d18e8-104">Instances of this type have two permission states: they either have no access to the resources protected by the permission, or they have unrestricted full access to those resources.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Copy" />
    <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.FromXml(System.Security.SecurityElement)" />
    <altmember cref="T:System.Net.PeerToPeer.PnrpPermissionAttribute" />
    <altmember cref="N:System.Security.Permissions" />
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink?LinkID=92731"><span data-ttu-id="d18e8-105">PNRP-Namespace Anbieter-API</span><span class="sxs-lookup"><span data-stu-id="d18e8-105">PNRP Namespace Provider API</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PnrpPermission (System.Security.Permissions.PermissionState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Permissions.PermissionState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PnrpPermission.#ctor(System.Security.Permissions.PermissionState)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (state As PermissionState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PnrpPermission(System::Security::Permissions::PermissionState state);" />
      <MemberSignature Language="F#" Value="new System.Net.PeerToPeer.PnrpPermission : System.Security.Permissions.PermissionState -&gt; System.Net.PeerToPeer.PnrpPermission" Usage="new System.Net.PeerToPeer.PnrpPermission state" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="state" Type="System.Security.Permissions.PermissionState" />
      </Parameters>
      <Docs>
        <param name="state"><span data-ttu-id="d18e8-106">Einer der Werte in der <see cref="T:System.Security.Permissions.PermissionState" />-Enumeration.</span><span class="sxs-lookup"><span data-stu-id="d18e8-106">One of the values in the <see cref="T:System.Security.Permissions.PermissionState" /> enumeration.</span></span></param>
        <summary><span data-ttu-id="d18e8-107">Initialisiert eine neue Instanz der <see cref="T:System.Net.PeerToPeer.PnrpPermission" />-Klasse mit dem angegebenen anfänglichen Berechtigungszustand.</span><span class="sxs-lookup"><span data-stu-id="d18e8-107">Initializes a new instance of the <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> class with the supplied initial permission state.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d18e8-108">Instanzen dieses Typs haben zwei Berechtigungs Zustände: Sie haben entweder keinen Zugriff auf die Ressourcen, die durch die Berechtigung geschützt sind, oder Sie haben uneingeschränkten Vollzugriff auf diese Ressourcen.</span><span class="sxs-lookup"><span data-stu-id="d18e8-108">Instances of this type have two permission states: they either have no access to the resource(s) protected by the permission, or they have unrestricted full access to those resources.</span></span>  
  
 <span data-ttu-id="d18e8-109">Wenn `state` uneingeschränkt ist, übergibt die pnrpberechtigungs Instanz alle Anforderungen.</span><span class="sxs-lookup"><span data-stu-id="d18e8-109">If `state` is Unrestricted, the PnrpPermission instance passes all demands.</span></span> <span data-ttu-id="d18e8-110">Wenn `state` einen anderen Wert enthält, werden bei der pnrpberechtigungs Instanz alle Anforderungen nicht erfüllt.</span><span class="sxs-lookup"><span data-stu-id="d18e8-110">If `state` contains any other value, the PnrpPermission instance fails all demands.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Copy" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.IsUnrestricted" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.ToXml" />
        <altmember cref="T:System.Net.PeerToPeer.PnrpPermissionAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PnrpPermission.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Copy () As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Copy();" />
      <MemberSignature Language="F#" Value="override this.Copy : unit -&gt; System.Security.IPermission" Usage="pnrpPermission.Copy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d18e8-111">Erstellt eine identische Kopie der aktuellen <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> und gibt die Kopie zurück.</span><span class="sxs-lookup"><span data-stu-id="d18e8-111">Creates and returns an identical copy of the current <see cref="T:System.Net.PeerToPeer.PnrpPermission" />.</span></span></summary>
        <returns><span data-ttu-id="d18e8-112">Ein Objekt mit einer IPermission-Schnittstelle, deren Instanz eine Kopie der aktuellen Instanz von <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> enthält.</span><span class="sxs-lookup"><span data-stu-id="d18e8-112">An object with an IPermission interface, whose instance contains a copy of the current instance of <see cref="T:System.Net.PeerToPeer.PnrpPermission" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d18e8-113">Eine Kopie einer Berechtigung stellt denselben Zugriff auf Ressourcen wie die ursprüngliche Berechtigung dar.</span><span class="sxs-lookup"><span data-stu-id="d18e8-113">A copy of a permission represents the same access to resources as the original permission.</span></span>  
  
 <span data-ttu-id="d18e8-114">Instanzen dieses Typs haben zwei Berechtigungs Zustände: Sie haben entweder keinen Zugriff auf die Ressourcen, die durch die Berechtigung geschützt sind, oder Sie haben uneingeschränkten Vollzugriff auf diese Ressourcen.</span><span class="sxs-lookup"><span data-stu-id="d18e8-114">Instances of this type have two permission states: they either have no access to the resource(s) protected by the permission, or they have unrestricted full access to those resources.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d18e8-115">–   Der Parameter ist kein gültiges <see cref="T:System.Net.PeerToPeer.PnrpPermission" />-Element.</span><span class="sxs-lookup"><span data-stu-id="d18e8-115">-   The parameter is not a valid <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> element.</span></span>  
  
<span data-ttu-id="d18e8-116">–   Die Versionsnummer des Parameters wird nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="d18e8-116">-   The parameter's version number is not supported.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d18e8-117">Der Parameter ist ein <see langword="null" />-Verweis (<see langword="Nothing" /> in Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="d18e8-117">The parameter is a <see langword="null" /> reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.FromXml(System.Security.SecurityElement)" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.ToXml" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Union(System.Security.IPermission)" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink?LinkID=92731"><span data-ttu-id="d18e8-118">PNRP-Namespace Anbieter-API</span><span class="sxs-lookup"><span data-stu-id="d18e8-118">PNRP Namespace Provider API</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FromXml">
      <MemberSignature Language="C#" Value="public override void FromXml (System.Security.SecurityElement e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void FromXml(class System.Security.SecurityElement e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PnrpPermission.FromXml(System.Security.SecurityElement)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub FromXml (e As SecurityElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void FromXml(System::Security::SecurityElement ^ e);" />
      <MemberSignature Language="F#" Value="override this.FromXml : System.Security.SecurityElement -&gt; unit" Usage="pnrpPermission.FromXml e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Security.SecurityElement" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="d18e8-119">Die XML-Codierung zur Wiederherstellung der Berechtigung.</span><span class="sxs-lookup"><span data-stu-id="d18e8-119">The XML encoding to use to reconstruct the permission.</span></span></param>
        <summary><span data-ttu-id="d18e8-120">Stellt ein Sicherheitsobjekt mit einem angegebenen Zustand aus einer XML-Codierung wieder her.</span><span class="sxs-lookup"><span data-stu-id="d18e8-120">Reconstructs a security object with a specified state from an XML encoding.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d18e8-121">Stellt das XML-Objektmodell für die Codierung von Sicherheitsobjekten dar.</span><span class="sxs-lookup"><span data-stu-id="d18e8-121">Represents the XML object model for encoding security objects.</span></span> <span data-ttu-id="d18e8-122">Diese Klasse kann nicht vererbt werden.</span><span class="sxs-lookup"><span data-stu-id="d18e8-122">This class cannot be inherited.</span></span>  
  
 <span data-ttu-id="d18e8-123">Diese Klasse soll eine einfache Implementierung eines einfachen XML-Objektmodells zur Verwendung innerhalb des Sicherheitssystems sein und nicht als allgemeines XML-Objektmodell verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="d18e8-123">This class is intended to be a lightweight implementation of a simple XML object model for use within the security system, and not for use as a general XML object model.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d18e8-124">–   Der Parameter ist kein gültiges <see cref="T:System.Net.PeerToPeer.PnrpPermission" />-Element.</span><span class="sxs-lookup"><span data-stu-id="d18e8-124">-   The parameter is not a valid <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> element.</span></span>  
  
<span data-ttu-id="d18e8-125">–   Die Versionsnummer des Parameters wird nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="d18e8-125">-   The parameter's version number is not supported.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d18e8-126">Der Parameter ist ein <see langword="null" />-Verweis (<see langword="Nothing" /> in Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="d18e8-126">The parameter is a <see langword="null" /> reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Copy" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.ToXml" />
        <altmember cref="T:System.Security.SecurityElement" />
      </Docs>
    </Member>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Intersect (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Intersect(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PnrpPermission.Intersect(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Intersect (target As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Intersect(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="override this.Intersect : System.Security.IPermission -&gt; System.Security.IPermission" Usage="pnrpPermission.Intersect target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="d18e8-127">Eine Berechtigung, deren Schnittmenge mit der aktuellen Berechtigung mithilfe von <see cref="M:System.Net.PeerToPeer.PnrpPermission.Intersect(System.Security.IPermission)" /> gebildet wird.</span><span class="sxs-lookup"><span data-stu-id="d18e8-127">A permission to <see cref="M:System.Net.PeerToPeer.PnrpPermission.Intersect(System.Security.IPermission)" /> with the current permission.</span></span> <span data-ttu-id="d18e8-128">Sie muss denselben Typ aufweisen wie die aktuelle Berechtigung.</span><span class="sxs-lookup"><span data-stu-id="d18e8-128">It must be of the same type as the current permission.</span></span></param>
        <summary><span data-ttu-id="d18e8-129">Erstellt eine Berechtigung als Schnittmenge der aktuellen <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> und der angegebenen Berechtigung und gibt diese zurück.</span><span class="sxs-lookup"><span data-stu-id="d18e8-129">Creates and returns a permission that is the intersection of the current <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> and the specified permission.</span></span></summary>
        <returns><span data-ttu-id="d18e8-130">Eine neue Berechtigung, die die Schnittmenge der aktuellen <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> und der angegebenen Berechtigung darstellt.</span><span class="sxs-lookup"><span data-stu-id="d18e8-130">A new permission that represents the intersection of the current <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> and the specified permission.</span></span> <span data-ttu-id="d18e8-131">Wenn die Schnittmenge leer ist, ist diese neue Berechtigung ein <see langword="null" />-Verweis (<see langword="Nothing" /> in Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="d18e8-131">This new permission is a <see langword="null" /> reference (<see langword="Nothing" /> in Visual Basic) if the intersection is empty.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d18e8-132">Die Schnittmenge zweier Berechtigungen ist eine Berechtigung, die den Satz von Vorgängen beschreibt, den beide gemeinsam beschreiben.</span><span class="sxs-lookup"><span data-stu-id="d18e8-132">The intersection of two permissions is a permission that describes the set of operations they both describe in common.</span></span> <span data-ttu-id="d18e8-133">Nur eine Anforderung, die beide ursprünglichen Berechtigungen übergibt, übergibt die Schnittmenge.</span><span class="sxs-lookup"><span data-stu-id="d18e8-133">Only a demand that passes both original permissions will pass the intersection.</span></span>  
  
 <span data-ttu-id="d18e8-134">Die folgenden-Anweisungen müssen für alle `true` Implementierungen der Intersect-Methode sein.</span><span class="sxs-lookup"><span data-stu-id="d18e8-134">The following statements are required to be `true` for all implementations of the Intersect method.</span></span> <span data-ttu-id="d18e8-135">X und Y stellen <xref:System.Security.IPermission> Objekt Verweise dar, bei denen `null` es sich nicht um einen Verweis handelt (Nothing in Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="d18e8-135">X and Y represent <xref:System.Security.IPermission> object references that are not a `null` reference (Nothing in Visual Basic).</span></span>  
  
-   <span data-ttu-id="d18e8-136">X. Intersect (x) gibt einen Wert zurück, der gleich X ist.</span><span class="sxs-lookup"><span data-stu-id="d18e8-136">X.Intersect(X) returns a value equal to X.</span></span>  
  
-   <span data-ttu-id="d18e8-137">X. Intersect (y) gibt denselben Wert wie Y. Intersect (x) zurück.</span><span class="sxs-lookup"><span data-stu-id="d18e8-137">X.Intersect(Y) returns the same value as Y.Intersect(X).</span></span>  
  
-   <span data-ttu-id="d18e8-138">X. Intersect (ein `null` Verweis (`Nothing` in Visual Basic)) gibt einen `null` -Verweis`Nothing` (in Visual Basic) zurück.</span><span class="sxs-lookup"><span data-stu-id="d18e8-138">X.Intersect(a `null` reference (`Nothing` in Visual Basic)) returns a `null` reference (`Nothing` in Visual Basic).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d18e8-139">Der Zielparameter ist kein <see langword="null" />-Verweis (<see langword="Nothing" /> in Visual Basic) und keine Instanz der Klasse der aktuellen Berechtigung.</span><span class="sxs-lookup"><span data-stu-id="d18e8-139">The target parameter is not a <see langword="null" /> reference (<see langword="Nothing" /> in Visual Basic) and is not an instance of the same class as the current permission.</span></span></exception>
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.IsSubsetOf(System.Security.IPermission)" />
        <altmember cref="T:System.Net.PeerToPeer.PnrpPermissionAttribute" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Union(System.Security.IPermission)" />
      </Docs>
    </Member>
    <Member MemberName="IsSubsetOf">
      <MemberSignature Language="C#" Value="public override bool IsSubsetOf (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsSubsetOf(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PnrpPermission.IsSubsetOf(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsSubsetOf (target As IPermission) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsSubsetOf(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="override this.IsSubsetOf : System.Security.IPermission -&gt; bool" Usage="pnrpPermission.IsSubsetOf target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="d18e8-140">Eine Berechtigung, für die geprüft werden soll, ob sie eine Teilmenge einer anderen Berechtigung ist.</span><span class="sxs-lookup"><span data-stu-id="d18e8-140">A permission that is to be tested for the subset relationship.</span></span> <span data-ttu-id="d18e8-141">Diese Berechtigung muss denselben Typ aufweisen wie die aktuelle Berechtigung.</span><span class="sxs-lookup"><span data-stu-id="d18e8-141">This permission must be of the same type as the current permission.</span></span></param>
        <summary><span data-ttu-id="d18e8-142">Bestimmt, ob die aktuelle <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> eine Teilmenge der angegebenen Berechtigung ist.</span><span class="sxs-lookup"><span data-stu-id="d18e8-142">Determines whether the current <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> is a subset of the specified permission.</span></span></summary>
        <returns><span data-ttu-id="d18e8-143"><see langword="true" />, wenn die aktuelle <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> eine Teilmenge der angegebenen Berechtigung ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d18e8-143"><see langword="true" /> if the current <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> is a subset of the specified permission; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="d18e8-144">Der aktuelle <xref:System.Net.PeerToPeer.PnrpPermission> ist eine Teilmenge der angegebenen Berechtigung, wenn die aktuelle Berechtigung eine Reihe von Vorgängen angibt, die vollständig in der angegebenen Berechtigung enthalten sind.</span><span class="sxs-lookup"><span data-stu-id="d18e8-144">The current <xref:System.Net.PeerToPeer.PnrpPermission> is a subset of the specified permission if the current permission specifies a set of operations that is wholly contained by the specified permission.</span></span> <span data-ttu-id="d18e8-145">Beispielsweise ist eine Berechtigung, die den Zugriff auf "*c:\example.txt*" darstellt, eine Teilmenge einer Berechtigung, die den Zugriff auf "*C:\\*" darstellt.</span><span class="sxs-lookup"><span data-stu-id="d18e8-145">For example, a permission that represents access to "*C:\example.txt*" is a subset of a permission that represents access to "*C:\\*".</span></span> <span data-ttu-id="d18e8-146">Wenn diese Methode zurück `true`gegeben wird, stellt die aktuelle Berechtigung keinen Zugriff mehr auf die geschützte Ressource als die angegebene Berechtigung dar.</span><span class="sxs-lookup"><span data-stu-id="d18e8-146">If this method returns `true`, the current permission represents no more access to the protected resource than does the specified permission.</span></span>  
  
<span data-ttu-id="d18e8-147">Die folgenden-Anweisungen müssen für alle `true` Implementierungen der IsSubsetOf-Methode sein.</span><span class="sxs-lookup"><span data-stu-id="d18e8-147">The following statements are required to be `true` for all implementations of the IsSubsetOf method.</span></span> <span data-ttu-id="d18e8-148">X, Y und Z stellen Objekte <xref:System.Security.IPermission> dar, die `null` kein Verweis sind (`Nothing` in Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="d18e8-148">X, Y, and Z represent <xref:System.Security.IPermission> objects that are not a `null` reference (`Nothing` in Visual Basic).</span></span>

- <span data-ttu-id="d18e8-149">`X.IsSubsetOf(X)` gibt `true` zurück.</span><span class="sxs-lookup"><span data-stu-id="d18e8-149">`X.IsSubsetOf(X)` returns `true`.</span></span>

- <span data-ttu-id="d18e8-150">`X.IsSubsetOf(Y)`gibt denselben Wert zurück wie `Y.IsSubsetOf(X)` if und only, wenn X und Y denselben Berechtigungs Satz darstellen.</span><span class="sxs-lookup"><span data-stu-id="d18e8-150">`X.IsSubsetOf(Y)` returns the same value as `Y.IsSubsetOf(X)` if and only if X and Y represent the same set of permissions.</span></span>

- <span data-ttu-id="d18e8-151">Wenn `X.IsSubsetOf(Y)` `true`und `Y.IsSubsetOf(Z)` beide zurückgeben , `X.IsSubsetOf(Z)`  gibt zurück `true`.</span><span class="sxs-lookup"><span data-stu-id="d18e8-151">If `X.IsSubsetOf(Y)` and `Y.IsSubsetOf(Z)` both return `true`, `X.IsSubsetOf(Z)` returns `true`.</span></span>
  
<span data-ttu-id="d18e8-152">Wenn X ein <xref:System.Security.IPermission> leeres Objekt mit dem Berechtigungs Zustand *None*darstellt und Y ein <xref:System.Security.IPermission> Objekt darstellt, das ein `null` Verweis (`Nothing` in Visual Basic) ist, `X.IsSubsetOf(Y)` wird `true`zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="d18e8-152">If X represents an empty <xref:System.Security.IPermission> object with a permission state of *None*, and Y represents an <xref:System.Security.IPermission> object that is a `null` reference (`Nothing` in Visual Basic), `X.IsSubsetOf(Y)` returns `true`.</span></span> <span data-ttu-id="d18e8-153">Wenn Z auch eine leere Berechtigung ist, gibt der zusammengesetzte `X.Union(Z).IsSubsetOf(Y)` Set- `true` Vorgang ebenfalls <xref:System.Net.PeerToPeer.PnrpPermission.Union%2A> zurück, da die von zwei leeren Berechtigungen eine leere Berechtigung ist.</span><span class="sxs-lookup"><span data-stu-id="d18e8-153">If Z is also an empty permission, the compound set operation `X.Union(Z).IsSubsetOf(Y)` also returns `true` because the <xref:System.Net.PeerToPeer.PnrpPermission.Union%2A> of two empty permissions is an empty permission.</span></span>
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d18e8-154">Der Zielparameter ist kein <see langword="null" />-Verweis (<see langword="Nothing" /> in Visual Basic) und keine Instanz der Klasse der aktuellen Berechtigung.</span><span class="sxs-lookup"><span data-stu-id="d18e8-154">The target parameter is not a <see langword="null" /> reference (<see langword="Nothing" /> in Visual Basic) and is not an instance of the same class as the current permission.</span></span></exception>
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.FromXml(System.Security.SecurityElement)" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Intersect(System.Security.IPermission)" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.ToXml" />
      </Docs>
    </Member>
    <Member MemberName="IsUnrestricted">
      <MemberSignature Language="C#" Value="public bool IsUnrestricted ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsUnrestricted() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PnrpPermission.IsUnrestricted" />
      <MemberSignature Language="VB.NET" Value="Public Function IsUnrestricted () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsUnrestricted();" />
      <MemberSignature Language="F#" Value="abstract member IsUnrestricted : unit -&gt; bool&#xA;override this.IsUnrestricted : unit -&gt; bool" Usage="pnrpPermission.IsUnrestricted " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.Permissions.IUnrestrictedPermission.IsUnrestricted</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d18e8-155">Gibt einen Wert zurück, der angibt, ob die aktuelle <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> uneingeschränkt ist.</span><span class="sxs-lookup"><span data-stu-id="d18e8-155">Returns a value specifying whether the current <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> is unrestricted.</span></span></summary>
        <returns><span data-ttu-id="d18e8-156"><see langword="true" />, wenn die aktuelle Berechtigung uneingeschränkt ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d18e8-156"><see langword="true" /> if the current permission is unrestricted; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d18e8-157">Eine uneingeschränkte Berechtigung stellt den Zugriff auf alle von der Berechtigung geschützten Ressourcen dar.</span><span class="sxs-lookup"><span data-stu-id="d18e8-157">An unrestricted permission represents access to any and all resources protected by the permission.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Copy" />
        <altmember cref="T:System.Net.PeerToPeer.PnrpPermissionAttribute" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.ToXml" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Union(System.Security.IPermission)" />
      </Docs>
    </Member>
    <Member MemberName="ToXml">
      <MemberSignature Language="C#" Value="public override System.Security.SecurityElement ToXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.SecurityElement ToXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PnrpPermission.ToXml" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToXml () As SecurityElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::SecurityElement ^ ToXml();" />
      <MemberSignature Language="F#" Value="override this.ToXml : unit -&gt; System.Security.SecurityElement" Usage="pnrpPermission.ToXml " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.SecurityElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d18e8-158">Erstellt eine XML-Codierung der <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> und ihres aktuellen Zustands.</span><span class="sxs-lookup"><span data-stu-id="d18e8-158">Creates an XML encoding of the <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> and its current state.</span></span></summary>
        <returns><span data-ttu-id="d18e8-159">Ein <see cref="T:System.Security.SecurityElement" />-Objekt, das eine XML-Codierung der Berechtigung einschließlich aller Zustandsinformationen enthält.</span><span class="sxs-lookup"><span data-stu-id="d18e8-159">A <see cref="T:System.Security.SecurityElement" /> object that contains an XML encoding of the permission, including any state information.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Copy" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.FromXml(System.Security.SecurityElement)" />
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Union (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Union(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PnrpPermission.Union(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Union (target As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Union(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="override this.Union : System.Security.IPermission -&gt; System.Security.IPermission" Usage="pnrpPermission.Union target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="d18e8-160">Eine Berechtigung, die mit der aktuellen Berechtigung kombiniert werden soll.</span><span class="sxs-lookup"><span data-stu-id="d18e8-160">A permission to combine with the current permission.</span></span> <span data-ttu-id="d18e8-161">Sie muss denselben Typ aufweisen wie die aktuelle Berechtigung.</span><span class="sxs-lookup"><span data-stu-id="d18e8-161">It must be of the same type as the current permission.</span></span></param>
        <summary><span data-ttu-id="d18e8-162">Erstellt eine Berechtigung, die die Gesamtmenge der aktuellen <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> und der angegebenen Berechtigung darstellt.</span><span class="sxs-lookup"><span data-stu-id="d18e8-162">Creates a permission that is the union of the current <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> and the specified permission.</span></span></summary>
        <returns><span data-ttu-id="d18e8-163">Eine neue Berechtigung, die die <see cref="M:System.Net.PeerToPeer.PnrpPermission.Union(System.Security.IPermission)" /> der aktuellen <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> und der angegebenen Berechtigung darstellt.</span><span class="sxs-lookup"><span data-stu-id="d18e8-163">A new permission that represents the <see cref="M:System.Net.PeerToPeer.PnrpPermission.Union(System.Security.IPermission)" /> of the current <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> and the specified permission.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d18e8-164">Das Ergebnis eines <xref:System.Net.PeerToPeer.PnrpPermission.Union%2A> Aufrufes ist eine Berechtigung, die alle Vorgänge darstellt, die durch die aktuelle <xref:System.Net.PeerToPeer.PnrpPermission> und die angegebene Berechtigung dargestellt werden.</span><span class="sxs-lookup"><span data-stu-id="d18e8-164">The result of a call to <xref:System.Net.PeerToPeer.PnrpPermission.Union%2A> is a permission that represents all the operations represented by both the current <xref:System.Net.PeerToPeer.PnrpPermission> and the specified permission.</span></span> <span data-ttu-id="d18e8-165">Jede Anforderung, die eine der beiden Berechtigungen übergibt, übergibt ihre Union.</span><span class="sxs-lookup"><span data-stu-id="d18e8-165">Any demand that passes either permission passes their union.</span></span>  
  
 <span data-ttu-id="d18e8-166">Die folgenden-Anweisungen müssen für alle `true` Implementierungen der Union-Methode sein.</span><span class="sxs-lookup"><span data-stu-id="d18e8-166">The following statements are required to be `true` for all implementations of the Union method.</span></span> <span data-ttu-id="d18e8-167">X und Y stellen <xref:System.Security.IPermission> Objekte dar, die `null` kein Verweis sind`Nothing` (in Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="d18e8-167">X and Y represent <xref:System.Security.IPermission> objects that are not a `null` reference (`Nothing` in Visual Basic).</span></span>  
  
-   <span data-ttu-id="d18e8-168">X. Union (x) gibt ein Objekt zurück, das denselben Wert wie X hat.</span><span class="sxs-lookup"><span data-stu-id="d18e8-168">X.Union(X) returns an object that has the same value as X.</span></span>  
  
-   <span data-ttu-id="d18e8-169">X. Union (Y) gibt ein Objekt zurück, das denselben Wert wie das von Y. Union (X) zurückgegebene Objekt aufweist.</span><span class="sxs-lookup"><span data-stu-id="d18e8-169">X.Union(Y) returns an object that has the same value as the object returned by Y.Union(X).</span></span>  
  
-   <span data-ttu-id="d18e8-170">X. Union (ein `null` Verweis (`Nothing` in Visual Basic)) gibt ein Objekt zurück, das denselben Wert wie X hat.</span><span class="sxs-lookup"><span data-stu-id="d18e8-170">X.Union(a `null` reference (`Nothing` in Visual Basic)) returns an object that has the same value as X.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d18e8-171">Der <paramref name="target" />-Parameter ist ungültig.</span><span class="sxs-lookup"><span data-stu-id="d18e8-171"><paramref name="target" /> parameter is invalid.</span></span></exception>
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Intersect(System.Security.IPermission)" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.IsSubsetOf(System.Security.IPermission)" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.IsUnrestricted" />
      </Docs>
    </Member>
  </Members>
</Type>
