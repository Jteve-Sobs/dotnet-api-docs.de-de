<Type Name="PnrpPermission" FullName="System.Net.PeerToPeer.PnrpPermission">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="179215e22e8729ec4b568d0819a1dc900aa4f90e" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="37477191" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class PnrpPermission : System.Security.CodeAccessPermission, System.Security.Permissions.IUnrestrictedPermission" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit PnrpPermission extends System.Security.CodeAccessPermission implements class System.Security.Permissions.IUnrestrictedPermission" />
  <TypeSignature Language="DocId" Value="T:System.Net.PeerToPeer.PnrpPermission" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class PnrpPermission&#xA;Inherits CodeAccessPermission&#xA;Implements IUnrestrictedPermission" />
  <TypeSignature Language="C++ CLI" Value="public ref class PnrpPermission sealed : System::Security::CodeAccessPermission, System::Security::Permissions::IUnrestrictedPermission" />
  <TypeSignature Language="F#" Value="type PnrpPermission = class&#xA;    inherit CodeAccessPermission&#xA;    interface IUnrestrictedPermission" />
  <AssemblyInfo>
    <AssemblyName>System.Net</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.CodeAccessPermission</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Security.Permissions.IUnrestrictedPermission</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="1314e-101">Gibt die Werte an, die in <see cref="N:System.Net.PeerToPeer" />-Objektberechtigungen verwendet werden.</span>
      <span class="sxs-lookup">
        <span data-stu-id="1314e-101">Specifies the values that are used in <see cref="N:System.Net.PeerToPeer" /> object permissions.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1314e-102">Die Standardberechtigungen können alle lokalen und Intranetanwendungen der Zone auf PNRP-Dienste zugreifen.</span><span class="sxs-lookup"><span data-stu-id="1314e-102">The default permissions allow all local and Intranet zone applications to access PNRP services.</span></span> <span data-ttu-id="1314e-103">Wenn die Standardberechtigungen nicht geändert werden, alle Link-Local- und Site-Local-Anwendungen haben Zugriff auf den Peer-zu-Peer-Dienste, aber globale (Internet)-Anwendungen haben keinen Zugriff.</span><span class="sxs-lookup"><span data-stu-id="1314e-103">If the default permissions are not changed, all link-local and site-local applications have access to Peer-to-Peer services, but global (internet) applications have no access.</span></span>  
  
 <span data-ttu-id="1314e-104">Instanzen dieses Typs können zwei: sie haben entweder keinen Zugriff auf die durch die Berechtigung geschützte Ressourcen, oder sie haben uneingeschränkten Zugriff auf diese Ressourcen.</span><span class="sxs-lookup"><span data-stu-id="1314e-104">Instances of this type have two permission states: they either have no access to the resource(s) protected by the permission, or they have unrestricted full access to those resources.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Copy" />
    <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.FromXml(System.Security.SecurityElement)" />
    <altmember cref="T:System.Net.PeerToPeer.PnrpPermissionAttribute" />
    <altmember cref="N:System.Security.Permissions" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PnrpPermission (System.Security.Permissions.PermissionState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Permissions.PermissionState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PnrpPermission.#ctor(System.Security.Permissions.PermissionState)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (state As PermissionState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PnrpPermission(System::Security::Permissions::PermissionState state);" />
      <MemberSignature Language="F#" Value="new System.Net.PeerToPeer.PnrpPermission : System.Security.Permissions.PermissionState -&gt; System.Net.PeerToPeer.PnrpPermission" Usage="new System.Net.PeerToPeer.PnrpPermission state" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="state" Type="System.Security.Permissions.PermissionState" />
      </Parameters>
      <Docs>
        <param name="state">
          <span data-ttu-id="1314e-105">Einer der Werte in der <see cref="T:System.Security.Permissions.PermissionState" />-Enumeration.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1314e-105">One of the values in the <see cref="T:System.Security.Permissions.PermissionState" /> enumeration.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1314e-106">Initialisiert eine neue Instanz der <see cref="T:System.Net.PeerToPeer.PnrpPermission" />-Klasse mit dem angegebenen anfänglichen Berechtigungszustand.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1314e-106">Initializes a new instance of the <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> class with the supplied initial permission state.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1314e-107">Instanzen dieses Typs können zwei: sie haben entweder keinen Zugriff auf die durch die Berechtigung geschützte Ressourcen, oder sie haben uneingeschränkten Zugriff auf diese Ressourcen.</span><span class="sxs-lookup"><span data-stu-id="1314e-107">Instances of this type have two permission states: they either have no access to the resource(s) protected by the permission, or they have unrestricted full access to those resources.</span></span>  
  
 <span data-ttu-id="1314e-108">Wenn `state` ist uneingeschränkten, übergibt die Instanz PnrpPermission alle Anforderungen erfüllen.</span><span class="sxs-lookup"><span data-stu-id="1314e-108">If `state` is Unrestricted, the PnrpPermission instance passes all demands.</span></span> <span data-ttu-id="1314e-109">Wenn `state` enthält einen anderen Wert, die Instanz PnrpPermission ablehnt.</span><span class="sxs-lookup"><span data-stu-id="1314e-109">If `state` contains any other value, the PnrpPermission instance fails all demands.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Copy" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.IsUnrestricted" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.ToXml" />
        <altmember cref="T:System.Net.PeerToPeer.PnrpPermissionAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PnrpPermission.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Copy () As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Copy();" />
      <MemberSignature Language="F#" Value="abstract member Copy : unit -&gt; System.Security.IPermission&#xA;override this.Copy : unit -&gt; System.Security.IPermission" Usage="pnrpPermission.Copy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1314e-110">Erstellt eine identische Kopie der aktuellen <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> und gibt die Kopie zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1314e-110">Creates and returns an identical copy of the current <see cref="T:System.Net.PeerToPeer.PnrpPermission" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1314e-111">Ein Objekt mit einer IPermission-Schnittstelle, deren Instanz eine Kopie der aktuellen Instanz von <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1314e-111">An object with an IPermission interface, whose instance contains a copy of the current instance of <see cref="T:System.Net.PeerToPeer.PnrpPermission" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1314e-112">Eine Kopie einer Berechtigung stellt den gleichen Zugriff auf Ressourcen wie die ursprüngliche Berechtigung dar.</span><span class="sxs-lookup"><span data-stu-id="1314e-112">A copy of a permission represents the same access to resources as the original permission.</span></span>  
  
 <span data-ttu-id="1314e-113">Instanzen dieses Typs können zwei: sie haben entweder keinen Zugriff auf die durch die Berechtigung geschützte Ressourcen, oder sie haben uneingeschränkten Zugriff auf diese Ressourcen.</span><span class="sxs-lookup"><span data-stu-id="1314e-113">Instances of this type have two permission states: they either have no access to the resource(s) protected by the permission, or they have unrestricted full access to those resources.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1314e-114">–   Der Parameter ist kein gültiges <see cref="T:System.Net.PeerToPeer.PnrpPermission" />-Element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1314e-114">-   The parameter is not a valid <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> element.</span>
          </span>
          <span data-ttu-id="1314e-115">–   Die Versionsnummer des Parameters wird nicht unterstützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1314e-115">-   The parameter's version number is not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1314e-116">Der Parameter ist ein <see langword="null" />-Verweis (<see langword="Nothing" /> in Visual Basic).</span>
          <span class="sxs-lookup">
            <span data-stu-id="1314e-116">The parameter is a <see langword="null" /> reference (<see langword="Nothing" /> in Visual Basic).</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.FromXml(System.Security.SecurityElement)" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.ToXml" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Union(System.Security.IPermission)" />
      </Docs>
    </Member>
    <Member MemberName="FromXml">
      <MemberSignature Language="C#" Value="public override void FromXml (System.Security.SecurityElement e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void FromXml(class System.Security.SecurityElement e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PnrpPermission.FromXml(System.Security.SecurityElement)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub FromXml (e As SecurityElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void FromXml(System::Security::SecurityElement ^ e);" />
      <MemberSignature Language="F#" Value="abstract member FromXml : System.Security.SecurityElement -&gt; unit&#xA;override this.FromXml : System.Security.SecurityElement -&gt; unit" Usage="pnrpPermission.FromXml e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Security.SecurityElement" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="1314e-117">Die XML-Codierung zur Wiederherstellung der Berechtigung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1314e-117">The XML encoding to use to reconstruct the permission.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1314e-118">Stellt ein Sicherheitsobjekt mit einem angegebenen Zustand aus einer XML-Codierung wieder her.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1314e-118">Reconstructs a security object with a specified state from an XML encoding.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1314e-119">Stellt das XML-Objektmodell für die Codierung von Sicherheitsobjekten dar.</span><span class="sxs-lookup"><span data-stu-id="1314e-119">Represents the XML object model for encoding security objects.</span></span> <span data-ttu-id="1314e-120">Diese Klasse kann nicht vererbt werden.</span><span class="sxs-lookup"><span data-stu-id="1314e-120">This class cannot be inherited.</span></span>  
  
 <span data-ttu-id="1314e-121">Diese Klasse ist eine einfache Implementierung einer einfachen XML-Objektmodell für die Verwendung in das Sicherheitssystem, und nicht für die Verwendung als eine allgemeine XML-Objektmodell werden sollen.</span><span class="sxs-lookup"><span data-stu-id="1314e-121">This class is intended to be a lightweight implementation of a simple XML object model for use within the security system, and not for use as a general XML object model.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1314e-122">–   Der Parameter ist kein gültiges <see cref="T:System.Net.PeerToPeer.PnrpPermission" />-Element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1314e-122">-   The parameter is not a valid <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> element.</span>
          </span>
          <span data-ttu-id="1314e-123">–   Die Versionsnummer des Parameters wird nicht unterstützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1314e-123">-   The parameter's version number is not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1314e-124">Der Parameter ist ein <see langword="null" />-Verweis (<see langword="Nothing" /> in Visual Basic).</span>
          <span class="sxs-lookup">
            <span data-stu-id="1314e-124">The parameter is a <see langword="null" /> reference (<see langword="Nothing" /> in Visual Basic).</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Copy" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.ToXml" />
        <altmember cref="T:System.Security.SecurityElement" />
      </Docs>
    </Member>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Intersect (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Intersect(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PnrpPermission.Intersect(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Intersect (target As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Intersect(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="abstract member Intersect : System.Security.IPermission -&gt; System.Security.IPermission&#xA;override this.Intersect : System.Security.IPermission -&gt; System.Security.IPermission" Usage="pnrpPermission.Intersect target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="1314e-125">Eine Berechtigung, deren Schnittmenge mit der aktuellen Berechtigung mithilfe von <see cref="M:System.Net.PeerToPeer.PnrpPermission.Intersect(System.Security.IPermission)" /> gebildet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1314e-125">A permission to <see cref="M:System.Net.PeerToPeer.PnrpPermission.Intersect(System.Security.IPermission)" /> with the current permission.</span>
          </span>
          <span data-ttu-id="1314e-126">Sie muss denselben Typ aufweisen wie die aktuelle Berechtigung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1314e-126">It must be of the same type as the current permission.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1314e-127">Erstellt eine Berechtigung als Schnittmenge der aktuellen <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> und der angegebenen Berechtigung und gibt diese zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1314e-127">Creates and returns a permission that is the intersection of the current <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> and the specified permission.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1314e-128">Eine neue Berechtigung, die die Schnittmenge der aktuellen <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> und der angegebenen Berechtigung darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1314e-128">A new permission that represents the intersection of the current <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> and the specified permission.</span>
          </span>
          <span data-ttu-id="1314e-129">Wenn die Schnittmenge leer ist, ist diese neue Berechtigung ein <see langword="null" />-Verweis (<see langword="Nothing" /> in Visual Basic).</span>
          <span class="sxs-lookup">
            <span data-stu-id="1314e-129">This new permission is a <see langword="null" /> reference (<see langword="Nothing" /> in Visual Basic) if the intersection is empty.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1314e-130">Die Schnittmenge zweier Berechtigungen ist eine Berechtigung, die beschreibt, den Satz von Vorgängen, die beide gemeinsam beschreiben.</span><span class="sxs-lookup"><span data-stu-id="1314e-130">The intersection of two permissions is a permission that describes the set of operations they both describe in common.</span></span> <span data-ttu-id="1314e-131">Nur eine Anforderung, die beide ursprünglichen Berechtigungen erfolgreich durchläuft, wird die Schnittmenge übergeben.</span><span class="sxs-lookup"><span data-stu-id="1314e-131">Only a demand that passes both original permissions will pass the intersection.</span></span>  
  
 <span data-ttu-id="1314e-132">Die folgenden Anweisungen sind erforderlich, um werden `true` für alle Implementierungen der Intersect-Methode.</span><span class="sxs-lookup"><span data-stu-id="1314e-132">The following statements are required to be `true` for all implementations of the Intersect method.</span></span> <span data-ttu-id="1314e-133">Darstellen von X- und Y <xref:System.Security.IPermission> Objektverweise, die keine `null` -Verweis (Nothing in Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="1314e-133">X and Y represent <xref:System.Security.IPermission> object references that are not a `null` reference (Nothing in Visual Basic).</span></span>  
  
-   <span data-ttu-id="1314e-134">X.Intersect(X) gibt einen Wert zurück, der gleich X ist.</span><span class="sxs-lookup"><span data-stu-id="1314e-134">X.Intersect(X) returns a value equal to X.</span></span>  
  
-   <span data-ttu-id="1314e-135">X.Intersect(Y) gibt denselben Wert wie y.Intersect(x) zurück.</span><span class="sxs-lookup"><span data-stu-id="1314e-135">X.Intersect(Y) returns the same value as Y.Intersect(X).</span></span>  
  
-   <span data-ttu-id="1314e-136">X.Intersect (eine `null` Reference (`Nothing` in Visual Basic)) gibt eine `null` Verweis (`Nothing` in Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="1314e-136">X.Intersect(a `null` reference (`Nothing` in Visual Basic)) returns a `null` reference (`Nothing` in Visual Basic).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1314e-137">Der Zielparameter ist kein <see langword="null" />-Verweis (<see langword="Nothing" /> in Visual Basic) und keine Instanz der Klasse der aktuellen Berechtigung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1314e-137">The target parameter is not a <see langword="null" /> reference (<see langword="Nothing" /> in Visual Basic) and is not an instance of the same class as the current permission.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.IsSubsetOf(System.Security.IPermission)" />
        <altmember cref="T:System.Net.PeerToPeer.PnrpPermissionAttribute" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Union(System.Security.IPermission)" />
      </Docs>
    </Member>
    <Member MemberName="IsSubsetOf">
      <MemberSignature Language="C#" Value="public override bool IsSubsetOf (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsSubsetOf(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PnrpPermission.IsSubsetOf(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsSubsetOf (target As IPermission) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsSubsetOf(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="abstract member IsSubsetOf : System.Security.IPermission -&gt; bool&#xA;override this.IsSubsetOf : System.Security.IPermission -&gt; bool" Usage="pnrpPermission.IsSubsetOf target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="1314e-138">Eine Berechtigung, die auf die Teilmengenbeziehung geprüft werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1314e-138">A permission that is to be tested for the subset relationship.</span>
          </span>
          <span data-ttu-id="1314e-139">Diese Berechtigung muss denselben Typ aufweisen wie die aktuelle Berechtigung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1314e-139">This permission must be of the same type as the current permission.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1314e-140">Bestimmt, ob die aktuelle <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> eine Teilmenge der angegebenen Berechtigung ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1314e-140">Determines whether the current <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> is a subset of the specified permission.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1314e-141">
            <see langword="True" />, wenn die aktuelle <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> eine Teilmenge der angegebenen Berechtigung ist, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1314e-141">
              <see langword="True" /> if the current <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> is a subset of the specified permission; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1314e-142">Die aktuelle <xref:System.Net.PeerToPeer.PnrpPermission> eine Teilmenge der angegebenen Berechtigung ist, wenn die aktuelle Berechtigung eine Reihe von Vorgängen angibt, die vollständig in die angegebene Berechtigung enthalten ist.</span><span class="sxs-lookup"><span data-stu-id="1314e-142">The current <xref:System.Net.PeerToPeer.PnrpPermission> is a subset of the specified permission if the current permission specifies a set of operations that is wholly contained by the specified permission.</span></span> <span data-ttu-id="1314e-143">Z. B. eine Berechtigung an, den Zugriff auf darstellt "*C:\example.txt*"ist eine Teilmenge der eine Berechtigung, den Zugriff auf darstellt"*C:\\*".</span><span class="sxs-lookup"><span data-stu-id="1314e-143">For example, a permission that represents access to "*C:\example.txt*" is a subset of a permission that represents access to "*C:\\*".</span></span> <span data-ttu-id="1314e-144">Wenn diese Methode zurückgibt `true`, die aktuelle Berechtigung stellt keine umfassenderen Zugriff auf die geschützte Ressource als die angegebene Berechtigung.</span><span class="sxs-lookup"><span data-stu-id="1314e-144">If this method returns `true`, the current permission represents no more access to the protected resource than does the specified permission.</span></span>  
  
 <span data-ttu-id="1314e-145">Die folgenden Anweisungen sind erforderlich, um werden `true` für alle Implementierungen der IsSubsetOf-Methode.</span><span class="sxs-lookup"><span data-stu-id="1314e-145">The following statements are required to be `true` for all implementations of the IsSubsetOf method.</span></span> <span data-ttu-id="1314e-146">Darstellen von X, Y und Z <xref:System.Security.IPermission> Objekte, die keinem `null` Verweis (`Nothing` in Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="1314e-146">X, Y, and Z represent <xref:System.Security.IPermission> objects that are not a `null` reference (`Nothing` in Visual Basic).</span></span>  
  
-   <span data-ttu-id="1314e-147">Gibt zurück, X.IsSubsetOf(X) `true`.</span><span class="sxs-lookup"><span data-stu-id="1314e-147">X.IsSubsetOf(X) returns `true`.</span></span>  
  
-   <span data-ttu-id="1314e-148">X.IsSubsetOf(Y) gibt denselben Wert wie Y.IsSubsetOf(X) zurück, wenn X und Y den gleichen Satz von Berechtigungen darstellen.</span><span class="sxs-lookup"><span data-stu-id="1314e-148">X.IsSubsetOf(Y) returns the same value as Y.IsSubsetOf(X) if and only if X and Y represent the same set of permissions.</span></span>  
  
-   <span data-ttu-id="1314e-149">Wenn beide X.IsSubsetOf(Y) und Y.IsSubsetOf(Z) zurückgeben `true`, X.IsSubsetOf(Z) gibt `true`.</span><span class="sxs-lookup"><span data-stu-id="1314e-149">If X.IsSubsetOf(Y) and Y.IsSubsetOf(Z) both return `true`, X.IsSubsetOf(Z) returns `true`.</span></span>  
  
-  
  
 <span data-ttu-id="1314e-150">Wenn X steht für ein leeres IPermission-Objekt mit einem Berechtigungszustand von *keine* und Y stellt ein IPermission-Objekt, das eine `null` Verweis (`Nothing` in Visual Basic), gibt X.IsSubsetOf(Y) `true`.</span><span class="sxs-lookup"><span data-stu-id="1314e-150">If X represents an empty IPermission object with a permission state of *None* and Y represents an IPermission object that is a `null` reference (`Nothing` in Visual Basic), X.IsSubsetOf(Y) returns `true`.</span></span> <span data-ttu-id="1314e-151">Wenn Z auch eine leere Berechtigung ist, Festlegen der zusammengesetzte X.Union(Z). IsSubsetOf(Y) zurück, die auch `true` da die <xref:System.Net.PeerToPeer.PnrpPermission.Union%2A> von zwei leeren Berechtigungen ist eine leere Berechtigung.</span><span class="sxs-lookup"><span data-stu-id="1314e-151">If Z is also an empty permission, the compound set operation X.Union(Z).IsSubsetOf(Y) also returns `true` because the <xref:System.Net.PeerToPeer.PnrpPermission.Union%2A> of two empty permissions is an empty permission.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1314e-152">Der Zielparameter ist kein <see langword="null" />-Verweis (<see langword="Nothing" /> in Visual Basic) und keine Instanz der Klasse der aktuellen Berechtigung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1314e-152">The target parameter is not a <see langword="null" /> reference (<see langword="Nothing" /> in Visual Basic) and is not an instance of the same class as the current permission.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.FromXml(System.Security.SecurityElement)" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Intersect(System.Security.IPermission)" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.ToXml" />
      </Docs>
    </Member>
    <Member MemberName="IsUnrestricted">
      <MemberSignature Language="C#" Value="public bool IsUnrestricted ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsUnrestricted() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PnrpPermission.IsUnrestricted" />
      <MemberSignature Language="VB.NET" Value="Public Function IsUnrestricted () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsUnrestricted();" />
      <MemberSignature Language="F#" Value="abstract member IsUnrestricted : unit -&gt; bool&#xA;override this.IsUnrestricted : unit -&gt; bool" Usage="pnrpPermission.IsUnrestricted " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1314e-153">Gibt einen Wert zurück, der angibt, ob die aktuelle <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> uneingeschränkt ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1314e-153">Returns a value specifying whether the current <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> is unrestricted.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1314e-154">
            <see langword="True" />, wenn die aktuelle Berechtigung uneingeschränkt ist, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1314e-154">
              <see langword="True" /> if the current permission is unrestricted; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1314e-155">Eine uneingeschränkte Berechtigung stellt den Zugriff auf allen Ressourcen, die durch die Berechtigung geschützte dar.</span><span class="sxs-lookup"><span data-stu-id="1314e-155">An unrestricted permission represents access to any and all resources protected by the permission.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Copy" />
        <altmember cref="T:System.Net.PeerToPeer.PnrpPermissionAttribute" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.ToXml" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Union(System.Security.IPermission)" />
      </Docs>
    </Member>
    <Member MemberName="ToXml">
      <MemberSignature Language="C#" Value="public override System.Security.SecurityElement ToXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.SecurityElement ToXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PnrpPermission.ToXml" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToXml () As SecurityElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::SecurityElement ^ ToXml();" />
      <MemberSignature Language="F#" Value="abstract member ToXml : unit -&gt; System.Security.SecurityElement&#xA;override this.ToXml : unit -&gt; System.Security.SecurityElement" Usage="pnrpPermission.ToXml " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.SecurityElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1314e-156">Erstellt eine XML-Codierung der <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> und ihres aktuellen Zustands.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1314e-156">Creates an XML encoding of the <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> and its current state.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1314e-157">Ein <see cref="T:System.Security.SecurityElement" />-Objekt, das eine XML-Codierung der Berechtigung einschließlich aller Zustandsinformationen enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1314e-157">A <see cref="T:System.Security.SecurityElement" /> object that contains an XML encoding of the permission, including any state information.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Copy" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.FromXml(System.Security.SecurityElement)" />
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Union (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Union(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PnrpPermission.Union(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Union (target As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Union(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="abstract member Union : System.Security.IPermission -&gt; System.Security.IPermission&#xA;override this.Union : System.Security.IPermission -&gt; System.Security.IPermission" Usage="pnrpPermission.Union target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="1314e-158">Eine Berechtigung, die mit der aktuellen Berechtigung kombiniert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1314e-158">A permission to combine with the current permission.</span>
          </span>
          <span data-ttu-id="1314e-159">Sie muss denselben Typ aufweisen wie die aktuelle Berechtigung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1314e-159">It must be of the same type as the current permission.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1314e-160">Erstellt eine Berechtigung, die die Gesamtmenge der aktuellen <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> und der angegebenen Berechtigung darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1314e-160">Creates a permission that is the union of the current <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> and the specified permission.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1314e-161">Eine neue Berechtigung, die die <see cref="M:System.Net.PeerToPeer.PnrpPermission.Union(System.Security.IPermission)" /> der aktuellen <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> und der angegebenen Berechtigung darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1314e-161">A new permission that represents the <see cref="M:System.Net.PeerToPeer.PnrpPermission.Union(System.Security.IPermission)" /> of the current <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> and the specified permission.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1314e-162">Das Ergebnis eines Aufrufs von <xref:System.Net.PeerToPeer.PnrpPermission.Union%2A> ist eine Berechtigung, alle Vorgänge, die vom aktuellen beide darstellt <xref:System.Net.PeerToPeer.PnrpPermission> und der angegebenen Berechtigung.</span><span class="sxs-lookup"><span data-stu-id="1314e-162">The result of a call to <xref:System.Net.PeerToPeer.PnrpPermission.Union%2A> is a permission that represents all the operations represented by both the current <xref:System.Net.PeerToPeer.PnrpPermission> and the specified permission.</span></span> <span data-ttu-id="1314e-163">Jede Anforderung, entweder die Berechtigung durchläuft, übergibt die Union.</span><span class="sxs-lookup"><span data-stu-id="1314e-163">Any demand that passes either permission passes their union.</span></span>  
  
 <span data-ttu-id="1314e-164">Die folgenden Anweisungen sind erforderlich, um werden `true` für alle Implementierungen der Union-Methode.</span><span class="sxs-lookup"><span data-stu-id="1314e-164">The following statements are required to be `true` for all implementations of the Union method.</span></span> <span data-ttu-id="1314e-165">Darstellen von X- und Y <xref:System.Security.IPermission> Objekte, die keine `null` Verweis (`Nothing` in Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="1314e-165">X and Y represent <xref:System.Security.IPermission> objects that are not a `null` reference (`Nothing` in Visual Basic).</span></span>  
  
-   <span data-ttu-id="1314e-166">X.Union(X) gibt ein Objekt mit den gleichen Wert wie X zurück.</span><span class="sxs-lookup"><span data-stu-id="1314e-166">X.Union(X) returns an object that has the same value as X.</span></span>  
  
-   <span data-ttu-id="1314e-167">X.Union(Y) gibt ein Objekt, das den gleichen Wert wie das Objekt, das von Y.Union(X) zurückgegeben hat.</span><span class="sxs-lookup"><span data-stu-id="1314e-167">X.Union(Y) returns an object that has the same value as the object returned by Y.Union(X).</span></span>  
  
-   <span data-ttu-id="1314e-168">X.Union (eine `null` Reference (`Nothing` in Visual Basic)) gibt ein Objekt, das den gleichen Wert wie X hat.</span><span class="sxs-lookup"><span data-stu-id="1314e-168">X.Union(a `null` reference (`Nothing` in Visual Basic)) returns an object that has the same value as X.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1314e-169">Der <paramref name="target" />-Parameter ist ungültig.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1314e-169">
              <paramref name="target" /> parameter is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Intersect(System.Security.IPermission)" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.IsSubsetOf(System.Security.IPermission)" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.IsUnrestricted" />
      </Docs>
    </Member>
  </Members>
</Type>