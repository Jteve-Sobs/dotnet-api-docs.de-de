<Type Name="PeerNameRegistration" FullName="System.Net.PeerToPeer.PeerNameRegistration">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7cd8457b2e09ced1cfe602c70df106251aec2f71" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30460904" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class PeerNameRegistration : IDisposable, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable PeerNameRegistration extends System.Object implements class System.IDisposable, class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Net.PeerToPeer.PeerNameRegistration" />
  <TypeSignature Language="VB.NET" Value="Public Class PeerNameRegistration&#xA;Implements IDisposable, ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class PeerNameRegistration : IDisposable, System::Runtime::Serialization::ISerializable" />
  <AssemblyInfo>
    <AssemblyName>System.Net</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Registriert einen <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> in einer <see cref="T:System.Net.PeerToPeer.Cloud" /> oder in einem Satz von Wolken.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Registrierung erstellt (oder aktualisiert) alle Informationen, die zugeordnet ist eine <xref:System.Net.PeerToPeer.PeerName> in einer Peer-Cloud oder Clouds.  
  
 Es ist möglich, mehrere <xref:System.Net.PeerToPeer.PeerNameRegistration> Objekte für den gleichen Peernamen. In diesem Fall, wenn der Name des Peers, gesichert ist, jede Instanz stellt <xref:System.Net.PeerToPeer.PeerNameRegistration> in eine andere Cloud. Jedoch, wenn der Name des Peers nicht gesichert ist, kann es in der gleichen Cloud mehrmals registriert werden bereitstellen, dass jede Registrierung aus einem anderen Prozess ist.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" />-Klasse.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PeerNameRegistration ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PeerNameRegistration();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Standardinstanz der <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gibt eine neue Standardinstanz des Typs <xref:System.Net.PeerToPeer.PeerNameRegistration>. Es führt keine Peer-namensregistrierung während der Erstellung.  
  
 Nach dem Instanziieren ein Objekt mit diesem Konstruktor, sollte der Aufrufer die entsprechenden Felder in der Instanz vor dem Aufruf füllen <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A> oder <xref:System.Net.PeerToPeer.PeerNameRegistration.Stop%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PeerNameRegistration (System.Net.PeerToPeer.PeerName name, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.PeerToPeer.PeerName name, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As PeerName, port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PeerNameRegistration(System::Net::PeerToPeer::PeerName ^ name, int port);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="name">Das zu registrierende <see cref="T:System.Net.PeerToPeer.PeerName" />-Objekt.</param>
        <param name="port">Integer-Wert, der die zu registrierende Portnummer angibt.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" />-Klasse mit dem angegebenen Namen und der angegebenen Portnummer.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aufrufen des Konstruktors erstellt eine Instanz, die verwendet wird, um alle Quell-Adressen (sowohl IPv4-IPv6and) zu registrieren und den angegebenen Port für alle Clouds, die in der derzeit der Peer enthalten ist.  Wenn das Objekt erfolgreich erstellt wird das angegebene <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A> und <xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A> werden aufgefüllt.  
  
 Wenn der Name des Peers gesichert ist und zuvor, in registriert wurde einer <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A> Peers aktuell teilnimmt, eine <xref:System.Net.PeerToPeer.PeerToPeerException> ausgelöst wird.  
  
 Dieser Konstruktor erstellt nur eine <xref:System.Net.PeerToPeer.PeerNameRegistration> -Instanz die Registrierung wird nicht ausgeführt. Nach dem Instanziieren des Registrierungsobjekts mit diesem Konstruktor und dem Auffüllen der Felder muss die Anwendung aufrufen <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A> auf die eigentliche Registrierung durchzuführen.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="name" />-Parameter darf nicht <see langword="null" /> sein.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Die angegebene Portnummer ist kleiner als 0 (null).  Portnummern müssen größer oder gleich 0 (null) und kleiner als 65.535 (0xFFFF) sein.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">-   Der angegebene <see cref="T:System.Net.PeerToPeer.PeerName" /> wurde bereits auf diesem Host registriert.  
  
-   Der Remotepeer besitzt nicht die <see cref="P:System.Net.PeerToPeer.PeerName.Authority" /> für das angegebene <see cref="T:System.Net.PeerToPeer.PeerName" />-Objekt.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PeerNameRegistration (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PeerNameRegistration(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">Verweis auf das Objekt, das die zum Deserialisieren dieser Instanz benötigten Daten enthält.</param>
        <param name="context">Kontext, der das Deserialisieren der Daten ermöglicht. Auch als Quelle der serialisierten Daten bezeichnet.</param>
        <summary>Initialisiert ein neues serialisierbares <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" />-Objekt.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="N:System.Runtime.Serialization" />
        <altmember cref="T:System.Runtime.Serialization.StreamingContext" />
        <altmember cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PeerNameRegistration (System.Net.PeerToPeer.PeerName name, int port, System.Net.PeerToPeer.Cloud cloud);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.PeerToPeer.PeerName name, int32 port, class System.Net.PeerToPeer.Cloud cloud) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32,System.Net.PeerToPeer.Cloud)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PeerNameRegistration(System::Net::PeerToPeer::PeerName ^ name, int port, System::Net::PeerToPeer::Cloud ^ cloud);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="port" Type="System.Int32" />
        <Parameter Name="cloud" Type="System.Net.PeerToPeer.Cloud" />
      </Parameters>
      <Docs>
        <param name="name">Das zu registrierende <see cref="T:System.Net.PeerToPeer.PeerName" />-Objekt.</param>
        <param name="port">Integer-Wert, der die zu registrierende Portnummer angibt.</param>
        <param name="cloud">
          <see cref="T:System.Net.PeerToPeer.Cloud" />, wo der Peername registriert werden soll.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" />-Klasse mit Peernamen, Portnummer und <see cref="T:System.Net.PeerToPeer.Cloud" /> laut Angabe.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aufrufen des Konstruktors erstellt eine Instanz, mit der alle Quelladressen (sowohl IPv6 und IPv4), der bereitgestellte Anschluss und dem angegebenen registrieren <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A>.  Die Eigenschaften werden aufgefüllt, wenn das Objekt erfolgreich erstellt wird, mit dem angegebenen <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A>, <xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A> und <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A>.  
  
 Wenn der Cloud-Parameter ist `null`, der Name wird registriert, mit der <xref:System.Net.PeerToPeer.Cloud.Available> Verknüpfung, die Standardwerte für initialisiert die <xref:System.Net.PeerToPeer.Cloud.Name%2A>, <xref:System.Net.PeerToPeer.Cloud.Scope%2A>, und <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A>.  
  
 Nach der Instanziierung der <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A> Methode muss aufgerufen werden, um die Registrierung der <xref:System.Net.PeerToPeer.PeerName>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="name" />-Parameter darf nicht <see langword="null" /> sein.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Die angegebene Portnummer ist kleiner als 0 (null).  Portnummern müssen größer oder gleich 0 (null) und kleiner als 65.535 (0xFFFF) sein.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">-   Der angegebene <see cref="T:System.Net.PeerToPeer.PeerName" /> wurde bereits auf diesem Host registriert.  
  
-   Der Remotepeer besitzt nicht die <see cref="P:System.Net.PeerToPeer.PeerName.Authority" /> für das angegebene <see cref="T:System.Net.PeerToPeer.PeerName" />-Objekt.</exception>
      </Docs>
    </Member>
    <Member MemberName="Cloud">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.Cloud Cloud { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.PeerToPeer.Cloud Cloud" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" />
      <MemberSignature Language="VB.NET" Value="Public Property Cloud As Cloud" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::PeerToPeer::Cloud ^ Cloud { System::Net::PeerToPeer::Cloud ^ get(); void set(System::Net::PeerToPeer::Cloud ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Cloud</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft Informationen in einer <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" /> ab, in der dieses <see cref="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" />-Objekt registriert wird, oder legt diese fest.</summary>
        <value>Ein Objekt vom Typ <see cref="T:System.Net.PeerToPeer.Cloud" />, das die Peerwolke angibt, für die diese Registrierung definiert ist. Diese Eigenschaft ist standardmäßig auf <see langword="null" /> festgelegt.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Comment">
      <MemberSignature Language="C#" Value="public string Comment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Comment" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.PeerNameRegistration.Comment" />
      <MemberSignature Language="VB.NET" Value="Public Property Comment As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Comment { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft zusätzliche Informationen über das <see cref="T:System.Net.PeerToPeer.PeerName" />-Objekt ab, das bei der <see cref="T:System.Net.PeerToPeer.Cloud" /> registriert wird, oder legt diese fest.</summary>
        <value>Der Kommentar, der zusätzliche Informationen über den <see cref="T:System.Net.PeerToPeer.PeerName" /> enthält, der der <see cref="T:System.Net.PeerToPeer.Cloud" /> zugeordnet werden soll. Diese Eigenschaft ist standardmäßig auf <see langword="null" /> festgelegt.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">Der angegebene Zeichenfolgenwert ist größer als 39 Unicode-Zeichen.</exception>
      </Docs>
    </Member>
    <Member MemberName="Data">
      <MemberSignature Language="C#" Value="public byte[] Data { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] Data" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.PeerNameRegistration.Data" />
      <MemberSignature Language="VB.NET" Value="Public Property Data As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ Data { cli::array &lt;System::Byte&gt; ^ get(); void set(cli::array &lt;System::Byte&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft anwendungsdefinierte Binärdaten für das <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" />-Objekt ab oder legt diese fest.</summary>
        <value>Ein Bytearray mit den dem Eintrag zugeordneten Binärdaten. Diese Eigenschaft ist standardmäßig auf <see langword="null" /> festgelegt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die maximale Menge an <xref:System.Net.PeerToPeer.PeerNameRegistration.Data%2A> , so angegeben werden, beträgt 4.096 Bytes.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Die angegebenen <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Data" /> sind größer als 4096 Bytes.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Gibt die vom <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" />-Objekt verwendeten Ressourcen frei.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn ein Peer verlässt eine <xref:System.Net.PeerToPeer.Cloud>, die Cloud ist nicht mehr erforderlich die <xref:System.Net.PeerToPeer.PeerNameRegistration> Objekt, das mit dem Peer zugeordnet.  Gibt an, ob das Registrierungsobjekt angehalten oder freigegeben wird ist abhängig davon, ob die Cloud das Objekt zum Registrieren dieser Peer oder ein anderer Peer wiederverwendet. Wenn alle anderen Endpunkte in der Registrierungsobjekt, das mit dem der Peerhost erwartet, dass die Kommunikation sind, muss diese Endpunkte in der Cloud registriert vor dem Beenden oder löschen, mit der dieses Objekt erfolgen.  
  
 Wenn die Cloud erwartet wird, um weitere Peers registriert die <xref:System.Net.PeerToPeer.PeerNameRegistration.Stop%2A> Methode wird empfohlen, wenn die Cloud nicht mehr Arbeitsspeicher benötigt, sollte es an das Betriebssystem über zurückgegeben werden die <xref:System.Net.PeerToPeer.PeerNameRegistration.Dispose%2A> Methode.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt alle vom <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" />-Objekt verwendeten Ressourcen frei.</summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="usage">
          <para>Rufen Sie immer die Dispose-Methode vor der Zerstörung der <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> Objekt.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <see langword="True" />, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben, <see langword="false" />, um ausschließlich nicht verwaltete Ressourcen freizugeben.</param>
        <summary>Gibt die vom <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" />-Objekt verwendeten nicht verwalteten Ressourcen und optional die verwalteten Ressourcen frei.</summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="usage">
          <para>Rufen Sie immer die Dispose-Methode vor der Freigabe des letzten Verweis auf die <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> Objekt.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="EndPointCollection">
      <MemberSignature Language="C#" Value="public System.Net.IPEndPointCollection EndPointCollection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.IPEndPointCollection EndPointCollection" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EndPointCollection As IPEndPointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::IPEndPointCollection ^ EndPointCollection { System::Net::IPEndPointCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IPEndPointCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Auflistung von Netzwerkendpunkten ab, für die der zugeordnete Peername registriert wird.</summary>
        <value>Ein <see cref="P:System.Net.PeerToPeer.PeerNameRecord.EndPointCollection" />-Objekt, das die Netzwerkendpunkte enthält, für die der zugeordnete Peername registriert wird. Sofern nicht ausdrücklich angegeben, ist für Referenztypen der Standardwert aller Eigenschaften <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In der <xref:System.Net> Namespace, eine <xref:System.Net.IPEndPoint> stellt einen Netzwerkendpunkt als eine IP-Adresse und einer Portnummer dar.  Für jeden Endpunkt muss für PNRP ein IP-Adresse und Port-Wert angegeben werden.  Die maximale Anzahl von Endpunkten, die bereitgestellt werden kann, ist 10. Automatische Auswahl wird verwendet, wenn dieser Parameter ist `null`.  
  
 Wenn eine Registrierungsmethode, die die verwendet wird zu registrierenden Adressen automatisch auswählt, gibt es jedoch keine Methode möglich zu bestimmen, für die der Name des Peers registriert wurde.  D. h. die <xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A> Eigenschaft werden nicht aktualisiert werden, um den ausgewählten Adressen.  
  
 Wenn eine PeerName für mehrere Knoten registriert wird jede <xref:System.Net.PeerToPeer.PeerNameRegistration> unterscheidet und das <xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A> für jede Registrierungsinstanz definierte Eigenschaft unterscheiden. Auch wenn eine <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A> ist in mehr als eine registriert <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A>, unterscheidet sich jede Registrierung und die Auflistung von Endpunkten wird in der Regel für jede Instanz unterschiedlich sein.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <para>Die Liste der Endpunkte, mit denen dieser Peer kommuniziert, ist nicht identisch mit der Liste der Endpunkte, die unter denen dieser Peername bekannt ist, die anders gespeichert ist.</para>
        </block>
        <altmember cref="T:System.Net.IPEndPointCollection" />
        <altmember cref="P:System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection" />
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="protected virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">Enthält die serialisierten Daten, die dem <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" />-Objekt zugeordnet sind.</param>
        <param name="context">Enthält das Ziel für den serialisierten Datenstrom, der dem <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" />-Objekt zugeordnet ist.</param>
        <summary>Füllt ein Serialisierungsinformationsobjekt mit den Daten, die zum Serialisieren der <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" />-Instanz erforderlich sind.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsRegistered">
      <MemberSignature Language="C#" Value="public bool IsRegistered ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsRegistered() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.IsRegistered" />
      <MemberSignature Language="VB.NET" Value="Public Function IsRegistered () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsRegistered();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft ab oder legt fest, ob der in der <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" />-Eigenschaft angegebene Peername bei einer bestimmten <see cref="T:System.Net.PeerToPeer.Cloud" /> auf einem Host registriert ist.</summary>
        <returns>Wenn der Wert <see langword="true" /> ist, wird der Peername bei einer <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" /> für den Peerhost registriert. Wenn der Wert <see langword="false" /> ist, kann die Registrierung mit <see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Start" /> gestartet werden.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">Ein Objekt, das bereits freigegeben wurde, kann nicht registriert werden.</exception>
        <altmember cref="T:System.Net.PeerToPeer.PeerNameResolver" />
      </Docs>
    </Member>
    <Member MemberName="PeerName">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.PeerName PeerName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.PeerToPeer.PeerName PeerName" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" />
      <MemberSignature Language="VB.NET" Value="Public Property PeerName As PeerName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::PeerToPeer::PeerName ^ PeerName { System::Net::PeerToPeer::PeerName ^ get(); void set(System::Net::PeerToPeer::PeerName ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.PeerName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Peernamen ab, der bei einer Peerwolke registriert werden soll, oder legt diesen fest.</summary>
        <value>Ein Objekt vom Typ <see cref="T:System.Net.PeerToPeer.PeerName" />, das diesem <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" />-Objekt zugeordnete Werte enthält. Sofern nicht ausdrücklich angegeben, ist für Referenztypen der Standardwert aller Eigenschaften <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein PeerName kann für mehrere Knoten registriert werden; Jede <xref:System.Net.PeerToPeer.PeerNameRegistration> Instanz unterscheidet. Die <xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A> Eigenschaft zugeordnet, die jeweils entsprechenden <xref:System.Net.PeerToPeer.PeerName> Instanz unterscheidet. Darüber hinaus ist es möglich, eine PeerName für mehrere Clouds zu registrieren, die die Knoten verbunden ist; Jede dieser Registrierungen unterscheidet. Name des Peers <xref:System.Net.IPEndPointCollection> unterscheiden sich in jede dieser Instanzen.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.PeerToPeer.PeerName.CreateFromPeerHostName(System.String)" />
        <altmember cref="M:System.Net.PeerToPeer.PeerName.CreateRelativePeerName(System.Net.PeerToPeer.PeerName,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Port">
      <MemberSignature Language="C#" Value="public int Port { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Port" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.PeerNameRegistration.Port" />
      <MemberSignature Language="VB.NET" Value="Public Property Port As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Port { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die [TCP/IP](http://go.microsoft.com/fwlink?LinkID=98458)-Anschlussnummer ab, die von dem im <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" />-Objekt registrierten Peer verwendet wird, oder legt diese fest.</summary>
        <value>Ein Ganzzahlwert, der die TCP-Anschlussnummer des <see cref="T:System.Net.IPEndPoint" /> angibt. Sofern nicht ausdrücklich angegeben, ist der Standardwert für diese Eigenschaft 0 (null).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Standardport verwendet wird, durch die <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A> Methode, nur, wenn keine Endpunkte angegeben sind.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Der angegebene Anschlusswert ist kleiner als 0 (null).  Portnummern müssen größer oder gleich 0 (null) und kleiner als 65.535 (0xFFFF) sein.</exception>
        <altmember cref="M:System.Net.PeerToPeer.PeerName.CreateRelativePeerName(System.Net.PeerToPeer.PeerName,System.String)" />
        <altmember cref="P:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection" />
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public void Start ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Start() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.Start" />
      <MemberSignature Language="VB.NET" Value="Public Sub Start ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Start();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Registriert den <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> in der <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" />. Wenn keine <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection" /> angegeben ist, wird die automatische Adressauswahl mit dem durch die <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Port" />-Eigenschaft angegebenen Portwert verwendet.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Methode registriert den Peernamen, die im angegebenen der <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A> Eigenschaft mit dem alle Quelladressen und die <xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A> im Konstruktor angegeben. Der Standardport ist von dieser Methode verwendet nur, wenn keine Endpunkte angegeben sind.  
  
 Wenn die <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A> Eigenschaft ist `null`, diese Methode registriert, der Name des Peers, angegeben der <xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A> Eigenschaft mit der <xref:System.Net.PeerToPeer.Cloud.Available> Feld, das Standardwerte für initialisiert die <xref:System.Net.PeerToPeer.Cloud.Name%2A>, <xref:System.Net.PeerToPeer.Cloud.Scope%2A>, und <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A>.  
  
 Nach einem <xref:System.Net.PeerToPeer.PeerNameRegistration> Objekt gestartet wurde, die <xref:System.Net.PeerToPeer.PeerNameRegistration.Stop%2A> Methode wird verwendet, um ihn zu beenden.  
  
 Zum Aktualisieren einer Registrierung der <xref:System.Net.PeerToPeer.PeerNameRegistration.Update%2A> Methode muss verwendet werden.  
  
   
  
## Examples  
 Das folgende Codebeispiel erstellt eine <xref:System.Net.PeerToPeer.PeerName> und registriert ihn zusammen mit den angegebenen Metadaten.  
  
 [!code-csharp[NCLPNRPRegisterPeerName#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPNRPRegisterPeerName/CS/RegisterPeerName.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Die <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" />-Eigenschaft ist auf <see langword="null" /> festgelegt.</exception>
        <exception cref="T:System.ObjectDisposedException">Für dieses Objekt wurde „Dispose()“ bereits aufgerufen.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">-   Der angegebene <see cref="T:System.Net.PeerToPeer.PeerName" /> wurde bereits registriert. Die <see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Update" />-Methode muss zum Aktualisieren einer Registrierung verwendet werden.  
  
-   Der Remotepeer besitzt nicht die <see cref="P:System.Net.PeerToPeer.PeerName.Authority" /> für den angegebenen <see cref="T:System.Net.PeerToPeer.PeerName" />.  
  
-   Entweder ist der <see cref="T:System.Net.PeerToPeer.PeerName" /> oder sind die <see cref="P:System.Net.PeerToPeer.PeerNameRecord.Data" /> nicht angegeben; mindestens eines muss angegeben werden.  
  
-   Die Nachrichten- oder Datenelemente sind ungültig. Oder <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection" /> ist nicht festgelegt, und weder ein Datenblob noch ein <see cref="T:System.Net.IPEndPoint" /> ist angegeben.</exception>
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.Stop" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Hebt die Registrierung des in der <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" />-Eigenschaft angegebenen Peernamens in allen Clouds auf, in denen er registriert wurde.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nachdem der Registrierungsprozess beendet wurde, entspricht des Zustands des Registrierungsobjekts in den Zustand direkt nach der vom Standardkonstruktor erstellt wird. In diesem Zustand werden alle zugehörigen Eigenschaften davon ausgegangen, dass kein Wert vorhanden. Die <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A> Methode kann verwendet werden, um ihn neu zu starten.  
  
 Es ist möglich, mehrere Registrierungsobjekte für Peernamen haben.  In einem solchen Fall, wenn der Name des Peers, gesichert ist, stellt jede Instanz eine Registrierung in einer anderen PNRP-Wolke dar.  Jedoch, wenn der Name des Peers nicht gesichert ist, kann es in der gleichen Cloud mehrmals registriert werden.  
  
 Wenn diese Instanz bereits beendet wurde, hat das Aufrufen dieser Methode keine Auswirkung.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Die <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" />-Eigenschaft wurde noch nicht registriert. Dies tritt auf, wenn ein <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" />-Objekt mit dem leeren Konstruktor erstellt wird. Die <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" />-Eigenschaft muss in dieser Instanz vor dem Aufruf von <see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Start" /> aufgefüllt werden.</exception>
        <exception cref="T:System.ObjectDisposedException">Für dieses Objekt wurde „Dispose()“ bereits aufgerufen.</exception>
        <altmember cref="M:System.Net.PeerToPeer.PeerNameRegistration.Update" />
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (info As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">Enthält die serialisierten Daten, die der <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" />-Instanz zugeordnet sind.</param>
        <param name="context">Enthält das Ziel für den serialisierten Datenstrom, der der <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" />-Instanz zugeordnet ist.</param>
        <summary>Implementiert die <see cref="T:System.Runtime.Serialization.ISerializable" />-Schnittstelle und gibt die zum Serialisieren der <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" />-Instanz erforderlichen Daten zurück.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public void Update ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Update() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.Update" />
      <MemberSignature Language="VB.NET" Value="Public Sub Update ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Update();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Aktualisiert die <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> für einen Knoten, der in einem bestimmten <see cref="T:System.Net.PeerToPeer.Cloud" /> registriert ist. Das Update erfolgt mithilfe der in den Eigenschaften angegebenen Informationen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Alle Informationen, die in Wolken registriert ist, dafür <xref:System.Net.PeerToPeer.PeerName> vor dem Aufruf vollständig verworfen wird.  Die neuen Daten ist nicht mit der vorhandenen Registrierung kombiniert.  Beim Aktualisieren einer <xref:System.Net.PeerToPeer.PeerNameRegistration>, aktualisieren Sie zunächst die Eigenschaften für diese Instanz, und rufen Sie diese Methode.  
  
 Nach einem <xref:System.Net.PeerToPeer.PeerNameRecord> registriert ist, die <xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A> Eigenschaft kann nicht aktualisiert werden.  Alle anderen Felder im Datensatz können aktualisiert werden.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Die <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" />-Eigenschaft ist auf <see langword="null" /> festgelegt.</exception>
        <exception cref="T:System.ObjectDisposedException">-   Die <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" />-Eigenschaft wurde noch nicht registriert. Die <see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Update" />-Methode kann nicht aufgerufen werden, solange der in der <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" />-Eigenschaft angegebene Peername nicht in mindestens einer Cloud registriert ist.  
  
-   Der in der <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" />-Eigenschaft angegebene Peername hat sich geändert, seit der entsprechende <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> registriert wurde.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">Ein Objekt, das verworfen wurde, kann nicht registriert werden.</exception>
        <exception cref="T:System.ArgumentNullException">Eine <see cref="T:System.Net.PeerToPeer.PeerNameRecord" />-Eigenschaft ist auf <see langword="null" /> festgelegt.</exception>
      </Docs>
    </Member>
    <Member MemberName="UseAutoEndPointSelection">
      <MemberSignature Language="C#" Value="public bool UseAutoEndPointSelection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseAutoEndPointSelection" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection" />
      <MemberSignature Language="VB.NET" Value="Public Property UseAutoEndPointSelection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseAutoEndPointSelection { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob beim Durchlaufen eines Peermeshs oder einer Peer-<see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" /> die automatische Endpunktauswahl verwendet werden soll.</summary>
        <value>
          <see langword="True" />, wenn die automatische Endpunktauswahl verwendet werden soll, <see langword="false" />, wenn zum Bestimmen eines Endpunkts eine andere Methode verwendet werden soll. Der Standardwert ist <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn automatische Endpunktauswahl verwendet wird (diese Eigenschaft wird festgelegt, um `true`) keine Endpunktinformationen angegeben vor dem Start des eine <xref:System.Net.PeerToPeer.PeerNameRegistration>, System einzelne Endpunkte auswählt und in allen mit dem zugeordneten Peernamen veröffentlicht verfügbar Clouds.  Wenn kein Port angegeben ist, werden 0 (null) als automatische Auswahl wählt die <xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A>.  
  
 Bei Festlegung auf `false`, erfolgt keine automatische Auswahl wie oben beschrieben.  Dadurch können während der Registrierung, um eine PeerName zusammen mit einem Daten-Blob zu veröffentlichen (gemäß der <xref:System.Net.PeerToPeer.PeerNameRecord.Data%2A> Eigenschaft). Es sind keine Endpunkte mit dem Namen verknüpft.  
  
 Wenn eine Registrierungsmethode, die die verwendet wird zu registrierenden Adressen automatisch auswählt, es ist keine Methode, um festzustellen, was für die Adressen der <xref:System.Net.PeerToPeer.PeerName> Objekt registriert wurde.  D. h. die <xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A> Eigenschaft werden nicht aktualisiert werden, um den ausgewählten Adressen.  
  
 Diese Eigenschaft aktualisieren, nachdem die Peer-namensregistrierung gestartet wurde, hat keine Auswirkungen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>