<Type Name="PeerNameRegistration" FullName="System.Net.PeerToPeer.PeerNameRegistration">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5597c2cfc78c35345288d35ff03e80db62b6ad58" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86810323" /></Metadata><TypeSignature Language="C#" Value="public class PeerNameRegistration : IDisposable, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable PeerNameRegistration extends System.Object implements class System.IDisposable, class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Net.PeerToPeer.PeerNameRegistration" />
  <TypeSignature Language="VB.NET" Value="Public Class PeerNameRegistration&#xA;Implements IDisposable, ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class PeerNameRegistration : IDisposable, System::Runtime::Serialization::ISerializable" />
  <TypeSignature Language="F#" Value="type PeerNameRegistration = class&#xA;    interface IDisposable&#xA;    interface ISerializable" />
  <AssemblyInfo>
    <AssemblyName>System.Net</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Serializable]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Serializable&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="449df-101">Registriert einen <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> in einer <see cref="T:System.Net.PeerToPeer.Cloud" /> oder in einem Satz von Wolken.</span><span class="sxs-lookup"><span data-stu-id="449df-101">Registers a <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> in a <see cref="T:System.Net.PeerToPeer.Cloud" /> or set of clouds.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="449df-102">Die Registrierung erstellt (oder aktualisiert) alle Informationen, die einer <xref:System.Net.PeerToPeer.PeerName> in einer peercloud oder in Clouds zugeordnet sind.</span><span class="sxs-lookup"><span data-stu-id="449df-102">Registration creates (or updates) all the information that is associated with a <xref:System.Net.PeerToPeer.PeerName> in a peer cloud or clouds.</span></span>  
  
 <span data-ttu-id="449df-103">Es können mehrere- <xref:System.Net.PeerToPeer.PeerNameRegistration> Objekte für denselben Peernamen vorhanden sein.</span><span class="sxs-lookup"><span data-stu-id="449df-103">It is possible to have multiple <xref:System.Net.PeerToPeer.PeerNameRegistration> objects for the same peer name.</span></span> <span data-ttu-id="449df-104">In einem solchen Fall stellt jede Instanz <xref:System.Net.PeerToPeer.PeerNameRegistration> in einer anderen Cloud dar, wenn der PeerName geschützt ist.</span><span class="sxs-lookup"><span data-stu-id="449df-104">In such a case, if the peer name is secured, each instance represents <xref:System.Net.PeerToPeer.PeerNameRegistration> in a different cloud.</span></span> <span data-ttu-id="449df-105">Wenn der PeerName jedoch nicht gesichert ist, kann er mehrmals in der gleichen Cloud registriert werden, sodass jede Registrierung von einem anderen Prozess aus erfolgt.</span><span class="sxs-lookup"><span data-stu-id="449df-105">However, if the peer name is not secured, it can be registered in the same cloud multiple times, providing that each registration is from a different process.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="449df-106">Initialisiert eine neue Instanz der <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="449df-106">Initializes a new instance of the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PeerNameRegistration ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PeerNameRegistration();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="449df-107">Initialisiert eine neue Standardinstanz der <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="449df-107">Initializes a new default instance of the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="449df-108">Gibt eine neue Standard Instanz des Typs zurück <xref:System.Net.PeerToPeer.PeerNameRegistration> .</span><span class="sxs-lookup"><span data-stu-id="449df-108">Returns a new default instance of type <xref:System.Net.PeerToPeer.PeerNameRegistration>.</span></span> <span data-ttu-id="449df-109">Die Peer Namen Registrierung wird während der Erstellung nicht durchgeführt.</span><span class="sxs-lookup"><span data-stu-id="449df-109">It does not perform peer name registration during construction.</span></span>  
  
 <span data-ttu-id="449df-110">Nachdem ein Objekt mit diesem Konstruktor instanziiert wurde, sollte der Aufrufer die entsprechenden Felder in der-Instanz auffüllen, bevor oder aufgerufen wird <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A> <xref:System.Net.PeerToPeer.PeerNameRegistration.Stop%2A> .</span><span class="sxs-lookup"><span data-stu-id="449df-110">After instantiating an object with this constructor, the caller should populate the appropriate fields in the instance prior to calling <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A> or <xref:System.Net.PeerToPeer.PeerNameRegistration.Stop%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PeerNameRegistration (System.Net.PeerToPeer.PeerName name, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.PeerToPeer.PeerName name, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As PeerName, port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PeerNameRegistration(System::Net::PeerToPeer::PeerName ^ name, int port);" />
      <MemberSignature Language="F#" Value="new System.Net.PeerToPeer.PeerNameRegistration : System.Net.PeerToPeer.PeerName * int -&gt; System.Net.PeerToPeer.PeerNameRegistration" Usage="new System.Net.PeerToPeer.PeerNameRegistration (name, port)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="name" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="449df-111">Das zu registrierende <see cref="T:System.Net.PeerToPeer.PeerName" />-Objekt.</span><span class="sxs-lookup"><span data-stu-id="449df-111">The <see cref="T:System.Net.PeerToPeer.PeerName" /> object to register.</span></span></param>
        <param name="port"><span data-ttu-id="449df-112">Integer-Wert, der die zu registrierende Portnummer angibt.</span><span class="sxs-lookup"><span data-stu-id="449df-112">Integer value that specifies the port number to register.</span></span></param>
        <summary><span data-ttu-id="449df-113">Initialisiert eine neue Instanz der <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" />-Klasse mit dem angegebenen Namen und der angegebenen Portnummer.</span><span class="sxs-lookup"><span data-stu-id="449df-113">Initializes a new instance of the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> class with the specified name and port number.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="449df-114">Durch Aufrufen dieses Konstruktors wird eine-Instanz erstellt, die zum Registrieren aller Quelladressen (sowohl IPv6and IPv4) als auch des bereitgestellten Ports für alle Clouds verwendet wird, an denen der Peer derzeit teilnimmt.</span><span class="sxs-lookup"><span data-stu-id="449df-114">Calling this constructor creates an instance that will be used to register all source addresses (both IPv6and IPv4) and the provided port for all clouds in which the peer is currently participating.</span></span>  <span data-ttu-id="449df-115">Wenn das Objekt erfolgreich erstellt wurde, werden die angegebenen <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A> und aufgefüllt <xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A> .</span><span class="sxs-lookup"><span data-stu-id="449df-115">If the object is constructed successfully, the specified <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A> and <xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A> are populated.</span></span>  
  
 <span data-ttu-id="449df-116">Wenn der Peername gesichert ist und zuvor in einem registriert wurde <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A> , wird ein-Peer ausgelöst <xref:System.Net.PeerToPeer.PeerToPeerException> .</span><span class="sxs-lookup"><span data-stu-id="449df-116">If the peer name is secured and was previously registered in a <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A> the peer is currently participating in, an <xref:System.Net.PeerToPeer.PeerToPeerException> is thrown.</span></span>  
  
 <span data-ttu-id="449df-117">Dieser Konstruktor erstellt nur eine- <xref:System.Net.PeerToPeer.PeerNameRegistration> Instanz. die Registrierung wird nicht durchgeführt.</span><span class="sxs-lookup"><span data-stu-id="449df-117">This constructor only creates a <xref:System.Net.PeerToPeer.PeerNameRegistration> instance; it does not perform the registration.</span></span> <span data-ttu-id="449df-118">Nachdem das Registrierungs Objekt mit diesem Konstruktor instanziiert und seine Felder aufgefüllt wurde, muss die Anwendung aufgerufen werden, <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A> um die tatsächliche Registrierung auszuführen.</span><span class="sxs-lookup"><span data-stu-id="449df-118">After instantiating the registration object with this constructor and populating its fields, the application must call <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A> to perform the actual registration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="449df-119">Der <paramref name="name" />-Parameter darf nicht <see langword="null" /> sein.</span><span class="sxs-lookup"><span data-stu-id="449df-119">The <paramref name="name" /> parameter cannot be <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="449df-120">Die angegebene Portnummer ist kleiner als 0 (null).</span><span class="sxs-lookup"><span data-stu-id="449df-120">The specified port number is less than zero.</span></span>  <span data-ttu-id="449df-121">Portnummern müssen größer oder gleich 0 (null) und kleiner als 65.535 (0xFFFF) sein.</span><span class="sxs-lookup"><span data-stu-id="449df-121">Port numbers must be greater than or equal to zero and less than 65,535 (0xFFFF).</span></span></exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException"><span data-ttu-id="449df-122">–   Der angegebene <see cref="T:System.Net.PeerToPeer.PeerName" /> wurde bereits auf diesem Host registriert.</span><span class="sxs-lookup"><span data-stu-id="449df-122">-   The <see cref="T:System.Net.PeerToPeer.PeerName" /> specified has already been registered from this host.</span></span>  
  
<span data-ttu-id="449df-123">–   Der Remotepeer besitzt nicht die <see cref="P:System.Net.PeerToPeer.PeerName.Authority" /> für das angegebene <see cref="T:System.Net.PeerToPeer.PeerName" />-Objekt.</span><span class="sxs-lookup"><span data-stu-id="449df-123">-   The remote peer does not own the <see cref="P:System.Net.PeerToPeer.PeerName.Authority" /> for the supplied <see cref="T:System.Net.PeerToPeer.PeerName" /> object.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PeerNameRegistration (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PeerNameRegistration(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new System.Net.PeerToPeer.PeerNameRegistration : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; System.Net.PeerToPeer.PeerNameRegistration" Usage="new System.Net.PeerToPeer.PeerNameRegistration (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="449df-124">Verweis auf das Objekt, das die zum Deserialisieren dieser Instanz benötigten Daten enthält.</span><span class="sxs-lookup"><span data-stu-id="449df-124">Reference to the object that holds the data needed to deserialize this instance.</span></span></param>
        <param name="context"><span data-ttu-id="449df-125">Kontext, der das Deserialisieren der Daten ermöglicht.</span><span class="sxs-lookup"><span data-stu-id="449df-125">Context that provides the means for deserializing the data.</span></span> <span data-ttu-id="449df-126">Auch als Quelle der serialisierten Daten bezeichnet.</span><span class="sxs-lookup"><span data-stu-id="449df-126">Also referred to as the source of the serialized data.</span></span></param>
        <summary><span data-ttu-id="449df-127">Initialisiert ein neues serialisierbares <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" />-Objekt.</span><span class="sxs-lookup"><span data-stu-id="449df-127">Initializes a new serializable <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> object.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="N:System.Runtime.Serialization" />
        <altmember cref="T:System.Runtime.Serialization.StreamingContext" />
        <altmember cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PeerNameRegistration (System.Net.PeerToPeer.PeerName name, int port, System.Net.PeerToPeer.Cloud cloud);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.PeerToPeer.PeerName name, int32 port, class System.Net.PeerToPeer.Cloud cloud) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32,System.Net.PeerToPeer.Cloud)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As PeerName, port As Integer, cloud As Cloud)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PeerNameRegistration(System::Net::PeerToPeer::PeerName ^ name, int port, System::Net::PeerToPeer::Cloud ^ cloud);" />
      <MemberSignature Language="F#" Value="new System.Net.PeerToPeer.PeerNameRegistration : System.Net.PeerToPeer.PeerName * int * System.Net.PeerToPeer.Cloud -&gt; System.Net.PeerToPeer.PeerNameRegistration" Usage="new System.Net.PeerToPeer.PeerNameRegistration (name, port, cloud)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="port" Type="System.Int32" />
        <Parameter Name="cloud" Type="System.Net.PeerToPeer.Cloud" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="449df-128">Das zu registrierende <see cref="T:System.Net.PeerToPeer.PeerName" />-Objekt.</span><span class="sxs-lookup"><span data-stu-id="449df-128">The <see cref="T:System.Net.PeerToPeer.PeerName" /> object to register.</span></span></param>
        <param name="port"><span data-ttu-id="449df-129">Integer-Wert, der die zu registrierende Portnummer angibt.</span><span class="sxs-lookup"><span data-stu-id="449df-129">Integer value that specifies the port number to register.</span></span></param>
        <param name="cloud"><span data-ttu-id="449df-130"><see cref="T:System.Net.PeerToPeer.Cloud" />, wo der Peername registriert werden soll.</span><span class="sxs-lookup"><span data-stu-id="449df-130"><see cref="T:System.Net.PeerToPeer.Cloud" /> in which to register the peer name.</span></span></param>
        <summary><span data-ttu-id="449df-131">Initialisiert eine neue Instanz der <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" />-Klasse mit Peernamen, Portnummer und <see cref="T:System.Net.PeerToPeer.Cloud" /> laut Angabe.</span><span class="sxs-lookup"><span data-stu-id="449df-131">Initializes a new instance of the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> class with the specified peer name, port number, and <see cref="T:System.Net.PeerToPeer.Cloud" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="449df-132">Durch Aufrufen dieses Konstruktors wird eine-Instanz erstellt, die zum Registrieren aller Quelladressen (sowohl IPv6 als auch IPv4), des bereitgestellten Ports und des angegebenen verwendet wird <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A> .</span><span class="sxs-lookup"><span data-stu-id="449df-132">Calling this constructor creates an instance that will be used to register all source addresses (both IPv6 and IPv4), the provided port, and the specified <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A>.</span></span>  <span data-ttu-id="449df-133">Wenn das Objekt erfolgreich erstellt wurde, werden die Eigenschaften mit dem angegebenen, dem angegebenen und dem aufgefüllt <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A> <xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A> <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A> .</span><span class="sxs-lookup"><span data-stu-id="449df-133">If the object is constructed successfully, the properties are populated with the specified <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A>, <xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A> and <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A>.</span></span>  
  
 <span data-ttu-id="449df-134">Wenn der Cloud-Parameter ist `null` , wird der Name mithilfe der <xref:System.Net.PeerToPeer.Cloud.Available> Verknüpfung registriert, von der Standardwerte für, und initialisiert werden <xref:System.Net.PeerToPeer.Cloud.Name%2A> <xref:System.Net.PeerToPeer.Cloud.Scope%2A> <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A> .</span><span class="sxs-lookup"><span data-stu-id="449df-134">If the cloud parameter is `null`, the name is registered using the <xref:System.Net.PeerToPeer.Cloud.Available> shortcut, which initializes default values for the <xref:System.Net.PeerToPeer.Cloud.Name%2A>, <xref:System.Net.PeerToPeer.Cloud.Scope%2A>, and <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A>.</span></span>  
  
 <span data-ttu-id="449df-135">Nach der Instanziierung muss die- <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A> Methode aufgerufen werden, um die zu registrieren <xref:System.Net.PeerToPeer.PeerName> .</span><span class="sxs-lookup"><span data-stu-id="449df-135">After instantiation, the <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A> method must be called to register the <xref:System.Net.PeerToPeer.PeerName>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="449df-136">Der <paramref name="name" />-Parameter darf nicht <see langword="null" /> sein.</span><span class="sxs-lookup"><span data-stu-id="449df-136">The <paramref name="name" /> parameter cannot be <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="449df-137">Die angegebene Portnummer ist kleiner als 0 (null).</span><span class="sxs-lookup"><span data-stu-id="449df-137">The specified port number is less than zero.</span></span>  <span data-ttu-id="449df-138">Portnummern müssen größer oder gleich 0 (null) und kleiner als 65.535 (0xFFFF) sein.</span><span class="sxs-lookup"><span data-stu-id="449df-138">Port numbers must be greater than or equal to zero and less than 65,535 (0xFFFF).</span></span></exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException"><span data-ttu-id="449df-139">–   Der angegebene <see cref="T:System.Net.PeerToPeer.PeerName" /> wurde bereits auf diesem Host registriert.</span><span class="sxs-lookup"><span data-stu-id="449df-139">-   The <see cref="T:System.Net.PeerToPeer.PeerName" /> specified has already been registered from this host.</span></span>  
  
<span data-ttu-id="449df-140">–   Der Remotepeer besitzt nicht die <see cref="P:System.Net.PeerToPeer.PeerName.Authority" /> für das angegebene <see cref="T:System.Net.PeerToPeer.PeerName" />-Objekt.</span><span class="sxs-lookup"><span data-stu-id="449df-140">-   The remote peer does not own the <see cref="P:System.Net.PeerToPeer.PeerName.Authority" /> for the supplied <see cref="T:System.Net.PeerToPeer.PeerName" /> object.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Cloud">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.Cloud Cloud { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.PeerToPeer.Cloud Cloud" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" />
      <MemberSignature Language="VB.NET" Value="Public Property Cloud As Cloud" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::PeerToPeer::Cloud ^ Cloud { System::Net::PeerToPeer::Cloud ^ get(); void set(System::Net::PeerToPeer::Cloud ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Cloud : System.Net.PeerToPeer.Cloud with get, set" Usage="System.Net.PeerToPeer.PeerNameRegistration.Cloud" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Cloud</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="449df-141">Ruft Informationen in einer <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" /> ab, in der dieses <see cref="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" />-Objekt registriert wird, oder legt diese fest.</span><span class="sxs-lookup"><span data-stu-id="449df-141">Gets or sets information in a <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" /> into which this <see cref="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" /> object will be registered.</span></span></summary>
        <value><span data-ttu-id="449df-142">Ein Objekt vom Typ <see cref="T:System.Net.PeerToPeer.Cloud" />, das die Peerwolke angibt, für die diese Registrierung definiert ist.</span><span class="sxs-lookup"><span data-stu-id="449df-142">An object of type <see cref="T:System.Net.PeerToPeer.Cloud" /> that specifies the peer cloud for which this registration is defined.</span></span> <span data-ttu-id="449df-143">Diese Eigenschaft ist standardmäßig auf <see langword="null" /> festgelegt.</span><span class="sxs-lookup"><span data-stu-id="449df-143">This property is set to <see langword="null" /> by default.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Comment">
      <MemberSignature Language="C#" Value="public string Comment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Comment" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.PeerNameRegistration.Comment" />
      <MemberSignature Language="VB.NET" Value="Public Property Comment As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Comment { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Comment : string with get, set" Usage="System.Net.PeerToPeer.PeerNameRegistration.Comment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="449df-144">Ruft zusätzliche Informationen über das <see cref="T:System.Net.PeerToPeer.PeerName" />-Objekt ab, das bei der <see cref="T:System.Net.PeerToPeer.Cloud" /> registriert wird, oder legt diese fest.</span><span class="sxs-lookup"><span data-stu-id="449df-144">Gets or sets additional information about the <see cref="T:System.Net.PeerToPeer.PeerName" /> object that will be registered with the <see cref="T:System.Net.PeerToPeer.Cloud" />.</span></span></summary>
        <value><span data-ttu-id="449df-145">Der Kommentar, der zusätzliche Informationen über den <see cref="T:System.Net.PeerToPeer.PeerName" /> enthält, der der <see cref="T:System.Net.PeerToPeer.Cloud" /> zugeordnet werden soll.</span><span class="sxs-lookup"><span data-stu-id="449df-145">The comment that contains additional information about the <see cref="T:System.Net.PeerToPeer.PeerName" /> to associate with the <see cref="T:System.Net.PeerToPeer.Cloud" />.</span></span> <span data-ttu-id="449df-146">Diese Eigenschaft ist standardmäßig auf <see langword="null" /> festgelegt.</span><span class="sxs-lookup"><span data-stu-id="449df-146">This property is set to <see langword="null" /> by default.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException"><span data-ttu-id="449df-147">Der angegebene Zeichenfolgenwert ist größer als 39 Unicode-Zeichen.</span><span class="sxs-lookup"><span data-stu-id="449df-147">The specified string value is greater than 39 Unicode characters.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Data">
      <MemberSignature Language="C#" Value="public byte[] Data { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] Data" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.PeerNameRegistration.Data" />
      <MemberSignature Language="VB.NET" Value="Public Property Data As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ Data { cli::array &lt;System::Byte&gt; ^ get(); void set(cli::array &lt;System::Byte&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Data : byte[] with get, set" Usage="System.Net.PeerToPeer.PeerNameRegistration.Data" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="449df-148">Ruft anwendungsdefinierte Binärdaten für das <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" />-Objekt ab oder legt diese fest.</span><span class="sxs-lookup"><span data-stu-id="449df-148">Gets or sets application-defined binary data for the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> object.</span></span></summary>
        <value><span data-ttu-id="449df-149">Ein Bytearray mit den dem Eintrag zugeordneten Binärdaten.</span><span class="sxs-lookup"><span data-stu-id="449df-149">An array of bytes that holds the binary data associated with the entry.</span></span> <span data-ttu-id="449df-150">Diese Eigenschaft ist standardmäßig auf <see langword="null" /> festgelegt.</span><span class="sxs-lookup"><span data-stu-id="449df-150">This property is set to <see langword="null" /> by default.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="449df-151">Die maximale Menge <xref:System.Net.PeerToPeer.PeerNameRegistration.Data%2A> , die angegeben werden kann, beträgt 4.096 Bytes.</span><span class="sxs-lookup"><span data-stu-id="449df-151">The maximum amount of <xref:System.Net.PeerToPeer.PeerNameRegistration.Data%2A> that can be supplied is 4,096 bytes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="449df-152">Die angegebenen <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Data" /> sind größer als 4096 Bytes.</span><span class="sxs-lookup"><span data-stu-id="449df-152">The specified <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Data" /> is greater than 4096 bytes.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="449df-153">Gibt die vom <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" />-Objekt verwendeten Ressourcen frei.</span><span class="sxs-lookup"><span data-stu-id="449df-153">Releases the resources used by the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="449df-154">Wenn ein Peer einen verlässt <xref:System.Net.PeerToPeer.Cloud> , benötigt die Cloud nicht mehr das dem Peer zugeordnete <xref:System.Net.PeerToPeer.PeerNameRegistration> Objekt.</span><span class="sxs-lookup"><span data-stu-id="449df-154">When a peer leaves a <xref:System.Net.PeerToPeer.Cloud>, the cloud no longer requires the <xref:System.Net.PeerToPeer.PeerNameRegistration> object associated with the peer.</span></span>  <span data-ttu-id="449df-155">Ob das Registrierungs Objekt beendet oder verworfen wird, hängt davon ab, ob die Cloud das Objekt zum Registrieren dieses Peers oder eines anderen Peers wieder verwendet.</span><span class="sxs-lookup"><span data-stu-id="449df-155">Whether the registration object is stopped or disposed is dependent upon whether the cloud will reuse the object to register this peer or another peer.</span></span> <span data-ttu-id="449df-156">Wenn ein anderer Endpunkt innerhalb des Registrierungs Objekts vorhanden ist, mit dem der Peerhost kommunizieren soll, muss die Registrierung dieser Endpunkte in der Cloud erfolgen, bevor dieses Objekt beendet oder verworfen wird.</span><span class="sxs-lookup"><span data-stu-id="449df-156">If there are any other endpoint(s) within the registration object with which the peer host expected to communicate, registering those endpoints within the cloud must occur before stopping or disposing of this object.</span></span>  
  
 <span data-ttu-id="449df-157">Wenn die Cloud erwartet, dass mehr Peers registriert werden, wird die- <xref:System.Net.PeerToPeer.PeerNameRegistration.Stop%2A> Methode empfohlen. wenn die Cloud den Arbeitsspeicher nicht mehr benötigt, muss Sie über die-Methode an das Betriebssystem zurückgegeben werden <xref:System.Net.PeerToPeer.PeerNameRegistration.Dispose%2A> .</span><span class="sxs-lookup"><span data-stu-id="449df-157">If the cloud expects to register more peers, the <xref:System.Net.PeerToPeer.PeerNameRegistration.Stop%2A> method is recommended; when the cloud no longer needs the memory, it should be returned to the operating system via the <xref:System.Net.PeerToPeer.PeerNameRegistration.Dispose%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="peerNameRegistration.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="449df-158">Gibt alle vom <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" />-Objekt verwendeten Ressourcen frei.</span><span class="sxs-lookup"><span data-stu-id="449df-158">Releases all resources used by the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> object.</span></span></summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="usage"><para><span data-ttu-id="449df-159">Ruft immer die verwerfen-Methode auf, bevor das Objekt zerstört wird <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> .</span><span class="sxs-lookup"><span data-stu-id="449df-159">Always call the Dispose method before destroying the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> object.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="peerNameRegistration.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="449df-160"><see langword="true" />, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben, <see langword="false" />, um ausschließlich nicht verwaltete Ressourcen freizugeben.</span><span class="sxs-lookup"><span data-stu-id="449df-160"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="449df-161">Gibt die vom <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" />-Objekt verwendeten nicht verwalteten Ressourcen und optional die verwalteten Ressourcen frei.</span><span class="sxs-lookup"><span data-stu-id="449df-161">Releases the unmanaged resources and optionally releases the managed resources used by the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> object.</span></span></summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="usage"><para><span data-ttu-id="449df-162">Ruft immer die verwerfen-Methode auf, bevor der letzte Verweis auf das Objekt freigegeben wird <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> .</span><span class="sxs-lookup"><span data-stu-id="449df-162">Always call the Dispose method before releasing the last reference to the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> object.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="EndPointCollection">
      <MemberSignature Language="C#" Value="public System.Net.IPEndPointCollection EndPointCollection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.IPEndPointCollection EndPointCollection" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EndPointCollection As IPEndPointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::IPEndPointCollection ^ EndPointCollection { System::Net::IPEndPointCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EndPointCollection : System.Net.IPEndPointCollection" Usage="System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IPEndPointCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="449df-163">Ruft die Auflistung von Netzwerkendpunkten ab, für die der zugeordnete Peername registriert wird.</span><span class="sxs-lookup"><span data-stu-id="449df-163">Gets the collection of network endpoints for which the associated peer name is registered.</span></span></summary>
        <value><span data-ttu-id="449df-164">Ein <see cref="P:System.Net.PeerToPeer.PeerNameRecord.EndPointCollection" />-Objekt, das die Netzwerkendpunkte enthält, für die der zugeordnete Peername registriert wird.</span><span class="sxs-lookup"><span data-stu-id="449df-164">An <see cref="P:System.Net.PeerToPeer.PeerNameRecord.EndPointCollection" /> object that contains the network endpoints for which the associated peer name is registered.</span></span> <span data-ttu-id="449df-165">Sofern nicht ausdrücklich angegeben, ist für Referenztypen der Standardwert aller Eigenschaften <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="449df-165">Unless explicitly specified, the default value for all properties is <see langword="null" /> for reference types.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="449df-166">Im <xref:System.Net> -Namespace stellt ein <xref:System.Net.IPEndPoint> Netzwerk Endpunkt als IP-Adresse und Portnummer dar.</span><span class="sxs-lookup"><span data-stu-id="449df-166">In the <xref:System.Net> namespace, an <xref:System.Net.IPEndPoint> represents a network endpoint as an IP address and a port number.</span></span>  <span data-ttu-id="449df-167">Für PNRP müssen für jeden Endpunkt eine IP-Adresse und ein Portwert angegeben werden.</span><span class="sxs-lookup"><span data-stu-id="449df-167">For PNRP, an IP address and port value must be provided for each endpoint.</span></span>  <span data-ttu-id="449df-168">Die maximale Anzahl von Endpunkten, die bereitgestellt werden können, ist zehn.</span><span class="sxs-lookup"><span data-stu-id="449df-168">The maximum number of endpoints that can be provided is ten.</span></span> <span data-ttu-id="449df-169">Bei diesem Parameter wird die automatische Adressauswahl verwendet `null` .</span><span class="sxs-lookup"><span data-stu-id="449df-169">Automatic address selection is used when this parameter is `null`.</span></span>  
  
 <span data-ttu-id="449df-170">Wenn eine Registrierungsmethode verwendet wird, die automatisch die zu Registrier denden Adressen auswählt, gibt es keine Methode zum Bestimmen der Adressen, für die der Peername registriert wurde.</span><span class="sxs-lookup"><span data-stu-id="449df-170">If a registration method is used that automatically selects the addresses to register, there is no method to determine the addresses for which the peer name was registered.</span></span>  <span data-ttu-id="449df-171">Das heißt, die <xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A> Eigenschaft wird nicht aktualisiert, um die ausgewählten Adressen widerzuspiegeln.</span><span class="sxs-lookup"><span data-stu-id="449df-171">That is, the <xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A> property will not be updated to reflect the addresses selected.</span></span>  
  
 <span data-ttu-id="449df-172">Wenn ein PeerName für mehr als einen Knoten registriert ist, <xref:System.Net.PeerToPeer.PeerNameRegistration> ist jeder unterschiedlich, und die <xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A> für jede Registrierungs Instanz definierte Eigenschaft wird unterschiedlich sein.</span><span class="sxs-lookup"><span data-stu-id="449df-172">When a peer name is registered for more than one node, each <xref:System.Net.PeerToPeer.PeerNameRegistration> is distinct and the <xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A> property defined on each registration instance will be different.</span></span> <span data-ttu-id="449df-173">Wenn ein <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A> in mehr als einem registriert ist <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A> , ist jede Registrierung eindeutig, und die Auflistung der Endpunkte unterscheidet sich in der Regel für jede Instanz.</span><span class="sxs-lookup"><span data-stu-id="449df-173">Also, when a <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A> is registered into more than one <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A>, each registration is distinct and the collection of endpoints will usually be different for each instance.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage"><para><span data-ttu-id="449df-174">Die Liste der Endpunkte, mit denen dieser Peer kommuniziert, ist nicht identisch mit der Liste der Endpunkte, für die dieser PeerName bekannt ist, was unterschiedlich gespeichert wird.</span><span class="sxs-lookup"><span data-stu-id="449df-174">The list of endpoints with which this peer will communicate is not the same as the list of endpoints by which this peer name is known, which is stored differently.</span></span></para></block>
        <altmember cref="T:System.Net.IPEndPointCollection" />
        <altmember cref="P:System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection" />
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="protected virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="abstract member GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit&#xA;override this.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="peerNameRegistration.GetObjectData (info, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="449df-175">Enthält die serialisierten Daten, die dem <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" />-Objekt zugeordnet sind.</span><span class="sxs-lookup"><span data-stu-id="449df-175">Holds the serialized data associated with the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> object.</span></span></param>
        <param name="context"><span data-ttu-id="449df-176">Enthält das Ziel für den serialisierten Datenstrom, der dem <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" />-Objekt zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="449df-176">Contains destination for the serialized stream associated with the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> object.</span></span></param>
        <summary><span data-ttu-id="449df-177">Füllt ein Serialisierungsinformationsobjekt mit den Daten, die zum Serialisieren der <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" />-Instanz erforderlich sind.</span><span class="sxs-lookup"><span data-stu-id="449df-177">Populates a serialization information object with the data needed to serialize the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> instance.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsRegistered">
      <MemberSignature Language="C#" Value="public bool IsRegistered ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsRegistered() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.IsRegistered" />
      <MemberSignature Language="VB.NET" Value="Public Function IsRegistered () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsRegistered();" />
      <MemberSignature Language="F#" Value="member this.IsRegistered : unit -&gt; bool" Usage="peerNameRegistration.IsRegistered " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="449df-178">Ruft ab oder legt fest, ob der in der <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" />-Eigenschaft angegebene Peername bei einer bestimmten <see cref="T:System.Net.PeerToPeer.Cloud" /> auf einem Host registriert ist.</span><span class="sxs-lookup"><span data-stu-id="449df-178">Gets or sets whether the peer name specified in the <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> property is registered with a specific <see cref="T:System.Net.PeerToPeer.Cloud" /> on a host.</span></span></summary>
        <returns><span data-ttu-id="449df-179">Wenn der Wert <see langword="true" /> ist, wird der Peername bei einer <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" /> für den Peerhost registriert.</span><span class="sxs-lookup"><span data-stu-id="449df-179">If <see langword="true" />, the peer name is registered with a <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" /> for the peer host.</span></span> <span data-ttu-id="449df-180">Wenn der Wert <see langword="false" /> ist, kann die Registrierung mit <see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Start" /> gestartet werden.</span><span class="sxs-lookup"><span data-stu-id="449df-180">If <see langword="false" />, then the registration process can be started with <see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Start" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="449df-181">Ein Objekt, das bereits freigegeben wurde, kann nicht registriert werden.</span><span class="sxs-lookup"><span data-stu-id="449df-181">An object that has been disposed already cannot be registered.</span></span></exception>
        <altmember cref="T:System.Net.PeerToPeer.PeerNameResolver" />
      </Docs>
    </Member>
    <Member MemberName="PeerName">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.PeerName PeerName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.PeerToPeer.PeerName PeerName" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" />
      <MemberSignature Language="VB.NET" Value="Public Property PeerName As PeerName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::PeerToPeer::PeerName ^ PeerName { System::Net::PeerToPeer::PeerName ^ get(); void set(System::Net::PeerToPeer::PeerName ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PeerName : System.Net.PeerToPeer.PeerName with get, set" Usage="System.Net.PeerToPeer.PeerNameRegistration.PeerName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.PeerName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="449df-182">Ruft den Peernamen ab, der bei einer Peerwolke registriert werden soll, oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="449df-182">Gets or sets the peer name to register with a peer cloud.</span></span></summary>
        <value><span data-ttu-id="449df-183">Ein Objekt vom Typ <see cref="T:System.Net.PeerToPeer.PeerName" />, das diesem <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" />-Objekt zugeordnete Werte enthält.</span><span class="sxs-lookup"><span data-stu-id="449df-183">An object of type <see cref="T:System.Net.PeerToPeer.PeerName" /> that contains values associated with this <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> object.</span></span> <span data-ttu-id="449df-184">Sofern nicht ausdrücklich angegeben, ist für Referenztypen der Standardwert aller Eigenschaften <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="449df-184">Unless explicitly specified, the default value for all properties is <see langword="null" /> for reference types.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="449df-185">Ein PeerName kann für mehr als einen Knoten registriert werden. Jede <xref:System.Net.PeerToPeer.PeerNameRegistration> Instanz ist eindeutig.</span><span class="sxs-lookup"><span data-stu-id="449df-185">A peer name can be registered for more than one node; each <xref:System.Net.PeerToPeer.PeerNameRegistration> instance is distinct.</span></span> <span data-ttu-id="449df-186">Die-Eigenschaft, die <xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A> jeder entsprechenden- <xref:System.Net.PeerToPeer.PeerName> Instanz zugeordnet ist, unterscheidet sich</span><span class="sxs-lookup"><span data-stu-id="449df-186">The <xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A> property associated with each corresponding <xref:System.Net.PeerToPeer.PeerName> instance is different.</span></span> <span data-ttu-id="449df-187">Außerdem ist es möglich, einen Peer Namen für mehr als eine Cloud zu registrieren, mit der der Knoten verbunden ist. Jede dieser Registrierungen ist eindeutig.</span><span class="sxs-lookup"><span data-stu-id="449df-187">Also, it is possible to register a peer name for more than one cloud that the node is connected to; each of these registrations is distinct.</span></span> <span data-ttu-id="449df-188">Der PeerName <xref:System.Net.IPEndPointCollection> unterscheidet sich in jeder dieser Instanzen.</span><span class="sxs-lookup"><span data-stu-id="449df-188">The peer name's <xref:System.Net.IPEndPointCollection> will be different in each of these instances.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.PeerToPeer.PeerName.CreateFromPeerHostName(System.String)" />
        <altmember cref="M:System.Net.PeerToPeer.PeerName.CreateRelativePeerName(System.Net.PeerToPeer.PeerName,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Port">
      <MemberSignature Language="C#" Value="public int Port { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Port" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.PeerNameRegistration.Port" />
      <MemberSignature Language="VB.NET" Value="Public Property Port As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Port { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Port : int with get, set" Usage="System.Net.PeerToPeer.PeerNameRegistration.Port" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="449df-189">Ruft die [TCP/IP](https://go.microsoft.com/fwlink?LinkID=98458)-Anschlussnummer ab, die von dem im <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" />-Objekt registrierten Peer verwendet wird, oder legt diese fest.</span><span class="sxs-lookup"><span data-stu-id="449df-189">Gets or sets the [TCP/IP](https://go.microsoft.com/fwlink?LinkID=98458) port number used by the peer being registered into the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> object.</span></span></summary>
        <value><span data-ttu-id="449df-190">Ein Ganzzahlwert, der die TCP-Anschlussnummer des <see cref="T:System.Net.IPEndPoint" /> angibt.</span><span class="sxs-lookup"><span data-stu-id="449df-190">An integer value indicating the TCP port number of the <see cref="T:System.Net.IPEndPoint" />.</span></span> <span data-ttu-id="449df-191">Sofern nicht ausdrücklich angegeben, ist der Standardwert für diese Eigenschaft 0 (null).</span><span class="sxs-lookup"><span data-stu-id="449df-191">Unless explicitly specified, the default value for this property is zero (0).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="449df-192">Der Standardport wird von der- <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A> Methode nur verwendet, wenn keine Endpunkte angegeben werden.</span><span class="sxs-lookup"><span data-stu-id="449df-192">The default port is used by the <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A> method only when no endpoints are specified.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="449df-193">Der angegebene Anschlusswert ist kleiner als 0 (null).</span><span class="sxs-lookup"><span data-stu-id="449df-193">The specified port value is less than zero.</span></span>  <span data-ttu-id="449df-194">Portnummern müssen größer oder gleich 0 (null) und kleiner als 65.535 (0xFFFF) sein.</span><span class="sxs-lookup"><span data-stu-id="449df-194">Port numbers must be greater than or equal to zero and less than 65,535 (0xFFFF).</span></span></exception>
        <altmember cref="M:System.Net.PeerToPeer.PeerName.CreateRelativePeerName(System.Net.PeerToPeer.PeerName,System.String)" />
        <altmember cref="P:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection" />
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public void Start ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Start() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.Start" />
      <MemberSignature Language="VB.NET" Value="Public Sub Start ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Start();" />
      <MemberSignature Language="F#" Value="member this.Start : unit -&gt; unit" Usage="peerNameRegistration.Start " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="449df-195">Registriert den <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> in der <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" />.</span><span class="sxs-lookup"><span data-stu-id="449df-195">Registers the <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> into the <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" />.</span></span> <span data-ttu-id="449df-196">Wenn keine <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection" /> angegeben ist, wird die automatische Adressauswahl mit dem durch die <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Port" />-Eigenschaft angegebenen Portwert verwendet.</span><span class="sxs-lookup"><span data-stu-id="449df-196">If no <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection" /> is specified, automatic address selection is used with the port value specified by the <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Port" /> property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="449df-197">Die-Methode registriert den in der-Eigenschaft angegebenen Peernamen <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A> mit allen Quelladressen und dem <xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A> im-Konstruktor angegebenen.</span><span class="sxs-lookup"><span data-stu-id="449df-197">The method registers the peer name specified in the <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A> property with all source addresses and the <xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A> specified in the constructor.</span></span> <span data-ttu-id="449df-198">Der Standardport wird von dieser Methode nur verwendet, wenn keine Endpunkte angegeben werden.</span><span class="sxs-lookup"><span data-stu-id="449df-198">The default port is used by this method only when no endpoints are specified.</span></span>  
  
 <span data-ttu-id="449df-199">Wenn die- <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A> Eigenschaft ist `null` , registriert diese Methode den in der-Eigenschaft angegebenen Peernamen <xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A> unter Verwendung des- <xref:System.Net.PeerToPeer.Cloud.Available> Felds, das die Standardwerte für <xref:System.Net.PeerToPeer.Cloud.Name%2A> , und initialisiert <xref:System.Net.PeerToPeer.Cloud.Scope%2A> <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A> .</span><span class="sxs-lookup"><span data-stu-id="449df-199">If the <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A> property is `null`, this method registers the peer name specified in the <xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A> property using the <xref:System.Net.PeerToPeer.Cloud.Available> field, which initializes default values for the <xref:System.Net.PeerToPeer.Cloud.Name%2A>, <xref:System.Net.PeerToPeer.Cloud.Scope%2A>, and <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A>.</span></span>  
  
 <span data-ttu-id="449df-200">Nachdem ein- <xref:System.Net.PeerToPeer.PeerNameRegistration> Objekt gestartet wurde, <xref:System.Net.PeerToPeer.PeerNameRegistration.Stop%2A> wird es mit der-Methode beendet.</span><span class="sxs-lookup"><span data-stu-id="449df-200">After a <xref:System.Net.PeerToPeer.PeerNameRegistration> object has been started, the <xref:System.Net.PeerToPeer.PeerNameRegistration.Stop%2A> method is used to stop it.</span></span>  
  
 <span data-ttu-id="449df-201">Zum Aktualisieren einer Registrierung muss die- <xref:System.Net.PeerToPeer.PeerNameRegistration.Update%2A> Methode verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="449df-201">To update a registration, the <xref:System.Net.PeerToPeer.PeerNameRegistration.Update%2A> method must be used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="449df-202">Im folgenden Codebeispiel wird ein erstellt <xref:System.Net.PeerToPeer.PeerName> und zusammen mit den angegebenen Metadaten registriert.</span><span class="sxs-lookup"><span data-stu-id="449df-202">The following code example creates a <xref:System.Net.PeerToPeer.PeerName> and registers it along with the metadata specified.</span></span>  
  
 [!code-csharp[NCLPNRPRegisterPeerName#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPNRPRegisterPeerName/CS/RegisterPeerName.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="449df-203">Die <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" />-Eigenschaft ist auf <see langword="null" /> festgelegt.</span><span class="sxs-lookup"><span data-stu-id="449df-203">The <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> property is set to <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="449df-204">Für dieses Objekt wurde „Dispose()“ bereits aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="449df-204">This object had Dispose() called on it previously.</span></span></exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException"><span data-ttu-id="449df-205">–   Der angegebene <see cref="T:System.Net.PeerToPeer.PeerName" /> wurde bereits registriert.</span><span class="sxs-lookup"><span data-stu-id="449df-205">-   The <see cref="T:System.Net.PeerToPeer.PeerName" /> specified has already been registered.</span></span> <span data-ttu-id="449df-206">Die <see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Update" />-Methode muss zum Aktualisieren einer Registrierung verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="449df-206">The <see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Update" /> method must be used to update a registration.</span></span>  
  
<span data-ttu-id="449df-207">–   Der Remotepeer besitzt nicht die <see cref="P:System.Net.PeerToPeer.PeerName.Authority" /> für den angegebenen <see cref="T:System.Net.PeerToPeer.PeerName" />.</span><span class="sxs-lookup"><span data-stu-id="449df-207">-   The remote peer does not own the <see cref="P:System.Net.PeerToPeer.PeerName.Authority" /> for the <see cref="T:System.Net.PeerToPeer.PeerName" /> specified.</span></span>  
  
<span data-ttu-id="449df-208">–   Entweder ist der <see cref="T:System.Net.PeerToPeer.PeerName" /> oder sind die <see cref="P:System.Net.PeerToPeer.PeerNameRecord.Data" /> nicht angegeben; mindestens eines muss angegeben werden.</span><span class="sxs-lookup"><span data-stu-id="449df-208">-   Either the <see cref="T:System.Net.PeerToPeer.PeerName" /> or the <see cref="P:System.Net.PeerToPeer.PeerNameRecord.Data" /> is not specified; at least one needs to be provided.</span></span>  
  
<span data-ttu-id="449df-209">–   Die Nachrichten- oder Datenelemente sind ungültig.</span><span class="sxs-lookup"><span data-stu-id="449df-209">-   The message or data elements are invalid.</span></span> <span data-ttu-id="449df-210">Oder <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection" /> ist nicht festgelegt, und weder ein Datenblob noch ein <see cref="T:System.Net.IPEndPoint" /> ist angegeben.</span><span class="sxs-lookup"><span data-stu-id="449df-210">Or, <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection" /> is not set and no data blob or <see cref="T:System.Net.IPEndPoint" /> is specified.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.Stop" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop();" />
      <MemberSignature Language="F#" Value="member this.Stop : unit -&gt; unit" Usage="peerNameRegistration.Stop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="449df-211">Hebt die Registrierung des in der <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" />-Eigenschaft angegebenen Peernamens in allen Clouds auf, in denen er registriert wurde.</span><span class="sxs-lookup"><span data-stu-id="449df-211">Unregisters the peer name specified in the <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> property from all the clouds in which it was registered.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="449df-212">Nachdem der Registrierungsvorgang beendet wurde, entspricht der Zustand des Registrierungs Objekts direkt dem Zustand, nachdem er vom Parameter losen Konstruktor erstellt wurde.</span><span class="sxs-lookup"><span data-stu-id="449df-212">After the registration process has been stopped, the registration object's state is equal to the state directly after being constructed by the parameterless constructor.</span></span> <span data-ttu-id="449df-213">In diesem Zustand wird angenommen, dass für alle zugehörigen Eigenschaften kein Wert vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="449df-213">In this state, all of its properties are assumed to have no value.</span></span> <span data-ttu-id="449df-214">Die- <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A> Methode kann verwendet werden, um Sie neu zu starten.</span><span class="sxs-lookup"><span data-stu-id="449df-214">The <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A> method may be used to restart it.</span></span>  
  
 <span data-ttu-id="449df-215">Es können mehrere Registrierungs Objekte für denselben Peernamen vorhanden sein.</span><span class="sxs-lookup"><span data-stu-id="449df-215">It is possible to have multiple registration objects for the same peer name.</span></span>  <span data-ttu-id="449df-216">In einem solchen Fall, wenn der Peername gesichert ist, stellt jede Instanz eine Registrierung in einer anderen PNRP-Cloud dar.</span><span class="sxs-lookup"><span data-stu-id="449df-216">In such a case, if the peer name is secured, each instance will represent a registration in a different PNRP cloud.</span></span>  <span data-ttu-id="449df-217">Wenn der PeerName jedoch nicht gesichert ist, kann er mehrmals in der gleichen Cloud registriert werden.</span><span class="sxs-lookup"><span data-stu-id="449df-217">However, if the peer name is not secured, it can be registered in the same cloud multiple times.</span></span>  
  
 <span data-ttu-id="449df-218">Wenn diese Instanz bereits beendet wurde, hat das Aufrufen dieser Methode keine Auswirkungen.</span><span class="sxs-lookup"><span data-stu-id="449df-218">If this instance is already stopped, calling this method has no effect.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="449df-219">Die <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" />-Eigenschaft wurde noch nicht registriert.</span><span class="sxs-lookup"><span data-stu-id="449df-219">The <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> property has not yet been registered.</span></span> <span data-ttu-id="449df-220">Dies tritt auf, wenn ein <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" />-Objekt mit dem leeren Konstruktor erstellt wird.</span><span class="sxs-lookup"><span data-stu-id="449df-220">This occurs when a <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> object is constructed using the empty constructor.</span></span> <span data-ttu-id="449df-221">Die <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" />-Eigenschaft muss in dieser Instanz vor dem Aufruf von <see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Start" /> aufgefüllt werden.</span><span class="sxs-lookup"><span data-stu-id="449df-221">The <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> property must be populated in this instance prior to calling <see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Start" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="449df-222">Für dieses Objekt wurde „Dispose()“ bereits aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="449df-222">This object had Dispose() called on it previously.</span></span></exception>
        <altmember cref="M:System.Net.PeerToPeer.PeerNameRegistration.Update" />
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (info As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberSignature Language="F#" Value="abstract member System.Runtime.Serialization.ISerializable.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit&#xA;override this.System.Runtime.Serialization.ISerializable.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="peerNameRegistration.System.Runtime.Serialization.ISerializable.GetObjectData (info, context)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="449df-223">Enthält die serialisierten Daten, die der <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" />-Instanz zugeordnet sind.</span><span class="sxs-lookup"><span data-stu-id="449df-223">Holds the serialized data associated with the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> instance.</span></span></param>
        <param name="context"><span data-ttu-id="449df-224">Enthält das Ziel für den serialisierten Datenstrom, der der <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" />-Instanz zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="449df-224">Contains the destination for the serialized stream associated with the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> instance.</span></span></param>
        <summary><span data-ttu-id="449df-225">Implementiert die <see cref="T:System.Runtime.Serialization.ISerializable" />-Schnittstelle und gibt die zum Serialisieren der <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" />-Instanz erforderlichen Daten zurück.</span><span class="sxs-lookup"><span data-stu-id="449df-225">Implements the <see cref="T:System.Runtime.Serialization.ISerializable" /> interface and returns the data needed to serialize the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> instance.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public void Update ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Update() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.Update" />
      <MemberSignature Language="VB.NET" Value="Public Sub Update ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Update();" />
      <MemberSignature Language="F#" Value="member this.Update : unit -&gt; unit" Usage="peerNameRegistration.Update " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="449df-226">Aktualisiert die <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> für einen Knoten, der in einem bestimmten <see cref="T:System.Net.PeerToPeer.Cloud" /> registriert ist.</span><span class="sxs-lookup"><span data-stu-id="449df-226">Updates the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> for a node registered with a specific <see cref="T:System.Net.PeerToPeer.Cloud" />.</span></span> <span data-ttu-id="449df-227">Das Update erfolgt mithilfe der in den Eigenschaften angegebenen Informationen.</span><span class="sxs-lookup"><span data-stu-id="449df-227">Update is performed using the information specified in the properties.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="449df-228">Alle Informationen, die für diesen vor dem-Befehl in der Cloud (n) registriert wurden <xref:System.Net.PeerToPeer.PeerName> , werden vollständig verworfen.</span><span class="sxs-lookup"><span data-stu-id="449df-228">All information registered in cloud(s) for this <xref:System.Net.PeerToPeer.PeerName> prior to the call is completely discarded.</span></span>  <span data-ttu-id="449df-229">Die neuen Daten werden nicht mit der vorhandenen Registrierung kombiniert.</span><span class="sxs-lookup"><span data-stu-id="449df-229">The new data is not combined with the existing registration.</span></span>  <span data-ttu-id="449df-230">Zum Aktualisieren eines <xref:System.Net.PeerToPeer.PeerNameRegistration> Aktualisieren Sie zunächst die Eigenschaften für diese Instanz, und dann wird diese Methode aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="449df-230">To update a <xref:System.Net.PeerToPeer.PeerNameRegistration>, first update the properties on this instance and then call this method.</span></span>  
  
 <span data-ttu-id="449df-231">Nachdem eine <xref:System.Net.PeerToPeer.PeerNameRecord> registriert wurde, kann die- <xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A> Eigenschaft nicht mehr aktualisiert werden.</span><span class="sxs-lookup"><span data-stu-id="449df-231">After a <xref:System.Net.PeerToPeer.PeerNameRecord> is registered, the <xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A> property cannot be updated.</span></span>  <span data-ttu-id="449df-232">Alle anderen Felder im Datensatz können aktualisiert werden.</span><span class="sxs-lookup"><span data-stu-id="449df-232">All other fields in the record may be updated.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="449df-233">Die <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" />-Eigenschaft ist auf <see langword="null" /> festgelegt.</span><span class="sxs-lookup"><span data-stu-id="449df-233">The <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> property is set to <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="449df-234">–   Die <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" />-Eigenschaft wurde noch nicht registriert.</span><span class="sxs-lookup"><span data-stu-id="449df-234">-   The <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> property has not yet been registered.</span></span> <span data-ttu-id="449df-235">Die <see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Update" />-Methode kann nicht aufgerufen werden, solange der in der <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" />-Eigenschaft angegebene Peername nicht in mindestens einer Cloud registriert ist.</span><span class="sxs-lookup"><span data-stu-id="449df-235">The <see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Update" /> method cannot be called until the peer name specified in the <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> property is registered in one or more clouds.</span></span>  
  
<span data-ttu-id="449df-236">–   Der in der <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" />-Eigenschaft angegebene Peername hat sich geändert, seit der entsprechende <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> registriert wurde.</span><span class="sxs-lookup"><span data-stu-id="449df-236">-   The peer name specified in the <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> property has changed since the corresponding <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> was registered.</span></span></exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException"><span data-ttu-id="449df-237">Ein Objekt, das verworfen wurde, kann nicht registriert werden.</span><span class="sxs-lookup"><span data-stu-id="449df-237">An object that has been disposed cannot be registered.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="449df-238">Eine <see cref="T:System.Net.PeerToPeer.PeerNameRecord" />-Eigenschaft ist auf <see langword="null" /> festgelegt.</span><span class="sxs-lookup"><span data-stu-id="449df-238">A <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> property is set to <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="UseAutoEndPointSelection">
      <MemberSignature Language="C#" Value="public bool UseAutoEndPointSelection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseAutoEndPointSelection" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection" />
      <MemberSignature Language="VB.NET" Value="Public Property UseAutoEndPointSelection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseAutoEndPointSelection { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseAutoEndPointSelection : bool with get, set" Usage="System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="449df-239">Ruft einen Wert ab, der angibt, ob beim Durchlaufen eines Peermeshs oder einer Peer-<see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" /> die automatische Endpunktauswahl verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="449df-239">Gets or sets a value that specifies whether to use automatic endpoint selection when traversing a peer mesh or <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" />.</span></span></summary>
        <value><span data-ttu-id="449df-240"><see langword="true" />, wenn die automatische Endpunktauswahl verwendet werden soll, <see langword="false" />, wenn zum Bestimmen eines Endpunkts eine andere Methode verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="449df-240"><see langword="true" /> if automatic endpoint selection is to be used; <see langword="false" /> if some other method will be used to determine an endpoint.</span></span> <span data-ttu-id="449df-241">Der Standardwert ist <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="449df-241">The default value is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="449df-242">Wenn die automatische Endpunkt Auswahl verwendet wird (diese Eigenschaft ist auf festgelegt `true` ) ohne Endpunkt Informationen, die vor dem Start von angegeben <xref:System.Net.PeerToPeer.PeerNameRegistration> wurden, wählt das System einzelne Endpunkte aus und veröffentlicht Sie mit dem zugeordneten Peernamen in allen verfügbaren Clouds.</span><span class="sxs-lookup"><span data-stu-id="449df-242">When auto endpoint selection is used (this property is set to `true`) with no endpoint information specified prior to the start of a <xref:System.Net.PeerToPeer.PeerNameRegistration>, the system chooses individual endpoints and publishes them with the associated peer name into all available clouds.</span></span>  <span data-ttu-id="449df-243">Wenn der Port nicht angegeben ist, wählt die automatische Auswahl NULL als aus <xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A> .</span><span class="sxs-lookup"><span data-stu-id="449df-243">If the port is not specified, auto selection chooses zero as the <xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A>.</span></span>  
  
 <span data-ttu-id="449df-244">Wenn die Option auf festgelegt `false` ist, wird die automatische Auswahl nicht ausgeführt, wie oben beschrieben.</span><span class="sxs-lookup"><span data-stu-id="449df-244">When set to `false`, auto selection as described above is not performed.</span></span>  <span data-ttu-id="449df-245">Dies ermöglicht es dem Registrierungsprozess, einen Peernamen zusammen mit einem Daten-BLOB (wie durch die-Eigenschaft angegeben) zu veröffentlichen <xref:System.Net.PeerToPeer.PeerNameRecord.Data%2A> .</span><span class="sxs-lookup"><span data-stu-id="449df-245">This enables the registration process to publish a peer name along with a data blob (as specified by the <xref:System.Net.PeerToPeer.PeerNameRecord.Data%2A> property).</span></span> <span data-ttu-id="449df-246">Dem Namen sind keine Endpunkte zugeordnet.</span><span class="sxs-lookup"><span data-stu-id="449df-246">No endpoints are associated with the name.</span></span>  
  
 <span data-ttu-id="449df-247">Wenn eine Registrierungsmethode verwendet wird, die automatisch die zu Registrier denden Adressen auswählt, gibt es keine Methode, um zu bestimmen, welche Adressen für welches <xref:System.Net.PeerToPeer.PeerName> Objekt registriert wurden.</span><span class="sxs-lookup"><span data-stu-id="449df-247">If a registration method is used that automatically selects the addresses to register, there is no method to determine what addresses for which the <xref:System.Net.PeerToPeer.PeerName> object was registered.</span></span>  <span data-ttu-id="449df-248">Das heißt, die <xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A> Eigenschaft wird nicht aktualisiert, um die ausgewählten Adressen widerzuspiegeln.</span><span class="sxs-lookup"><span data-stu-id="449df-248">That is, the <xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A> property will not be updated to reflect the addresses selected.</span></span>  
  
 <span data-ttu-id="449df-249">Das Aktualisieren dieser Eigenschaft nach dem Start der Peer Namen Registrierung hat keine Auswirkungen.</span><span class="sxs-lookup"><span data-stu-id="449df-249">Updating this property after peer name registration has started has no effect.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
