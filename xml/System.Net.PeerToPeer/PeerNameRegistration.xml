<Type Name="PeerNameRegistration" FullName="System.Net.PeerToPeer.PeerNameRegistration">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="75829d736e723c539ec8d09702e7dbbe8d84279b" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37477361" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class PeerNameRegistration : IDisposable, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable PeerNameRegistration extends System.Object implements class System.IDisposable, class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Net.PeerToPeer.PeerNameRegistration" />
  <TypeSignature Language="VB.NET" Value="Public Class PeerNameRegistration&#xA;Implements IDisposable, ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class PeerNameRegistration : IDisposable, System::Runtime::Serialization::ISerializable" />
  <TypeSignature Language="F#" Value="type PeerNameRegistration = class&#xA;    interface IDisposable&#xA;    interface ISerializable" />
  <AssemblyInfo>
    <AssemblyName>System.Net</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="77f67-101">Registers a <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> in a <see cref="T:System.Net.PeerToPeer.Cloud" /> or set of clouds.</span>
      <span class="sxs-lookup">
        <span data-stu-id="77f67-101">Registers a <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> in a <see cref="T:System.Net.PeerToPeer.Cloud" /> or set of clouds.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77f67-102">Registrierung erstellt (oder aktualisiert) alle Informationen, die zugeordnet ist eine <xref:System.Net.PeerToPeer.PeerName> in einer Peer-Cloud oder Clouds.</span><span class="sxs-lookup"><span data-stu-id="77f67-102">Registration creates (or updates) all the information that is associated with a <xref:System.Net.PeerToPeer.PeerName> in a peer cloud or clouds.</span></span>  
  
 <span data-ttu-id="77f67-103">Es ist möglich, mehrere <xref:System.Net.PeerToPeer.PeerNameRegistration> Objekte für den Peernamen.</span><span class="sxs-lookup"><span data-stu-id="77f67-103">It is possible to have multiple <xref:System.Net.PeerToPeer.PeerNameRegistration> objects for the same peer name.</span></span> <span data-ttu-id="77f67-104">In diesem Fall, wenn der Peernamen gesichert ist, jede Instanz stellt <xref:System.Net.PeerToPeer.PeerNameRegistration> in eine andere Cloud.</span><span class="sxs-lookup"><span data-stu-id="77f67-104">In such a case, if the peer name is secured, each instance represents <xref:System.Net.PeerToPeer.PeerNameRegistration> in a different cloud.</span></span> <span data-ttu-id="77f67-105">Aber wenn der Peername nicht gesichert ist, kann es in der gleichen Cloud mehrmals registriert werden vorausgesetzt, dass jeder Registrierung von einem anderen Prozess ist.</span><span class="sxs-lookup"><span data-stu-id="77f67-105">However, if the peer name is not secured, it can be registered in the same cloud multiple times, providing that each registration is from a different process.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="77f67-106">Initializes a new instance of the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77f67-106">Initializes a new instance of the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PeerNameRegistration ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PeerNameRegistration();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="77f67-107">Initializes a new default instance of the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77f67-107">Initializes a new default instance of the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77f67-108">Gibt eine neue Standardinstanz des Typs <xref:System.Net.PeerToPeer.PeerNameRegistration>.</span><span class="sxs-lookup"><span data-stu-id="77f67-108">Returns a new default instance of type <xref:System.Net.PeerToPeer.PeerNameRegistration>.</span></span> <span data-ttu-id="77f67-109">Es führt keine Peer-namensregistrierung während der Erstellung.</span><span class="sxs-lookup"><span data-stu-id="77f67-109">It does not perform peer name registration during construction.</span></span>  
  
 <span data-ttu-id="77f67-110">Nach der ein Objekt mit diesem Konstruktor instanziiert, sollte der Aufrufer die entsprechenden Felder in der Instanz vor dem Aufruf füllen <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A> oder <xref:System.Net.PeerToPeer.PeerNameRegistration.Stop%2A>.</span><span class="sxs-lookup"><span data-stu-id="77f67-110">After instantiating an object with this constructor, the caller should populate the appropriate fields in the instance prior to calling <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A> or <xref:System.Net.PeerToPeer.PeerNameRegistration.Stop%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PeerNameRegistration (System.Net.PeerToPeer.PeerName name, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.PeerToPeer.PeerName name, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As PeerName, port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PeerNameRegistration(System::Net::PeerToPeer::PeerName ^ name, int port);" />
      <MemberSignature Language="F#" Value="new System.Net.PeerToPeer.PeerNameRegistration : System.Net.PeerToPeer.PeerName * int -&gt; System.Net.PeerToPeer.PeerNameRegistration" Usage="new System.Net.PeerToPeer.PeerNameRegistration (name, port)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="77f67-111">The <see cref="T:System.Net.PeerToPeer.PeerName" /> object to register.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77f67-111">The <see cref="T:System.Net.PeerToPeer.PeerName" /> object to register.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="77f67-112">Integer value that specifies the port number to register.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77f67-112">Integer value that specifies the port number to register.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="77f67-113">Initializes a new instance of the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> class with the specified name and port number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77f67-113">Initializes a new instance of the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> class with the specified name and port number.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77f67-114">Aufrufen des Konstruktors erstellt eine Instanz, die verwendet wird, um alle Quell-Adressen (sowohl IPv4-IPv6and) zu registrieren und den angegebenen Port für alle Clouds, in denen der Peer gegenwärtig teilnimmt.</span><span class="sxs-lookup"><span data-stu-id="77f67-114">Calling this constructor creates an instance that will be used to register all source addresses (both IPv6and IPv4) and the provided port for all clouds in which the peer is currently participating.</span></span>  <span data-ttu-id="77f67-115">Wenn das Objekt erfolgreich erstellt, wird das angegebene <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A> und <xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A> werden aufgefüllt.</span><span class="sxs-lookup"><span data-stu-id="77f67-115">If the object is constructed successfully, the specified <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A> and <xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A> are populated.</span></span>  
  
 <span data-ttu-id="77f67-116">Wenn der Peername gesichert ist und zuvor, in registriert wurde eine <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A> der Peer gegenwärtig beteiligt ist, eine <xref:System.Net.PeerToPeer.PeerToPeerException> ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="77f67-116">If the peer name is secured and was previously registered in a <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A> the peer is currently participating in, an <xref:System.Net.PeerToPeer.PeerToPeerException> is thrown.</span></span>  
  
 <span data-ttu-id="77f67-117">Dieser Konstruktor erstellt lediglich ein <xref:System.Net.PeerToPeer.PeerNameRegistration> -Instanz die Registrierung wird nicht ausgeführt.</span><span class="sxs-lookup"><span data-stu-id="77f67-117">This constructor only creates a <xref:System.Net.PeerToPeer.PeerNameRegistration> instance; it does not perform the registration.</span></span> <span data-ttu-id="77f67-118">Nach dem Instanziieren des Registrierungsobjekts mit diesem Konstruktor und dem Auffüllen der Felder muss die Anwendung aufrufen <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A> um die tatsächlichen Registrierung auszuführen.</span><span class="sxs-lookup"><span data-stu-id="77f67-118">After instantiating the registration object with this constructor and populating its fields, the application must call <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A> to perform the actual registration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="77f67-119">The <paramref name="name" /> parameter cannot be <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77f67-119">The <paramref name="name" /> parameter cannot be <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="77f67-120">The specified port number is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77f67-120">The specified port number is less than zero.</span>
          </span>
          <span data-ttu-id="77f67-121">Port numbers must be greater than or equal to zero and less than 65,535 (0xFFFF).</span>
          <span class="sxs-lookup">
            <span data-stu-id="77f67-121">Port numbers must be greater than or equal to zero and less than 65,535 (0xFFFF).</span>
          </span>
        </exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">
          <span data-ttu-id="77f67-122">-   The <see cref="T:System.Net.PeerToPeer.PeerName" /> specified has already been registered from this host.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77f67-122">-   The <see cref="T:System.Net.PeerToPeer.PeerName" /> specified has already been registered from this host.</span>
          </span>
          <span data-ttu-id="77f67-123">-   The remote peer does not own the <see cref="P:System.Net.PeerToPeer.PeerName.Authority" /> for the supplied <see cref="T:System.Net.PeerToPeer.PeerName" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77f67-123">-   The remote peer does not own the <see cref="P:System.Net.PeerToPeer.PeerName.Authority" /> for the supplied <see cref="T:System.Net.PeerToPeer.PeerName" /> object.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PeerNameRegistration (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PeerNameRegistration(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new System.Net.PeerToPeer.PeerNameRegistration : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; System.Net.PeerToPeer.PeerNameRegistration" Usage="new System.Net.PeerToPeer.PeerNameRegistration (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">
          <span data-ttu-id="77f67-124">Reference to the object that holds the data needed to deserialize this instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77f67-124">Reference to the object that holds the data needed to deserialize this instance.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="77f67-125">Context that provides the means for deserializing the data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77f67-125">Context that provides the means for deserializing the data.</span>
          </span>
          <span data-ttu-id="77f67-126">Also referred to as the source of the serialized data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77f67-126">Also referred to as the source of the serialized data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="77f67-127">Initializes a new serializable <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77f67-127">Initializes a new serializable <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> object.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="N:System.Runtime.Serialization" />
        <altmember cref="T:System.Runtime.Serialization.StreamingContext" />
        <altmember cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PeerNameRegistration (System.Net.PeerToPeer.PeerName name, int port, System.Net.PeerToPeer.Cloud cloud);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.PeerToPeer.PeerName name, int32 port, class System.Net.PeerToPeer.Cloud cloud) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32,System.Net.PeerToPeer.Cloud)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PeerNameRegistration(System::Net::PeerToPeer::PeerName ^ name, int port, System::Net::PeerToPeer::Cloud ^ cloud);" />
      <MemberSignature Language="F#" Value="new System.Net.PeerToPeer.PeerNameRegistration : System.Net.PeerToPeer.PeerName * int * System.Net.PeerToPeer.Cloud -&gt; System.Net.PeerToPeer.PeerNameRegistration" Usage="new System.Net.PeerToPeer.PeerNameRegistration (name, port, cloud)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="port" Type="System.Int32" />
        <Parameter Name="cloud" Type="System.Net.PeerToPeer.Cloud" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="77f67-128">The <see cref="T:System.Net.PeerToPeer.PeerName" /> object to register.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77f67-128">The <see cref="T:System.Net.PeerToPeer.PeerName" /> object to register.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="77f67-129">Integer value that specifies the port number to register.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77f67-129">Integer value that specifies the port number to register.</span>
          </span>
        </param>
        <param name="cloud">
          <span data-ttu-id="77f67-130">
            <see cref="T:System.Net.PeerToPeer.Cloud" /> in which to register the peer name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77f67-130">
              <see cref="T:System.Net.PeerToPeer.Cloud" /> in which to register the peer name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="77f67-131">Initializes a new instance of the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> class with the specified peer name, port number, and <see cref="T:System.Net.PeerToPeer.Cloud" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77f67-131">Initializes a new instance of the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> class with the specified peer name, port number, and <see cref="T:System.Net.PeerToPeer.Cloud" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77f67-132">Aufrufen des Konstruktors erstellt eine Instanz, die verwendet wird, um alle Quell-Adressen (sowohl IPv6 und IPv4), den angegebenen Anschluss und dem angegebenen registrieren <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A>.</span><span class="sxs-lookup"><span data-stu-id="77f67-132">Calling this constructor creates an instance that will be used to register all source addresses (both IPv6 and IPv4), the provided port, and the specified <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A>.</span></span>  <span data-ttu-id="77f67-133">Die Eigenschaften werden aufgefüllt, wenn das Objekt wurde erfolgreich erstellt wird, mit dem angegebenen <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A>, <xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A> und <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A>.</span><span class="sxs-lookup"><span data-stu-id="77f67-133">If the object is constructed successfully, the properties are populated with the specified <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A>, <xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A> and <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A>.</span></span>  
  
 <span data-ttu-id="77f67-134">Wenn der Parameter für die Cloud ist `null`, der Namen registriert ist, mit der <xref:System.Net.PeerToPeer.Cloud.Available> Verknüpfung, die Standardwerte für initialisiert die <xref:System.Net.PeerToPeer.Cloud.Name%2A>, <xref:System.Net.PeerToPeer.Cloud.Scope%2A>, und <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A>.</span><span class="sxs-lookup"><span data-stu-id="77f67-134">If the cloud parameter is `null`, the name is registered using the <xref:System.Net.PeerToPeer.Cloud.Available> shortcut, which initializes default values for the <xref:System.Net.PeerToPeer.Cloud.Name%2A>, <xref:System.Net.PeerToPeer.Cloud.Scope%2A>, and <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A>.</span></span>  
  
 <span data-ttu-id="77f67-135">Nach der Instanziierung der <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A> Methode aufgerufen werden, um die Registrierung der <xref:System.Net.PeerToPeer.PeerName>.</span><span class="sxs-lookup"><span data-stu-id="77f67-135">After instantiation, the <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A> method must be called to register the <xref:System.Net.PeerToPeer.PeerName>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="77f67-136">The <paramref name="name" /> parameter cannot be <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77f67-136">The <paramref name="name" /> parameter cannot be <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="77f67-137">The specified port number is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77f67-137">The specified port number is less than zero.</span>
          </span>
          <span data-ttu-id="77f67-138">Port numbers must be greater than or equal to zero and less than 65,535 (0xFFFF).</span>
          <span class="sxs-lookup">
            <span data-stu-id="77f67-138">Port numbers must be greater than or equal to zero and less than 65,535 (0xFFFF).</span>
          </span>
        </exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">
          <span data-ttu-id="77f67-139">-   The <see cref="T:System.Net.PeerToPeer.PeerName" /> specified has already been registered from this host.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77f67-139">-   The <see cref="T:System.Net.PeerToPeer.PeerName" /> specified has already been registered from this host.</span>
          </span>
          <span data-ttu-id="77f67-140">-   The remote peer does not own the <see cref="P:System.Net.PeerToPeer.PeerName.Authority" /> for the supplied <see cref="T:System.Net.PeerToPeer.PeerName" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77f67-140">-   The remote peer does not own the <see cref="P:System.Net.PeerToPeer.PeerName.Authority" /> for the supplied <see cref="T:System.Net.PeerToPeer.PeerName" /> object.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Cloud">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.Cloud Cloud { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.PeerToPeer.Cloud Cloud" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" />
      <MemberSignature Language="VB.NET" Value="Public Property Cloud As Cloud" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::PeerToPeer::Cloud ^ Cloud { System::Net::PeerToPeer::Cloud ^ get(); void set(System::Net::PeerToPeer::Cloud ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Cloud : System.Net.PeerToPeer.Cloud with get, set" Usage="System.Net.PeerToPeer.PeerNameRegistration.Cloud" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Cloud</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="77f67-141">Gets or sets information in a <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" /> into which this <see cref="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" /> object will be registered.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77f67-141">Gets or sets information in a <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" /> into which this <see cref="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" /> object will be registered.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="77f67-142">Ein Objekt des Typs <see cref="T:System.Net.PeerToPeer.Cloud" /> , angibt, das die Peerwolke für die diese Registrierung definiert ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77f67-142">An object of type <see cref="T:System.Net.PeerToPeer.Cloud" /> that specifies the peer cloud for which this registration is defined.</span>
          </span>
          <span data-ttu-id="77f67-143">Diese Eigenschaft wird festgelegt, um <see langword="null" /> standardmäßig.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77f67-143">This property is set to <see langword="null" /> by default.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Comment">
      <MemberSignature Language="C#" Value="public string Comment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Comment" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.PeerNameRegistration.Comment" />
      <MemberSignature Language="VB.NET" Value="Public Property Comment As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Comment { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Comment : string with get, set" Usage="System.Net.PeerToPeer.PeerNameRegistration.Comment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="77f67-144">Gets or sets additional information about the <see cref="T:System.Net.PeerToPeer.PeerName" /> object that will be registered with the <see cref="T:System.Net.PeerToPeer.Cloud" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77f67-144">Gets or sets additional information about the <see cref="T:System.Net.PeerToPeer.PeerName" /> object that will be registered with the <see cref="T:System.Net.PeerToPeer.Cloud" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="77f67-145">Der Kommentar, der enthält zusätzliche Informationen zu den <see cref="T:System.Net.PeerToPeer.PeerName" /> zugeordnet werden soll die <see cref="T:System.Net.PeerToPeer.Cloud" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77f67-145">The comment that contains additional information about the <see cref="T:System.Net.PeerToPeer.PeerName" /> to associate with the <see cref="T:System.Net.PeerToPeer.Cloud" />.</span>
          </span>
          <span data-ttu-id="77f67-146">Diese Eigenschaft wird festgelegt, um <see langword="null" /> standardmäßig.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77f67-146">This property is set to <see langword="null" /> by default.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">
          <span data-ttu-id="77f67-147">The specified string value is greater than 39 Unicode characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77f67-147">The specified string value is greater than 39 Unicode characters.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Data">
      <MemberSignature Language="C#" Value="public byte[] Data { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] Data" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.PeerNameRegistration.Data" />
      <MemberSignature Language="VB.NET" Value="Public Property Data As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ Data { cli::array &lt;System::Byte&gt; ^ get(); void set(cli::array &lt;System::Byte&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Data : byte[] with get, set" Usage="System.Net.PeerToPeer.PeerNameRegistration.Data" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="77f67-148">Gets or sets application-defined binary data for the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77f67-148">Gets or sets application-defined binary data for the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="77f67-149">Ein Bytearray mit den dem Eintrag zugeordneten Binärdaten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77f67-149">An array of bytes that holds the binary data associated with the entry.</span>
          </span>
          <span data-ttu-id="77f67-150">Diese Eigenschaft wird festgelegt, um <see langword="null" /> standardmäßig.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77f67-150">This property is set to <see langword="null" /> by default.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77f67-151">Die maximale Menge an <xref:System.Net.PeerToPeer.PeerNameRegistration.Data%2A> , angegeben werden, dass beträgt 4.096 Bytes.</span><span class="sxs-lookup"><span data-stu-id="77f67-151">The maximum amount of <xref:System.Net.PeerToPeer.PeerNameRegistration.Data%2A> that can be supplied is 4,096 bytes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="77f67-152">The specified <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Data" /> is greater than 4096 bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77f67-152">The specified <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Data" /> is greater than 4096 bytes.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="77f67-153">Releases the resources used by the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77f67-153">Releases the resources used by the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77f67-154">Wenn ein Peer verlässt eine <xref:System.Net.PeerToPeer.Cloud>, die Cloud ist nicht mehr erforderlich die <xref:System.Net.PeerToPeer.PeerNameRegistration> dem Peer zugeordnete Objekt.</span><span class="sxs-lookup"><span data-stu-id="77f67-154">When a peer leaves a <xref:System.Net.PeerToPeer.Cloud>, the cloud no longer requires the <xref:System.Net.PeerToPeer.PeerNameRegistration> object associated with the peer.</span></span>  <span data-ttu-id="77f67-155">Gibt an, ob das Registrierungsobjekt angehalten oder freigegeben ist abhängig davon, ob die Cloud das Objekt, um diesem Peer oder eines anderen Peers registrieren wiederverwendet.</span><span class="sxs-lookup"><span data-stu-id="77f67-155">Whether the registration object is stopped or disposed is dependent upon whether the cloud will reuse the object to register this peer or another peer.</span></span> <span data-ttu-id="77f67-156">Es sind anderen Endpunkte in der Registrierungsobjekt, das mit dem der Peer-Hosts kommunizieren soll, muss diese Endpunkte in der Cloud registrieren treten vor Beenden oder Entfernen von diesem Objekt.</span><span class="sxs-lookup"><span data-stu-id="77f67-156">If there are any other endpoint(s) within the registration object with which the peer host expected to communicate, registering those endpoints within the cloud must occur before stopping or disposing of this object.</span></span>  
  
 <span data-ttu-id="77f67-157">Wenn die Cloud geht davon aus, die weitere Peers Registrieren der <xref:System.Net.PeerToPeer.PeerNameRegistration.Stop%2A> Methode wird empfohlen, wenn die Cloud nicht mehr Arbeitsspeicher benötigt, es zurückgegeben werden sollen für das Betriebssystem über die <xref:System.Net.PeerToPeer.PeerNameRegistration.Dispose%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="77f67-157">If the cloud expects to register more peers, the <xref:System.Net.PeerToPeer.PeerNameRegistration.Stop%2A> method is recommended; when the cloud no longer needs the memory, it should be returned to the operating system via the <xref:System.Net.PeerToPeer.PeerNameRegistration.Dispose%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="peerNameRegistration.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="77f67-158">Releases all resources used by the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77f67-158">Releases all resources used by the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> object.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="usage">
          <span data-ttu-id="77f67-159">
            <para>Rufen Sie die Dispose-Methode immer vor dem Zerstören der <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> Objekt.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="77f67-159">
              <para>lways call the Dispose method before destroying the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> object.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="peerNameRegistration.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="77f67-160">
            <see langword="True" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77f67-160">
              <see langword="True" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="77f67-161">Releases the unmanaged resources and optionally releases the managed resources used by the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77f67-161">Releases the unmanaged resources and optionally releases the managed resources used by the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> object.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="usage">
          <span data-ttu-id="77f67-162">
            <para>Rufen Sie die Dispose-Methode immer vor dem Freigeben des letzten Verweis auf die <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> Objekt.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="77f67-162">
              <para>Always call the Dispose method before releasing the last reference to the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> object.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="EndPointCollection">
      <MemberSignature Language="C#" Value="public System.Net.IPEndPointCollection EndPointCollection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.IPEndPointCollection EndPointCollection" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EndPointCollection As IPEndPointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::IPEndPointCollection ^ EndPointCollection { System::Net::IPEndPointCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EndPointCollection : System.Net.IPEndPointCollection" Usage="System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IPEndPointCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="77f67-163">Gets the collection of network endpoints for which the associated peer name is registered.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77f67-163">Gets the collection of network endpoints for which the associated peer name is registered.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="77f67-164">Ein <see cref="P:System.Net.PeerToPeer.PeerNameRecord.EndPointCollection" /> -Objekt, das die Netzwerkendpunkte enthält, für den der zugeordnete Peername registriert ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77f67-164">An <see cref="P:System.Net.PeerToPeer.PeerNameRecord.EndPointCollection" /> object that contains the network endpoints for which the associated peer name is registered.</span>
          </span>
          <span data-ttu-id="77f67-165">Sofern nicht ausdrücklich angegeben, wird der Standardwert für alle Eigenschaften <see langword="null" /> für Verweistypen zulässig.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77f67-165">Unless explicitly specified, the default value for all properties is <see langword="null" /> for reference types.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77f67-166">In der <xref:System.Net> -Namespace, eine <xref:System.Net.IPEndPoint> stellt einen Netzwerkendpunkt als eine IP-Adresse und einer Portnummer dar.</span><span class="sxs-lookup"><span data-stu-id="77f67-166">In the <xref:System.Net> namespace, an <xref:System.Net.IPEndPoint> represents a network endpoint as an IP address and a port number.</span></span>  <span data-ttu-id="77f67-167">Für die PNRP muss ein IP-Adresse und Port-Wert für jeden Endpunkt angegeben werden.</span><span class="sxs-lookup"><span data-stu-id="77f67-167">For PNRP, an IP address and port value must be provided for each endpoint.</span></span>  <span data-ttu-id="77f67-168">Die maximale Anzahl von Endpunkten, die bereitgestellt werden kann, ist 10.</span><span class="sxs-lookup"><span data-stu-id="77f67-168">The maximum number of endpoints that can be provided is ten.</span></span> <span data-ttu-id="77f67-169">Automatische Adressauswahl wird verwendet, wenn dieser Parameter ist `null`.</span><span class="sxs-lookup"><span data-stu-id="77f67-169">Automatic address selection is used when this parameter is `null`.</span></span>  
  
 <span data-ttu-id="77f67-170">Wenn eine Registrierungsmethode, der die Adressen verwendet wird, registrieren automatisch auswählt, ist es keine Methode zum möglich zu bestimmen, für die der Peername registriert wurde.</span><span class="sxs-lookup"><span data-stu-id="77f67-170">If a registration method is used that automatically selects the addresses to register, there is no method to determine theaddresses for which the peer name was registered.</span></span>  <span data-ttu-id="77f67-171">D. h. die <xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A> Eigenschaft werden nicht aktualisiert werden, um den ausgewählten Adressen.</span><span class="sxs-lookup"><span data-stu-id="77f67-171">That is, the <xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A> property will not be updated to reflect the addresses selected.</span></span>  
  
 <span data-ttu-id="77f67-172">Wenn ein PeerName für mehr als ein Knoten registriert wird jede <xref:System.Net.PeerToPeer.PeerNameRegistration> unterscheidet und das <xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A> für jede Registrierungsinstanz definierte Eigenschaft unterscheiden sich.</span><span class="sxs-lookup"><span data-stu-id="77f67-172">When a peer name is registered for more than one node, each <xref:System.Net.PeerToPeer.PeerNameRegistration> is distinct and the <xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A> property defined on each registration instance will be different.</span></span> <span data-ttu-id="77f67-173">Auch wenn eine <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A> ist in mehr als eine registriert <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A>, unterscheidet sich jeder Registrierung und die Auflistung von Endpunkten wird in der Regel für jede Instanz unterschiedlich sein.</span><span class="sxs-lookup"><span data-stu-id="77f67-173">Also, when a <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A> is registered into more than one <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A>, each registration is distinct and the collection of endpoints will usually be different for each instance.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <span data-ttu-id="77f67-174">
            <para>Die Liste der Endpunkte, die mit denen dieser Peer kommuniziert, ist nicht identisch mit der Liste der Endpunkte, die mit denen dieser Peername bekannt ist, die anders gespeichert wird.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="77f67-174">
              <para>The list of endpoints with which this peer will communicate is not the same as the list of endpoints by which this peer name is known, which is stored differently.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Net.IPEndPointCollection" />
        <altmember cref="P:System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection" />
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="protected virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="abstract member GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit&#xA;override this.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="peerNameRegistration.GetObjectData (info, context)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">
          <span data-ttu-id="77f67-175">Holds the serialized data associated with the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77f67-175">Holds the serialized data associated with the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> object.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="77f67-176">Contains destination for the serialized stream associated with the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77f67-176">Contains destination for the serialized stream associated with the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="77f67-177">Populates a serialization information object with the data needed to serialize the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77f67-177">Populates a serialization information object with the data needed to serialize the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> instance.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsRegistered">
      <MemberSignature Language="C#" Value="public bool IsRegistered ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsRegistered() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.IsRegistered" />
      <MemberSignature Language="VB.NET" Value="Public Function IsRegistered () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsRegistered();" />
      <MemberSignature Language="F#" Value="member this.IsRegistered : unit -&gt; bool" Usage="peerNameRegistration.IsRegistered " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="77f67-178">Gets or sets whether the peer name specified in the <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> property is registered with a specific <see cref="T:System.Net.PeerToPeer.Cloud" /> on a host.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77f67-178">Gets or sets whether the peer name specified in the <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> property is registered with a specific <see cref="T:System.Net.PeerToPeer.Cloud" /> on a host.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="77f67-179">If <see langword="true" />, the peer name is registered with a <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" /> for the peer host.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77f67-179">If <see langword="true" />, the peer name is registered with a <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" /> for the peer host.</span>
          </span>
          <span data-ttu-id="77f67-180">If <see langword="false" />, then the registration process can be started with <see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Start" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77f67-180">If <see langword="false" />, then the registration process can be started with <see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Start" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="77f67-181">An object that has been disposed already cannot be registered.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77f67-181">An object that has been disposed already cannot be registered.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.PeerToPeer.PeerNameResolver" />
      </Docs>
    </Member>
    <Member MemberName="PeerName">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.PeerName PeerName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.PeerToPeer.PeerName PeerName" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" />
      <MemberSignature Language="VB.NET" Value="Public Property PeerName As PeerName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::PeerToPeer::PeerName ^ PeerName { System::Net::PeerToPeer::PeerName ^ get(); void set(System::Net::PeerToPeer::PeerName ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PeerName : System.Net.PeerToPeer.PeerName with get, set" Usage="System.Net.PeerToPeer.PeerNameRegistration.PeerName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.PeerName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="77f67-182">Gets or sets the peer name to register with a peer cloud.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77f67-182">Gets or sets the peer name to register with a peer cloud.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="77f67-183">Ein Objekt des Typs <see cref="T:System.Net.PeerToPeer.PeerName" /> , die zugeordneten Werte enthält <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77f67-183">An object of type <see cref="T:System.Net.PeerToPeer.PeerName" /> that contains values associated with this <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> object.</span>
          </span>
          <span data-ttu-id="77f67-184">Sofern nicht ausdrücklich angegeben, wird der Standardwert für alle Eigenschaften <see langword="null" /> für Verweistypen zulässig.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77f67-184">Unless explicitly specified, the default value for all properties is <see langword="null" /> for reference types.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77f67-185">Ein PeerName kann für mehr als ein Knoten registriert werden; Jede <xref:System.Net.PeerToPeer.PeerNameRegistration> Instanz unterscheidet.</span><span class="sxs-lookup"><span data-stu-id="77f67-185">A peer name can be registered for more than one node; each <xref:System.Net.PeerToPeer.PeerNameRegistration> instance is distinct.</span></span> <span data-ttu-id="77f67-186">Die <xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A> Eigenschaft zugeordnet, die jeweils entsprechenden <xref:System.Net.PeerToPeer.PeerName> Instanz unterscheidet.</span><span class="sxs-lookup"><span data-stu-id="77f67-186">The <xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A> property associated with each corresponding <xref:System.Net.PeerToPeer.PeerName> instance is different.</span></span> <span data-ttu-id="77f67-187">Außerdem ist es möglich, ein PeerName für mehrere Clouds zu registrieren, die mit der Knoten verbunden ist, Jede diese Registrierungen unterscheidet.</span><span class="sxs-lookup"><span data-stu-id="77f67-187">Also, it is possible to register a peer name for more than one cloud that the node is connected to; each of these registrations is distinct.</span></span> <span data-ttu-id="77f67-188">Der Peername <xref:System.Net.IPEndPointCollection> unterscheiden sich in jede dieser Instanzen.</span><span class="sxs-lookup"><span data-stu-id="77f67-188">The peer name's <xref:System.Net.IPEndPointCollection> will be different in each of these instances.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.PeerToPeer.PeerName.CreateFromPeerHostName(System.String)" />
        <altmember cref="M:System.Net.PeerToPeer.PeerName.CreateRelativePeerName(System.Net.PeerToPeer.PeerName,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Port">
      <MemberSignature Language="C#" Value="public int Port { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Port" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.PeerNameRegistration.Port" />
      <MemberSignature Language="VB.NET" Value="Public Property Port As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Port { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Port : int with get, set" Usage="System.Net.PeerToPeer.PeerNameRegistration.Port" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="77f67-189">Gets or sets the [TCP/IP](http://go.microsoft.com/fwlink?LinkID=98458) port number used by the peer being registered into the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77f67-189">Gets or sets the [TCP/IP](http://go.microsoft.com/fwlink?LinkID=98458) port number used by the peer being registered into the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="77f67-190">Ein ganzzahliger Wert, der angibt, der TCP-Portnummer des der <see cref="T:System.Net.IPEndPoint" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77f67-190">An integer value indicating the TCP port number of the <see cref="T:System.Net.IPEndPoint" />.</span>
          </span>
          <span data-ttu-id="77f67-191">Sofern nicht ausdrücklich angegeben ist, ist der Standardwert für diese Eigenschaft 0 (null).</span>
          <span class="sxs-lookup">
            <span data-stu-id="77f67-191">Unless explicitly specified, the default value for this property is zero (0).</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77f67-192">Der Standardport verwendet wird, durch die <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A> Methode nur, wenn keine Endpunkte angegeben sind.</span><span class="sxs-lookup"><span data-stu-id="77f67-192">The default port is used by the <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A> method only when no endpoints are specified.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="77f67-193">The specified port value is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77f67-193">The specified port value is less than zero.</span>
          </span>
          <span data-ttu-id="77f67-194">Port numbers must be greater than or equal to zero and less than 65,535 (0xFFFF).</span>
          <span class="sxs-lookup">
            <span data-stu-id="77f67-194">Port numbers must be greater than or equal to zero and less than 65,535 (0xFFFF).</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.PeerToPeer.PeerName.CreateRelativePeerName(System.Net.PeerToPeer.PeerName,System.String)" />
        <altmember cref="P:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection" />
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public void Start ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Start() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.Start" />
      <MemberSignature Language="VB.NET" Value="Public Sub Start ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Start();" />
      <MemberSignature Language="F#" Value="member this.Start : unit -&gt; unit" Usage="peerNameRegistration.Start " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="77f67-195">Registers the <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> into the <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77f67-195">Registers the <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> into the <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" />.</span>
          </span>
          <span data-ttu-id="77f67-196">If no <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection" /> is specified, automatic address selection is used with the port value specified by the <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Port" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77f67-196">If no <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection" /> is specified, automatic address selection is used with the port value specified by the <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Port" /> property.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77f67-197">Die Methode registriert den Peernamen, angegeben der <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A> Eigenschaft mit dem alle Quell-Adressen und die <xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A> im Konstruktor angegebene.</span><span class="sxs-lookup"><span data-stu-id="77f67-197">The method registers the peer name specified in the <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A> property with all source addresses and the <xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A> specified in the constructor.</span></span> <span data-ttu-id="77f67-198">Von dieser Methode wird der Standardport verwendet, nur dann, wenn keine Endpunkte angegeben sind.</span><span class="sxs-lookup"><span data-stu-id="77f67-198">The default port is used by this method only when no endpoints are specified.</span></span>  
  
 <span data-ttu-id="77f67-199">Wenn die <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A> -Eigenschaft ist `null`, diese Methode registriert den Peernamen, der im angegebenen die <xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A> Eigenschaft mithilfe der <xref:System.Net.PeerToPeer.Cloud.Available> -Feld, das Standardwerte für initialisiert die <xref:System.Net.PeerToPeer.Cloud.Name%2A>, <xref:System.Net.PeerToPeer.Cloud.Scope%2A>, und <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A>.</span><span class="sxs-lookup"><span data-stu-id="77f67-199">If the <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A> property is `null`, this method registers the peer name specified in the <xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A> property using the <xref:System.Net.PeerToPeer.Cloud.Available> field, which initializes default values for the <xref:System.Net.PeerToPeer.Cloud.Name%2A>, <xref:System.Net.PeerToPeer.Cloud.Scope%2A>, and <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A>.</span></span>  
  
 <span data-ttu-id="77f67-200">Nach einem <xref:System.Net.PeerToPeer.PeerNameRegistration> Objekt gestartet wurde, die <xref:System.Net.PeerToPeer.PeerNameRegistration.Stop%2A> Methode wird verwendet, um ihn zu beenden.</span><span class="sxs-lookup"><span data-stu-id="77f67-200">After a <xref:System.Net.PeerToPeer.PeerNameRegistration> object has been started, the <xref:System.Net.PeerToPeer.PeerNameRegistration.Stop%2A> method is used to stop it.</span></span>  
  
 <span data-ttu-id="77f67-201">Zum Aktualisieren einer Registrierung, die <xref:System.Net.PeerToPeer.PeerNameRegistration.Update%2A> Methode muss verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="77f67-201">To update a registration, the <xref:System.Net.PeerToPeer.PeerNameRegistration.Update%2A> method must be used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="77f67-202">Das folgende Codebeispiel erstellt eine <xref:System.Net.PeerToPeer.PeerName> und registriert sie zusammen mit den Metadaten angegeben.</span><span class="sxs-lookup"><span data-stu-id="77f67-202">The following code example creates a <xref:System.Net.PeerToPeer.PeerName> and registers it along with the metadata specified.</span></span>  
  
 [!code-csharp[NCLPNRPRegisterPeerName#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPNRPRegisterPeerName/CS/RegisterPeerName.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="77f67-203">The <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> property is set to <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77f67-203">The <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> property is set to <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="77f67-204">This object had Dispose() called on it previously.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77f67-204">This object had Dispose() called on it previously.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">
          <span data-ttu-id="77f67-205">-   The <see cref="T:System.Net.PeerToPeer.PeerName" /> specified has already been registered.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77f67-205">-   The <see cref="T:System.Net.PeerToPeer.PeerName" /> specified has already been registered.</span>
          </span>
          <span data-ttu-id="77f67-206">The <see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Update" /> method must be used to update a registration.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77f67-206">The <see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Update" /> method must be used to update a registration.</span>
          </span>
          <span data-ttu-id="77f67-207">-   The remote peer does not own the <see cref="P:System.Net.PeerToPeer.PeerName.Authority" /> for the <see cref="T:System.Net.PeerToPeer.PeerName" /> specified.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77f67-207">-   The remote peer does not own the <see cref="P:System.Net.PeerToPeer.PeerName.Authority" /> for the <see cref="T:System.Net.PeerToPeer.PeerName" /> specified.</span>
          </span>
          <span data-ttu-id="77f67-208">-   Either the <see cref="T:System.Net.PeerToPeer.PeerName" /> or the <see cref="P:System.Net.PeerToPeer.PeerNameRecord.Data" /> is not specified; at least one needs to be provided.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77f67-208">-   Either the <see cref="T:System.Net.PeerToPeer.PeerName" /> or the <see cref="P:System.Net.PeerToPeer.PeerNameRecord.Data" /> is not specified; at least one needs to be provided.</span>
          </span>
          <span data-ttu-id="77f67-209">-   The message or data elements are invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77f67-209">-   The message or data elements are invalid.</span>
          </span>
          <span data-ttu-id="77f67-210">Or, <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection" /> is not set and no data blob or <see cref="T:System.Net.IPEndPoint" /> is specified.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77f67-210">Or, <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection" /> is not set and no data blob or <see cref="T:System.Net.IPEndPoint" /> is specified.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.Stop" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop();" />
      <MemberSignature Language="F#" Value="member this.Stop : unit -&gt; unit" Usage="peerNameRegistration.Stop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="77f67-211">Unregisters the peer name specified in the <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> property from all the clouds in which it was registered.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77f67-211">Unregisters the peer name specified in the <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> property from all the clouds in which it was registered.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77f67-212">Nachdem die Registrierung beendet wurde, entspricht des Zustands des Registrierungsobjekts in den Zustand direkt nach, die vom Standardkonstruktor erstellt wird.</span><span class="sxs-lookup"><span data-stu-id="77f67-212">After the registration process has been stopped, the registration object's state is equal to the state directly after being constructed by the default constructor.</span></span> <span data-ttu-id="77f67-213">In diesem Fall werden alle zugehörigen Eigenschaften als keinen Wert aufweisen.</span><span class="sxs-lookup"><span data-stu-id="77f67-213">In this state, all of its properties are assumed to have no value.</span></span> <span data-ttu-id="77f67-214">Die <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A> Methode kann verwendet werden, um ihn neu zu starten.</span><span class="sxs-lookup"><span data-stu-id="77f67-214">The <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A> method may be used to restart it.</span></span>  
  
 <span data-ttu-id="77f67-215">Es ist möglich, mehrere Registrierungsobjekte für Peernamen haben.</span><span class="sxs-lookup"><span data-stu-id="77f67-215">It is possible to have multiple registration objects for the same peer name.</span></span>  <span data-ttu-id="77f67-216">In diesem Fall wenn der Peername gesichert ist, stellt jede Instanz eine Registrierung in einer anderen PNRP-Wolke dar.</span><span class="sxs-lookup"><span data-stu-id="77f67-216">In such a case, if the peer name is secured, each instance will represent a registration in a different PNRP cloud.</span></span>  <span data-ttu-id="77f67-217">Aber wenn der Peername nicht gesichert ist, kann es in der gleichen Cloud mehrmals registriert werden.</span><span class="sxs-lookup"><span data-stu-id="77f67-217">However, if the peer name is not secured, it can be registered in the same cloud multiple times.</span></span>  
  
 <span data-ttu-id="77f67-218">Wenn diese Instanz bereits beendet ist, hat das Aufrufen dieser Methode keine Auswirkungen.</span><span class="sxs-lookup"><span data-stu-id="77f67-218">If this instance is already stopped, calling this method has no effect.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="77f67-219">The <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> property has not yet been registered.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77f67-219">The <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> property has not yet been registered.</span>
          </span>
          <span data-ttu-id="77f67-220">This occurs when a <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> object is constructed using the empty constructor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77f67-220">This occurs when a <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> object is constructed using the empty constructor.</span>
          </span>
          <span data-ttu-id="77f67-221">The <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> property must be populated in this instance prior to calling <see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Start" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77f67-221">The <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> property must be populated in this instance prior to calling <see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Start" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="77f67-222">This object had Dispose() called on it previously.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77f67-222">This object had Dispose() called on it previously.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.PeerToPeer.PeerNameRegistration.Update" />
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (info As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">
          <span data-ttu-id="77f67-223">Holds the serialized data associated with the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77f67-223">Holds the serialized data associated with the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> instance.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="77f67-224">Contains the destination for the serialized stream associated with the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77f67-224">Contains the destination for the serialized stream associated with the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="77f67-225">Implements the <see cref="T:System.Runtime.Serialization.ISerializable" /> interface and returns the data needed to serialize the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77f67-225">Implements the <see cref="T:System.Runtime.Serialization.ISerializable" /> interface and returns the data needed to serialize the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> instance.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public void Update ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Update() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.Update" />
      <MemberSignature Language="VB.NET" Value="Public Sub Update ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Update();" />
      <MemberSignature Language="F#" Value="member this.Update : unit -&gt; unit" Usage="peerNameRegistration.Update " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="77f67-226">Updates the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> for a node registered with a specific <see cref="T:System.Net.PeerToPeer.Cloud" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77f67-226">Updates the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> for a node registered with a specific <see cref="T:System.Net.PeerToPeer.Cloud" />.</span>
          </span>
          <span data-ttu-id="77f67-227">Update is performed using the information specified in the properties.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77f67-227">Update is performed using the information specified in the properties.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77f67-228">Alle Informationen, die in Wolken dafür registriert <xref:System.Net.PeerToPeer.PeerName> vor dem Aufruf wird vollständig verworfen.</span><span class="sxs-lookup"><span data-stu-id="77f67-228">All information registered in cloud(s) for this <xref:System.Net.PeerToPeer.PeerName> prior to the call is completely discarded.</span></span>  <span data-ttu-id="77f67-229">Die neuen Daten ist nicht mit der Registrierung von vorhandenen kombiniert.</span><span class="sxs-lookup"><span data-stu-id="77f67-229">The new data is not combined with the existing registration.</span></span>  <span data-ttu-id="77f67-230">Aktualisieren einer <xref:System.Net.PeerToPeer.PeerNameRegistration>, aktualisieren Sie zunächst die Eigenschaften für diese Instanz, und rufen Sie diese Methode.</span><span class="sxs-lookup"><span data-stu-id="77f67-230">To update a <xref:System.Net.PeerToPeer.PeerNameRegistration>, first update the properties on this instance and then call this method.</span></span>  
  
 <span data-ttu-id="77f67-231">Nach einem <xref:System.Net.PeerToPeer.PeerNameRecord> registriert ist, die <xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A> Eigenschaft kann nicht aktualisiert werden.</span><span class="sxs-lookup"><span data-stu-id="77f67-231">After a <xref:System.Net.PeerToPeer.PeerNameRecord> is registered, the <xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A> property cannot be updated.</span></span>  <span data-ttu-id="77f67-232">Alle anderen Felder im Datensatz können aktualisiert werden.</span><span class="sxs-lookup"><span data-stu-id="77f67-232">All other fields in the record may be updated.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="77f67-233">The <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> property is set to <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77f67-233">The <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> property is set to <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="77f67-234">-   The <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> property has not yet been registered.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77f67-234">-   The <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> property has not yet been registered.</span>
          </span>
          <span data-ttu-id="77f67-235">The <see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Update" /> method cannot be called until the peer name specified in the <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> property is registered in one or more clouds.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77f67-235">The <see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Update" /> method cannot be called until the peer name specified in the <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> property is registered in one or more clouds.</span>
          </span>
          <span data-ttu-id="77f67-236">-   The peer name specified in the <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> property has changed since the corresponding <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> was registered.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77f67-236">-   The peer name specified in the <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> property has changed since the corresponding <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> was registered.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">
          <span data-ttu-id="77f67-237">An object that has been disposed cannot be registered.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77f67-237">An object that has been disposed cannot be registered.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="77f67-238">A <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> property is set to <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77f67-238">A <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> property is set to <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="UseAutoEndPointSelection">
      <MemberSignature Language="C#" Value="public bool UseAutoEndPointSelection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseAutoEndPointSelection" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection" />
      <MemberSignature Language="VB.NET" Value="Public Property UseAutoEndPointSelection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseAutoEndPointSelection { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseAutoEndPointSelection : bool with get, set" Usage="System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="77f67-239">Gets or sets a value that specifies whether to use automatic endpoint selection when traversing a peer mesh or <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77f67-239">Gets or sets a value that specifies whether to use automatic endpoint selection when traversing a peer mesh or <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="77f67-240">
            <see langword="True" /> Wenn automatische Endpunktauswahl verwendet werden soll; <see langword="false" /> Wenn eine andere Methode zum Bestimmen eines Endpunkts verwendet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77f67-240">
              <see langword="True" /> if automatic endpoint selection is to be used; <see langword="false" /> if some other method will be used to determine an endpoint.</span>
          </span>
          <span data-ttu-id="77f67-241">Der Standardwert ist <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="77f67-241">The default value is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77f67-242">Wenn die automatische Endpunktauswahl verwendet wird (diese Eigenschaft wird festgelegt, um `true`) keine vor dem Start der angegebenen Endpunktinformationen eine <xref:System.Net.PeerToPeer.PeerNameRegistration>, das System Wählt einzelne Endpunkte und veröffentlicht sie mit der zugeordnete Peername in alle verfügbar Clouds.</span><span class="sxs-lookup"><span data-stu-id="77f67-242">When auto endpoint selection is used (this property is set to `true`) with no endpoint information specified prior to the start of a <xref:System.Net.PeerToPeer.PeerNameRegistration>, the system chooses individual endpoints and publishes them with the associated peer name into all available clouds.</span></span>  <span data-ttu-id="77f67-243">Wenn kein Port angegeben ist wird, die automatische Endpunktauswahl NULL die <xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A>.</span><span class="sxs-lookup"><span data-stu-id="77f67-243">If the port is not specified, auto selection chooses zero as the <xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A>.</span></span>  
  
 <span data-ttu-id="77f67-244">Bei Festlegung auf `false`, oben beschriebene automatische Auswahl wird nicht ausgeführt.</span><span class="sxs-lookup"><span data-stu-id="77f67-244">When set to `false`, auto selection as described above is not performed.</span></span>  <span data-ttu-id="77f67-245">Hierdurch kann die Registrierung zum Veröffentlichen eines Peernamens zusammen mit einem Daten-Blob (gemäß der <xref:System.Net.PeerToPeer.PeerNameRecord.Data%2A> Eigenschaft).</span><span class="sxs-lookup"><span data-stu-id="77f67-245">This enables the registration process to publish a peer name along with a data blob (as specified by the <xref:System.Net.PeerToPeer.PeerNameRecord.Data%2A> property).</span></span> <span data-ttu-id="77f67-246">Es sind keine Endpunkte mit dem Namen verknüpft.</span><span class="sxs-lookup"><span data-stu-id="77f67-246">No endpoints are associated with the name.</span></span>  
  
 <span data-ttu-id="77f67-247">Wenn eine Registrierungsmethode, die die Adressen verwendet wird registrieren automatisch ausgewählt, es ist keine Methode, um zu bestimmen, welche für die Adressen der <xref:System.Net.PeerToPeer.PeerName> -Objekt registriert wurde.</span><span class="sxs-lookup"><span data-stu-id="77f67-247">If a registration method is used that automatically selects the addresses to register, there is no method to determine what addresses for which the <xref:System.Net.PeerToPeer.PeerName> object was registered.</span></span>  <span data-ttu-id="77f67-248">D. h. die <xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A> Eigenschaft werden nicht aktualisiert werden, um den ausgewählten Adressen.</span><span class="sxs-lookup"><span data-stu-id="77f67-248">That is, the <xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A> property will not be updated to reflect the addresses selected.</span></span>  
  
 <span data-ttu-id="77f67-249">Diese Eigenschaft aktualisieren, nachdem die Peer-namensregistrierung gestartet wurde, hat keine Auswirkungen.</span><span class="sxs-lookup"><span data-stu-id="77f67-249">Updating this property after peer name registration has started has no effect.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>