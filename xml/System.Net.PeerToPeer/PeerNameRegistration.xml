<Type Name="PeerNameRegistration" FullName="System.Net.PeerToPeer.PeerNameRegistration">
  <Metadata><Meta Name="ms.openlocfilehash" Value="71f80762376562e4dfa706dcf515c1e3fbd7eca6" /><Meta Name="ms.sourcegitcommit" Value="e7974886b08aa83a8fb461e8550f31a7d4331ee3" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/23/2019" /><Meta Name="ms.locfileid" Value="68399386" /></Metadata><TypeSignature Language="C#" Value="public class PeerNameRegistration : IDisposable, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable PeerNameRegistration extends System.Object implements class System.IDisposable, class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Net.PeerToPeer.PeerNameRegistration" />
  <TypeSignature Language="VB.NET" Value="Public Class PeerNameRegistration&#xA;Implements IDisposable, ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class PeerNameRegistration : IDisposable, System::Runtime::Serialization::ISerializable" />
  <TypeSignature Language="F#" Value="type PeerNameRegistration = class&#xA;    interface IDisposable&#xA;    interface ISerializable" />
  <AssemblyInfo>
    <AssemblyName>System.Net</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Registriert einen <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> in einer <see cref="T:System.Net.PeerToPeer.Cloud" /> oder in einem Satz von Wolken.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Registrierung erstellt (oder aktualisiert) alle Informationen, die einer <xref:System.Net.PeerToPeer.PeerName> in einer peercloud oder in Clouds zugeordnet sind.  
  
 Es können mehrere <xref:System.Net.PeerToPeer.PeerNameRegistration> -Objekte für denselben Peernamen vorhanden sein. In einem solchen Fall stellt jede Instanz in einer anderen Cloud dar <xref:System.Net.PeerToPeer.PeerNameRegistration> , wenn der PeerName geschützt ist. Wenn der PeerName jedoch nicht gesichert ist, kann er mehrmals in der gleichen Cloud registriert werden, sodass jede Registrierung von einem anderen Prozess aus erfolgt.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" />-Klasse.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PeerNameRegistration ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PeerNameRegistration();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Standardinstanz der <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gibt eine neue Standard Instanz des Typs <xref:System.Net.PeerToPeer.PeerNameRegistration>zurück. Die Peer Namen Registrierung wird während der Erstellung nicht durchgeführt.  
  
 Nachdem ein Objekt mit diesem Konstruktor instanziiert wurde, sollte der Aufrufer die entsprechenden Felder in der-Instanz Auffüllen <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A> , <xref:System.Net.PeerToPeer.PeerNameRegistration.Stop%2A>bevor oder aufgerufen wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PeerNameRegistration (System.Net.PeerToPeer.PeerName name, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.PeerToPeer.PeerName name, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As PeerName, port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PeerNameRegistration(System::Net::PeerToPeer::PeerName ^ name, int port);" />
      <MemberSignature Language="F#" Value="new System.Net.PeerToPeer.PeerNameRegistration : System.Net.PeerToPeer.PeerName * int -&gt; System.Net.PeerToPeer.PeerNameRegistration" Usage="new System.Net.PeerToPeer.PeerNameRegistration (name, port)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="name" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="name">Das zu registrierende <see cref="T:System.Net.PeerToPeer.PeerName" />-Objekt.</param>
        <param name="port">Integer-Wert, der die zu registrierende Portnummer angibt.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" />-Klasse mit dem angegebenen Namen und der angegebenen Portnummer.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch Aufrufen dieses Konstruktors wird eine-Instanz erstellt, die zum Registrieren aller Quelladressen (sowohl IPv6and IPv4) als auch des bereitgestellten Ports für alle Clouds verwendet wird, an denen der Peer derzeit teilnimmt.  Wenn das Objekt erfolgreich erstellt wurde, werden die <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A> angegebenen <xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A> und aufgefüllt.  
  
 Wenn der Peername gesichert ist und zuvor in einem <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A> registriert wurde, wird ein <xref:System.Net.PeerToPeer.PeerToPeerException> -Peer ausgelöst.  
  
 Dieser Konstruktor erstellt nur eine <xref:System.Net.PeerToPeer.PeerNameRegistration> -Instanz. die Registrierung wird nicht durchgeführt. Nachdem das Registrierungs Objekt mit diesem Konstruktor instanziiert und seine Felder aufgefüllt wurde, muss die Anwendung aufgerufen <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A> werden, um die tatsächliche Registrierung auszuführen.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="name" />-Parameter darf nicht <see langword="null" /> sein.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Die angegebene Portnummer ist kleiner als 0 (null).  Portnummern müssen größer oder gleich 0 (null) und kleiner als 65.535 (0xFFFF) sein.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">–   Der angegebene <see cref="T:System.Net.PeerToPeer.PeerName" /> wurde bereits auf diesem Host registriert.  
  
–   Der Remotepeer besitzt nicht die <see cref="P:System.Net.PeerToPeer.PeerName.Authority" /> für das angegebene <see cref="T:System.Net.PeerToPeer.PeerName" />-Objekt.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PeerNameRegistration (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PeerNameRegistration(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new System.Net.PeerToPeer.PeerNameRegistration : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; System.Net.PeerToPeer.PeerNameRegistration" Usage="new System.Net.PeerToPeer.PeerNameRegistration (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">Verweis auf das Objekt, das die zum Deserialisieren dieser Instanz benötigten Daten enthält.</param>
        <param name="context">Kontext, der das Deserialisieren der Daten ermöglicht. Auch als Quelle der serialisierten Daten bezeichnet.</param>
        <summary>Initialisiert ein neues serialisierbares <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" />-Objekt.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="N:System.Runtime.Serialization" />
        <altmember cref="T:System.Runtime.Serialization.StreamingContext" />
        <altmember cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PeerNameRegistration (System.Net.PeerToPeer.PeerName name, int port, System.Net.PeerToPeer.Cloud cloud);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.PeerToPeer.PeerName name, int32 port, class System.Net.PeerToPeer.Cloud cloud) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32,System.Net.PeerToPeer.Cloud)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PeerNameRegistration(System::Net::PeerToPeer::PeerName ^ name, int port, System::Net::PeerToPeer::Cloud ^ cloud);" />
      <MemberSignature Language="F#" Value="new System.Net.PeerToPeer.PeerNameRegistration : System.Net.PeerToPeer.PeerName * int * System.Net.PeerToPeer.Cloud -&gt; System.Net.PeerToPeer.PeerNameRegistration" Usage="new System.Net.PeerToPeer.PeerNameRegistration (name, port, cloud)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="port" Type="System.Int32" />
        <Parameter Name="cloud" Type="System.Net.PeerToPeer.Cloud" />
      </Parameters>
      <Docs>
        <param name="name">Das zu registrierende <see cref="T:System.Net.PeerToPeer.PeerName" />-Objekt.</param>
        <param name="port">Integer-Wert, der die zu registrierende Portnummer angibt.</param>
        <param name="cloud"><see cref="T:System.Net.PeerToPeer.Cloud" />, wo der Peername registriert werden soll.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" />-Klasse mit Peernamen, Portnummer und <see cref="T:System.Net.PeerToPeer.Cloud" /> laut Angabe.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch Aufrufen dieses Konstruktors wird eine-Instanz erstellt, die zum Registrieren aller Quelladressen (sowohl IPv6 als auch IPv4), des bereitgestellten Ports und <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A>des angegebenen verwendet wird.  Wenn das Objekt erfolgreich erstellt wurde, werden die Eigenschaften mit dem angegebenen, <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A> <xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A> dem angegebenen <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A>und dem aufgefüllt.  
  
 Wenn der Cloud-Parameter `null`ist, wird der Name mithilfe der <xref:System.Net.PeerToPeer.Cloud.Available> Verknüpfung registriert, von der Standardwerte für <xref:System.Net.PeerToPeer.Cloud.Name%2A>, <xref:System.Net.PeerToPeer.Cloud.Scope%2A>und <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A>initialisiert werden.  
  
 Nach der Instanziierung muss <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A> die-Methode aufgerufen werden, um <xref:System.Net.PeerToPeer.PeerName>die zu registrieren.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="name" />-Parameter darf nicht <see langword="null" /> sein.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Die angegebene Portnummer ist kleiner als 0 (null).  Portnummern müssen größer oder gleich 0 (null) und kleiner als 65.535 (0xFFFF) sein.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">–   Der angegebene <see cref="T:System.Net.PeerToPeer.PeerName" /> wurde bereits auf diesem Host registriert.  
  
–   Der Remotepeer besitzt nicht die <see cref="P:System.Net.PeerToPeer.PeerName.Authority" /> für das angegebene <see cref="T:System.Net.PeerToPeer.PeerName" />-Objekt.</exception>
      </Docs>
    </Member>
    <Member MemberName="Cloud">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.Cloud Cloud { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.PeerToPeer.Cloud Cloud" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" />
      <MemberSignature Language="VB.NET" Value="Public Property Cloud As Cloud" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::PeerToPeer::Cloud ^ Cloud { System::Net::PeerToPeer::Cloud ^ get(); void set(System::Net::PeerToPeer::Cloud ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Cloud : System.Net.PeerToPeer.Cloud with get, set" Usage="System.Net.PeerToPeer.PeerNameRegistration.Cloud" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Cloud</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft Informationen in einer <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" /> ab, in der dieses <see cref="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" />-Objekt registriert wird, oder legt diese fest.</summary>
        <value>Ein Objekt vom Typ <see cref="T:System.Net.PeerToPeer.Cloud" />, das die Peerwolke angibt, für die diese Registrierung definiert ist. Diese Eigenschaft ist standardmäßig auf <see langword="null" /> festgelegt.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Comment">
      <MemberSignature Language="C#" Value="public string Comment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Comment" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.PeerNameRegistration.Comment" />
      <MemberSignature Language="VB.NET" Value="Public Property Comment As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Comment { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Comment : string with get, set" Usage="System.Net.PeerToPeer.PeerNameRegistration.Comment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft zusätzliche Informationen über das <see cref="T:System.Net.PeerToPeer.PeerName" />-Objekt ab, das bei der <see cref="T:System.Net.PeerToPeer.Cloud" /> registriert wird, oder legt diese fest.</summary>
        <value>Der Kommentar, der zusätzliche Informationen über den <see cref="T:System.Net.PeerToPeer.PeerName" /> enthält, der der <see cref="T:System.Net.PeerToPeer.Cloud" /> zugeordnet werden soll. Diese Eigenschaft ist standardmäßig auf <see langword="null" /> festgelegt.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">Der angegebene Zeichenfolgenwert ist größer als 39 Unicode-Zeichen.</exception>
      </Docs>
    </Member>
    <Member MemberName="Data">
      <MemberSignature Language="C#" Value="public byte[] Data { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] Data" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.PeerNameRegistration.Data" />
      <MemberSignature Language="VB.NET" Value="Public Property Data As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ Data { cli::array &lt;System::Byte&gt; ^ get(); void set(cli::array &lt;System::Byte&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Data : byte[] with get, set" Usage="System.Net.PeerToPeer.PeerNameRegistration.Data" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft anwendungsdefinierte Binärdaten für das <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" />-Objekt ab oder legt diese fest.</summary>
        <value>Ein Bytearray mit den dem Eintrag zugeordneten Binärdaten. Diese Eigenschaft ist standardmäßig auf <see langword="null" /> festgelegt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die maximale Menge <xref:System.Net.PeerToPeer.PeerNameRegistration.Data%2A> , die angegeben werden kann, beträgt 4.096 Bytes.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Die angegebenen <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Data" /> sind größer als 4096 Bytes.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Gibt die vom <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" />-Objekt verwendeten Ressourcen frei.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn ein Peer einen <xref:System.Net.PeerToPeer.Cloud>verlässt, benötigt die Cloud nicht mehr das dem <xref:System.Net.PeerToPeer.PeerNameRegistration> Peer zugeordnete Objekt.  Ob das Registrierungs Objekt beendet oder verworfen wird, hängt davon ab, ob die Cloud das Objekt zum Registrieren dieses Peers oder eines anderen Peers wieder verwendet. Wenn ein anderer Endpunkt innerhalb des Registrierungs Objekts vorhanden ist, mit dem der Peerhost kommunizieren soll, muss die Registrierung dieser Endpunkte in der Cloud erfolgen, bevor dieses Objekt beendet oder verworfen wird.  
  
 Wenn die Cloud erwartet, dass mehr Peers registriert werden <xref:System.Net.PeerToPeer.PeerNameRegistration.Stop%2A> , wird die-Methode empfohlen. wenn die Cloud den Arbeitsspeicher nicht mehr benötigt, muss Sie über die <xref:System.Net.PeerToPeer.PeerNameRegistration.Dispose%2A> -Methode an das Betriebssystem zurückgegeben werden.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="peerNameRegistration.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt alle vom <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" />-Objekt verwendeten Ressourcen frei.</summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="usage"><para>Ruft immer die verwerfen-Methode auf, <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> bevor das Objekt zerstört wird.</para></block>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="peerNameRegistration.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><see langword="true" />, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben, <see langword="false" />, um ausschließlich nicht verwaltete Ressourcen freizugeben.</param>
        <summary>Gibt die vom <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" />-Objekt verwendeten nicht verwalteten Ressourcen und optional die verwalteten Ressourcen frei.</summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="usage"><para>Ruft immer die verwerfen-Methode auf, bevor der letzte Verweis <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> auf das Objekt freigegeben wird.</para></block>
      </Docs>
    </Member>
    <Member MemberName="EndPointCollection">
      <MemberSignature Language="C#" Value="public System.Net.IPEndPointCollection EndPointCollection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.IPEndPointCollection EndPointCollection" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EndPointCollection As IPEndPointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::IPEndPointCollection ^ EndPointCollection { System::Net::IPEndPointCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EndPointCollection : System.Net.IPEndPointCollection" Usage="System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IPEndPointCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Auflistung von Netzwerkendpunkten ab, für die der zugeordnete Peername registriert wird.</summary>
        <value>Ein <see cref="P:System.Net.PeerToPeer.PeerNameRecord.EndPointCollection" />-Objekt, das die Netzwerkendpunkte enthält, für die der zugeordnete Peername registriert wird. Sofern nicht ausdrücklich angegeben, ist für Referenztypen der Standardwert aller Eigenschaften <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Im- <xref:System.Net.IPEndPoint> Namespace stellt ein Netzwerk Endpunkt als IP-Adresse und Portnummer dar. <xref:System.Net>  Für PNRP müssen für jeden Endpunkt eine IP-Adresse und ein Portwert angegeben werden.  Die maximale Anzahl von Endpunkten, die bereitgestellt werden können, ist zehn. Bei diesem Parameter `null`wird die automatische Adressauswahl verwendet.  
  
 Wenn eine Registrierungsmethode verwendet wird, die automatisch die zu Registrier denden Adressen auswählt, gibt es keine Methode zum Bestimmen der Adressen, für die der Peername registriert wurde.  Das heißt, die <xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A> Eigenschaft wird nicht aktualisiert, um die ausgewählten Adressen widerzuspiegeln.  
  
 Wenn ein PeerName für mehr als einen Knoten registriert ist, <xref:System.Net.PeerToPeer.PeerNameRegistration> ist jeder unterschiedlich <xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A> , und die für jede Registrierungs Instanz definierte Eigenschaft wird unterschiedlich sein. Wenn ein <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A> in mehr als einem <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A>registriert ist, ist jede Registrierung eindeutig, und die Auflistung der Endpunkte unterscheidet sich in der Regel für jede Instanz.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage"><para>Die Liste der Endpunkte, mit denen dieser Peer kommuniziert, ist nicht identisch mit der Liste der Endpunkte, für die dieser PeerName bekannt ist, was unterschiedlich gespeichert wird.</para></block>
        <altmember cref="T:System.Net.IPEndPointCollection" />
        <altmember cref="P:System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection" />
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="protected virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="abstract member GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit&#xA;override this.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="peerNameRegistration.GetObjectData (info, context)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">Enthält die serialisierten Daten, die dem <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" />-Objekt zugeordnet sind.</param>
        <param name="context">Enthält das Ziel für den serialisierten Datenstrom, der dem <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" />-Objekt zugeordnet ist.</param>
        <summary>Füllt ein Serialisierungsinformationsobjekt mit den Daten, die zum Serialisieren der <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" />-Instanz erforderlich sind.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsRegistered">
      <MemberSignature Language="C#" Value="public bool IsRegistered ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsRegistered() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.IsRegistered" />
      <MemberSignature Language="VB.NET" Value="Public Function IsRegistered () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsRegistered();" />
      <MemberSignature Language="F#" Value="member this.IsRegistered : unit -&gt; bool" Usage="peerNameRegistration.IsRegistered " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft ab oder legt fest, ob der in der <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" />-Eigenschaft angegebene Peername bei einer bestimmten <see cref="T:System.Net.PeerToPeer.Cloud" /> auf einem Host registriert ist.</summary>
        <returns>Wenn der Wert <see langword="true" /> ist, wird der Peername bei einer <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" /> für den Peerhost registriert. Wenn der Wert <see langword="false" /> ist, kann die Registrierung mit <see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Start" /> gestartet werden.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">Ein Objekt, das bereits freigegeben wurde, kann nicht registriert werden.</exception>
        <altmember cref="T:System.Net.PeerToPeer.PeerNameResolver" />
      </Docs>
    </Member>
    <Member MemberName="PeerName">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.PeerName PeerName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.PeerToPeer.PeerName PeerName" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" />
      <MemberSignature Language="VB.NET" Value="Public Property PeerName As PeerName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::PeerToPeer::PeerName ^ PeerName { System::Net::PeerToPeer::PeerName ^ get(); void set(System::Net::PeerToPeer::PeerName ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PeerName : System.Net.PeerToPeer.PeerName with get, set" Usage="System.Net.PeerToPeer.PeerNameRegistration.PeerName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.PeerName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Peernamen ab, der bei einer Peerwolke registriert werden soll, oder legt diesen fest.</summary>
        <value>Ein Objekt vom Typ <see cref="T:System.Net.PeerToPeer.PeerName" />, das diesem <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" />-Objekt zugeordnete Werte enthält. Sofern nicht ausdrücklich angegeben, ist für Referenztypen der Standardwert aller Eigenschaften <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein PeerName kann für mehr als einen Knoten registriert werden. Jede <xref:System.Net.PeerToPeer.PeerNameRegistration> Instanz ist eindeutig. Die <xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A> -Eigenschaft, die jeder <xref:System.Net.PeerToPeer.PeerName> entsprechenden-Instanz zugeordnet ist, unterscheidet sich Außerdem ist es möglich, einen Peer Namen für mehr als eine Cloud zu registrieren, mit der der Knoten verbunden ist. Jede dieser Registrierungen ist eindeutig. Der PeerName <xref:System.Net.IPEndPointCollection> unterscheidet sich in jeder dieser Instanzen.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.PeerToPeer.PeerName.CreateFromPeerHostName(System.String)" />
        <altmember cref="M:System.Net.PeerToPeer.PeerName.CreateRelativePeerName(System.Net.PeerToPeer.PeerName,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Port">
      <MemberSignature Language="C#" Value="public int Port { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Port" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.PeerNameRegistration.Port" />
      <MemberSignature Language="VB.NET" Value="Public Property Port As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Port { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Port : int with get, set" Usage="System.Net.PeerToPeer.PeerNameRegistration.Port" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die [TCP/IP](https://go.microsoft.com/fwlink?LinkID=98458)-Anschlussnummer ab, die von dem im <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" />-Objekt registrierten Peer verwendet wird, oder legt diese fest.</summary>
        <value>Ein Ganzzahlwert, der die TCP-Anschlussnummer des <see cref="T:System.Net.IPEndPoint" /> angibt. Sofern nicht ausdrücklich angegeben, ist der Standardwert für diese Eigenschaft 0 (null).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Standardport wird von der <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A> -Methode nur verwendet, wenn keine Endpunkte angegeben werden.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Der angegebene Anschlusswert ist kleiner als 0 (null).  Portnummern müssen größer oder gleich 0 (null) und kleiner als 65.535 (0xFFFF) sein.</exception>
        <altmember cref="M:System.Net.PeerToPeer.PeerName.CreateRelativePeerName(System.Net.PeerToPeer.PeerName,System.String)" />
        <altmember cref="P:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection" />
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public void Start ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Start() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.Start" />
      <MemberSignature Language="VB.NET" Value="Public Sub Start ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Start();" />
      <MemberSignature Language="F#" Value="member this.Start : unit -&gt; unit" Usage="peerNameRegistration.Start " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Registriert den <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> in der <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" />. Wenn keine <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection" /> angegeben ist, wird die automatische Adressauswahl mit dem durch die <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Port" />-Eigenschaft angegebenen Portwert verwendet.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die-Methode registriert den in der <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A> -Eigenschaft angegebenen Peernamen mit allen Quelladressen und dem <xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A> im-Konstruktor angegebenen. Der Standardport wird von dieser Methode nur verwendet, wenn keine Endpunkte angegeben werden.  
  
 Wenn die <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A> -Eigenschaft `null`ist, registriert diese Methode den in der <xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A> -Eigenschaft angegebenen Peernamen unter Verwendung des <xref:System.Net.PeerToPeer.Cloud.Available> -Felds, das die <xref:System.Net.PeerToPeer.Cloud.Name%2A>Standard <xref:System.Net.PeerToPeer.Cloud.Scope%2A>Werte für, und <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A>initialisiert.  
  
 Nachdem ein <xref:System.Net.PeerToPeer.PeerNameRegistration> -Objekt gestartet wurde, wird <xref:System.Net.PeerToPeer.PeerNameRegistration.Stop%2A> es mit der-Methode beendet.  
  
 Zum Aktualisieren einer Registrierung muss die <xref:System.Net.PeerToPeer.PeerNameRegistration.Update%2A> -Methode verwendet werden.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird ein <xref:System.Net.PeerToPeer.PeerName> erstellt und zusammen mit den angegebenen Metadaten registriert.  
  
 [!code-csharp[NCLPNRPRegisterPeerName#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPNRPRegisterPeerName/CS/RegisterPeerName.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Die <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" />-Eigenschaft ist auf <see langword="null" /> festgelegt.</exception>
        <exception cref="T:System.ObjectDisposedException">Für dieses Objekt wurde „Dispose()“ bereits aufgerufen.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">–   Der angegebene <see cref="T:System.Net.PeerToPeer.PeerName" /> wurde bereits registriert. Die <see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Update" />-Methode muss zum Aktualisieren einer Registrierung verwendet werden.  
  
–   Der Remotepeer besitzt nicht die <see cref="P:System.Net.PeerToPeer.PeerName.Authority" /> für den angegebenen <see cref="T:System.Net.PeerToPeer.PeerName" />.  
  
–   Entweder ist der <see cref="T:System.Net.PeerToPeer.PeerName" /> oder sind die <see cref="P:System.Net.PeerToPeer.PeerNameRecord.Data" /> nicht angegeben; mindestens eines muss angegeben werden.  
  
–   Die Nachrichten- oder Datenelemente sind ungültig. Oder <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection" /> ist nicht festgelegt, und weder ein Datenblob noch ein <see cref="T:System.Net.IPEndPoint" /> ist angegeben.</exception>
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.Stop" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop();" />
      <MemberSignature Language="F#" Value="member this.Stop : unit -&gt; unit" Usage="peerNameRegistration.Stop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Hebt die Registrierung des in der <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" />-Eigenschaft angegebenen Peernamens in allen Clouds auf, in denen er registriert wurde.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nachdem der Registrierungsvorgang beendet wurde, entspricht der Zustand des Registrierungs Objekts direkt dem Zustand, nachdem er vom Parameter losen Konstruktor erstellt wurde. In diesem Zustand wird angenommen, dass für alle zugehörigen Eigenschaften kein Wert vorhanden ist. Die <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A> -Methode kann verwendet werden, um Sie neu zu starten.  
  
 Es können mehrere Registrierungs Objekte für denselben Peernamen vorhanden sein.  In einem solchen Fall, wenn der Peername gesichert ist, stellt jede Instanz eine Registrierung in einer anderen PNRP-Cloud dar.  Wenn der PeerName jedoch nicht gesichert ist, kann er mehrmals in der gleichen Cloud registriert werden.  
  
 Wenn diese Instanz bereits beendet wurde, hat das Aufrufen dieser Methode keine Auswirkungen.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Die <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" />-Eigenschaft wurde noch nicht registriert. Dies tritt auf, wenn ein <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" />-Objekt mit dem leeren Konstruktor erstellt wird. Die <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" />-Eigenschaft muss in dieser Instanz vor dem Aufruf von <see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Start" /> aufgefüllt werden.</exception>
        <exception cref="T:System.ObjectDisposedException">Für dieses Objekt wurde „Dispose()“ bereits aufgerufen.</exception>
        <altmember cref="M:System.Net.PeerToPeer.PeerNameRegistration.Update" />
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (info As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">Enthält die serialisierten Daten, die der <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" />-Instanz zugeordnet sind.</param>
        <param name="context">Enthält das Ziel für den serialisierten Datenstrom, der der <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" />-Instanz zugeordnet ist.</param>
        <summary>Implementiert die <see cref="T:System.Runtime.Serialization.ISerializable" />-Schnittstelle und gibt die zum Serialisieren der <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" />-Instanz erforderlichen Daten zurück.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public void Update ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Update() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.Update" />
      <MemberSignature Language="VB.NET" Value="Public Sub Update ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Update();" />
      <MemberSignature Language="F#" Value="member this.Update : unit -&gt; unit" Usage="peerNameRegistration.Update " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Aktualisiert die <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> für einen Knoten, der in einem bestimmten <see cref="T:System.Net.PeerToPeer.Cloud" /> registriert ist. Das Update erfolgt mithilfe der in den Eigenschaften angegebenen Informationen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Alle Informationen, die für diesen <xref:System.Net.PeerToPeer.PeerName> vor dem-Befehl in der Cloud (n) registriert wurden, werden vollständig verworfen.  Die neuen Daten werden nicht mit der vorhandenen Registrierung kombiniert.  Zum Aktualisieren eines <xref:System.Net.PeerToPeer.PeerNameRegistration>aktualisieren Sie zunächst die Eigenschaften für diese Instanz, und dann wird diese Methode aufgerufen.  
  
 Nachdem eine <xref:System.Net.PeerToPeer.PeerNameRecord> registriert wurde, kann <xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A> die-Eigenschaft nicht mehr aktualisiert werden.  Alle anderen Felder im Datensatz können aktualisiert werden.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Die <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" />-Eigenschaft ist auf <see langword="null" /> festgelegt.</exception>
        <exception cref="T:System.ObjectDisposedException">–   Die <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" />-Eigenschaft wurde noch nicht registriert. Die <see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Update" />-Methode kann nicht aufgerufen werden, solange der in der <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" />-Eigenschaft angegebene Peername nicht in mindestens einer Cloud registriert ist.  
  
–   Der in der <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" />-Eigenschaft angegebene Peername hat sich geändert, seit der entsprechende <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> registriert wurde.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">Ein Objekt, das verworfen wurde, kann nicht registriert werden.</exception>
        <exception cref="T:System.ArgumentNullException">Eine <see cref="T:System.Net.PeerToPeer.PeerNameRecord" />-Eigenschaft ist auf <see langword="null" /> festgelegt.</exception>
      </Docs>
    </Member>
    <Member MemberName="UseAutoEndPointSelection">
      <MemberSignature Language="C#" Value="public bool UseAutoEndPointSelection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseAutoEndPointSelection" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection" />
      <MemberSignature Language="VB.NET" Value="Public Property UseAutoEndPointSelection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseAutoEndPointSelection { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseAutoEndPointSelection : bool with get, set" Usage="System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob beim Durchlaufen eines Peermeshs oder einer Peer-<see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" /> die automatische Endpunktauswahl verwendet werden soll.</summary>
        <value><see langword="true" />, wenn die automatische Endpunktauswahl verwendet werden soll, <see langword="false" />, wenn zum Bestimmen eines Endpunkts eine andere Methode verwendet werden soll. Der Standardwert ist <see langword="true" />sein.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die automatische Endpunkt Auswahl verwendet wird (diese Eigenschaft ist auf `true`festgelegt) ohne Endpunkt Informationen <xref:System.Net.PeerToPeer.PeerNameRegistration>, die vor dem Start von angegeben wurden, wählt das System einzelne Endpunkte aus und veröffentlicht Sie mit dem zugeordneten Peernamen in allen verfügbaren bewölkt.  Wenn der Port nicht angegeben ist, wählt die automatische Auswahl NULL als <xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A>aus.  
  
 Wenn die Option `false`auf festgelegt ist, wird die automatische Auswahl nicht ausgeführt, wie oben beschrieben.  Dies ermöglicht es dem Registrierungsprozess, einen Peernamen zusammen mit einem Daten-BLOB (wie durch <xref:System.Net.PeerToPeer.PeerNameRecord.Data%2A> die-Eigenschaft angegeben) zu veröffentlichen. Dem Namen sind keine Endpunkte zugeordnet.  
  
 Wenn eine Registrierungsmethode verwendet wird, die automatisch die zu Registrier denden Adressen auswählt, gibt es keine Methode, um zu bestimmen <xref:System.Net.PeerToPeer.PeerName> , welche Adressen für welches Objekt registriert wurden.  Das heißt, die <xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A> Eigenschaft wird nicht aktualisiert, um die ausgewählten Adressen widerzuspiegeln.  
  
 Das Aktualisieren dieser Eigenschaft nach dem Start der Peer Namen Registrierung hat keine Auswirkungen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>