<Type Name="PeerNameRegistration" FullName="System.Net.PeerToPeer.PeerNameRegistration">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9970347a507e1a50dbece7b9f46a71933a14be17" /><Meta Name="ms.sourcegitcommit" Value="9e3550fb2088d4faf2043f0acb29da4555519937" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="12/12/2018" /><Meta Name="ms.locfileid" Value="53294758" /></Metadata><TypeSignature Language="C#" Value="public class PeerNameRegistration : IDisposable, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable PeerNameRegistration extends System.Object implements class System.IDisposable, class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Net.PeerToPeer.PeerNameRegistration" />
  <TypeSignature Language="VB.NET" Value="Public Class PeerNameRegistration&#xA;Implements IDisposable, ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class PeerNameRegistration : IDisposable, System::Runtime::Serialization::ISerializable" />
  <TypeSignature Language="F#" Value="type PeerNameRegistration = class&#xA;    interface IDisposable&#xA;    interface ISerializable" />
  <AssemblyInfo>
    <AssemblyName>System.Net</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Registriert einen <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> in einer <see cref="T:System.Net.PeerToPeer.Cloud" /> oder in einem Satz von Wolken.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Registrierung erstellt (oder aktualisiert) alle Informationen, die zugeordnet ist eine <xref:System.Net.PeerToPeer.PeerName> in einer Peer-Cloud oder Clouds.  
  
 Es ist möglich, mehrere <xref:System.Net.PeerToPeer.PeerNameRegistration> Objekte für den Peernamen. In diesem Fall, wenn der Peernamen gesichert ist, jede Instanz stellt <xref:System.Net.PeerToPeer.PeerNameRegistration> in eine andere Cloud. Aber wenn der Peername nicht gesichert ist, kann es in der gleichen Cloud mehrmals registriert werden vorausgesetzt, dass jeder Registrierung von einem anderen Prozess ist.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" />-Klasse.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PeerNameRegistration ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PeerNameRegistration();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Standardinstanz der <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gibt eine neue Standardinstanz des Typs <xref:System.Net.PeerToPeer.PeerNameRegistration>. Es führt keine Peer-namensregistrierung während der Erstellung.  
  
 Nach der ein Objekt mit diesem Konstruktor instanziiert, sollte der Aufrufer die entsprechenden Felder in der Instanz vor dem Aufruf füllen <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A> oder <xref:System.Net.PeerToPeer.PeerNameRegistration.Stop%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PeerNameRegistration (System.Net.PeerToPeer.PeerName name, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.PeerToPeer.PeerName name, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As PeerName, port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PeerNameRegistration(System::Net::PeerToPeer::PeerName ^ name, int port);" />
      <MemberSignature Language="F#" Value="new System.Net.PeerToPeer.PeerNameRegistration : System.Net.PeerToPeer.PeerName * int -&gt; System.Net.PeerToPeer.PeerNameRegistration" Usage="new System.Net.PeerToPeer.PeerNameRegistration (name, port)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="name" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="name">Das zu registrierende <see cref="T:System.Net.PeerToPeer.PeerName" />-Objekt.</param>
        <param name="port">Integer-Wert, der die zu registrierende Portnummer angibt.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" />-Klasse mit dem angegebenen Namen und der angegebenen Portnummer.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aufrufen des Konstruktors erstellt eine Instanz, die verwendet wird, um alle Quell-Adressen (sowohl IPv4-IPv6and) zu registrieren und den angegebenen Port für alle Clouds, in denen der Peer gegenwärtig teilnimmt.  Wenn das Objekt erfolgreich erstellt, wird das angegebene <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A> und <xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A> werden aufgefüllt.  
  
 Wenn der Peername gesichert ist und zuvor, in registriert wurde eine <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A> der Peer gegenwärtig beteiligt ist, eine <xref:System.Net.PeerToPeer.PeerToPeerException> ausgelöst.  
  
 Dieser Konstruktor erstellt lediglich ein <xref:System.Net.PeerToPeer.PeerNameRegistration> -Instanz die Registrierung wird nicht ausgeführt. Nach dem Instanziieren des Registrierungsobjekts mit diesem Konstruktor und dem Auffüllen der Felder muss die Anwendung aufrufen <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A> um die tatsächlichen Registrierung auszuführen.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="name" />-Parameter darf nicht <see langword="null" /> sein.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Die angegebene Portnummer ist kleiner als 0 (null).  Portnummern müssen größer oder gleich 0 (null) und kleiner als 65.535 (0xFFFF) sein.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">–   Der angegebene <see cref="T:System.Net.PeerToPeer.PeerName" /> wurde bereits auf diesem Host registriert.  
  
–   Der Remotepeer besitzt nicht die <see cref="P:System.Net.PeerToPeer.PeerName.Authority" /> für das angegebene <see cref="T:System.Net.PeerToPeer.PeerName" />-Objekt.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PeerNameRegistration (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PeerNameRegistration(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new System.Net.PeerToPeer.PeerNameRegistration : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; System.Net.PeerToPeer.PeerNameRegistration" Usage="new System.Net.PeerToPeer.PeerNameRegistration (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">Verweis auf das Objekt, das die zum Deserialisieren dieser Instanz benötigten Daten enthält.</param>
        <param name="context">Kontext, der das Deserialisieren der Daten ermöglicht. Auch als Quelle der serialisierten Daten bezeichnet.</param>
        <summary>Initialisiert ein neues serialisierbares <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" />-Objekt.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="N:System.Runtime.Serialization" />
        <altmember cref="T:System.Runtime.Serialization.StreamingContext" />
        <altmember cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PeerNameRegistration (System.Net.PeerToPeer.PeerName name, int port, System.Net.PeerToPeer.Cloud cloud);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.PeerToPeer.PeerName name, int32 port, class System.Net.PeerToPeer.Cloud cloud) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32,System.Net.PeerToPeer.Cloud)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PeerNameRegistration(System::Net::PeerToPeer::PeerName ^ name, int port, System::Net::PeerToPeer::Cloud ^ cloud);" />
      <MemberSignature Language="F#" Value="new System.Net.PeerToPeer.PeerNameRegistration : System.Net.PeerToPeer.PeerName * int * System.Net.PeerToPeer.Cloud -&gt; System.Net.PeerToPeer.PeerNameRegistration" Usage="new System.Net.PeerToPeer.PeerNameRegistration (name, port, cloud)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="port" Type="System.Int32" />
        <Parameter Name="cloud" Type="System.Net.PeerToPeer.Cloud" />
      </Parameters>
      <Docs>
        <param name="name">Das zu registrierende <see cref="T:System.Net.PeerToPeer.PeerName" />-Objekt.</param>
        <param name="port">Integer-Wert, der die zu registrierende Portnummer angibt.</param>
        <param name="cloud"><see cref="T:System.Net.PeerToPeer.Cloud" />, wo der Peername registriert werden soll.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" />-Klasse mit Peernamen, Portnummer und <see cref="T:System.Net.PeerToPeer.Cloud" /> laut Angabe.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aufrufen des Konstruktors erstellt eine Instanz, die verwendet wird, um alle Quell-Adressen (sowohl IPv6 und IPv4), den angegebenen Anschluss und dem angegebenen registrieren <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A>.  Die Eigenschaften werden aufgefüllt, wenn das Objekt wurde erfolgreich erstellt wird, mit dem angegebenen <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A>, <xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A> und <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A>.  
  
 Wenn der Parameter für die Cloud ist `null`, der Namen registriert ist, mit der <xref:System.Net.PeerToPeer.Cloud.Available> Verknüpfung, die Standardwerte für initialisiert die <xref:System.Net.PeerToPeer.Cloud.Name%2A>, <xref:System.Net.PeerToPeer.Cloud.Scope%2A>, und <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A>.  
  
 Nach der Instanziierung der <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A> Methode aufgerufen werden, um die Registrierung der <xref:System.Net.PeerToPeer.PeerName>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="name" />-Parameter darf nicht <see langword="null" /> sein.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Die angegebene Portnummer ist kleiner als 0 (null).  Portnummern müssen größer oder gleich 0 (null) und kleiner als 65.535 (0xFFFF) sein.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">–   Der angegebene <see cref="T:System.Net.PeerToPeer.PeerName" /> wurde bereits auf diesem Host registriert.  
  
–   Der Remotepeer besitzt nicht die <see cref="P:System.Net.PeerToPeer.PeerName.Authority" /> für das angegebene <see cref="T:System.Net.PeerToPeer.PeerName" />-Objekt.</exception>
      </Docs>
    </Member>
    <Member MemberName="Cloud">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.Cloud Cloud { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.PeerToPeer.Cloud Cloud" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" />
      <MemberSignature Language="VB.NET" Value="Public Property Cloud As Cloud" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::PeerToPeer::Cloud ^ Cloud { System::Net::PeerToPeer::Cloud ^ get(); void set(System::Net::PeerToPeer::Cloud ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Cloud : System.Net.PeerToPeer.Cloud with get, set" Usage="System.Net.PeerToPeer.PeerNameRegistration.Cloud" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Cloud</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft Informationen in einer <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" /> ab, in der dieses <see cref="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" />-Objekt registriert wird, oder legt diese fest.</summary>
        <value>Ein Objekt vom Typ <see cref="T:System.Net.PeerToPeer.Cloud" />, das die Peerwolke angibt, für die diese Registrierung definiert ist. Diese Eigenschaft ist standardmäßig auf <see langword="null" /> festgelegt.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Comment">
      <MemberSignature Language="C#" Value="public string Comment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Comment" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.PeerNameRegistration.Comment" />
      <MemberSignature Language="VB.NET" Value="Public Property Comment As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Comment { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Comment : string with get, set" Usage="System.Net.PeerToPeer.PeerNameRegistration.Comment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft zusätzliche Informationen über das <see cref="T:System.Net.PeerToPeer.PeerName" />-Objekt ab, das bei der <see cref="T:System.Net.PeerToPeer.Cloud" /> registriert wird, oder legt diese fest.</summary>
        <value>Der Kommentar, der zusätzliche Informationen über den <see cref="T:System.Net.PeerToPeer.PeerName" /> enthält, der der <see cref="T:System.Net.PeerToPeer.Cloud" /> zugeordnet werden soll. Diese Eigenschaft ist standardmäßig auf <see langword="null" /> festgelegt.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">Der angegebene Zeichenfolgenwert ist größer als 39 Unicode-Zeichen.</exception>
      </Docs>
    </Member>
    <Member MemberName="Data">
      <MemberSignature Language="C#" Value="public byte[] Data { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] Data" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.PeerNameRegistration.Data" />
      <MemberSignature Language="VB.NET" Value="Public Property Data As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ Data { cli::array &lt;System::Byte&gt; ^ get(); void set(cli::array &lt;System::Byte&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Data : byte[] with get, set" Usage="System.Net.PeerToPeer.PeerNameRegistration.Data" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft anwendungsdefinierte Binärdaten für das <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" />-Objekt ab oder legt diese fest.</summary>
        <value>Ein Bytearray mit den dem Eintrag zugeordneten Binärdaten. Diese Eigenschaft ist standardmäßig auf <see langword="null" /> festgelegt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die maximale Menge an <xref:System.Net.PeerToPeer.PeerNameRegistration.Data%2A> , angegeben werden, dass beträgt 4.096 Bytes.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Die angegebenen <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Data" /> sind größer als 4096 Bytes.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Gibt die vom <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" />-Objekt verwendeten Ressourcen frei.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn ein Peer verlässt eine <xref:System.Net.PeerToPeer.Cloud>, die Cloud ist nicht mehr erforderlich die <xref:System.Net.PeerToPeer.PeerNameRegistration> dem Peer zugeordnete Objekt.  Gibt an, ob das Registrierungsobjekt angehalten oder freigegeben ist abhängig davon, ob die Cloud das Objekt, um diesem Peer oder eines anderen Peers registrieren wiederverwendet. Es sind anderen Endpunkte in der Registrierungsobjekt, das mit dem der Peer-Hosts kommunizieren soll, muss diese Endpunkte in der Cloud registrieren treten vor Beenden oder Entfernen von diesem Objekt.  
  
 Wenn die Cloud geht davon aus, die weitere Peers Registrieren der <xref:System.Net.PeerToPeer.PeerNameRegistration.Stop%2A> Methode wird empfohlen, wenn die Cloud nicht mehr Arbeitsspeicher benötigt, es zurückgegeben werden sollen für das Betriebssystem über die <xref:System.Net.PeerToPeer.PeerNameRegistration.Dispose%2A> Methode.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="peerNameRegistration.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt alle vom <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" />-Objekt verwendeten Ressourcen frei.</summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="usage"><para>Rufen Sie die Dispose-Methode immer vor dem Zerstören der <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> Objekt.</para></block>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="peerNameRegistration.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><see langword="true" />, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben, <see langword="false" />, um ausschließlich nicht verwaltete Ressourcen freizugeben.</param>
        <summary>Gibt die vom <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" />-Objekt verwendeten nicht verwalteten Ressourcen und optional die verwalteten Ressourcen frei.</summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="usage"><para>Rufen Sie die Dispose-Methode immer vor dem Freigeben des letzten Verweis auf die <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> Objekt.</para></block>
      </Docs>
    </Member>
    <Member MemberName="EndPointCollection">
      <MemberSignature Language="C#" Value="public System.Net.IPEndPointCollection EndPointCollection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.IPEndPointCollection EndPointCollection" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EndPointCollection As IPEndPointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::IPEndPointCollection ^ EndPointCollection { System::Net::IPEndPointCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EndPointCollection : System.Net.IPEndPointCollection" Usage="System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IPEndPointCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Auflistung von Netzwerkendpunkten ab, für die der zugeordnete Peername registriert wird.</summary>
        <value>Ein <see cref="P:System.Net.PeerToPeer.PeerNameRecord.EndPointCollection" />-Objekt, das die Netzwerkendpunkte enthält, für die der zugeordnete Peername registriert wird. Sofern nicht ausdrücklich angegeben, ist für Referenztypen der Standardwert aller Eigenschaften <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In der <xref:System.Net> -Namespace, eine <xref:System.Net.IPEndPoint> stellt einen Netzwerkendpunkt als eine IP-Adresse und einer Portnummer dar.  Für die PNRP muss ein IP-Adresse und Port-Wert für jeden Endpunkt angegeben werden.  Die maximale Anzahl von Endpunkten, die bereitgestellt werden kann, ist 10. Automatische Adressauswahl wird verwendet, wenn dieser Parameter ist `null`.  
  
 Wenn eine Registrierungsmethode, der die Adressen verwendet wird, registrieren automatisch auswählt, ist es keine Methode zum möglich zu bestimmen, für die der Peername registriert wurde.  D. h. die <xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A> Eigenschaft werden nicht aktualisiert werden, um den ausgewählten Adressen.  
  
 Wenn ein PeerName für mehr als ein Knoten registriert wird jede <xref:System.Net.PeerToPeer.PeerNameRegistration> unterscheidet und das <xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A> für jede Registrierungsinstanz definierte Eigenschaft unterscheiden sich. Auch wenn eine <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A> ist in mehr als eine registriert <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A>, unterscheidet sich jeder Registrierung und die Auflistung von Endpunkten wird in der Regel für jede Instanz unterschiedlich sein.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage"><para>Die Liste der Endpunkte, die mit denen dieser Peer kommuniziert, ist nicht identisch mit der Liste der Endpunkte, die mit denen dieser Peername bekannt ist, die anders gespeichert wird.</para></block>
        <altmember cref="T:System.Net.IPEndPointCollection" />
        <altmember cref="P:System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection" />
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="protected virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="abstract member GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit&#xA;override this.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="peerNameRegistration.GetObjectData (info, context)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">Enthält die serialisierten Daten, die dem <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" />-Objekt zugeordnet sind.</param>
        <param name="context">Enthält das Ziel für den serialisierten Datenstrom, der dem <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" />-Objekt zugeordnet ist.</param>
        <summary>Füllt ein Serialisierungsinformationsobjekt mit den Daten, die zum Serialisieren der <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" />-Instanz erforderlich sind.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsRegistered">
      <MemberSignature Language="C#" Value="public bool IsRegistered ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsRegistered() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.IsRegistered" />
      <MemberSignature Language="VB.NET" Value="Public Function IsRegistered () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsRegistered();" />
      <MemberSignature Language="F#" Value="member this.IsRegistered : unit -&gt; bool" Usage="peerNameRegistration.IsRegistered " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft ab oder legt fest, ob der in der <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" />-Eigenschaft angegebene Peername bei einer bestimmten <see cref="T:System.Net.PeerToPeer.Cloud" /> auf einem Host registriert ist.</summary>
        <returns>Wenn der Wert <see langword="true" /> ist, wird der Peername bei einer <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" /> für den Peerhost registriert. Wenn der Wert <see langword="false" /> ist, kann die Registrierung mit <see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Start" /> gestartet werden.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">Ein Objekt, das bereits freigegeben wurde, kann nicht registriert werden.</exception>
        <altmember cref="T:System.Net.PeerToPeer.PeerNameResolver" />
      </Docs>
    </Member>
    <Member MemberName="PeerName">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.PeerName PeerName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.PeerToPeer.PeerName PeerName" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" />
      <MemberSignature Language="VB.NET" Value="Public Property PeerName As PeerName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::PeerToPeer::PeerName ^ PeerName { System::Net::PeerToPeer::PeerName ^ get(); void set(System::Net::PeerToPeer::PeerName ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PeerName : System.Net.PeerToPeer.PeerName with get, set" Usage="System.Net.PeerToPeer.PeerNameRegistration.PeerName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.PeerName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Peernamen ab, der bei einer Peerwolke registriert werden soll, oder legt diesen fest.</summary>
        <value>Ein Objekt vom Typ <see cref="T:System.Net.PeerToPeer.PeerName" />, das diesem <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" />-Objekt zugeordnete Werte enthält. Sofern nicht ausdrücklich angegeben, ist für Referenztypen der Standardwert aller Eigenschaften <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein PeerName kann für mehr als ein Knoten registriert werden; Jede <xref:System.Net.PeerToPeer.PeerNameRegistration> Instanz unterscheidet. Die <xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A> Eigenschaft zugeordnet, die jeweils entsprechenden <xref:System.Net.PeerToPeer.PeerName> Instanz unterscheidet. Außerdem ist es möglich, ein PeerName für mehrere Clouds zu registrieren, die mit der Knoten verbunden ist, Jede diese Registrierungen unterscheidet. Der Peername <xref:System.Net.IPEndPointCollection> unterscheiden sich in jede dieser Instanzen.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.PeerToPeer.PeerName.CreateFromPeerHostName(System.String)" />
        <altmember cref="M:System.Net.PeerToPeer.PeerName.CreateRelativePeerName(System.Net.PeerToPeer.PeerName,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Port">
      <MemberSignature Language="C#" Value="public int Port { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Port" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.PeerNameRegistration.Port" />
      <MemberSignature Language="VB.NET" Value="Public Property Port As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Port { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Port : int with get, set" Usage="System.Net.PeerToPeer.PeerNameRegistration.Port" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die [TCP/IP](https://go.microsoft.com/fwlink?LinkID=98458)-Anschlussnummer ab, die von dem im <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" />-Objekt registrierten Peer verwendet wird, oder legt diese fest.</summary>
        <value>Ein Ganzzahlwert, der die TCP-Anschlussnummer des <see cref="T:System.Net.IPEndPoint" /> angibt. Sofern nicht ausdrücklich angegeben, ist der Standardwert für diese Eigenschaft 0 (null).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Standardport verwendet wird, durch die <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A> Methode nur, wenn keine Endpunkte angegeben sind.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Der angegebene Anschlusswert ist kleiner als 0 (null).  Portnummern müssen größer oder gleich 0 (null) und kleiner als 65.535 (0xFFFF) sein.</exception>
        <altmember cref="M:System.Net.PeerToPeer.PeerName.CreateRelativePeerName(System.Net.PeerToPeer.PeerName,System.String)" />
        <altmember cref="P:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection" />
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public void Start ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Start() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.Start" />
      <MemberSignature Language="VB.NET" Value="Public Sub Start ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Start();" />
      <MemberSignature Language="F#" Value="member this.Start : unit -&gt; unit" Usage="peerNameRegistration.Start " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Registriert den <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> in der <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" />. Wenn keine <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection" /> angegeben ist, wird die automatische Adressauswahl mit dem durch die <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Port" />-Eigenschaft angegebenen Portwert verwendet.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Methode registriert den Peernamen, angegeben der <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A> Eigenschaft mit dem alle Quell-Adressen und die <xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A> im Konstruktor angegebene. Von dieser Methode wird der Standardport verwendet, nur dann, wenn keine Endpunkte angegeben sind.  
  
 Wenn die <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A> -Eigenschaft ist `null`, diese Methode registriert den Peernamen, der im angegebenen die <xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A> Eigenschaft mithilfe der <xref:System.Net.PeerToPeer.Cloud.Available> -Feld, das Standardwerte für initialisiert die <xref:System.Net.PeerToPeer.Cloud.Name%2A>, <xref:System.Net.PeerToPeer.Cloud.Scope%2A>, und <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A>.  
  
 Nach einem <xref:System.Net.PeerToPeer.PeerNameRegistration> Objekt gestartet wurde, die <xref:System.Net.PeerToPeer.PeerNameRegistration.Stop%2A> Methode wird verwendet, um ihn zu beenden.  
  
 Zum Aktualisieren einer Registrierung, die <xref:System.Net.PeerToPeer.PeerNameRegistration.Update%2A> Methode muss verwendet werden.  
  
   
  
## Examples  
 Das folgende Codebeispiel erstellt eine <xref:System.Net.PeerToPeer.PeerName> und registriert sie zusammen mit den Metadaten angegeben.  
  
 [!code-csharp[NCLPNRPRegisterPeerName#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPNRPRegisterPeerName/CS/RegisterPeerName.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Die <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" />-Eigenschaft ist auf <see langword="null" /> festgelegt.</exception>
        <exception cref="T:System.ObjectDisposedException">Für dieses Objekt wurde „Dispose()“ bereits aufgerufen.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">–   Der angegebene <see cref="T:System.Net.PeerToPeer.PeerName" /> wurde bereits registriert. Die <see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Update" />-Methode muss zum Aktualisieren einer Registrierung verwendet werden.  
  
–   Der Remotepeer besitzt nicht die <see cref="P:System.Net.PeerToPeer.PeerName.Authority" /> für den angegebenen <see cref="T:System.Net.PeerToPeer.PeerName" />.  
  
–   Entweder ist der <see cref="T:System.Net.PeerToPeer.PeerName" /> oder sind die <see cref="P:System.Net.PeerToPeer.PeerNameRecord.Data" /> nicht angegeben; mindestens eines muss angegeben werden.  
  
–   Die Nachrichten- oder Datenelemente sind ungültig. Oder <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection" /> ist nicht festgelegt, und weder ein Datenblob noch ein <see cref="T:System.Net.IPEndPoint" /> ist angegeben.</exception>
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.Stop" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop();" />
      <MemberSignature Language="F#" Value="member this.Stop : unit -&gt; unit" Usage="peerNameRegistration.Stop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Hebt die Registrierung des in der <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" />-Eigenschaft angegebenen Peernamens in allen Clouds auf, in denen er registriert wurde.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nachdem die Registrierung beendet wurde, entspricht des Zustands des Registrierungsobjekts in den Zustand direkt nach, die vom Standardkonstruktor erstellt wird. In diesem Fall werden alle zugehörigen Eigenschaften als keinen Wert aufweisen. Die <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A> Methode kann verwendet werden, um ihn neu zu starten.  
  
 Es ist möglich, mehrere Registrierungsobjekte für Peernamen haben.  In diesem Fall wenn der Peername gesichert ist, stellt jede Instanz eine Registrierung in einer anderen PNRP-Wolke dar.  Aber wenn der Peername nicht gesichert ist, kann es in der gleichen Cloud mehrmals registriert werden.  
  
 Wenn diese Instanz bereits beendet ist, hat das Aufrufen dieser Methode keine Auswirkungen.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Die <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" />-Eigenschaft wurde noch nicht registriert. Dies tritt auf, wenn ein <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" />-Objekt mit dem leeren Konstruktor erstellt wird. Die <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" />-Eigenschaft muss in dieser Instanz vor dem Aufruf von <see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Start" /> aufgefüllt werden.</exception>
        <exception cref="T:System.ObjectDisposedException">Für dieses Objekt wurde „Dispose()“ bereits aufgerufen.</exception>
        <altmember cref="M:System.Net.PeerToPeer.PeerNameRegistration.Update" />
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (info As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">Enthält die serialisierten Daten, die der <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" />-Instanz zugeordnet sind.</param>
        <param name="context">Enthält das Ziel für den serialisierten Datenstrom, der der <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" />-Instanz zugeordnet ist.</param>
        <summary>Implementiert die <see cref="T:System.Runtime.Serialization.ISerializable" />-Schnittstelle und gibt die zum Serialisieren der <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" />-Instanz erforderlichen Daten zurück.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public void Update ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Update() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.Update" />
      <MemberSignature Language="VB.NET" Value="Public Sub Update ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Update();" />
      <MemberSignature Language="F#" Value="member this.Update : unit -&gt; unit" Usage="peerNameRegistration.Update " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Aktualisiert die <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> für einen Knoten, der in einem bestimmten <see cref="T:System.Net.PeerToPeer.Cloud" /> registriert ist. Das Update erfolgt mithilfe der in den Eigenschaften angegebenen Informationen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Alle Informationen, die in Wolken dafür registriert <xref:System.Net.PeerToPeer.PeerName> vor dem Aufruf wird vollständig verworfen.  Die neuen Daten ist nicht mit der Registrierung von vorhandenen kombiniert.  Aktualisieren einer <xref:System.Net.PeerToPeer.PeerNameRegistration>, aktualisieren Sie zunächst die Eigenschaften für diese Instanz, und rufen Sie diese Methode.  
  
 Nach einem <xref:System.Net.PeerToPeer.PeerNameRecord> registriert ist, die <xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A> Eigenschaft kann nicht aktualisiert werden.  Alle anderen Felder im Datensatz können aktualisiert werden.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Die <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" />-Eigenschaft ist auf <see langword="null" /> festgelegt.</exception>
        <exception cref="T:System.ObjectDisposedException">–   Die <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" />-Eigenschaft wurde noch nicht registriert. Die <see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Update" />-Methode kann nicht aufgerufen werden, solange der in der <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" />-Eigenschaft angegebene Peername nicht in mindestens einer Cloud registriert ist.  
  
–   Der in der <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" />-Eigenschaft angegebene Peername hat sich geändert, seit der entsprechende <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> registriert wurde.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">Ein Objekt, das verworfen wurde, kann nicht registriert werden.</exception>
        <exception cref="T:System.ArgumentNullException">Eine <see cref="T:System.Net.PeerToPeer.PeerNameRecord" />-Eigenschaft ist auf <see langword="null" /> festgelegt.</exception>
      </Docs>
    </Member>
    <Member MemberName="UseAutoEndPointSelection">
      <MemberSignature Language="C#" Value="public bool UseAutoEndPointSelection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseAutoEndPointSelection" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection" />
      <MemberSignature Language="VB.NET" Value="Public Property UseAutoEndPointSelection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseAutoEndPointSelection { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseAutoEndPointSelection : bool with get, set" Usage="System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob beim Durchlaufen eines Peermeshs oder einer Peer-<see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" /> die automatische Endpunktauswahl verwendet werden soll.</summary>
        <value><see langword="true" />, wenn die automatische Endpunktauswahl verwendet werden soll, <see langword="false" />, wenn zum Bestimmen eines Endpunkts eine andere Methode verwendet werden soll. Der Standardwert ist <see langword="true" />sein.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die automatische Endpunktauswahl verwendet wird (diese Eigenschaft wird festgelegt, um `true`) keine vor dem Start der angegebenen Endpunktinformationen eine <xref:System.Net.PeerToPeer.PeerNameRegistration>, das System Wählt einzelne Endpunkte und veröffentlicht sie mit der zugeordnete Peername in alle verfügbar Clouds.  Wenn kein Port angegeben ist wird, die automatische Endpunktauswahl NULL die <xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A>.  
  
 Bei Festlegung auf `false`, oben beschriebene automatische Auswahl wird nicht ausgeführt.  Hierdurch kann die Registrierung zum Veröffentlichen eines Peernamens zusammen mit einem Daten-Blob (gemäß der <xref:System.Net.PeerToPeer.PeerNameRecord.Data%2A> Eigenschaft). Es sind keine Endpunkte mit dem Namen verknüpft.  
  
 Wenn eine Registrierungsmethode, die die Adressen verwendet wird registrieren automatisch ausgewählt, es ist keine Methode, um zu bestimmen, welche für die Adressen der <xref:System.Net.PeerToPeer.PeerName> -Objekt registriert wurde.  D. h. die <xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A> Eigenschaft werden nicht aktualisiert werden, um den ausgewählten Adressen.  
  
 Diese Eigenschaft aktualisieren, nachdem die Peer-namensregistrierung gestartet wurde, hat keine Auswirkungen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>