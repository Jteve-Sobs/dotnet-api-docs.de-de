<Type Name="ResolveProgressChangedEventArgs" FullName="System.Net.PeerToPeer.ResolveProgressChangedEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a272ffa782a4f6b08c5a921ae211b969748ae67f" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30458954" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ResolveProgressChangedEventArgs : System.ComponentModel.ProgressChangedEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ResolveProgressChangedEventArgs extends System.ComponentModel.ProgressChangedEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Net.PeerToPeer.ResolveProgressChangedEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class ResolveProgressChangedEventArgs&#xA;Inherits ProgressChangedEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class ResolveProgressChangedEventArgs : System::ComponentModel::ProgressChangedEventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Net</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.ProgressChangedEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="88e03-101">Wird in Verbindung mit dem Signalisieren des <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged" />-Ereignisses verwendet.</span>
      <span class="sxs-lookup">
        <span data-stu-id="88e03-101">Used in conjunction with signaling the <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged" /> event.</span>
      </span>
      <span data-ttu-id="88e03-102">Es wird immer signalisiert, wenn aufgrund eines <see cref="T:System.Net.PeerToPeer.PeerNameRecord" />-Vorgangs für einen bestimmten <see cref="Overload:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync" /> ein <see cref="T:System.Net.PeerToPeer.PeerName" />-Objekt gefunden wird.</span>
      <span class="sxs-lookup">
        <span data-stu-id="88e03-102">It is signaled whenever a <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> object is found in response to a <see cref="Overload:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync" /> operation on a specific <see cref="T:System.Net.PeerToPeer.PeerName" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88e03-103">Wenn mehrere Namen Datensatz Objekte auf derselben Ebene in der abgefragten vorhanden sind, wird dieses Ereignis einmal für jedes gefundene Datensatzobjekt signalisiert.</span><span class="sxs-lookup"><span data-stu-id="88e03-103">If multiple peer name record objects exist in the cloud(s) being queried, this event is signaled once for each record object found.</span></span> <span data-ttu-id="88e03-104">Die <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> Ereignis wird nur einmal ausgelöst, wenn alle Endpunkte gefunden wurden.</span><span class="sxs-lookup"><span data-stu-id="88e03-104">The <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> event is raised only once when all endpoints have been found.</span></span>  
  
 <span data-ttu-id="88e03-105">Normalen Abschluss des Prozesses bedeutet, dass die Resolver-Objekt das Ende der Wolken zum Abfragen von Peernamen erreicht hat oder erreicht wurde die maximale Anzahl von zeichnet Einträge für die Peer-Auflistung von ihm erstellt wird.</span><span class="sxs-lookup"><span data-stu-id="88e03-105">Normal process completion implies that either the Resolver object has reached the end of the cloud(s) to query for peer names, or it has reached the maximum number of record entries for the peer name record collection it is constructing.</span></span>  
  
 <span data-ttu-id="88e03-106">Alle Verweise auf diese Instanz des Konfliktlösers werden mit dem token UserState koordiniert <xref:System.Object>, dies ist ein eindeutiger Bezeichner für diese asynchrone Anforderung.</span><span class="sxs-lookup"><span data-stu-id="88e03-106">All references to this instance of the Resolver are coordinated with the token userState <xref:System.Object>, which is a unique identifier for this asynchronous resolve request.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResolveProgressChangedEventArgs (System.Net.PeerToPeer.PeerNameRecord peerNameRecord, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.PeerToPeer.PeerNameRecord peerNameRecord, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.ResolveProgressChangedEventArgs.#ctor(System.Net.PeerToPeer.PeerNameRecord,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ResolveProgressChangedEventArgs(System::Net::PeerToPeer::PeerNameRecord ^ peerNameRecord, System::Object ^ userToken);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="peerNameRecord" Type="System.Net.PeerToPeer.PeerNameRecord" />
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="peerNameRecord">
          <span data-ttu-id="88e03-107">Das zu suchende <see cref="T:System.Net.PeerToPeer.PeerNameRecord" />-Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="88e03-107">The <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> object to be found.</span>
          </span>
        </param>
        <param name="userToken">
          <span data-ttu-id="88e03-108">Das beim Starten eines <see cref="Overload:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync" />-Vorgangs bereitgestellte eindeutige Benutzerstatusobjekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="88e03-108">The unique user state object supplied when a <see cref="Overload:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync" /> operation was started.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="88e03-109">Initialisiert eine neue Instanz der <see cref="T:System.Net.PeerToPeer.ResolveProgressChangedEventArgs" />-Klasse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="88e03-109">Initializes a new instance of the <see cref="T:System.Net.PeerToPeer.ResolveProgressChangedEventArgs" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88e03-110">Die aufgelösten Peernamen erfolgt über die <xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="88e03-110">The resolved peer name is accessible via the <xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A> property.</span></span>  
  
 <span data-ttu-id="88e03-111">Der Benutzerzustand wird vom geerbt <xref:System.ComponentModel.AsyncCompletedEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="88e03-111">The user state is inherited from <xref:System.ComponentModel.AsyncCompletedEventArgs>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PeerNameRecord">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.PeerNameRecord PeerNameRecord { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.PeerToPeer.PeerNameRecord PeerNameRecord" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.ResolveProgressChangedEventArgs.PeerNameRecord" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PeerNameRecord As PeerNameRecord" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::PeerToPeer::PeerNameRecord ^ PeerNameRecord { System::Net::PeerToPeer::PeerNameRecord ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.PeerNameRecord</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="88e03-112">Ruft das aufzulösende <see cref="T:System.Net.PeerToPeer.PeerNameRecord" />-Objekt ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="88e03-112">Gets the <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> object to resolve.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="88e03-113">Das Peernamensdatensatz-Objekt, das aufgrund eines <see cref="Overload:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync" />-Vorgangs für einen bestimmten <see cref="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" /> gefunden wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="88e03-113">The peer name record object found in response to a <see cref="Overload:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync" /> operation on a specific <see cref="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" />.</span>
          </span>
          <span data-ttu-id="88e03-114">Sofern nicht ausdrücklich angegeben, ist der Standardwert aller Eigenschaften für Referenztypen <see langword="null" /> und für Eigenschaften vom Typ <see langword="int" /> 0 (null).</span>
          <span class="sxs-lookup">
            <span data-stu-id="88e03-114">Unless explicitly specified, the default value for all properties is <see langword="null" /> for reference types and zero (0) for properties of type <see langword="int" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88e03-115">Unsichere Peernamen können gleichzeitig von verschiedenen Benutzern in der gleichen registriert werden <xref:System.Net.PeerToPeer.Cloud>, und die zugehörigen mit verschiedenen Endpunkten.</span><span class="sxs-lookup"><span data-stu-id="88e03-115">Unsecured peer names can be registered simultaneously by different users in the same <xref:System.Net.PeerToPeer.Cloud>, and associated with different endpoints.</span></span> <span data-ttu-id="88e03-116">Folglich die <xref:System.Net.PeerToPeer.PeerNameResolver> Klasse dient zum Auflösen von Peernamen in Clouds oder peer-Namen, die Datensätze des Peer Name.</span><span class="sxs-lookup"><span data-stu-id="88e03-116">Consequently, the <xref:System.Net.PeerToPeer.PeerNameResolver> class is used to resolve peer names to clouds or peer names to peer name records.</span></span> <span data-ttu-id="88e03-117">Das Ereignis, um den Fortschritt wird jedes Mal ausgelöst ein Peername gefunden wird, während der Konfliktlöser Clouds für Abfragen wird die <xref:System.Net.PeerToPeer.PeerName>.</span><span class="sxs-lookup"><span data-stu-id="88e03-117">The event to report progress is raised each time a peer name is found while the Resolver is querying clouds for the <xref:System.Net.PeerToPeer.PeerName>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>