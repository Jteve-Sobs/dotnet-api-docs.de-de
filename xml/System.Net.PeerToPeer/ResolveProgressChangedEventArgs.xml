<Type Name="ResolveProgressChangedEventArgs" FullName="System.Net.PeerToPeer.ResolveProgressChangedEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d3be362a6bc484092623cf104580387f5bc0ca68" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69113263" /></Metadata><TypeSignature Language="C#" Value="public class ResolveProgressChangedEventArgs : System.ComponentModel.ProgressChangedEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ResolveProgressChangedEventArgs extends System.ComponentModel.ProgressChangedEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Net.PeerToPeer.ResolveProgressChangedEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class ResolveProgressChangedEventArgs&#xA;Inherits ProgressChangedEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class ResolveProgressChangedEventArgs : System::ComponentModel::ProgressChangedEventArgs" />
  <TypeSignature Language="F#" Value="type ResolveProgressChangedEventArgs = class&#xA;    inherit ProgressChangedEventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Net</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.ProgressChangedEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="6af5a-101">Wird in Verbindung mit dem Signalisieren des <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged" />-Ereignisses verwendet.</span><span class="sxs-lookup"><span data-stu-id="6af5a-101">Used in conjunction with signaling the <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged" /> event.</span></span>  <span data-ttu-id="6af5a-102">Es wird immer signalisiert, wenn aufgrund eines <see cref="T:System.Net.PeerToPeer.PeerNameRecord" />-Vorgangs für einen bestimmten <see cref="Overload:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync" /> ein <see cref="T:System.Net.PeerToPeer.PeerName" />-Objekt gefunden wird.</span><span class="sxs-lookup"><span data-stu-id="6af5a-102">It is signaled whenever a <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> object is found in response to a <see cref="Overload:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync" /> operation on a specific <see cref="T:System.Net.PeerToPeer.PeerName" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6af5a-103">Wenn in der abgefragten Cloud (n) mehrere Peer Name Record-Objekte vorhanden sind, wird dieses Ereignis einmal für jedes gefundene Datensatz-Objekt signalisiert.</span><span class="sxs-lookup"><span data-stu-id="6af5a-103">If multiple peer name record objects exist in the cloud(s) being queried, this event is signaled once for each record object found.</span></span> <span data-ttu-id="6af5a-104">Das <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> -Ereignis wird nur einmal ausgelöst, wenn alle Endpunkte gefunden wurden.</span><span class="sxs-lookup"><span data-stu-id="6af5a-104">The <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> event is raised only once when all endpoints have been found.</span></span>  
  
 <span data-ttu-id="6af5a-105">Der normale Prozess Abschluss impliziert, dass entweder das Resolverobjekt das Ende der Cloud (n) erreicht hat, um Peernamen abzufragen, oder die maximale Anzahl von Daten Satz Einträgen für die von ihm konstruierte Peer Name Record-Auflistung erreicht hat.</span><span class="sxs-lookup"><span data-stu-id="6af5a-105">Normal process completion implies that either the Resolver object has reached the end of the cloud(s) to query for peer names, or it has reached the maximum number of record entries for the peer name record collection it is constructing.</span></span>  
  
 <span data-ttu-id="6af5a-106">Alle Verweise auf diese Instanz des Resolvers werden mit dem Token userState <xref:System.Object>koordiniert, bei dem es sich um einen eindeutigen Bezeichner für diese asynchrone Auflösungs Anforderung handelt.</span><span class="sxs-lookup"><span data-stu-id="6af5a-106">All references to this instance of the Resolver are coordinated with the token userState <xref:System.Object>, which is a unique identifier for this asynchronous resolve request.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResolveProgressChangedEventArgs (System.Net.PeerToPeer.PeerNameRecord peerNameRecord, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.PeerToPeer.PeerNameRecord peerNameRecord, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.ResolveProgressChangedEventArgs.#ctor(System.Net.PeerToPeer.PeerNameRecord,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ResolveProgressChangedEventArgs(System::Net::PeerToPeer::PeerNameRecord ^ peerNameRecord, System::Object ^ userToken);" />
      <MemberSignature Language="F#" Value="new System.Net.PeerToPeer.ResolveProgressChangedEventArgs : System.Net.PeerToPeer.PeerNameRecord * obj -&gt; System.Net.PeerToPeer.ResolveProgressChangedEventArgs" Usage="new System.Net.PeerToPeer.ResolveProgressChangedEventArgs (peerNameRecord, userToken)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="peerNameRecord" Type="System.Net.PeerToPeer.PeerNameRecord" />
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="peerNameRecord"><span data-ttu-id="6af5a-107">Das zu suchende <see cref="T:System.Net.PeerToPeer.PeerNameRecord" />-Objekt.</span><span class="sxs-lookup"><span data-stu-id="6af5a-107">The <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> object to be found.</span></span></param>
        <param name="userToken"><span data-ttu-id="6af5a-108">Das beim Starten eines <see cref="Overload:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync" />-Vorgangs bereitgestellte eindeutige Benutzerstatusobjekt.</span><span class="sxs-lookup"><span data-stu-id="6af5a-108">The unique user state object supplied when a <see cref="Overload:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync" /> operation was started.</span></span></param>
        <summary><span data-ttu-id="6af5a-109">Initialisiert eine neue Instanz der <see cref="T:System.Net.PeerToPeer.ResolveProgressChangedEventArgs" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="6af5a-109">Initializes a new instance of the <see cref="T:System.Net.PeerToPeer.ResolveProgressChangedEventArgs" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6af5a-110">Auf den aufgelösten Peernamen kann <xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A> über die-Eigenschaft zugegriffen werden.</span><span class="sxs-lookup"><span data-stu-id="6af5a-110">The resolved peer name is accessible via the <xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A> property.</span></span>  
  
 <span data-ttu-id="6af5a-111">Der Benutzer Zustand wird von <xref:System.ComponentModel.AsyncCompletedEventArgs>geerbt.</span><span class="sxs-lookup"><span data-stu-id="6af5a-111">The user state is inherited from <xref:System.ComponentModel.AsyncCompletedEventArgs>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PeerNameRecord">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.PeerNameRecord PeerNameRecord { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.PeerToPeer.PeerNameRecord PeerNameRecord" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.ResolveProgressChangedEventArgs.PeerNameRecord" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PeerNameRecord As PeerNameRecord" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::PeerToPeer::PeerNameRecord ^ PeerNameRecord { System::Net::PeerToPeer::PeerNameRecord ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PeerNameRecord : System.Net.PeerToPeer.PeerNameRecord" Usage="System.Net.PeerToPeer.ResolveProgressChangedEventArgs.PeerNameRecord" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.PeerNameRecord</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6af5a-112">Ruft das aufzulösende <see cref="T:System.Net.PeerToPeer.PeerNameRecord" />-Objekt ab.</span><span class="sxs-lookup"><span data-stu-id="6af5a-112">Gets the <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> object to resolve.</span></span></summary>
        <value><span data-ttu-id="6af5a-113">Das Peernamensdatensatz-Objekt, das aufgrund eines <see cref="Overload:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync" />-Vorgangs für einen bestimmten <see cref="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" /> gefunden wurde.</span><span class="sxs-lookup"><span data-stu-id="6af5a-113">The peer name record object found in response to a <see cref="Overload:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync" /> operation on a specific <see cref="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" />.</span></span>  
  
<span data-ttu-id="6af5a-114">Sofern nicht ausdrücklich angegeben, ist der Standardwert für alle Eigenschaften <see langword="null" /> für Referenztypen und 0 (null) für Eigenschaften vom Typ <see langword="int" />.</span><span class="sxs-lookup"><span data-stu-id="6af5a-114">Unless explicitly specified, the default value for all properties is <see langword="null" /> for reference types and zero (0) for properties of type <see langword="int" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6af5a-115">Ungesicherte Peernamen können gleichzeitig von verschiedenen Benutzern im selben <xref:System.Net.PeerToPeer.Cloud>registriert und mit unterschiedlichen Endpunkten verknüpft werden.</span><span class="sxs-lookup"><span data-stu-id="6af5a-115">Unsecured peer names can be registered simultaneously by different users in the same <xref:System.Net.PeerToPeer.Cloud>, and associated with different endpoints.</span></span> <span data-ttu-id="6af5a-116">Folglich wird die <xref:System.Net.PeerToPeer.PeerNameResolver> -Klasse verwendet, um Peernamen in Clouds oder Peer Namen in Peer namens Datensätze aufzulösen.</span><span class="sxs-lookup"><span data-stu-id="6af5a-116">Consequently, the <xref:System.Net.PeerToPeer.PeerNameResolver> class is used to resolve peer names to clouds or peer names to peer name records.</span></span> <span data-ttu-id="6af5a-117">Das Ereignis, mit dem der Status gemeldet wird, wird jedes Mal ausgelöst, wenn ein PeerName gefunden wird, während <xref:System.Net.PeerToPeer.PeerName>der Resolver Clouds für den abfragt.</span><span class="sxs-lookup"><span data-stu-id="6af5a-117">The event to report progress is raised each time a peer name is found while the Resolver is querying clouds for the <xref:System.Net.PeerToPeer.PeerName>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
