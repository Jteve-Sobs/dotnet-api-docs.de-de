<Type Name="LoggerExtensions" FullName="Microsoft.Extensions.Logging.LoggerExtensions">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f4e5ded16c2c3927c9de8c743518fb498f085cc6" /><Meta Name="ms.sourcegitcommit" Value="3001e6bfbacb09c47be86e2ade5b0c2bd91bb0cb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/31/2020" /><Meta Name="ms.locfileid" Value="87469830" /></Metadata><TypeSignature Language="C#" Value="public static class LoggerExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit LoggerExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.Logging.LoggerExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module LoggerExtensions" />
  <TypeSignature Language="C++ CLI" Value="public ref class LoggerExtensions abstract sealed" />
  <TypeSignature Language="F#" Value="type LoggerExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.Logging.Abstractions</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="82e16-101">ILogger-Erweiterungsmethoden für häufige Szenarios.</span><span class="sxs-lookup"><span data-stu-id="82e16-101">ILogger extension methods for common scenarios.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="BeginScope">
      <MemberSignature Language="C#" Value="public static IDisposable BeginScope (this Microsoft.Extensions.Logging.ILogger logger, string messageFormat, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IDisposable BeginScope(class Microsoft.Extensions.Logging.ILogger logger, string messageFormat, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.LoggerExtensions.BeginScope(Microsoft.Extensions.Logging.ILogger,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function BeginScope (logger As ILogger, messageFormat As String, ParamArray args As Object()) As IDisposable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static IDisposable ^ BeginScope(Microsoft::Extensions::Logging::ILogger ^ logger, System::String ^ messageFormat, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member BeginScope : Microsoft.Extensions.Logging.ILogger * string * obj[] -&gt; IDisposable" Usage="Microsoft.Extensions.Logging.LoggerExtensions.BeginScope (logger, messageFormat, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IDisposable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.Extensions.Logging.ILogger" RefType="this" />
        <Parameter Name="messageFormat" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-plat-ext-1.0">
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="logger"><span data-ttu-id="82e16-102">Die <see cref="T:Microsoft.Extensions.Logging.ILogger" />-Schnittstelle, in der der Bereich erstellt werden soll.</span><span class="sxs-lookup"><span data-stu-id="82e16-102">The <see cref="T:Microsoft.Extensions.Logging.ILogger" /> to create the scope in.</span></span></param>
        <param name="messageFormat"><span data-ttu-id="82e16-103">Formatzeichenfolge der Protokollmeldung im Format der Meldungsvorlage.</span><span class="sxs-lookup"><span data-stu-id="82e16-103">Format string of the log message in message template format.</span></span> <span data-ttu-id="82e16-104">Beispiel:</span><span class="sxs-lookup"><span data-stu-id="82e16-104">Example:</span></span> <code>"User {User} logged in from {Address}"</code></param>
        <param name="args"><span data-ttu-id="82e16-105">Ein Objektarray mit 0 (null) oder mehr zu formatierenden Objekten.</span><span class="sxs-lookup"><span data-stu-id="82e16-105">An object array that contains zero or more objects to format.</span></span></param>
        <summary><span data-ttu-id="82e16-106">Formatiert die Meldung und erstellt einen Bereich.</span><span class="sxs-lookup"><span data-stu-id="82e16-106">Formats the message and creates a scope.</span></span></summary>
        <returns><span data-ttu-id="82e16-107">Ein verwerfbares Bereichsobjekt.</span><span class="sxs-lookup"><span data-stu-id="82e16-107">A disposable scope object.</span></span> <span data-ttu-id="82e16-108">Kann NULL sein.</span><span class="sxs-lookup"><span data-stu-id="82e16-108">Can be null.</span></span></returns>
        <remarks>To be added.</remarks>
        <example><span data-ttu-id="82e16-109">Verwenden von (Protokollierung. BeginScope ("Verarbeitungs Anforderung von {Address}", Adresse)) {}</span><span class="sxs-lookup"><span data-stu-id="82e16-109">using(logger.BeginScope("Processing request from {Address}", address)) { }</span></span></example>
      </Docs>
    </Member>
    <Member MemberName="Log">
      <MemberSignature Language="C#" Value="public static void Log (this Microsoft.Extensions.Logging.ILogger logger, Microsoft.Extensions.Logging.LogLevel logLevel, string message, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Log(class Microsoft.Extensions.Logging.ILogger logger, valuetype Microsoft.Extensions.Logging.LogLevel logLevel, string message, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.LoggerExtensions.Log(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.LogLevel,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub Log (logger As ILogger, logLevel As LogLevel, message As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void Log(Microsoft::Extensions::Logging::ILogger ^ logger, Microsoft::Extensions::Logging::LogLevel logLevel, System::String ^ message, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member Log : Microsoft.Extensions.Logging.ILogger * Microsoft.Extensions.Logging.LogLevel * string * obj[] -&gt; unit" Usage="Microsoft.Extensions.Logging.LoggerExtensions.Log (logger, logLevel, message, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Abstractions</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.Extensions.Logging.ILogger" RefType="this" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
        <Parameter Name="logLevel" Type="Microsoft.Extensions.Logging.LogLevel" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
        <Parameter Name="message" Type="System.String" Index="2" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
        <Parameter Name="args" Type="System.Object[]" Index="3" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-plat-ext-2.1">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="logger"><span data-ttu-id="82e16-110">Der <see cref="T:Microsoft.Extensions.Logging.ILogger" />, in den geschrieben werden soll.</span><span class="sxs-lookup"><span data-stu-id="82e16-110">The <see cref="T:Microsoft.Extensions.Logging.ILogger" /> to write to.</span></span></param>
        <param name="logLevel"><span data-ttu-id="82e16-111">Der Eintrag wird auf dieser Ebene geschrieben.</span><span class="sxs-lookup"><span data-stu-id="82e16-111">Entry will be written on this level.</span></span></param>
        <param name="message"><span data-ttu-id="82e16-112">Die Formatzeichenfolge der Protokollmeldung.</span><span class="sxs-lookup"><span data-stu-id="82e16-112">Format string of the log message.</span></span></param>
        <param name="args"><span data-ttu-id="82e16-113">Ein Objektarray mit 0 (null) oder mehr zu formatierenden Objekten.</span><span class="sxs-lookup"><span data-stu-id="82e16-113">An object array that contains zero or more objects to format.</span></span></param>
        <summary><span data-ttu-id="82e16-114">Formatiert und schreibt eine Protokollmeldung auf der angegebenen Protokollebene.</span><span class="sxs-lookup"><span data-stu-id="82e16-114">Formats and writes a log message at the specified log level.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Log">
      <MemberSignature Language="C#" Value="public static void Log (this Microsoft.Extensions.Logging.ILogger logger, Microsoft.Extensions.Logging.LogLevel logLevel, Microsoft.Extensions.Logging.EventId eventId, string message, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Log(class Microsoft.Extensions.Logging.ILogger logger, valuetype Microsoft.Extensions.Logging.LogLevel logLevel, valuetype Microsoft.Extensions.Logging.EventId eventId, string message, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.LoggerExtensions.Log(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.LogLevel,Microsoft.Extensions.Logging.EventId,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub Log (logger As ILogger, logLevel As LogLevel, eventId As EventId, message As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void Log(Microsoft::Extensions::Logging::ILogger ^ logger, Microsoft::Extensions::Logging::LogLevel logLevel, Microsoft::Extensions::Logging::EventId eventId, System::String ^ message, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member Log : Microsoft.Extensions.Logging.ILogger * Microsoft.Extensions.Logging.LogLevel * Microsoft.Extensions.Logging.EventId * string * obj[] -&gt; unit" Usage="Microsoft.Extensions.Logging.LoggerExtensions.Log (logger, logLevel, eventId, message, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Abstractions</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.Extensions.Logging.ILogger" RefType="this" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
        <Parameter Name="logLevel" Type="Microsoft.Extensions.Logging.LogLevel" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
        <Parameter Name="eventId" Type="Microsoft.Extensions.Logging.EventId" Index="2" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
        <Parameter Name="message" Type="System.String" Index="3" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
        <Parameter Name="args" Type="System.Object[]" Index="4" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-plat-ext-2.1">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="logger"><span data-ttu-id="82e16-115">Der <see cref="T:Microsoft.Extensions.Logging.ILogger" />, in den geschrieben werden soll.</span><span class="sxs-lookup"><span data-stu-id="82e16-115">The <see cref="T:Microsoft.Extensions.Logging.ILogger" /> to write to.</span></span></param>
        <param name="logLevel"><span data-ttu-id="82e16-116">Der Eintrag wird auf dieser Ebene geschrieben.</span><span class="sxs-lookup"><span data-stu-id="82e16-116">Entry will be written on this level.</span></span></param>
        <param name="eventId"><span data-ttu-id="82e16-117">Die mit dem Protokoll verknüpfte Ereignis-ID.</span><span class="sxs-lookup"><span data-stu-id="82e16-117">The event id associated with the log.</span></span></param>
        <param name="message"><span data-ttu-id="82e16-118">Die Formatzeichenfolge der Protokollmeldung.</span><span class="sxs-lookup"><span data-stu-id="82e16-118">Format string of the log message.</span></span></param>
        <param name="args"><span data-ttu-id="82e16-119">Ein Objektarray mit 0 (null) oder mehr zu formatierenden Objekten.</span><span class="sxs-lookup"><span data-stu-id="82e16-119">An object array that contains zero or more objects to format.</span></span></param>
        <summary><span data-ttu-id="82e16-120">Formatiert und schreibt eine Protokollmeldung auf der angegebenen Protokollebene.</span><span class="sxs-lookup"><span data-stu-id="82e16-120">Formats and writes a log message at the specified log level.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Log">
      <MemberSignature Language="C#" Value="public static void Log (this Microsoft.Extensions.Logging.ILogger logger, Microsoft.Extensions.Logging.LogLevel logLevel, Exception exception, string message, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Log(class Microsoft.Extensions.Logging.ILogger logger, valuetype Microsoft.Extensions.Logging.LogLevel logLevel, class System.Exception exception, string message, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.LoggerExtensions.Log(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.LogLevel,System.Exception,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub Log (logger As ILogger, logLevel As LogLevel, exception As Exception, message As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void Log(Microsoft::Extensions::Logging::ILogger ^ logger, Microsoft::Extensions::Logging::LogLevel logLevel, Exception ^ exception, System::String ^ message, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member Log : Microsoft.Extensions.Logging.ILogger * Microsoft.Extensions.Logging.LogLevel * Exception * string * obj[] -&gt; unit" Usage="Microsoft.Extensions.Logging.LoggerExtensions.Log (logger, logLevel, exception, message, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Abstractions</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.Extensions.Logging.ILogger" RefType="this" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
        <Parameter Name="logLevel" Type="Microsoft.Extensions.Logging.LogLevel" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
        <Parameter Name="exception" Type="System.Exception" Index="2" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
        <Parameter Name="message" Type="System.String" Index="3" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
        <Parameter Name="args" Type="System.Object[]" Index="4" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-plat-ext-2.1">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="logger"><span data-ttu-id="82e16-121">Der <see cref="T:Microsoft.Extensions.Logging.ILogger" />, in den geschrieben werden soll.</span><span class="sxs-lookup"><span data-stu-id="82e16-121">The <see cref="T:Microsoft.Extensions.Logging.ILogger" /> to write to.</span></span></param>
        <param name="logLevel"><span data-ttu-id="82e16-122">Der Eintrag wird auf dieser Ebene geschrieben.</span><span class="sxs-lookup"><span data-stu-id="82e16-122">Entry will be written on this level.</span></span></param>
        <param name="exception"><span data-ttu-id="82e16-123">Die zu protokollierende Ausnahme.</span><span class="sxs-lookup"><span data-stu-id="82e16-123">The exception to log.</span></span></param>
        <param name="message"><span data-ttu-id="82e16-124">Die Formatzeichenfolge der Protokollmeldung.</span><span class="sxs-lookup"><span data-stu-id="82e16-124">Format string of the log message.</span></span></param>
        <param name="args"><span data-ttu-id="82e16-125">Ein Objektarray mit 0 (null) oder mehr zu formatierenden Objekten.</span><span class="sxs-lookup"><span data-stu-id="82e16-125">An object array that contains zero or more objects to format.</span></span></param>
        <summary><span data-ttu-id="82e16-126">Formatiert und schreibt eine Protokollmeldung auf der angegebenen Protokollebene.</span><span class="sxs-lookup"><span data-stu-id="82e16-126">Formats and writes a log message at the specified log level.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Log">
      <MemberSignature Language="C#" Value="public static void Log (this Microsoft.Extensions.Logging.ILogger logger, Microsoft.Extensions.Logging.LogLevel logLevel, Microsoft.Extensions.Logging.EventId eventId, Exception exception, string message, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Log(class Microsoft.Extensions.Logging.ILogger logger, valuetype Microsoft.Extensions.Logging.LogLevel logLevel, valuetype Microsoft.Extensions.Logging.EventId eventId, class System.Exception exception, string message, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.LoggerExtensions.Log(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.LogLevel,Microsoft.Extensions.Logging.EventId,System.Exception,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub Log (logger As ILogger, logLevel As LogLevel, eventId As EventId, exception As Exception, message As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void Log(Microsoft::Extensions::Logging::ILogger ^ logger, Microsoft::Extensions::Logging::LogLevel logLevel, Microsoft::Extensions::Logging::EventId eventId, Exception ^ exception, System::String ^ message, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member Log : Microsoft.Extensions.Logging.ILogger * Microsoft.Extensions.Logging.LogLevel * Microsoft.Extensions.Logging.EventId * Exception * string * obj[] -&gt; unit" Usage="Microsoft.Extensions.Logging.LoggerExtensions.Log (logger, logLevel, eventId, exception, message, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Abstractions</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.Extensions.Logging.ILogger" RefType="this" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
        <Parameter Name="logLevel" Type="Microsoft.Extensions.Logging.LogLevel" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
        <Parameter Name="eventId" Type="Microsoft.Extensions.Logging.EventId" Index="2" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
        <Parameter Name="exception" Type="System.Exception" Index="3" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
        <Parameter Name="message" Type="System.String" Index="4" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
        <Parameter Name="args" Type="System.Object[]" Index="5" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-plat-ext-2.1">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="logger"><span data-ttu-id="82e16-127">Der <see cref="T:Microsoft.Extensions.Logging.ILogger" />, in den geschrieben werden soll.</span><span class="sxs-lookup"><span data-stu-id="82e16-127">The <see cref="T:Microsoft.Extensions.Logging.ILogger" /> to write to.</span></span></param>
        <param name="logLevel"><span data-ttu-id="82e16-128">Der Eintrag wird auf dieser Ebene geschrieben.</span><span class="sxs-lookup"><span data-stu-id="82e16-128">Entry will be written on this level.</span></span></param>
        <param name="eventId"><span data-ttu-id="82e16-129">Die mit dem Protokoll verknüpfte Ereignis-ID.</span><span class="sxs-lookup"><span data-stu-id="82e16-129">The event id associated with the log.</span></span></param>
        <param name="exception"><span data-ttu-id="82e16-130">Die zu protokollierende Ausnahme.</span><span class="sxs-lookup"><span data-stu-id="82e16-130">The exception to log.</span></span></param>
        <param name="message"><span data-ttu-id="82e16-131">Die Formatzeichenfolge der Protokollmeldung.</span><span class="sxs-lookup"><span data-stu-id="82e16-131">Format string of the log message.</span></span></param>
        <param name="args"><span data-ttu-id="82e16-132">Ein Objektarray mit 0 (null) oder mehr zu formatierenden Objekten.</span><span class="sxs-lookup"><span data-stu-id="82e16-132">An object array that contains zero or more objects to format.</span></span></param>
        <summary><span data-ttu-id="82e16-133">Formatiert und schreibt eine Protokollmeldung auf der angegebenen Protokollebene.</span><span class="sxs-lookup"><span data-stu-id="82e16-133">Formats and writes a log message at the specified log level.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogCritical">
      <MemberSignature Language="C#" Value="public static void LogCritical (this Microsoft.Extensions.Logging.ILogger logger, string message, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LogCritical(class Microsoft.Extensions.Logging.ILogger logger, string message, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.LoggerExtensions.LogCritical(Microsoft.Extensions.Logging.ILogger,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub LogCritical (logger As ILogger, message As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void LogCritical(Microsoft::Extensions::Logging::ILogger ^ logger, System::String ^ message, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member LogCritical : Microsoft.Extensions.Logging.ILogger * string * obj[] -&gt; unit" Usage="Microsoft.Extensions.Logging.LoggerExtensions.LogCritical (logger, message, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.Extensions.Logging.ILogger" RefType="this" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-plat-ext-1.0">
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="logger"><span data-ttu-id="82e16-134">Der <see cref="T:Microsoft.Extensions.Logging.ILogger" />, in den geschrieben werden soll.</span><span class="sxs-lookup"><span data-stu-id="82e16-134">The <see cref="T:Microsoft.Extensions.Logging.ILogger" /> to write to.</span></span></param>
        <param name="message"><span data-ttu-id="82e16-135">Formatzeichenfolge der Protokollmeldung im Format der Meldungsvorlage.</span><span class="sxs-lookup"><span data-stu-id="82e16-135">Format string of the log message in message template format.</span></span> <span data-ttu-id="82e16-136">Beispiel:</span><span class="sxs-lookup"><span data-stu-id="82e16-136">Example:</span></span> <code>"User {User} logged in from {Address}"</code></param>
        <param name="args"><span data-ttu-id="82e16-137">Ein Objektarray mit 0 (null) oder mehr zu formatierenden Objekten.</span><span class="sxs-lookup"><span data-stu-id="82e16-137">An object array that contains zero or more objects to format.</span></span></param>
        <summary><span data-ttu-id="82e16-138">Formatiert und schreibt einen kritischen Eintrag in das Protokoll.</span><span class="sxs-lookup"><span data-stu-id="82e16-138">Formats and writes a critical log message.</span></span></summary>
        <remarks>To be added.</remarks>
        <example><span data-ttu-id="82e16-139">Protokollierung. Logcritical ("Verarbeitungs Anforderung von {Address}", Adresse)</span><span class="sxs-lookup"><span data-stu-id="82e16-139">logger.LogCritical("Processing request from {Address}", address)</span></span></example>
      </Docs>
    </Member>
    <Member MemberName="LogCritical">
      <MemberSignature Language="C#" Value="public static void LogCritical (this Microsoft.Extensions.Logging.ILogger logger, Microsoft.Extensions.Logging.EventId eventId, string message, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LogCritical(class Microsoft.Extensions.Logging.ILogger logger, valuetype Microsoft.Extensions.Logging.EventId eventId, string message, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.LoggerExtensions.LogCritical(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.EventId,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub LogCritical (logger As ILogger, eventId As EventId, message As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void LogCritical(Microsoft::Extensions::Logging::ILogger ^ logger, Microsoft::Extensions::Logging::EventId eventId, System::String ^ message, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member LogCritical : Microsoft.Extensions.Logging.ILogger * Microsoft.Extensions.Logging.EventId * string * obj[] -&gt; unit" Usage="Microsoft.Extensions.Logging.LoggerExtensions.LogCritical (logger, eventId, message, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.Extensions.Logging.ILogger" RefType="this" />
        <Parameter Name="eventId" Type="Microsoft.Extensions.Logging.EventId" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-plat-ext-1.0">
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="logger"><span data-ttu-id="82e16-140">Der <see cref="T:Microsoft.Extensions.Logging.ILogger" />, in den geschrieben werden soll.</span><span class="sxs-lookup"><span data-stu-id="82e16-140">The <see cref="T:Microsoft.Extensions.Logging.ILogger" /> to write to.</span></span></param>
        <param name="eventId"><span data-ttu-id="82e16-141">Die mit dem Protokoll verknüpfte Ereignis-ID.</span><span class="sxs-lookup"><span data-stu-id="82e16-141">The event id associated with the log.</span></span></param>
        <param name="message"><span data-ttu-id="82e16-142">Formatzeichenfolge der Protokollmeldung im Format der Meldungsvorlage.</span><span class="sxs-lookup"><span data-stu-id="82e16-142">Format string of the log message in message template format.</span></span> <span data-ttu-id="82e16-143">Beispiel:</span><span class="sxs-lookup"><span data-stu-id="82e16-143">Example:</span></span> <code>"User {User} logged in from {Address}"</code></param>
        <param name="args"><span data-ttu-id="82e16-144">Ein Objektarray mit 0 (null) oder mehr zu formatierenden Objekten.</span><span class="sxs-lookup"><span data-stu-id="82e16-144">An object array that contains zero or more objects to format.</span></span></param>
        <summary><span data-ttu-id="82e16-145">Formatiert und schreibt einen kritischen Eintrag in das Protokoll.</span><span class="sxs-lookup"><span data-stu-id="82e16-145">Formats and writes a critical log message.</span></span></summary>
        <remarks>To be added.</remarks>
        <example><span data-ttu-id="82e16-146">Protokollierung. Logcritical (0, "Verarbeitungs Anforderung von {Address}", Adresse)</span><span class="sxs-lookup"><span data-stu-id="82e16-146">logger.LogCritical(0, "Processing request from {Address}", address)</span></span></example>
      </Docs>
    </Member>
    <Member MemberName="LogCritical">
      <MemberSignature Language="C#" Value="public static void LogCritical (this Microsoft.Extensions.Logging.ILogger logger, Exception exception, string message, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LogCritical(class Microsoft.Extensions.Logging.ILogger logger, class System.Exception exception, string message, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.LoggerExtensions.LogCritical(Microsoft.Extensions.Logging.ILogger,System.Exception,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub LogCritical (logger As ILogger, exception As Exception, message As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void LogCritical(Microsoft::Extensions::Logging::ILogger ^ logger, Exception ^ exception, System::String ^ message, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member LogCritical : Microsoft.Extensions.Logging.ILogger * Exception * string * obj[] -&gt; unit" Usage="Microsoft.Extensions.Logging.LoggerExtensions.LogCritical (logger, exception, message, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Abstractions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.Extensions.Logging.ILogger" RefType="this" Index="0" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
        <Parameter Name="exception" Type="System.Exception" Index="1" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
        <Parameter Name="message" Type="System.String" Index="2" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
        <Parameter Name="args" Type="System.Object[]" Index="3" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-plat-ext-2.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="logger"><span data-ttu-id="82e16-147">Der <see cref="T:Microsoft.Extensions.Logging.ILogger" />, in den geschrieben werden soll.</span><span class="sxs-lookup"><span data-stu-id="82e16-147">The <see cref="T:Microsoft.Extensions.Logging.ILogger" /> to write to.</span></span></param>
        <param name="exception"><span data-ttu-id="82e16-148">Die zu protokollierende Ausnahme.</span><span class="sxs-lookup"><span data-stu-id="82e16-148">The exception to log.</span></span></param>
        <param name="message"><span data-ttu-id="82e16-149">Formatzeichenfolge der Protokollmeldung im Format der Meldungsvorlage.</span><span class="sxs-lookup"><span data-stu-id="82e16-149">Format string of the log message in message template format.</span></span> <span data-ttu-id="82e16-150">Beispiel:</span><span class="sxs-lookup"><span data-stu-id="82e16-150">Example:</span></span> <code>"User {User} logged in from {Address}"</code></param>
        <param name="args"><span data-ttu-id="82e16-151">Ein Objektarray mit 0 (null) oder mehr zu formatierenden Objekten.</span><span class="sxs-lookup"><span data-stu-id="82e16-151">An object array that contains zero or more objects to format.</span></span></param>
        <summary><span data-ttu-id="82e16-152">Formatiert und schreibt einen kritischen Eintrag in das Protokoll.</span><span class="sxs-lookup"><span data-stu-id="82e16-152">Formats and writes a critical log message.</span></span></summary>
        <remarks>To be added.</remarks>
        <example><span data-ttu-id="82e16-153">Protokollierung. Logcritical (Ausnahme, "Fehler beim Verarbeiten der Anforderung von {Address}", Adresse)</span><span class="sxs-lookup"><span data-stu-id="82e16-153">logger.LogCritical(exception, "Error while processing request from {Address}", address)</span></span></example>
      </Docs>
    </Member>
    <Member MemberName="LogCritical">
      <MemberSignature Language="C#" Value="public static void LogCritical (this Microsoft.Extensions.Logging.ILogger logger, Microsoft.Extensions.Logging.EventId eventId, Exception exception, string message, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LogCritical(class Microsoft.Extensions.Logging.ILogger logger, valuetype Microsoft.Extensions.Logging.EventId eventId, class System.Exception exception, string message, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.LoggerExtensions.LogCritical(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.EventId,System.Exception,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub LogCritical (logger As ILogger, eventId As EventId, exception As Exception, message As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void LogCritical(Microsoft::Extensions::Logging::ILogger ^ logger, Microsoft::Extensions::Logging::EventId eventId, Exception ^ exception, System::String ^ message, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member LogCritical : Microsoft.Extensions.Logging.ILogger * Microsoft.Extensions.Logging.EventId * Exception * string * obj[] -&gt; unit" Usage="Microsoft.Extensions.Logging.LoggerExtensions.LogCritical (logger, eventId, exception, message, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.Extensions.Logging.ILogger" RefType="this" />
        <Parameter Name="eventId" Type="Microsoft.Extensions.Logging.EventId" />
        <Parameter Name="exception" Type="System.Exception" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-plat-ext-1.0">
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="logger"><span data-ttu-id="82e16-154">Der <see cref="T:Microsoft.Extensions.Logging.ILogger" />, in den geschrieben werden soll.</span><span class="sxs-lookup"><span data-stu-id="82e16-154">The <see cref="T:Microsoft.Extensions.Logging.ILogger" /> to write to.</span></span></param>
        <param name="eventId"><span data-ttu-id="82e16-155">Die mit dem Protokoll verknüpfte Ereignis-ID.</span><span class="sxs-lookup"><span data-stu-id="82e16-155">The event id associated with the log.</span></span></param>
        <param name="exception"><span data-ttu-id="82e16-156">Die zu protokollierende Ausnahme.</span><span class="sxs-lookup"><span data-stu-id="82e16-156">The exception to log.</span></span></param>
        <param name="message"><span data-ttu-id="82e16-157">Formatzeichenfolge der Protokollmeldung im Format der Meldungsvorlage.</span><span class="sxs-lookup"><span data-stu-id="82e16-157">Format string of the log message in message template format.</span></span> <span data-ttu-id="82e16-158">Beispiel:</span><span class="sxs-lookup"><span data-stu-id="82e16-158">Example:</span></span> <code>"User {User} logged in from {Address}"</code></param>
        <param name="args"><span data-ttu-id="82e16-159">Ein Objektarray mit 0 (null) oder mehr zu formatierenden Objekten.</span><span class="sxs-lookup"><span data-stu-id="82e16-159">An object array that contains zero or more objects to format.</span></span></param>
        <summary><span data-ttu-id="82e16-160">Formatiert und schreibt einen kritischen Eintrag in das Protokoll.</span><span class="sxs-lookup"><span data-stu-id="82e16-160">Formats and writes a critical log message.</span></span></summary>
        <remarks>To be added.</remarks>
        <example><span data-ttu-id="82e16-161">Protokollierung. Logcritical (0, Ausnahme, "Fehler beim Verarbeiten der Anforderung von {Address}", Adresse)</span><span class="sxs-lookup"><span data-stu-id="82e16-161">logger.LogCritical(0, exception, "Error while processing request from {Address}", address)</span></span></example>
      </Docs>
    </Member>
    <Member MemberName="LogDebug">
      <MemberSignature Language="C#" Value="public static void LogDebug (this Microsoft.Extensions.Logging.ILogger logger, string message, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LogDebug(class Microsoft.Extensions.Logging.ILogger logger, string message, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.LoggerExtensions.LogDebug(Microsoft.Extensions.Logging.ILogger,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub LogDebug (logger As ILogger, message As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void LogDebug(Microsoft::Extensions::Logging::ILogger ^ logger, System::String ^ message, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member LogDebug : Microsoft.Extensions.Logging.ILogger * string * obj[] -&gt; unit" Usage="Microsoft.Extensions.Logging.LoggerExtensions.LogDebug (logger, message, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.Extensions.Logging.ILogger" RefType="this" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-plat-ext-1.0">
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="logger"><span data-ttu-id="82e16-162">Der <see cref="T:Microsoft.Extensions.Logging.ILogger" />, in den geschrieben werden soll.</span><span class="sxs-lookup"><span data-stu-id="82e16-162">The <see cref="T:Microsoft.Extensions.Logging.ILogger" /> to write to.</span></span></param>
        <param name="message"><span data-ttu-id="82e16-163">Formatzeichenfolge der Protokollmeldung im Format der Meldungsvorlage.</span><span class="sxs-lookup"><span data-stu-id="82e16-163">Format string of the log message in message template format.</span></span> <span data-ttu-id="82e16-164">Beispiel:</span><span class="sxs-lookup"><span data-stu-id="82e16-164">Example:</span></span> <code>"User {User} logged in from {Address}"</code></param>
        <param name="args"><span data-ttu-id="82e16-165">Ein Objektarray mit 0 (null) oder mehr zu formatierenden Objekten.</span><span class="sxs-lookup"><span data-stu-id="82e16-165">An object array that contains zero or more objects to format.</span></span></param>
        <summary><span data-ttu-id="82e16-166">Formatiert und schreibt eine Debugprotokollmeldung.</span><span class="sxs-lookup"><span data-stu-id="82e16-166">Formats and writes a debug log message.</span></span></summary>
        <remarks>To be added.</remarks>
        <example><span data-ttu-id="82e16-167">Protokollierung. Logdebug ("Verarbeitungs Anforderung von {Address}", Adresse)</span><span class="sxs-lookup"><span data-stu-id="82e16-167">logger.LogDebug("Processing request from {Address}", address)</span></span></example>
      </Docs>
    </Member>
    <Member MemberName="LogDebug">
      <MemberSignature Language="C#" Value="public static void LogDebug (this Microsoft.Extensions.Logging.ILogger logger, Microsoft.Extensions.Logging.EventId eventId, string message, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LogDebug(class Microsoft.Extensions.Logging.ILogger logger, valuetype Microsoft.Extensions.Logging.EventId eventId, string message, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.LoggerExtensions.LogDebug(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.EventId,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub LogDebug (logger As ILogger, eventId As EventId, message As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void LogDebug(Microsoft::Extensions::Logging::ILogger ^ logger, Microsoft::Extensions::Logging::EventId eventId, System::String ^ message, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member LogDebug : Microsoft.Extensions.Logging.ILogger * Microsoft.Extensions.Logging.EventId * string * obj[] -&gt; unit" Usage="Microsoft.Extensions.Logging.LoggerExtensions.LogDebug (logger, eventId, message, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.Extensions.Logging.ILogger" RefType="this" />
        <Parameter Name="eventId" Type="Microsoft.Extensions.Logging.EventId" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-plat-ext-1.0">
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="logger"><span data-ttu-id="82e16-168">Der <see cref="T:Microsoft.Extensions.Logging.ILogger" />, in den geschrieben werden soll.</span><span class="sxs-lookup"><span data-stu-id="82e16-168">The <see cref="T:Microsoft.Extensions.Logging.ILogger" /> to write to.</span></span></param>
        <param name="eventId"><span data-ttu-id="82e16-169">Die mit dem Protokoll verknüpfte Ereignis-ID.</span><span class="sxs-lookup"><span data-stu-id="82e16-169">The event id associated with the log.</span></span></param>
        <param name="message"><span data-ttu-id="82e16-170">Formatzeichenfolge der Protokollmeldung im Format der Meldungsvorlage.</span><span class="sxs-lookup"><span data-stu-id="82e16-170">Format string of the log message in message template format.</span></span> <span data-ttu-id="82e16-171">Beispiel:</span><span class="sxs-lookup"><span data-stu-id="82e16-171">Example:</span></span> <code>"User {User} logged in from {Address}"</code></param>
        <param name="args"><span data-ttu-id="82e16-172">Ein Objektarray mit 0 (null) oder mehr zu formatierenden Objekten.</span><span class="sxs-lookup"><span data-stu-id="82e16-172">An object array that contains zero or more objects to format.</span></span></param>
        <summary><span data-ttu-id="82e16-173">Formatiert und schreibt eine Debugprotokollmeldung.</span><span class="sxs-lookup"><span data-stu-id="82e16-173">Formats and writes a debug log message.</span></span></summary>
        <remarks>To be added.</remarks>
        <example><span data-ttu-id="82e16-174">Protokollierung. Logdebug (0, "Verarbeitungs Anforderung von {Address}", Adresse)</span><span class="sxs-lookup"><span data-stu-id="82e16-174">logger.LogDebug(0, "Processing request from {Address}", address)</span></span></example>
      </Docs>
    </Member>
    <Member MemberName="LogDebug">
      <MemberSignature Language="C#" Value="public static void LogDebug (this Microsoft.Extensions.Logging.ILogger logger, Exception exception, string message, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LogDebug(class Microsoft.Extensions.Logging.ILogger logger, class System.Exception exception, string message, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.LoggerExtensions.LogDebug(Microsoft.Extensions.Logging.ILogger,System.Exception,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub LogDebug (logger As ILogger, exception As Exception, message As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void LogDebug(Microsoft::Extensions::Logging::ILogger ^ logger, Exception ^ exception, System::String ^ message, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member LogDebug : Microsoft.Extensions.Logging.ILogger * Exception * string * obj[] -&gt; unit" Usage="Microsoft.Extensions.Logging.LoggerExtensions.LogDebug (logger, exception, message, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Abstractions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.Extensions.Logging.ILogger" RefType="this" Index="0" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
        <Parameter Name="exception" Type="System.Exception" Index="1" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
        <Parameter Name="message" Type="System.String" Index="2" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
        <Parameter Name="args" Type="System.Object[]" Index="3" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-plat-ext-2.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="logger"><span data-ttu-id="82e16-175">Der <see cref="T:Microsoft.Extensions.Logging.ILogger" />, in den geschrieben werden soll.</span><span class="sxs-lookup"><span data-stu-id="82e16-175">The <see cref="T:Microsoft.Extensions.Logging.ILogger" /> to write to.</span></span></param>
        <param name="exception"><span data-ttu-id="82e16-176">Die zu protokollierende Ausnahme.</span><span class="sxs-lookup"><span data-stu-id="82e16-176">The exception to log.</span></span></param>
        <param name="message"><span data-ttu-id="82e16-177">Formatzeichenfolge der Protokollmeldung im Format der Meldungsvorlage.</span><span class="sxs-lookup"><span data-stu-id="82e16-177">Format string of the log message in message template format.</span></span> <span data-ttu-id="82e16-178">Beispiel:</span><span class="sxs-lookup"><span data-stu-id="82e16-178">Example:</span></span> <code>"User {User} logged in from {Address}"</code></param>
        <param name="args"><span data-ttu-id="82e16-179">Ein Objektarray mit 0 (null) oder mehr zu formatierenden Objekten.</span><span class="sxs-lookup"><span data-stu-id="82e16-179">An object array that contains zero or more objects to format.</span></span></param>
        <summary><span data-ttu-id="82e16-180">Formatiert und schreibt eine Debugprotokollmeldung.</span><span class="sxs-lookup"><span data-stu-id="82e16-180">Formats and writes a debug log message.</span></span></summary>
        <remarks>To be added.</remarks>
        <example><span data-ttu-id="82e16-181">Protokollierung. Logdebug (Ausnahme, "Fehler beim Verarbeiten der Anforderung von {Address}", Adresse)</span><span class="sxs-lookup"><span data-stu-id="82e16-181">logger.LogDebug(exception, "Error while processing request from {Address}", address)</span></span></example>
      </Docs>
    </Member>
    <Member MemberName="LogDebug">
      <MemberSignature Language="C#" Value="public static void LogDebug (this Microsoft.Extensions.Logging.ILogger logger, Microsoft.Extensions.Logging.EventId eventId, Exception exception, string message, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LogDebug(class Microsoft.Extensions.Logging.ILogger logger, valuetype Microsoft.Extensions.Logging.EventId eventId, class System.Exception exception, string message, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.LoggerExtensions.LogDebug(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.EventId,System.Exception,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub LogDebug (logger As ILogger, eventId As EventId, exception As Exception, message As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void LogDebug(Microsoft::Extensions::Logging::ILogger ^ logger, Microsoft::Extensions::Logging::EventId eventId, Exception ^ exception, System::String ^ message, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member LogDebug : Microsoft.Extensions.Logging.ILogger * Microsoft.Extensions.Logging.EventId * Exception * string * obj[] -&gt; unit" Usage="Microsoft.Extensions.Logging.LoggerExtensions.LogDebug (logger, eventId, exception, message, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.Extensions.Logging.ILogger" RefType="this" />
        <Parameter Name="eventId" Type="Microsoft.Extensions.Logging.EventId" />
        <Parameter Name="exception" Type="System.Exception" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-plat-ext-1.0">
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="logger"><span data-ttu-id="82e16-182">Der <see cref="T:Microsoft.Extensions.Logging.ILogger" />, in den geschrieben werden soll.</span><span class="sxs-lookup"><span data-stu-id="82e16-182">The <see cref="T:Microsoft.Extensions.Logging.ILogger" /> to write to.</span></span></param>
        <param name="eventId"><span data-ttu-id="82e16-183">Die mit dem Protokoll verknüpfte Ereignis-ID.</span><span class="sxs-lookup"><span data-stu-id="82e16-183">The event id associated with the log.</span></span></param>
        <param name="exception"><span data-ttu-id="82e16-184">Die zu protokollierende Ausnahme.</span><span class="sxs-lookup"><span data-stu-id="82e16-184">The exception to log.</span></span></param>
        <param name="message"><span data-ttu-id="82e16-185">Formatzeichenfolge der Protokollmeldung im Format der Meldungsvorlage.</span><span class="sxs-lookup"><span data-stu-id="82e16-185">Format string of the log message in message template format.</span></span> <span data-ttu-id="82e16-186">Beispiel:</span><span class="sxs-lookup"><span data-stu-id="82e16-186">Example:</span></span> <code>"User {User} logged in from {Address}"</code></param>
        <param name="args"><span data-ttu-id="82e16-187">Ein Objektarray mit 0 (null) oder mehr zu formatierenden Objekten.</span><span class="sxs-lookup"><span data-stu-id="82e16-187">An object array that contains zero or more objects to format.</span></span></param>
        <summary><span data-ttu-id="82e16-188">Formatiert und schreibt eine Debugprotokollmeldung.</span><span class="sxs-lookup"><span data-stu-id="82e16-188">Formats and writes a debug log message.</span></span></summary>
        <remarks>To be added.</remarks>
        <example><span data-ttu-id="82e16-189">Protokollierung. Logdebug (0, Ausnahme, "Fehler beim Verarbeiten der Anforderung von {Address}", Adresse)</span><span class="sxs-lookup"><span data-stu-id="82e16-189">logger.LogDebug(0, exception, "Error while processing request from {Address}", address)</span></span></example>
      </Docs>
    </Member>
    <Member MemberName="LogError">
      <MemberSignature Language="C#" Value="public static void LogError (this Microsoft.Extensions.Logging.ILogger logger, string message, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LogError(class Microsoft.Extensions.Logging.ILogger logger, string message, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.LoggerExtensions.LogError(Microsoft.Extensions.Logging.ILogger,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub LogError (logger As ILogger, message As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void LogError(Microsoft::Extensions::Logging::ILogger ^ logger, System::String ^ message, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member LogError : Microsoft.Extensions.Logging.ILogger * string * obj[] -&gt; unit" Usage="Microsoft.Extensions.Logging.LoggerExtensions.LogError (logger, message, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.Extensions.Logging.ILogger" RefType="this" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-plat-ext-1.0">
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="logger"><span data-ttu-id="82e16-190">Der <see cref="T:Microsoft.Extensions.Logging.ILogger" />, in den geschrieben werden soll.</span><span class="sxs-lookup"><span data-stu-id="82e16-190">The <see cref="T:Microsoft.Extensions.Logging.ILogger" /> to write to.</span></span></param>
        <param name="message"><span data-ttu-id="82e16-191">Formatzeichenfolge der Protokollmeldung im Format der Meldungsvorlage.</span><span class="sxs-lookup"><span data-stu-id="82e16-191">Format string of the log message in message template format.</span></span> <span data-ttu-id="82e16-192">Beispiel:</span><span class="sxs-lookup"><span data-stu-id="82e16-192">Example:</span></span> <code>"User {User} logged in from {Address}"</code></param>
        <param name="args"><span data-ttu-id="82e16-193">Ein Objektarray mit 0 (null) oder mehr zu formatierenden Objekten.</span><span class="sxs-lookup"><span data-stu-id="82e16-193">An object array that contains zero or more objects to format.</span></span></param>
        <summary><span data-ttu-id="82e16-194">Formatiert und schreibt einen Eintrag in das Fehlerprotokoll.</span><span class="sxs-lookup"><span data-stu-id="82e16-194">Formats and writes an error log message.</span></span></summary>
        <remarks>To be added.</remarks>
        <example><span data-ttu-id="82e16-195">Protokollierung. LogError ("Verarbeitungs Anforderung von {Address}", Adresse)</span><span class="sxs-lookup"><span data-stu-id="82e16-195">logger.LogError("Processing request from {Address}", address)</span></span></example>
      </Docs>
    </Member>
    <Member MemberName="LogError">
      <MemberSignature Language="C#" Value="public static void LogError (this Microsoft.Extensions.Logging.ILogger logger, Microsoft.Extensions.Logging.EventId eventId, string message, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LogError(class Microsoft.Extensions.Logging.ILogger logger, valuetype Microsoft.Extensions.Logging.EventId eventId, string message, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.LoggerExtensions.LogError(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.EventId,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub LogError (logger As ILogger, eventId As EventId, message As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void LogError(Microsoft::Extensions::Logging::ILogger ^ logger, Microsoft::Extensions::Logging::EventId eventId, System::String ^ message, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member LogError : Microsoft.Extensions.Logging.ILogger * Microsoft.Extensions.Logging.EventId * string * obj[] -&gt; unit" Usage="Microsoft.Extensions.Logging.LoggerExtensions.LogError (logger, eventId, message, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.Extensions.Logging.ILogger" RefType="this" />
        <Parameter Name="eventId" Type="Microsoft.Extensions.Logging.EventId" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-plat-ext-1.0">
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="logger"><span data-ttu-id="82e16-196">Der <see cref="T:Microsoft.Extensions.Logging.ILogger" />, in den geschrieben werden soll.</span><span class="sxs-lookup"><span data-stu-id="82e16-196">The <see cref="T:Microsoft.Extensions.Logging.ILogger" /> to write to.</span></span></param>
        <param name="eventId"><span data-ttu-id="82e16-197">Die mit dem Protokoll verknüpfte Ereignis-ID.</span><span class="sxs-lookup"><span data-stu-id="82e16-197">The event id associated with the log.</span></span></param>
        <param name="message"><span data-ttu-id="82e16-198">Formatzeichenfolge der Protokollmeldung im Format der Meldungsvorlage.</span><span class="sxs-lookup"><span data-stu-id="82e16-198">Format string of the log message in message template format.</span></span> <span data-ttu-id="82e16-199">Beispiel:</span><span class="sxs-lookup"><span data-stu-id="82e16-199">Example:</span></span> <code>"User {User} logged in from {Address}"</code></param>
        <param name="args"><span data-ttu-id="82e16-200">Ein Objektarray mit 0 (null) oder mehr zu formatierenden Objekten.</span><span class="sxs-lookup"><span data-stu-id="82e16-200">An object array that contains zero or more objects to format.</span></span></param>
        <summary><span data-ttu-id="82e16-201">Formatiert und schreibt einen Eintrag in das Fehlerprotokoll.</span><span class="sxs-lookup"><span data-stu-id="82e16-201">Formats and writes an error log message.</span></span></summary>
        <remarks>To be added.</remarks>
        <example><span data-ttu-id="82e16-202">Protokollierung. LogError (0, "Verarbeitungs Anforderung von {Address}", Adresse)</span><span class="sxs-lookup"><span data-stu-id="82e16-202">logger.LogError(0, "Processing request from {Address}", address)</span></span></example>
      </Docs>
    </Member>
    <Member MemberName="LogError">
      <MemberSignature Language="C#" Value="public static void LogError (this Microsoft.Extensions.Logging.ILogger logger, Exception exception, string message, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LogError(class Microsoft.Extensions.Logging.ILogger logger, class System.Exception exception, string message, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.LoggerExtensions.LogError(Microsoft.Extensions.Logging.ILogger,System.Exception,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub LogError (logger As ILogger, exception As Exception, message As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void LogError(Microsoft::Extensions::Logging::ILogger ^ logger, Exception ^ exception, System::String ^ message, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member LogError : Microsoft.Extensions.Logging.ILogger * Exception * string * obj[] -&gt; unit" Usage="Microsoft.Extensions.Logging.LoggerExtensions.LogError (logger, exception, message, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Abstractions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.Extensions.Logging.ILogger" RefType="this" Index="0" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
        <Parameter Name="exception" Type="System.Exception" Index="1" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
        <Parameter Name="message" Type="System.String" Index="2" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
        <Parameter Name="args" Type="System.Object[]" Index="3" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-plat-ext-2.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="logger"><span data-ttu-id="82e16-203">Der <see cref="T:Microsoft.Extensions.Logging.ILogger" />, in den geschrieben werden soll.</span><span class="sxs-lookup"><span data-stu-id="82e16-203">The <see cref="T:Microsoft.Extensions.Logging.ILogger" /> to write to.</span></span></param>
        <param name="exception"><span data-ttu-id="82e16-204">Die zu protokollierende Ausnahme.</span><span class="sxs-lookup"><span data-stu-id="82e16-204">The exception to log.</span></span></param>
        <param name="message"><span data-ttu-id="82e16-205">Formatzeichenfolge der Protokollmeldung im Format der Meldungsvorlage.</span><span class="sxs-lookup"><span data-stu-id="82e16-205">Format string of the log message in message template format.</span></span> <span data-ttu-id="82e16-206">Beispiel:</span><span class="sxs-lookup"><span data-stu-id="82e16-206">Example:</span></span> <code>"User {User} logged in from {Address}"</code></param>
        <param name="args"><span data-ttu-id="82e16-207">Ein Objektarray mit 0 (null) oder mehr zu formatierenden Objekten.</span><span class="sxs-lookup"><span data-stu-id="82e16-207">An object array that contains zero or more objects to format.</span></span></param>
        <summary><span data-ttu-id="82e16-208">Formatiert und schreibt einen Eintrag in das Fehlerprotokoll.</span><span class="sxs-lookup"><span data-stu-id="82e16-208">Formats and writes an error log message.</span></span></summary>
        <remarks>To be added.</remarks>
        <example><span data-ttu-id="82e16-209">Protokollierung. LogError (Ausnahme, "Fehler beim Verarbeiten der Anforderung von {Address}", Adresse)</span><span class="sxs-lookup"><span data-stu-id="82e16-209">logger.LogError(exception, "Error while processing request from {Address}", address)</span></span></example>
      </Docs>
    </Member>
    <Member MemberName="LogError">
      <MemberSignature Language="C#" Value="public static void LogError (this Microsoft.Extensions.Logging.ILogger logger, Microsoft.Extensions.Logging.EventId eventId, Exception exception, string message, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LogError(class Microsoft.Extensions.Logging.ILogger logger, valuetype Microsoft.Extensions.Logging.EventId eventId, class System.Exception exception, string message, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.LoggerExtensions.LogError(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.EventId,System.Exception,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub LogError (logger As ILogger, eventId As EventId, exception As Exception, message As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void LogError(Microsoft::Extensions::Logging::ILogger ^ logger, Microsoft::Extensions::Logging::EventId eventId, Exception ^ exception, System::String ^ message, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member LogError : Microsoft.Extensions.Logging.ILogger * Microsoft.Extensions.Logging.EventId * Exception * string * obj[] -&gt; unit" Usage="Microsoft.Extensions.Logging.LoggerExtensions.LogError (logger, eventId, exception, message, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.Extensions.Logging.ILogger" RefType="this" />
        <Parameter Name="eventId" Type="Microsoft.Extensions.Logging.EventId" />
        <Parameter Name="exception" Type="System.Exception" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-plat-ext-1.0">
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="logger"><span data-ttu-id="82e16-210">Der <see cref="T:Microsoft.Extensions.Logging.ILogger" />, in den geschrieben werden soll.</span><span class="sxs-lookup"><span data-stu-id="82e16-210">The <see cref="T:Microsoft.Extensions.Logging.ILogger" /> to write to.</span></span></param>
        <param name="eventId"><span data-ttu-id="82e16-211">Die mit dem Protokoll verknüpfte Ereignis-ID.</span><span class="sxs-lookup"><span data-stu-id="82e16-211">The event id associated with the log.</span></span></param>
        <param name="exception"><span data-ttu-id="82e16-212">Die zu protokollierende Ausnahme.</span><span class="sxs-lookup"><span data-stu-id="82e16-212">The exception to log.</span></span></param>
        <param name="message"><span data-ttu-id="82e16-213">Formatzeichenfolge der Protokollmeldung im Format der Meldungsvorlage.</span><span class="sxs-lookup"><span data-stu-id="82e16-213">Format string of the log message in message template format.</span></span> <span data-ttu-id="82e16-214">Beispiel:</span><span class="sxs-lookup"><span data-stu-id="82e16-214">Example:</span></span> <code>"User {User} logged in from {Address}"</code></param>
        <param name="args"><span data-ttu-id="82e16-215">Ein Objektarray mit 0 (null) oder mehr zu formatierenden Objekten.</span><span class="sxs-lookup"><span data-stu-id="82e16-215">An object array that contains zero or more objects to format.</span></span></param>
        <summary><span data-ttu-id="82e16-216">Formatiert und schreibt einen Eintrag in das Fehlerprotokoll.</span><span class="sxs-lookup"><span data-stu-id="82e16-216">Formats and writes an error log message.</span></span></summary>
        <remarks>To be added.</remarks>
        <example><span data-ttu-id="82e16-217">Protokollierung. LogError (0, Ausnahme, "Fehler beim Verarbeiten der Anforderung von {Address}", Adresse)</span><span class="sxs-lookup"><span data-stu-id="82e16-217">logger.LogError(0, exception, "Error while processing request from {Address}", address)</span></span></example>
      </Docs>
    </Member>
    <Member MemberName="LogInformation">
      <MemberSignature Language="C#" Value="public static void LogInformation (this Microsoft.Extensions.Logging.ILogger logger, string message, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LogInformation(class Microsoft.Extensions.Logging.ILogger logger, string message, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.LoggerExtensions.LogInformation(Microsoft.Extensions.Logging.ILogger,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub LogInformation (logger As ILogger, message As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void LogInformation(Microsoft::Extensions::Logging::ILogger ^ logger, System::String ^ message, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member LogInformation : Microsoft.Extensions.Logging.ILogger * string * obj[] -&gt; unit" Usage="Microsoft.Extensions.Logging.LoggerExtensions.LogInformation (logger, message, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.Extensions.Logging.ILogger" RefType="this" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-plat-ext-1.0">
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="logger"><span data-ttu-id="82e16-218">Der <see cref="T:Microsoft.Extensions.Logging.ILogger" />, in den geschrieben werden soll.</span><span class="sxs-lookup"><span data-stu-id="82e16-218">The <see cref="T:Microsoft.Extensions.Logging.ILogger" /> to write to.</span></span></param>
        <param name="message"><span data-ttu-id="82e16-219">Formatzeichenfolge der Protokollmeldung im Format der Meldungsvorlage.</span><span class="sxs-lookup"><span data-stu-id="82e16-219">Format string of the log message in message template format.</span></span> <span data-ttu-id="82e16-220">Beispiel:</span><span class="sxs-lookup"><span data-stu-id="82e16-220">Example:</span></span> <code>"User {User} logged in from {Address}"</code></param>
        <param name="args"><span data-ttu-id="82e16-221">Ein Objektarray mit 0 (null) oder mehr zu formatierenden Objekten.</span><span class="sxs-lookup"><span data-stu-id="82e16-221">An object array that contains zero or more objects to format.</span></span></param>
        <summary><span data-ttu-id="82e16-222">Formatiert uns schreibt einen Informationseintrag in das Protokoll.</span><span class="sxs-lookup"><span data-stu-id="82e16-222">Formats and writes an informational log message.</span></span></summary>
        <remarks>To be added.</remarks>
        <example><span data-ttu-id="82e16-223">Protokollierung. LogInformation ("Verarbeitungs Anforderung von {Address}", Adresse)</span><span class="sxs-lookup"><span data-stu-id="82e16-223">logger.LogInformation("Processing request from {Address}", address)</span></span></example>
      </Docs>
    </Member>
    <Member MemberName="LogInformation">
      <MemberSignature Language="C#" Value="public static void LogInformation (this Microsoft.Extensions.Logging.ILogger logger, Microsoft.Extensions.Logging.EventId eventId, string message, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LogInformation(class Microsoft.Extensions.Logging.ILogger logger, valuetype Microsoft.Extensions.Logging.EventId eventId, string message, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.LoggerExtensions.LogInformation(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.EventId,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub LogInformation (logger As ILogger, eventId As EventId, message As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void LogInformation(Microsoft::Extensions::Logging::ILogger ^ logger, Microsoft::Extensions::Logging::EventId eventId, System::String ^ message, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member LogInformation : Microsoft.Extensions.Logging.ILogger * Microsoft.Extensions.Logging.EventId * string * obj[] -&gt; unit" Usage="Microsoft.Extensions.Logging.LoggerExtensions.LogInformation (logger, eventId, message, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.Extensions.Logging.ILogger" RefType="this" />
        <Parameter Name="eventId" Type="Microsoft.Extensions.Logging.EventId" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-plat-ext-1.0">
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="logger"><span data-ttu-id="82e16-224">Der <see cref="T:Microsoft.Extensions.Logging.ILogger" />, in den geschrieben werden soll.</span><span class="sxs-lookup"><span data-stu-id="82e16-224">The <see cref="T:Microsoft.Extensions.Logging.ILogger" /> to write to.</span></span></param>
        <param name="eventId"><span data-ttu-id="82e16-225">Die mit dem Protokoll verknüpfte Ereignis-ID.</span><span class="sxs-lookup"><span data-stu-id="82e16-225">The event id associated with the log.</span></span></param>
        <param name="message"><span data-ttu-id="82e16-226">Formatzeichenfolge der Protokollmeldung im Format der Meldungsvorlage.</span><span class="sxs-lookup"><span data-stu-id="82e16-226">Format string of the log message in message template format.</span></span> <span data-ttu-id="82e16-227">Beispiel:</span><span class="sxs-lookup"><span data-stu-id="82e16-227">Example:</span></span> <code>"User {User} logged in from {Address}"</code></param>
        <param name="args"><span data-ttu-id="82e16-228">Ein Objektarray mit 0 (null) oder mehr zu formatierenden Objekten.</span><span class="sxs-lookup"><span data-stu-id="82e16-228">An object array that contains zero or more objects to format.</span></span></param>
        <summary><span data-ttu-id="82e16-229">Formatiert uns schreibt einen Informationseintrag in das Protokoll.</span><span class="sxs-lookup"><span data-stu-id="82e16-229">Formats and writes an informational log message.</span></span></summary>
        <remarks>To be added.</remarks>
        <example><span data-ttu-id="82e16-230">Protokollierung. LogInformation (0, "Verarbeitungs Anforderung von {Address}", Adresse)</span><span class="sxs-lookup"><span data-stu-id="82e16-230">logger.LogInformation(0, "Processing request from {Address}", address)</span></span></example>
      </Docs>
    </Member>
    <Member MemberName="LogInformation">
      <MemberSignature Language="C#" Value="public static void LogInformation (this Microsoft.Extensions.Logging.ILogger logger, Exception exception, string message, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LogInformation(class Microsoft.Extensions.Logging.ILogger logger, class System.Exception exception, string message, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.LoggerExtensions.LogInformation(Microsoft.Extensions.Logging.ILogger,System.Exception,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub LogInformation (logger As ILogger, exception As Exception, message As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void LogInformation(Microsoft::Extensions::Logging::ILogger ^ logger, Exception ^ exception, System::String ^ message, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member LogInformation : Microsoft.Extensions.Logging.ILogger * Exception * string * obj[] -&gt; unit" Usage="Microsoft.Extensions.Logging.LoggerExtensions.LogInformation (logger, exception, message, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Abstractions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.Extensions.Logging.ILogger" RefType="this" Index="0" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
        <Parameter Name="exception" Type="System.Exception" Index="1" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
        <Parameter Name="message" Type="System.String" Index="2" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
        <Parameter Name="args" Type="System.Object[]" Index="3" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-plat-ext-2.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="logger"><span data-ttu-id="82e16-231">Der <see cref="T:Microsoft.Extensions.Logging.ILogger" />, in den geschrieben werden soll.</span><span class="sxs-lookup"><span data-stu-id="82e16-231">The <see cref="T:Microsoft.Extensions.Logging.ILogger" /> to write to.</span></span></param>
        <param name="exception"><span data-ttu-id="82e16-232">Die zu protokollierende Ausnahme.</span><span class="sxs-lookup"><span data-stu-id="82e16-232">The exception to log.</span></span></param>
        <param name="message"><span data-ttu-id="82e16-233">Formatzeichenfolge der Protokollmeldung im Format der Meldungsvorlage.</span><span class="sxs-lookup"><span data-stu-id="82e16-233">Format string of the log message in message template format.</span></span> <span data-ttu-id="82e16-234">Beispiel:</span><span class="sxs-lookup"><span data-stu-id="82e16-234">Example:</span></span> <code>"User {User} logged in from {Address}"</code></param>
        <param name="args"><span data-ttu-id="82e16-235">Ein Objektarray mit 0 (null) oder mehr zu formatierenden Objekten.</span><span class="sxs-lookup"><span data-stu-id="82e16-235">An object array that contains zero or more objects to format.</span></span></param>
        <summary><span data-ttu-id="82e16-236">Formatiert uns schreibt einen Informationseintrag in das Protokoll.</span><span class="sxs-lookup"><span data-stu-id="82e16-236">Formats and writes an informational log message.</span></span></summary>
        <remarks>To be added.</remarks>
        <example><span data-ttu-id="82e16-237">Protokollierung. LogInformation (Exception, "Fehler beim Verarbeiten der Anforderung von {Address}", Adresse)</span><span class="sxs-lookup"><span data-stu-id="82e16-237">logger.LogInformation(exception, "Error while processing request from {Address}", address)</span></span></example>
      </Docs>
    </Member>
    <Member MemberName="LogInformation">
      <MemberSignature Language="C#" Value="public static void LogInformation (this Microsoft.Extensions.Logging.ILogger logger, Microsoft.Extensions.Logging.EventId eventId, Exception exception, string message, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LogInformation(class Microsoft.Extensions.Logging.ILogger logger, valuetype Microsoft.Extensions.Logging.EventId eventId, class System.Exception exception, string message, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.LoggerExtensions.LogInformation(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.EventId,System.Exception,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub LogInformation (logger As ILogger, eventId As EventId, exception As Exception, message As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void LogInformation(Microsoft::Extensions::Logging::ILogger ^ logger, Microsoft::Extensions::Logging::EventId eventId, Exception ^ exception, System::String ^ message, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member LogInformation : Microsoft.Extensions.Logging.ILogger * Microsoft.Extensions.Logging.EventId * Exception * string * obj[] -&gt; unit" Usage="Microsoft.Extensions.Logging.LoggerExtensions.LogInformation (logger, eventId, exception, message, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.Extensions.Logging.ILogger" RefType="this" />
        <Parameter Name="eventId" Type="Microsoft.Extensions.Logging.EventId" />
        <Parameter Name="exception" Type="System.Exception" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-plat-ext-1.0">
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="logger"><span data-ttu-id="82e16-238">Der <see cref="T:Microsoft.Extensions.Logging.ILogger" />, in den geschrieben werden soll.</span><span class="sxs-lookup"><span data-stu-id="82e16-238">The <see cref="T:Microsoft.Extensions.Logging.ILogger" /> to write to.</span></span></param>
        <param name="eventId"><span data-ttu-id="82e16-239">Die mit dem Protokoll verknüpfte Ereignis-ID.</span><span class="sxs-lookup"><span data-stu-id="82e16-239">The event id associated with the log.</span></span></param>
        <param name="exception"><span data-ttu-id="82e16-240">Die zu protokollierende Ausnahme.</span><span class="sxs-lookup"><span data-stu-id="82e16-240">The exception to log.</span></span></param>
        <param name="message"><span data-ttu-id="82e16-241">Formatzeichenfolge der Protokollmeldung im Format der Meldungsvorlage.</span><span class="sxs-lookup"><span data-stu-id="82e16-241">Format string of the log message in message template format.</span></span> <span data-ttu-id="82e16-242">Beispiel:</span><span class="sxs-lookup"><span data-stu-id="82e16-242">Example:</span></span> <code>"User {User} logged in from {Address}"</code></param>
        <param name="args"><span data-ttu-id="82e16-243">Ein Objektarray mit 0 (null) oder mehr zu formatierenden Objekten.</span><span class="sxs-lookup"><span data-stu-id="82e16-243">An object array that contains zero or more objects to format.</span></span></param>
        <summary><span data-ttu-id="82e16-244">Formatiert uns schreibt einen Informationseintrag in das Protokoll.</span><span class="sxs-lookup"><span data-stu-id="82e16-244">Formats and writes an informational log message.</span></span></summary>
        <remarks>To be added.</remarks>
        <example><span data-ttu-id="82e16-245">Protokollierung. LogInformation (0, Exception, "Fehler beim Verarbeiten der Anforderung von {Address}", Adresse)</span><span class="sxs-lookup"><span data-stu-id="82e16-245">logger.LogInformation(0, exception, "Error while processing request from {Address}", address)</span></span></example>
      </Docs>
    </Member>
    <Member MemberName="LogTrace">
      <MemberSignature Language="C#" Value="public static void LogTrace (this Microsoft.Extensions.Logging.ILogger logger, string message, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LogTrace(class Microsoft.Extensions.Logging.ILogger logger, string message, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.LoggerExtensions.LogTrace(Microsoft.Extensions.Logging.ILogger,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub LogTrace (logger As ILogger, message As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void LogTrace(Microsoft::Extensions::Logging::ILogger ^ logger, System::String ^ message, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member LogTrace : Microsoft.Extensions.Logging.ILogger * string * obj[] -&gt; unit" Usage="Microsoft.Extensions.Logging.LoggerExtensions.LogTrace (logger, message, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.Extensions.Logging.ILogger" RefType="this" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-plat-ext-1.0">
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="logger"><span data-ttu-id="82e16-246">Der <see cref="T:Microsoft.Extensions.Logging.ILogger" />, in den geschrieben werden soll.</span><span class="sxs-lookup"><span data-stu-id="82e16-246">The <see cref="T:Microsoft.Extensions.Logging.ILogger" /> to write to.</span></span></param>
        <param name="message"><span data-ttu-id="82e16-247">Formatzeichenfolge der Protokollmeldung im Format der Meldungsvorlage.</span><span class="sxs-lookup"><span data-stu-id="82e16-247">Format string of the log message in message template format.</span></span> <span data-ttu-id="82e16-248">Beispiel:</span><span class="sxs-lookup"><span data-stu-id="82e16-248">Example:</span></span> <code>"User {User} logged in from {Address}"</code></param>
        <param name="args"><span data-ttu-id="82e16-249">Ein Objektarray mit 0 (null) oder mehr zu formatierenden Objekten.</span><span class="sxs-lookup"><span data-stu-id="82e16-249">An object array that contains zero or more objects to format.</span></span></param>
        <summary><span data-ttu-id="82e16-250">Formatiert und schreibt einen Ablaufverfolgungseintrag in das Protokoll.</span><span class="sxs-lookup"><span data-stu-id="82e16-250">Formats and writes a trace log message.</span></span></summary>
        <remarks>To be added.</remarks>
        <example><span data-ttu-id="82e16-251">Protokollierung. Logtrace ("Verarbeitungs Anforderung von {Address}", Adresse)</span><span class="sxs-lookup"><span data-stu-id="82e16-251">logger.LogTrace("Processing request from {Address}", address)</span></span></example>
      </Docs>
    </Member>
    <Member MemberName="LogTrace">
      <MemberSignature Language="C#" Value="public static void LogTrace (this Microsoft.Extensions.Logging.ILogger logger, Microsoft.Extensions.Logging.EventId eventId, string message, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LogTrace(class Microsoft.Extensions.Logging.ILogger logger, valuetype Microsoft.Extensions.Logging.EventId eventId, string message, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.LoggerExtensions.LogTrace(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.EventId,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub LogTrace (logger As ILogger, eventId As EventId, message As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void LogTrace(Microsoft::Extensions::Logging::ILogger ^ logger, Microsoft::Extensions::Logging::EventId eventId, System::String ^ message, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member LogTrace : Microsoft.Extensions.Logging.ILogger * Microsoft.Extensions.Logging.EventId * string * obj[] -&gt; unit" Usage="Microsoft.Extensions.Logging.LoggerExtensions.LogTrace (logger, eventId, message, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.Extensions.Logging.ILogger" RefType="this" />
        <Parameter Name="eventId" Type="Microsoft.Extensions.Logging.EventId" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-plat-ext-1.0">
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="logger"><span data-ttu-id="82e16-252">Der <see cref="T:Microsoft.Extensions.Logging.ILogger" />, in den geschrieben werden soll.</span><span class="sxs-lookup"><span data-stu-id="82e16-252">The <see cref="T:Microsoft.Extensions.Logging.ILogger" /> to write to.</span></span></param>
        <param name="eventId"><span data-ttu-id="82e16-253">Die mit dem Protokoll verknüpfte Ereignis-ID.</span><span class="sxs-lookup"><span data-stu-id="82e16-253">The event id associated with the log.</span></span></param>
        <param name="message"><span data-ttu-id="82e16-254">Formatzeichenfolge der Protokollmeldung im Format der Meldungsvorlage.</span><span class="sxs-lookup"><span data-stu-id="82e16-254">Format string of the log message in message template format.</span></span> <span data-ttu-id="82e16-255">Beispiel:</span><span class="sxs-lookup"><span data-stu-id="82e16-255">Example:</span></span> <code>"User {User} logged in from {Address}"</code></param>
        <param name="args"><span data-ttu-id="82e16-256">Ein Objektarray mit 0 (null) oder mehr zu formatierenden Objekten.</span><span class="sxs-lookup"><span data-stu-id="82e16-256">An object array that contains zero or more objects to format.</span></span></param>
        <summary><span data-ttu-id="82e16-257">Formatiert und schreibt einen Ablaufverfolgungseintrag in das Protokoll.</span><span class="sxs-lookup"><span data-stu-id="82e16-257">Formats and writes a trace log message.</span></span></summary>
        <remarks>To be added.</remarks>
        <example><span data-ttu-id="82e16-258">Protokollierung. Logtrace (0, "Verarbeitungs Anforderung von {Address}", Adresse)</span><span class="sxs-lookup"><span data-stu-id="82e16-258">logger.LogTrace(0, "Processing request from {Address}", address)</span></span></example>
      </Docs>
    </Member>
    <Member MemberName="LogTrace">
      <MemberSignature Language="C#" Value="public static void LogTrace (this Microsoft.Extensions.Logging.ILogger logger, Exception exception, string message, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LogTrace(class Microsoft.Extensions.Logging.ILogger logger, class System.Exception exception, string message, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.LoggerExtensions.LogTrace(Microsoft.Extensions.Logging.ILogger,System.Exception,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub LogTrace (logger As ILogger, exception As Exception, message As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void LogTrace(Microsoft::Extensions::Logging::ILogger ^ logger, Exception ^ exception, System::String ^ message, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member LogTrace : Microsoft.Extensions.Logging.ILogger * Exception * string * obj[] -&gt; unit" Usage="Microsoft.Extensions.Logging.LoggerExtensions.LogTrace (logger, exception, message, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Abstractions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.Extensions.Logging.ILogger" RefType="this" Index="0" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
        <Parameter Name="exception" Type="System.Exception" Index="1" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
        <Parameter Name="message" Type="System.String" Index="2" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
        <Parameter Name="args" Type="System.Object[]" Index="3" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-plat-ext-2.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="logger"><span data-ttu-id="82e16-259">Der <see cref="T:Microsoft.Extensions.Logging.ILogger" />, in den geschrieben werden soll.</span><span class="sxs-lookup"><span data-stu-id="82e16-259">The <see cref="T:Microsoft.Extensions.Logging.ILogger" /> to write to.</span></span></param>
        <param name="exception"><span data-ttu-id="82e16-260">Die zu protokollierende Ausnahme.</span><span class="sxs-lookup"><span data-stu-id="82e16-260">The exception to log.</span></span></param>
        <param name="message"><span data-ttu-id="82e16-261">Formatzeichenfolge der Protokollmeldung im Format der Meldungsvorlage.</span><span class="sxs-lookup"><span data-stu-id="82e16-261">Format string of the log message in message template format.</span></span> <span data-ttu-id="82e16-262">Beispiel:</span><span class="sxs-lookup"><span data-stu-id="82e16-262">Example:</span></span> <code>"User {User} logged in from {Address}"</code></param>
        <param name="args"><span data-ttu-id="82e16-263">Ein Objektarray mit 0 (null) oder mehr zu formatierenden Objekten.</span><span class="sxs-lookup"><span data-stu-id="82e16-263">An object array that contains zero or more objects to format.</span></span></param>
        <summary><span data-ttu-id="82e16-264">Formatiert und schreibt einen Ablaufverfolgungseintrag in das Protokoll.</span><span class="sxs-lookup"><span data-stu-id="82e16-264">Formats and writes a trace log message.</span></span></summary>
        <remarks>To be added.</remarks>
        <example><span data-ttu-id="82e16-265">Protokollierung. Logtrace (Ausnahme, "Fehler beim Verarbeiten der Anforderung von {Address}", Adresse)</span><span class="sxs-lookup"><span data-stu-id="82e16-265">logger.LogTrace(exception, "Error while processing request from {Address}", address)</span></span></example>
      </Docs>
    </Member>
    <Member MemberName="LogTrace">
      <MemberSignature Language="C#" Value="public static void LogTrace (this Microsoft.Extensions.Logging.ILogger logger, Microsoft.Extensions.Logging.EventId eventId, Exception exception, string message, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LogTrace(class Microsoft.Extensions.Logging.ILogger logger, valuetype Microsoft.Extensions.Logging.EventId eventId, class System.Exception exception, string message, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.LoggerExtensions.LogTrace(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.EventId,System.Exception,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub LogTrace (logger As ILogger, eventId As EventId, exception As Exception, message As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void LogTrace(Microsoft::Extensions::Logging::ILogger ^ logger, Microsoft::Extensions::Logging::EventId eventId, Exception ^ exception, System::String ^ message, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member LogTrace : Microsoft.Extensions.Logging.ILogger * Microsoft.Extensions.Logging.EventId * Exception * string * obj[] -&gt; unit" Usage="Microsoft.Extensions.Logging.LoggerExtensions.LogTrace (logger, eventId, exception, message, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.Extensions.Logging.ILogger" RefType="this" />
        <Parameter Name="eventId" Type="Microsoft.Extensions.Logging.EventId" />
        <Parameter Name="exception" Type="System.Exception" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-plat-ext-1.0">
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="logger"><span data-ttu-id="82e16-266">Der <see cref="T:Microsoft.Extensions.Logging.ILogger" />, in den geschrieben werden soll.</span><span class="sxs-lookup"><span data-stu-id="82e16-266">The <see cref="T:Microsoft.Extensions.Logging.ILogger" /> to write to.</span></span></param>
        <param name="eventId"><span data-ttu-id="82e16-267">Die mit dem Protokoll verknüpfte Ereignis-ID.</span><span class="sxs-lookup"><span data-stu-id="82e16-267">The event id associated with the log.</span></span></param>
        <param name="exception"><span data-ttu-id="82e16-268">Die zu protokollierende Ausnahme.</span><span class="sxs-lookup"><span data-stu-id="82e16-268">The exception to log.</span></span></param>
        <param name="message"><span data-ttu-id="82e16-269">Formatzeichenfolge der Protokollmeldung im Format der Meldungsvorlage.</span><span class="sxs-lookup"><span data-stu-id="82e16-269">Format string of the log message in message template format.</span></span> <span data-ttu-id="82e16-270">Beispiel:</span><span class="sxs-lookup"><span data-stu-id="82e16-270">Example:</span></span> <code>"User {User} logged in from {Address}"</code></param>
        <param name="args"><span data-ttu-id="82e16-271">Ein Objektarray mit 0 (null) oder mehr zu formatierenden Objekten.</span><span class="sxs-lookup"><span data-stu-id="82e16-271">An object array that contains zero or more objects to format.</span></span></param>
        <summary><span data-ttu-id="82e16-272">Formatiert und schreibt einen Ablaufverfolgungseintrag in das Protokoll.</span><span class="sxs-lookup"><span data-stu-id="82e16-272">Formats and writes a trace log message.</span></span></summary>
        <remarks>To be added.</remarks>
        <example><span data-ttu-id="82e16-273">Protokollierung. Logtrace (0, Ausnahme, "Fehler beim Verarbeiten der Anforderung von {Address}", Adresse)</span><span class="sxs-lookup"><span data-stu-id="82e16-273">logger.LogTrace(0, exception, "Error while processing request from {Address}", address)</span></span></example>
      </Docs>
    </Member>
    <Member MemberName="LogWarning">
      <MemberSignature Language="C#" Value="public static void LogWarning (this Microsoft.Extensions.Logging.ILogger logger, string message, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LogWarning(class Microsoft.Extensions.Logging.ILogger logger, string message, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.LoggerExtensions.LogWarning(Microsoft.Extensions.Logging.ILogger,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub LogWarning (logger As ILogger, message As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void LogWarning(Microsoft::Extensions::Logging::ILogger ^ logger, System::String ^ message, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member LogWarning : Microsoft.Extensions.Logging.ILogger * string * obj[] -&gt; unit" Usage="Microsoft.Extensions.Logging.LoggerExtensions.LogWarning (logger, message, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.Extensions.Logging.ILogger" RefType="this" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-plat-ext-1.0">
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="logger"><span data-ttu-id="82e16-274">Der <see cref="T:Microsoft.Extensions.Logging.ILogger" />, in den geschrieben werden soll.</span><span class="sxs-lookup"><span data-stu-id="82e16-274">The <see cref="T:Microsoft.Extensions.Logging.ILogger" /> to write to.</span></span></param>
        <param name="message"><span data-ttu-id="82e16-275">Formatzeichenfolge der Protokollmeldung im Format der Meldungsvorlage.</span><span class="sxs-lookup"><span data-stu-id="82e16-275">Format string of the log message in message template format.</span></span> <span data-ttu-id="82e16-276">Beispiel:</span><span class="sxs-lookup"><span data-stu-id="82e16-276">Example:</span></span> <code>"User {User} logged in from {Address}"</code></param>
        <param name="args"><span data-ttu-id="82e16-277">Ein Objektarray mit 0 (null) oder mehr zu formatierenden Objekten.</span><span class="sxs-lookup"><span data-stu-id="82e16-277">An object array that contains zero or more objects to format.</span></span></param>
        <summary><span data-ttu-id="82e16-278">Formatiert und schreibt eine Warnung in das Protokoll.</span><span class="sxs-lookup"><span data-stu-id="82e16-278">Formats and writes a warning log message.</span></span></summary>
        <remarks>To be added.</remarks>
        <example><span data-ttu-id="82e16-279">Protokollierung. LogWarning ("Verarbeitungs Anforderung von {Address}", Adresse)</span><span class="sxs-lookup"><span data-stu-id="82e16-279">logger.LogWarning("Processing request from {Address}", address)</span></span></example>
      </Docs>
    </Member>
    <Member MemberName="LogWarning">
      <MemberSignature Language="C#" Value="public static void LogWarning (this Microsoft.Extensions.Logging.ILogger logger, Microsoft.Extensions.Logging.EventId eventId, string message, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LogWarning(class Microsoft.Extensions.Logging.ILogger logger, valuetype Microsoft.Extensions.Logging.EventId eventId, string message, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.LoggerExtensions.LogWarning(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.EventId,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub LogWarning (logger As ILogger, eventId As EventId, message As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void LogWarning(Microsoft::Extensions::Logging::ILogger ^ logger, Microsoft::Extensions::Logging::EventId eventId, System::String ^ message, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member LogWarning : Microsoft.Extensions.Logging.ILogger * Microsoft.Extensions.Logging.EventId * string * obj[] -&gt; unit" Usage="Microsoft.Extensions.Logging.LoggerExtensions.LogWarning (logger, eventId, message, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.Extensions.Logging.ILogger" RefType="this" />
        <Parameter Name="eventId" Type="Microsoft.Extensions.Logging.EventId" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-plat-ext-1.0">
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="logger"><span data-ttu-id="82e16-280">Der <see cref="T:Microsoft.Extensions.Logging.ILogger" />, in den geschrieben werden soll.</span><span class="sxs-lookup"><span data-stu-id="82e16-280">The <see cref="T:Microsoft.Extensions.Logging.ILogger" /> to write to.</span></span></param>
        <param name="eventId"><span data-ttu-id="82e16-281">Die mit dem Protokoll verknüpfte Ereignis-ID.</span><span class="sxs-lookup"><span data-stu-id="82e16-281">The event id associated with the log.</span></span></param>
        <param name="message"><span data-ttu-id="82e16-282">Formatzeichenfolge der Protokollmeldung im Format der Meldungsvorlage.</span><span class="sxs-lookup"><span data-stu-id="82e16-282">Format string of the log message in message template format.</span></span> <span data-ttu-id="82e16-283">Beispiel:</span><span class="sxs-lookup"><span data-stu-id="82e16-283">Example:</span></span> <code>"User {User} logged in from {Address}"</code></param>
        <param name="args"><span data-ttu-id="82e16-284">Ein Objektarray mit 0 (null) oder mehr zu formatierenden Objekten.</span><span class="sxs-lookup"><span data-stu-id="82e16-284">An object array that contains zero or more objects to format.</span></span></param>
        <summary><span data-ttu-id="82e16-285">Formatiert und schreibt eine Warnung in das Protokoll.</span><span class="sxs-lookup"><span data-stu-id="82e16-285">Formats and writes a warning log message.</span></span></summary>
        <remarks>To be added.</remarks>
        <example><span data-ttu-id="82e16-286">Protokollierung. LogWarning (0, "Verarbeitungs Anforderung von {Address}", Adresse)</span><span class="sxs-lookup"><span data-stu-id="82e16-286">logger.LogWarning(0, "Processing request from {Address}", address)</span></span></example>
      </Docs>
    </Member>
    <Member MemberName="LogWarning">
      <MemberSignature Language="C#" Value="public static void LogWarning (this Microsoft.Extensions.Logging.ILogger logger, Exception exception, string message, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LogWarning(class Microsoft.Extensions.Logging.ILogger logger, class System.Exception exception, string message, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.LoggerExtensions.LogWarning(Microsoft.Extensions.Logging.ILogger,System.Exception,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub LogWarning (logger As ILogger, exception As Exception, message As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void LogWarning(Microsoft::Extensions::Logging::ILogger ^ logger, Exception ^ exception, System::String ^ message, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member LogWarning : Microsoft.Extensions.Logging.ILogger * Exception * string * obj[] -&gt; unit" Usage="Microsoft.Extensions.Logging.LoggerExtensions.LogWarning (logger, exception, message, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Abstractions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.Extensions.Logging.ILogger" RefType="this" Index="0" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
        <Parameter Name="exception" Type="System.Exception" Index="1" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
        <Parameter Name="message" Type="System.String" Index="2" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
        <Parameter Name="args" Type="System.Object[]" Index="3" FrameworkAlternate="dotnet-plat-ext-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-plat-ext-2.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="logger"><span data-ttu-id="82e16-287">Der <see cref="T:Microsoft.Extensions.Logging.ILogger" />, in den geschrieben werden soll.</span><span class="sxs-lookup"><span data-stu-id="82e16-287">The <see cref="T:Microsoft.Extensions.Logging.ILogger" /> to write to.</span></span></param>
        <param name="exception"><span data-ttu-id="82e16-288">Die zu protokollierende Ausnahme.</span><span class="sxs-lookup"><span data-stu-id="82e16-288">The exception to log.</span></span></param>
        <param name="message"><span data-ttu-id="82e16-289">Formatzeichenfolge der Protokollmeldung im Format der Meldungsvorlage.</span><span class="sxs-lookup"><span data-stu-id="82e16-289">Format string of the log message in message template format.</span></span> <span data-ttu-id="82e16-290">Beispiel:</span><span class="sxs-lookup"><span data-stu-id="82e16-290">Example:</span></span> <code>"User {User} logged in from {Address}"</code></param>
        <param name="args"><span data-ttu-id="82e16-291">Ein Objektarray mit 0 (null) oder mehr zu formatierenden Objekten.</span><span class="sxs-lookup"><span data-stu-id="82e16-291">An object array that contains zero or more objects to format.</span></span></param>
        <summary><span data-ttu-id="82e16-292">Formatiert und schreibt eine Warnung in das Protokoll.</span><span class="sxs-lookup"><span data-stu-id="82e16-292">Formats and writes a warning log message.</span></span></summary>
        <remarks>To be added.</remarks>
        <example><span data-ttu-id="82e16-293">Protokollierung. LogWarning (Ausnahme, "Fehler beim Verarbeiten der Anforderung von {Address}", Adresse)</span><span class="sxs-lookup"><span data-stu-id="82e16-293">logger.LogWarning(exception, "Error while processing request from {Address}", address)</span></span></example>
      </Docs>
    </Member>
    <Member MemberName="LogWarning">
      <MemberSignature Language="C#" Value="public static void LogWarning (this Microsoft.Extensions.Logging.ILogger logger, Microsoft.Extensions.Logging.EventId eventId, Exception exception, string message, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LogWarning(class Microsoft.Extensions.Logging.ILogger logger, valuetype Microsoft.Extensions.Logging.EventId eventId, class System.Exception exception, string message, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.LoggerExtensions.LogWarning(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.EventId,System.Exception,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub LogWarning (logger As ILogger, eventId As EventId, exception As Exception, message As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void LogWarning(Microsoft::Extensions::Logging::ILogger ^ logger, Microsoft::Extensions::Logging::EventId eventId, Exception ^ exception, System::String ^ message, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member LogWarning : Microsoft.Extensions.Logging.ILogger * Microsoft.Extensions.Logging.EventId * Exception * string * obj[] -&gt; unit" Usage="Microsoft.Extensions.Logging.LoggerExtensions.LogWarning (logger, eventId, exception, message, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.Extensions.Logging.ILogger" RefType="this" />
        <Parameter Name="eventId" Type="Microsoft.Extensions.Logging.EventId" />
        <Parameter Name="exception" Type="System.Exception" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-plat-ext-1.0">
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="logger"><span data-ttu-id="82e16-294">Der <see cref="T:Microsoft.Extensions.Logging.ILogger" />, in den geschrieben werden soll.</span><span class="sxs-lookup"><span data-stu-id="82e16-294">The <see cref="T:Microsoft.Extensions.Logging.ILogger" /> to write to.</span></span></param>
        <param name="eventId"><span data-ttu-id="82e16-295">Die mit dem Protokoll verknüpfte Ereignis-ID.</span><span class="sxs-lookup"><span data-stu-id="82e16-295">The event id associated with the log.</span></span></param>
        <param name="exception"><span data-ttu-id="82e16-296">Die zu protokollierende Ausnahme.</span><span class="sxs-lookup"><span data-stu-id="82e16-296">The exception to log.</span></span></param>
        <param name="message"><span data-ttu-id="82e16-297">Formatzeichenfolge der Protokollmeldung im Format der Meldungsvorlage.</span><span class="sxs-lookup"><span data-stu-id="82e16-297">Format string of the log message in message template format.</span></span> <span data-ttu-id="82e16-298">Beispiel:</span><span class="sxs-lookup"><span data-stu-id="82e16-298">Example:</span></span> <code>"User {User} logged in from {Address}"</code></param>
        <param name="args"><span data-ttu-id="82e16-299">Ein Objektarray mit 0 (null) oder mehr zu formatierenden Objekten.</span><span class="sxs-lookup"><span data-stu-id="82e16-299">An object array that contains zero or more objects to format.</span></span></param>
        <summary><span data-ttu-id="82e16-300">Formatiert und schreibt eine Warnung in das Protokoll.</span><span class="sxs-lookup"><span data-stu-id="82e16-300">Formats and writes a warning log message.</span></span></summary>
        <remarks>To be added.</remarks>
        <example><span data-ttu-id="82e16-301">Protokollierung. LogWarning (0, Exception, "Fehler beim Verarbeiten der Anforderung von {Address}", Adresse)</span><span class="sxs-lookup"><span data-stu-id="82e16-301">logger.LogWarning(0, exception, "Error while processing request from {Address}", address)</span></span></example>
      </Docs>
    </Member>
  </Members>
</Type>
