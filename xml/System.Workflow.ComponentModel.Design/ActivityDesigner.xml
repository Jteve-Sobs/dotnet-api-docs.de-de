<Type Name="ActivityDesigner" FullName="System.Workflow.ComponentModel.Design.ActivityDesigner">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ee67802ecf600a59dd8ad87265194826686d859a" /><Meta Name="ms.sourcegitcommit" Value="42a3c35677e9d87eeb503607ae50c9d39827d414" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="12/17/2018" /><Meta Name="ms.locfileid" Value="53513176" /></Metadata><TypeSignature Language="C#" Value="public class ActivityDesigner : IDisposable, System.ComponentModel.Design.IDesignerFilter, System.ComponentModel.Design.IRootDesigner, System.Drawing.Design.IToolboxUser, System.Workflow.ComponentModel.Design.IPersistUIState, System.Workflow.ComponentModel.Design.IWorkflowRootDesigner" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ActivityDesigner extends System.Object implements class System.ComponentModel.Design.IDesigner, class System.ComponentModel.Design.IDesignerFilter, class System.ComponentModel.Design.IRootDesigner, class System.Drawing.Design.IToolboxUser, class System.IDisposable, class System.Workflow.ComponentModel.Design.IPersistUIState, class System.Workflow.ComponentModel.Design.IWorkflowRootDesigner" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.ComponentModel.Design.ActivityDesigner" />
  <TypeSignature Language="VB.NET" Value="Public Class ActivityDesigner&#xA;Implements IDesignerFilter, IDisposable, IPersistUIState, IRootDesigner, IToolboxUser, IWorkflowRootDesigner" />
  <TypeSignature Language="C++ CLI" Value="public ref class ActivityDesigner : IDisposable, System::ComponentModel::Design::IDesignerFilter, System::ComponentModel::Design::IRootDesigner, System::Drawing::Design::IToolboxUser, System::Workflow::ComponentModel::Design::IPersistUIState, System::Workflow::ComponentModel::Design::IWorkflowRootDesigner" />
  <TypeSignature Language="F#" Value="type ActivityDesigner = class&#xA;    interface IDisposable&#xA;    interface IDesignerFilter&#xA;    interface IDesigner&#xA;    interface IToolboxUser&#xA;    interface IPersistUIState&#xA;    interface IWorkflowRootDesigner&#xA;    interface IRootDesigner" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.Design.IDesigner</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.Design.IDesignerFilter</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.Design.IRootDesigner</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Drawing.Design.IToolboxUser</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Workflow.ComponentModel.Design.IPersistUIState</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Workflow.ComponentModel.Design.IWorkflowRootDesigner</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Design.Serialization.DesignerSerializer(typeof(System.Workflow.ComponentModel.Design.ActivityDesignerLayoutSerializer), typeof(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Workflow.ComponentModel.Design.ActivityDesignerTheme(typeof(System.Workflow.ComponentModel.Design.ActivityDesignerTheme))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.ToolboxItemFilter("Microsoft.Workflow.VSDesigner", System.ComponentModel.ToolboxItemFilterType.Require)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.ToolboxItemFilter("System.Workflow.ComponentModel.Design.ActivitySet", System.ComponentModel.ToolboxItemFilterType.Custom)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Stellt eine obligatorische Basisklasse für alle Aktivitätsdesignerkomponenten bereit.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 Alle Aktivitätsdesignerkomponenten werden von <xref:System.Workflow.ComponentModel.Design.ActivityDesigner> abgeleitet. Der <xref:System.Workflow.ComponentModel.Design.ActivityDesigner> stellt einen einfachen Designer bereit, mit dem Benutzer Aktivitäten im Entwurfsmodus visuell entwerfen können.  
  
 <xref:System.Workflow.ComponentModel.Design.ActivityDesigner> stellt einen einfachen Mechanismus bereit, damit die Aktivitäten am Rendern des Workflows auf der Entwurfsoberfläche beteiligt werden können.  
  
 <xref:System.Workflow.ComponentModel.Design.ActivityDesigner> ermöglicht dem Benutzer das Anpassen des Layouts und der der Aktivität zugeordneten Zeichnung.  
  
 <xref:System.Workflow.ComponentModel.Design.ActivityDesigner> ermöglicht dem Benutzer das Erweitern der der Aktivität zugeordneten Metadaten.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird eine vollständige Implementierung von <xref:System.Workflow.ComponentModel.Design.ActivityDesigner> für eine benutzerdefinierte Aktivität veranschaulicht. Der Designer verfügt über ein Kennzeichen, das umgeschaltet werden kann, um dem Basisklassen-<xref:System.Workflow.ComponentModel.Design.ActivityDesigner> das Steuern der Zeichnung oder die Verwendung der verschiedenen Methoden der <xref:System.Workflow.ComponentModel.Design.ActivityDesignerPaint>-Klasse zum Zeichnen der Aktivität zu ermöglichen.  
  
 [!code-csharp[WF_Samples#72](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#72)]
 [!code-vb[WF_Samples#72](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#72)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ActivityDesigner ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ActivityDesigner();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AccessibilityObject">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.AccessibleObject AccessibilityObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.AccessibleObject AccessibilityObject" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.ActivityDesigner.AccessibilityObject" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property AccessibilityObject As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::AccessibleObject ^ AccessibilityObject { System::Windows::Forms::AccessibleObject ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AccessibilityObject : System.Windows.Forms.AccessibleObject" Usage="System.Workflow.ComponentModel.Design.ActivityDesigner.AccessibilityObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein <see cref="T:System.Windows.Forms.AccessibleObject" /> ab, das Barrierefreiheitsanwendungen verwenden, um die Benutzeroberfläche der Anwendung für Benutzer mit Behinderungen einzustellen.</summary>
        <value>Die dem Steuerelement zugeordnete <see cref="T:System.Windows.Forms.AccessibleObject" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn dem Steuerelement gerade kein <xref:System.Windows.Forms.AccessibleObject> zugewiesen ist, wird eine neue Instanz davon erstellt.  
  
> [!NOTE]
>  Zum Abrufen oder Festlegen der <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.AccessibilityObject%2A>-Eigenschaft müssen Sie einen Verweis auf die mit .NET Framework installierte Eingabenhilfenassembly hinzufügen.  
  
 Weitere Informationen zu Barrierefreiheitsobjekten finden Sie in der MSDN Library im Abschnitt Active Accessibility.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Activity">
      <MemberSignature Language="C#" Value="public System.Workflow.ComponentModel.Activity Activity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.ComponentModel.Activity Activity" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.ActivityDesigner.Activity" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Activity As Activity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Workflow::ComponentModel::Activity ^ Activity { System::Workflow::ComponentModel::Activity ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Activity : System.Workflow.ComponentModel.Activity" Usage="System.Workflow.ComponentModel.Design.ActivityDesigner.Activity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Activity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die dem Designer zugeordnete <see cref="T:System.Workflow.ComponentModel.Activity" /> ab.</summary>
        <value>Das dem Designer zugeordnete <see cref="T:System.Workflow.ComponentModel.Activity" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie die <xref:System.Workflow.ComponentModel.Activity>, um auf die Eigenschaften und die Ereignisse der Aktivität zuzugreifen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Bounds">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle Bounds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Rectangle Bounds" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.ActivityDesigner.Bounds" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Bounds As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Rectangle Bounds { System::Drawing::Rectangle get(); };" />
      <MemberSignature Language="F#" Value="member this.Bounds : System.Drawing.Rectangle" Usage="System.Workflow.ComponentModel.Design.ActivityDesigner.Bounds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein <see cref="T:System.Drawing.Rectangle" /> ab, das den Wert für das einschließende Rechteck des Designers in logischen Koordinaten enthält.</summary>
        <value>Ein <see cref="T:System.Drawing.Rectangle" />, das den Designer einschließt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können das von der Begrenzungsmethode zurückgegebene Rechteck verwenden, um den vom Designer umfassten Bereich und den Auswahlbereich zu bestimmen.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die Verwendung der <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.Bounds%2A>-Eigenschaft zum Bestimmen des neuen umschließenden Rechtecks für ein in <xref:System.Workflow.ComponentModel.Design.ActivityDesigner> angezeigtes Symbol veranschaulicht.  
  
 Dieses Codebeispiel ist ein Teil des Workflow Monitor SDK-Beispiels der Datei DesignerGlyphProvider.cs. Weitere Informationen finden Sie unter [Workflow-Monitor](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741706(v=vs.90)).  
  
 [!code-csharp[WF_Samples#133](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets1.cs#133)]
 [!code-vb[WF_Samples#133](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets1.vb#133)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741706(v=vs.90)">Workflow-Monitor</related>
      </Docs>
    </Member>
    <Member MemberName="CanBeParentedTo">
      <MemberSignature Language="C#" Value="public virtual bool CanBeParentedTo (System.Workflow.ComponentModel.Design.CompositeActivityDesigner parentActivityDesigner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanBeParentedTo(class System.Workflow.ComponentModel.Design.CompositeActivityDesigner parentActivityDesigner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.CanBeParentedTo(System.Workflow.ComponentModel.Design.CompositeActivityDesigner)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanBeParentedTo (parentActivityDesigner As CompositeActivityDesigner) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanBeParentedTo(System::Workflow::ComponentModel::Design::CompositeActivityDesigner ^ parentActivityDesigner);" />
      <MemberSignature Language="F#" Value="abstract member CanBeParentedTo : System.Workflow.ComponentModel.Design.CompositeActivityDesigner -&gt; bool&#xA;override this.CanBeParentedTo : System.Workflow.ComponentModel.Design.CompositeActivityDesigner -&gt; bool" Usage="activityDesigner.CanBeParentedTo parentActivityDesigner" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parentActivityDesigner" Type="System.Workflow.ComponentModel.Design.CompositeActivityDesigner" />
      </Parameters>
      <Docs>
        <param name="parentActivityDesigner">Der <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" />, der als übergeordnetes Element festgelegt werden kann.</param>
        <summary>Gibt einen Wert zurück, der angibt, ob <see cref="T:System.Workflow.ComponentModel.CompositeActivity" /> als übergeordnete Aktivität der dem Designer zugeordneten Aktivität festgelegt werden kann.</summary>
        <returns><see langword="true" />, wenn eine <see cref="T:System.Workflow.ComponentModel.CompositeActivity" /> als übergeordnete Aktivität der dem Designer zugeordneten Aktivität festgelegt werden kann, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode bietet sich an, um zu testen, ob ein Designer einem bestimmten <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner> untergeordnet werden kann.  
  
 Diese Methode wird aufgerufen, wenn ein Benutzer einen Einfügevorgang initiiert, z.&#160;B. Drag&#160;&&#160;Drop oder Einfügen.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie sichergestellt wird, dass eine benutzerdefinierte Aktivität bestimmten Aktivitätstypen übergeordnet ist. In diesem Fall kann die benutzerdefinierte Aktivität nur einer `ParallelIfActivity` übergeordnet sein.  
  
 [!code-csharp[WF_Samples#23](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#23)]
 [!code-vb[WF_Samples#23](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#23)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConnect">
      <MemberSignature Language="C#" Value="protected virtual bool CanConnect (System.Workflow.ComponentModel.Design.ConnectionPoint source, System.Workflow.ComponentModel.Design.ConnectionPoint target);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool CanConnect(class System.Workflow.ComponentModel.Design.ConnectionPoint source, class System.Workflow.ComponentModel.Design.ConnectionPoint target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.CanConnect(System.Workflow.ComponentModel.Design.ConnectionPoint,System.Workflow.ComponentModel.Design.ConnectionPoint)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CanConnect (source As ConnectionPoint, target As ConnectionPoint) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool CanConnect(System::Workflow::ComponentModel::Design::ConnectionPoint ^ source, System::Workflow::ComponentModel::Design::ConnectionPoint ^ target);" />
      <MemberSignature Language="F#" Value="abstract member CanConnect : System.Workflow.ComponentModel.Design.ConnectionPoint * System.Workflow.ComponentModel.Design.ConnectionPoint -&gt; bool&#xA;override this.CanConnect : System.Workflow.ComponentModel.Design.ConnectionPoint * System.Workflow.ComponentModel.Design.ConnectionPoint -&gt; bool" Usage="activityDesigner.CanConnect (source, target)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Workflow.ComponentModel.Design.IConnectableDesigner.CanConnect(System.Workflow.ComponentModel.Design.ConnectionPoint,System.Workflow.ComponentModel.Design.ConnectionPoint)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Workflow.ComponentModel.Design.ConnectionPoint" />
        <Parameter Name="target" Type="System.Workflow.ComponentModel.Design.ConnectionPoint" />
      </Parameters>
      <Docs>
        <param name="source">Der <see cref="T:System.Workflow.ComponentModel.Design.ConnectionPoint" /> zur Prüfung des aktuellen Aktivitätsdesigners.</param>
        <param name="target">Der <see cref="T:System.Workflow.ComponentModel.Design.ConnectionPoint" /> zur Prüfung des Zielaktivitätsdesigners.</param>
        <summary>Gibt einen Wert zurück, der angibt, ob eine Verbindung zwischen dem angegebenen Verbindungspunkt auf dem aktuellen Aktivitätsdesigner und dem angegebenen Verbindungspunkt auf einem Aktivitätsdesigner des Ziels hergestellt werden kann.</summary>
        <returns><see langword="true" /> zum Angeben, dass eine Verbindung zwischen Quelle und Ziel erstellt werden kann, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.CanConnect%2A> gibt immer `true` zurück, es sei denn, es wurde in einer abgeleiteten Klasse überschrieben.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateView">
      <MemberSignature Language="C#" Value="protected virtual System.Workflow.ComponentModel.Design.WorkflowView CreateView (System.ComponentModel.Design.ViewTechnology viewTechnology);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Workflow.ComponentModel.Design.WorkflowView CreateView(valuetype System.ComponentModel.Design.ViewTechnology viewTechnology) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.CreateView(System.ComponentModel.Design.ViewTechnology)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Workflow::ComponentModel::Design::WorkflowView ^ CreateView(System::ComponentModel::Design::ViewTechnology viewTechnology);" />
      <MemberSignature Language="F#" Value="abstract member CreateView : System.ComponentModel.Design.ViewTechnology -&gt; System.Workflow.ComponentModel.Design.WorkflowView&#xA;override this.CreateView : System.ComponentModel.Design.ViewTechnology -&gt; System.Workflow.ComponentModel.Design.WorkflowView" Usage="activityDesigner.CreateView viewTechnology" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Design.WorkflowView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewTechnology" Type="System.ComponentModel.Design.ViewTechnology" />
      </Parameters>
      <Docs>
        <param name="viewTechnology">Die ViewTechnology, die zum Erstellen der Workflowansicht verwendet werden soll.</param>
        <summary>Erstellt mithilfe der angegebenen ViewTechnology eine Workflowansicht für den aktuellen Aktivitätsdesigner.</summary>
        <returns>Eine <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />, die den aktuellen Aktivitätsdesigner enthält.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Von <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.CreateView%2A> wird das standardmäßige Entwurfszeitlayout für die Aktivität zurückgegeben, es sei denn, es wurde in einer abgeleiteten Klasse überschrieben.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DesignerActions">
      <MemberSignature Language="C#" Value="protected internal virtual System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Design.DesignerAction&gt; DesignerActions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Workflow.ComponentModel.Design.DesignerAction&gt; DesignerActions" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.ActivityDesigner.DesignerActions" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable ReadOnly Property DesignerActions As ReadOnlyCollection(Of DesignerAction)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Workflow::ComponentModel::Design::DesignerAction ^&gt; ^ DesignerActions { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Workflow::ComponentModel::Design::DesignerAction ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DesignerActions : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Design.DesignerAction&gt;" Usage="System.Workflow.ComponentModel.Design.ActivityDesigner.DesignerActions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Design.DesignerAction&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Array von Konfigurationsfehlern zugeordneten Aktionen ab.</summary>
        <value>Ein schreibgeschütztes Array von <see cref="T:System.Workflow.ComponentModel.Design.DesignerAction" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Von dieser Methode wird ein schreibgeschütztes Array von Konfigurationsfehlern zugeordneten Aktionen zurückgegeben. Diese Liste enthält alle Konfigurations- und Validierungsfehler der Aktivität, die dem Endbenutzer angezeigt werden können oder programmatisch von dem System verwendet werden können, von dem <xref:System.Workflow.ComponentModel.Design.ActivityDesigner> gehostet wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DesignerTheme">
      <MemberSignature Language="C#" Value="public System.Workflow.ComponentModel.Design.ActivityDesignerTheme DesignerTheme { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.ComponentModel.Design.ActivityDesignerTheme DesignerTheme" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.ActivityDesigner.DesignerTheme" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DesignerTheme As ActivityDesignerTheme" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Workflow::ComponentModel::Design::ActivityDesignerTheme ^ DesignerTheme { System::Workflow::ComponentModel::Design::ActivityDesignerTheme ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DesignerTheme : System.Workflow.ComponentModel.Design.ActivityDesignerTheme" Usage="System.Workflow.ComponentModel.Design.ActivityDesigner.DesignerTheme" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Design.ActivityDesignerTheme</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das aktuelle Designer-Design für den Aktivitätsdesigner ab.</summary>
        <value>Ein <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerTheme" />, das Designeinstellungen für den Aktivitätsdesigner enthält.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Gibt die von <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> verwendeten nicht verwalteten Ressourcen und optional die verwalteten Ressourcen frei.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="activityDesigner.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt die von <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> verwendeten nicht verwalteten Ressourcen und optional die verwalteten Ressourcen frei.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="activityDesigner.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><see langword="true" />, wenn der <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> freigegeben wird; <see langword="false" />, wenn der <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> abgeschlossen wird.</param>
        <summary>Gibt die von der <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" />-Klasse verwendeten Ressourcen frei.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DoDefaultAction">
      <MemberSignature Language="C#" Value="protected virtual void DoDefaultAction ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void DoDefaultAction() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.DoDefaultAction" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub DoDefaultAction ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void DoDefaultAction();" />
      <MemberSignature Language="F#" Value="abstract member DoDefaultAction : unit -&gt; unit&#xA;override this.DoDefaultAction : unit -&gt; unit" Usage="activityDesigner.DoDefaultAction " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.Design.IDesigner.DoDefaultAction</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Führt die standardmäßige Benutzeroberflächenaktion aus, die dem Designer zugeordnet ist.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diese Methode, um die standardmäßige Benutzeroberflächenaktion auszuführen, die dem Designer zugeordnet ist. Standardmäßige Benutzeroberflächenaktionen können das Ausgeben der Methode beinhalten, die dem Standardereignis in der Code-Beside-Datei zugeordnet ist, wenn ein Benutzer auf der Designeroberfläche doppelklickt.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableVisualResizing">
      <MemberSignature Language="C#" Value="protected internal virtual bool EnableVisualResizing { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableVisualResizing" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.ActivityDesigner.EnableVisualResizing" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable ReadOnly Property EnableVisualResizing As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property bool EnableVisualResizing { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.EnableVisualResizing : bool" Usage="System.Workflow.ComponentModel.Design.ActivityDesigner.EnableVisualResizing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob die Größe des Aktivitätsdesigners in einem Freihandform-Designer geändert werden kann.</summary>
        <value><see langword="true" />, wenn die Größe des Aktivitätsdesigners in einem <see cref="T:System.Workflow.ComponentModel.Design.FreeformActivityDesigner" /> geändert werden kann, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.EnableVisualResizing%2A> gibt immer `false` zurück, es sei denn, es wurde in einer abgeleiteten Klasse überschrieben.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnsureVisible">
      <MemberSignature Language="C#" Value="public void EnsureVisible ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnsureVisible() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.EnsureVisible" />
      <MemberSignature Language="VB.NET" Value="Public Sub EnsureVisible ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnsureVisible();" />
      <MemberSignature Language="F#" Value="member this.EnsureVisible : unit -&gt; unit" Usage="activityDesigner.EnsureVisible " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Schaltet den angezeigten Bereich des Bildschirms um, um zu gewährleisten, dass der angegebene Designer angezeigt wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diese Methode, um den angezeigten Bereich der Designeroberfläche zu verschieben und den gerade interessanten Designer anzuzeigen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~ActivityDesigner ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!ActivityDesigner ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="activityDesigner.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Erlaubt beim Überschreiben in einer abgeleiteten Klasse einem Objekt, alle Ressourcen deterministisch zu bereinigen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode bereinigt Ressourcen durch Aufrufen von <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.Dispose%2A>(`false`). Überschreiben Sie <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.Dispose%2A>, um die Bereinigung anzupassen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetConnectionPoints">
      <MemberSignature Language="C#" Value="public virtual System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Design.ConnectionPoint&gt; GetConnectionPoints (System.Workflow.ComponentModel.Design.DesignerEdges edges);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Workflow.ComponentModel.Design.ConnectionPoint&gt; GetConnectionPoints(valuetype System.Workflow.ComponentModel.Design.DesignerEdges edges) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.GetConnectionPoints(System.Workflow.ComponentModel.Design.DesignerEdges)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetConnectionPoints (edges As DesignerEdges) As ReadOnlyCollection(Of ConnectionPoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Workflow::ComponentModel::Design::ConnectionPoint ^&gt; ^ GetConnectionPoints(System::Workflow::ComponentModel::Design::DesignerEdges edges);" />
      <MemberSignature Language="F#" Value="abstract member GetConnectionPoints : System.Workflow.ComponentModel.Design.DesignerEdges -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Design.ConnectionPoint&gt;&#xA;override this.GetConnectionPoints : System.Workflow.ComponentModel.Design.DesignerEdges -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Design.ConnectionPoint&gt;" Usage="activityDesigner.GetConnectionPoints edges" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Design.ConnectionPoint&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="edges" Type="System.Workflow.ComponentModel.Design.DesignerEdges" />
      </Parameters>
      <Docs>
        <param name="edges">Die <see cref="T:System.Workflow.ComponentModel.Design.DesignerEdges" />, an denen sich die Verbindungspunkte ansammeln.</param>
        <summary>Gibt eine schreibgeschützte Auflistung von Verbindungspunkten für den Aktivitätsdesigner entlang der angegebenen <see cref="T:System.Workflow.ComponentModel.Design.DesignerEdges" /> zurück.</summary>
        <returns>Eine generische, schreibgeschützte <see cref="T:System.Workflow.ComponentModel.Design.ConnectionPoint" />-Auflistung der Punkte, an denen Aktivitätsdesigner mit anderen Aktivitätsdesignern verbunden werden können.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Alle Verbindungspunkte sind in logischen Koordinaten angegeben.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetConnections">
      <MemberSignature Language="C#" Value="protected internal virtual System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Drawing.Point&gt; GetConnections (System.Workflow.ComponentModel.Design.DesignerEdges edges);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;valuetype System.Drawing.Point&gt; GetConnections(valuetype System.Workflow.ComponentModel.Design.DesignerEdges edges) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.GetConnections(System.Workflow.ComponentModel.Design.DesignerEdges)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function GetConnections (edges As DesignerEdges) As ReadOnlyCollection(Of Point)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Drawing::Point&gt; ^ GetConnections(System::Workflow::ComponentModel::Design::DesignerEdges edges);" />
      <MemberSignature Language="F#" Value="abstract member GetConnections : System.Workflow.ComponentModel.Design.DesignerEdges -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Drawing.Point&gt;&#xA;override this.GetConnections : System.Workflow.ComponentModel.Design.DesignerEdges -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Drawing.Point&gt;" Usage="activityDesigner.GetConnections edges" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Drawing.Point&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="edges" Type="System.Workflow.ComponentModel.Design.DesignerEdges" />
      </Parameters>
      <Docs>
        <param name="edges">Die <see cref="T:System.Workflow.ComponentModel.Design.DesignerEdges" />, die nach Punkten abgesucht werden.</param>
        <summary>Gibt eine schreibgeschützte Auflistung der Punkte zurück, die der Designer für Verbindungen verwendet.</summary>
        <returns>Eine schreibgeschützte Sammlung der Punkte mit den Verbindungen, die für den Aktivitätsdesigner verwendet werden.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPreviewImage">
      <MemberSignature Language="C#" Value="public System.Drawing.Image GetPreviewImage (System.Drawing.Graphics compatibleGraphics);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Drawing.Image GetPreviewImage(class System.Drawing.Graphics compatibleGraphics) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.GetPreviewImage(System.Drawing.Graphics)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPreviewImage (compatibleGraphics As Graphics) As Image" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Image ^ GetPreviewImage(System::Drawing::Graphics ^ compatibleGraphics);" />
      <MemberSignature Language="F#" Value="member this.GetPreviewImage : System.Drawing.Graphics -&gt; System.Drawing.Image" Usage="activityDesigner.GetPreviewImage compatibleGraphics" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="compatibleGraphics" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="compatibleGraphics">Das zum Zeichnen des Bilds verwendete <see cref="T:System.Drawing.Graphics" />-Objekt.</param>
        <summary>Ruft das Bild des Aktivitätsdesigners auf den angegebenen <see cref="T:System.Drawing.Graphics" /> ab.</summary>
        <returns>Ein <see cref="T:System.Drawing.Image" />-Objekt mit einer Bitmap, die bei Drag&amp;#160;&amp;&amp;#160;Drop-Vorgängen und im <see cref="T:System.Workflow.Activities.ConditionedActivityGroup" />-Vorschaufenster als Vorschaubild verwendet wird.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRootDesigner">
      <MemberSignature Language="C#" Value="public static System.Workflow.ComponentModel.Design.ActivityDesigner GetRootDesigner (IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Workflow.ComponentModel.Design.ActivityDesigner GetRootDesigner(class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.GetRootDesigner(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetRootDesigner (serviceProvider As IServiceProvider) As ActivityDesigner" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Workflow::ComponentModel::Design::ActivityDesigner ^ GetRootDesigner(IServiceProvider ^ serviceProvider);" />
      <MemberSignature Language="F#" Value="static member GetRootDesigner : IServiceProvider -&gt; System.Workflow.ComponentModel.Design.ActivityDesigner" Usage="System.Workflow.ComponentModel.Design.ActivityDesigner.GetRootDesigner serviceProvider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Design.ActivityDesigner</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="serviceProvider">Ein Objekt, das den <see cref="T:System.IServiceProvider" /> implementiert.</param>
        <summary>Gibt den der Entwurfsoberfläche des Workflows zugeordneten Designer zurück.</summary>
        <returns>Ein <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" />, der <see cref="P:System.ComponentModel.Design.IDesignerHost.RootComponent" /> des Designerhosts ist.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetService">
      <MemberSignature Language="C#" Value="protected object GetService (Type serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance object GetService(class System.Type serviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.GetService(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetService (serviceType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Object ^ GetService(Type ^ serviceType);" />
      <MemberSignature Language="F#" Value="member this.GetService : Type -&gt; obj" Usage="activityDesigner.GetService serviceType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceType">Der Typ des anzufordernden Dienstes.</param>
        <summary>Versucht, den angegebenen Diensttyp von der Entwurfsmodussite der dem Designer zugeordneten Aktivität abzurufen.</summary>
        <returns>Ein Objekt, das den angeforderten Dienst implementiert, oder ein NULL-Verweis (<see langword="Nothing" /> in Visual Basic), wenn der Dienst nicht aufgelöst werden kann.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Glyphs">
      <MemberSignature Language="C#" Value="protected internal virtual System.Workflow.ComponentModel.Design.ActivityDesignerGlyphCollection Glyphs { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.ComponentModel.Design.ActivityDesignerGlyphCollection Glyphs" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.ActivityDesigner.Glyphs" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable ReadOnly Property Glyphs As ActivityDesignerGlyphCollection" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property System::Workflow::ComponentModel::Design::ActivityDesignerGlyphCollection ^ Glyphs { System::Workflow::ComponentModel::Design::ActivityDesignerGlyphCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Glyphs : System.Workflow.ComponentModel.Design.ActivityDesignerGlyphCollection" Usage="System.Workflow.ComponentModel.Design.ActivityDesigner.Glyphs" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Design.ActivityDesignerGlyphCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine Auflistung von Symbolen ab, die dem Designer hinzugefügt wurden.</summary>
        <value>Eine <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerGlyphCollection" /> der Symbole, die auf dem Designer angezeigt werden.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.Glyphs%2A>, um auf eine schreibgeschützte Liste von Designersymbolen zuzugreifen. Diese Symbole können verwendet werden, um Komponenten von <xref:System.Workflow.ComponentModel.Design.ActivityDesigner> in einer grafischen Umgebung grafisch darzustellen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HitTest">
      <MemberSignature Language="C#" Value="public virtual System.Workflow.ComponentModel.Design.HitTestInfo HitTest (System.Drawing.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Workflow.ComponentModel.Design.HitTestInfo HitTest(valuetype System.Drawing.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.HitTest(System.Drawing.Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Workflow::ComponentModel::Design::HitTestInfo ^ HitTest(System::Drawing::Point point);" />
      <MemberSignature Language="F#" Value="abstract member HitTest : System.Drawing.Point -&gt; System.Workflow.ComponentModel.Design.HitTestInfo&#xA;override this.HitTest : System.Drawing.Point -&gt; System.Workflow.ComponentModel.Design.HitTestInfo" Usage="activityDesigner.HitTest point" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Design.HitTestInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="point">Ein <see cref="T:System.Drawing.Point" />, der eine einzelne x- und eine y-Koordinate darstellt.</param>
        <summary>Ruft Informationen zum ActivityDesigner an einem angegebenen Punkt auf dem Bildschirm ab.</summary>
        <returns>Eine <see cref="T:System.Workflow.ComponentModel.Design.HitTestInfo" />, die Informationen über <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> am angegebenen Punkt enthält.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mithilfe der <xref:System.Workflow.ComponentModel.Design.HitTestInfo> und der <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.HitTest%2A>-Methode des <xref:System.Workflow.ComponentModel.Design.ActivityDesigner>-Steuerelements können Sie bestimmen, auf welchen Teil eines <xref:System.Workflow.ComponentModel.Design.ActivityDesigner>-Steuerelements geklickt wurde. Die <xref:System.Workflow.ComponentModel.Design.HitTestInfo> enthält die logischen Koordinaten des Punkts auf dem <xref:System.Workflow.ComponentModel.Design.ActivityDesigner>, auf den mit der Maus geklickt wurde.  
  
 Die <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.HitTest%2A>-Methode empfängt einen <xref:System.Drawing.Point>, der eine x- und eine y-Koordinate enthält.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Image">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Image Image { get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Image Image" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.ActivityDesigner.Image" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Image As Image" />
      <MemberSignature Language="C++ CLI" Value="public:  virtual property System::Drawing::Image ^ Image {  public:&#xA;System::Drawing::Image ^ get(); protected:&#xA; void set(System::Drawing::Image ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Image : System.Drawing.Image with get, set" Usage="System.Workflow.ComponentModel.Design.ActivityDesigner.Image" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das dem Designer zugeordnete <see cref="T:System.Drawing.Image" /> ab oder legt es fest.</summary>
        <value>Das dem Designer zugeordnete <see cref="T:System.Drawing.Image" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.Image%2A>-Eigenschaft wird auf das anzuzeigende <xref:System.Drawing.Image> festgelegt. Dies ist zur Entwurfszeit und zur Laufzeit möglich.  
  
   
  
## Examples  
 Im folgenden Beispiel wird das Laden eines <xref:System.Drawing.Bitmap>-Objekts aus einer eingebetteten Ressource veranschaulicht. In diesem Fall handelt es sich bei `ToolboxImage` um das gleiche Bild, das beim Zeichnen des benutzerdefinierten <xref:System.Workflow.ComponentModel.Design.ActivityDesigner> durch die <xref:System.Workflow.ComponentModel.Design.ActivityDesigner>-Basisklasse verwendet wird.  
  
 [!code-csharp[WF_Samples#76](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#76)]
 [!code-vb[WF_Samples#76](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#76)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImageRectangle">
      <MemberSignature Language="C#" Value="protected virtual System.Drawing.Rectangle ImageRectangle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Rectangle ImageRectangle" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.ActivityDesigner.ImageRectangle" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property ImageRectangle As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Drawing::Rectangle ImageRectangle { System::Drawing::Rectangle get(); };" />
      <MemberSignature Language="F#" Value="member this.ImageRectangle : System.Drawing.Rectangle" Usage="System.Workflow.ComponentModel.Design.ActivityDesigner.ImageRectangle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Wert für die einschließenden Grenzen des dem Designer zugeordneten Bilds in logischen Koordinaten ab.</summary>
        <value>Ein <see cref="T:System.Drawing.Rectangle" /> Bild.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.ImageRectangle%2A> zum Abrufen der Koordinaten für das Rechteck, das das dem Designer zugeordnete Bild umfasst. Sie können diese Koordinaten zum Zeichnen von Verbindungen oder Überlagern von Grafiken verwenden.  
  
   
  
## Examples  
 In folgendem Beispiel sehen Sie, wie die <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.ImageRectangle%2A>-Eigenschaft überschrieben wird. In diesem Beispiel wird das <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.ImageRectangle%2A> mit den Grenzen von <xref:System.Workflow.ComponentModel.Design.ActivityDesigner> berechnet.  
  
 [!code-csharp[WF_Samples#74](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#74)]
 [!code-vb[WF_Samples#74](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#74)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="protected virtual void Initialize (System.Workflow.ComponentModel.Activity activity);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Initialize(class System.Workflow.ComponentModel.Activity activity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.Initialize(System.Workflow.ComponentModel.Activity)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Initialize(System::Workflow::ComponentModel::Activity ^ activity);" />
      <MemberSignature Language="F#" Value="abstract member Initialize : System.Workflow.ComponentModel.Activity -&gt; unit&#xA;override this.Initialize : System.Workflow.ComponentModel.Activity -&gt; unit" Usage="activityDesigner.Initialize activity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="System.Workflow.ComponentModel.Activity" />
      </Parameters>
      <Docs>
        <param name="activity">Die <see cref="T:System.Workflow.ComponentModel.Activity" />, mit der der Designer initialisiert werden sollte.</param>
        <summary>Initialisiert den Designer mit der zugeordneten <see cref="T:System.Workflow.ComponentModel.Activity" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch Initialisieren wird der Designer mit der angegebenen Aktivität geladen. Der Designer lädt den Aktivitätsdienst, aktualisiert die der Aktivität zugeordneten Verben und weist dem Designer Standardtext und -bild zu.  
  
   
  
## Examples  
 Im folgenden Beispiel wird gezeigt, wie die Basisklassenimplementierung der Initialisierungsmethode überschrieben wird. Die <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.Initialize%2A>-Methode in diesem Beispiel lädt aus einer eingebetteten Ressource ein <xref:System.Drawing.Bitmap>-Objekt. Bei der `ToolboxImage`-Ressource handelt es sich um das <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.Image%2A>, das beim Zeichnen des benutzerdefinierten <xref:System.Workflow.ComponentModel.Design.ActivityDesigner> durch die <xref:System.Workflow.ComponentModel.Design.ActivityDesigner>-Basisklasse verwendet wird.  
  
 [!code-csharp[WF_Samples#76](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#76)]
 [!code-vb[WF_Samples#76](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#76)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Invalidate">
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Erklärt den Designer für ungültig.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diese Methode, damit der Designer neu gezeichnet wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Invalidate">
      <MemberSignature Language="C#" Value="public void Invalidate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Invalidate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.Invalidate" />
      <MemberSignature Language="VB.NET" Value="Public Sub Invalidate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Invalidate();" />
      <MemberSignature Language="F#" Value="member this.Invalidate : unit -&gt; unit" Usage="activityDesigner.Invalidate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Erklärt den Designer für ungültig.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diese Methode, damit der Designer neu gezeichnet wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Invalidate">
      <MemberSignature Language="C#" Value="public void Invalidate (System.Drawing.Rectangle rectangle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Invalidate(valuetype System.Drawing.Rectangle rectangle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.Invalidate(System.Drawing.Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Invalidate(System::Drawing::Rectangle rectangle);" />
      <MemberSignature Language="F#" Value="member this.Invalidate : System.Drawing.Rectangle -&gt; unit" Usage="activityDesigner.Invalidate rectangle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rectangle" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="rectangle">Ein <see cref="T:System.Drawing.Rectangle" />, das den Bereich auf dem Workflow angibt, der für ungültig erklärt werden soll.</param>
        <summary>Erklärt das angegebene Rechteck auf dem Designer für ungültig.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diese Methode, damit das angegebene Rechteck auf dem Designer neu gezeichnet wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokingDesigner">
      <MemberSignature Language="C#" Value="protected virtual System.Workflow.ComponentModel.Design.CompositeActivityDesigner InvokingDesigner { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.ComponentModel.Design.CompositeActivityDesigner InvokingDesigner" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.ActivityDesigner.InvokingDesigner" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Property InvokingDesigner As CompositeActivityDesigner" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Workflow::ComponentModel::Design::CompositeActivityDesigner ^ InvokingDesigner { System::Workflow::ComponentModel::Design::CompositeActivityDesigner ^ get(); void set(System::Workflow::ComponentModel::Design::CompositeActivityDesigner ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InvokingDesigner : System.Workflow.ComponentModel.Design.CompositeActivityDesigner with get, set" Usage="System.Workflow.ComponentModel.Design.ActivityDesigner.InvokingDesigner" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Workflow.ComponentModel.Design.IWorkflowRootDesigner.InvokingDesigner</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Design.CompositeActivityDesigner</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Designer der Aktivität ab, der die dem aktuellen Aktivitätsdesigner zugewiesene Aktivität aufruft, oder legt den Designer fest.</summary>
        <value>Der <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" /> zum Aufrufen des aktuellen Aktivitätsdesigners.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sofern kein Überschreibevorgang ausgeführt wurde, wird vom GET-Vorgang für <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.InvokingDesigner%2A> ein NULL-Verweis (`Nothing` in Visual Basic) zurückgegeben. Vom SET-Vorgang wird <xref:System.NotSupportedException> ausgelöst.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Das Ausführen eines SET-Vorgangs wurde in <see cref="P:System.Workflow.ComponentModel.Design.ActivityDesigner.InvokingDesigner" /> versucht.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsCommentedActivity">
      <MemberSignature Language="C#" Value="public static bool IsCommentedActivity (System.Workflow.ComponentModel.Activity activity);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsCommentedActivity(class System.Workflow.ComponentModel.Activity activity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.IsCommentedActivity(System.Workflow.ComponentModel.Activity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsCommentedActivity(System::Workflow::ComponentModel::Activity ^ activity);" />
      <MemberSignature Language="F#" Value="static member IsCommentedActivity : System.Workflow.ComponentModel.Activity -&gt; bool" Usage="System.Workflow.ComponentModel.Design.ActivityDesigner.IsCommentedActivity activity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="System.Workflow.ComponentModel.Activity" />
      </Parameters>
      <Docs>
        <param name="activity">Die <see cref="T:System.Workflow.ComponentModel.Activity" /> im aktuellen Aktivitätsdesigner.</param>
        <summary>Gibt einen Wert vom Typ zurück, der angibt, ob die Aktivität des aktuellen Designers kommentiert ist oder sich im Inneren einer kommentierten Aktivität befindet.</summary>
        <returns><see langword="true" />, wenn die Aktivität kommentiert ist oder sich in einer kommentierten Aktivität befindet, andernfalls <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLocked">
      <MemberSignature Language="C#" Value="public bool IsLocked { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLocked" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.ActivityDesigner.IsLocked" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsLocked As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsLocked { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsLocked : bool" Usage="System.Workflow.ComponentModel.Design.ActivityDesigner.IsLocked" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob die dem Designer zugeordnete Aktivität geändert werden kann.</summary>
        <value><see langword="true" />, wenn die dem Designer zugeordnete Aktivität geändert werden kann, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.IsLocked%2A> bestimmt, ob eine Aktivität geändert werden kann. Davon sind Ziehvorgänge, Änderungen an Eigenschaften und Änderungen an der Position der Aktivität im Designerfenster betroffen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPrimarySelection">
      <MemberSignature Language="C#" Value="public bool IsPrimarySelection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPrimarySelection" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.ActivityDesigner.IsPrimarySelection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPrimarySelection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPrimarySelection { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsPrimarySelection : bool" Usage="System.Workflow.ComponentModel.Design.ActivityDesigner.IsPrimarySelection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob es sich bei der dem Designer zugeordneten Aktivität um die primäre Auswahl handelt.</summary>
        <value><see langword="true" />, wenn die dem Designer zugeordnete Aktivität die primäre Auswahl ist, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mithilfe von <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.IsPrimarySelection%2A> beeinflussen Sie das Markieren und das Aktualisieren von Eigenschaftenblättern in der grafischen Darstellung des Workflows. IsPrimarySelection ist nützlich, wenn mehrere Aktivitäten markiert sind, da IsPrimarySelection den Anfangspunkt einer Mehrfachauswahl angibt.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsRootDesigner">
      <MemberSignature Language="C#" Value="public bool IsRootDesigner { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRootDesigner" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.ActivityDesigner.IsRootDesigner" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsRootDesigner As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsRootDesigner { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsRootDesigner : bool" Usage="System.Workflow.ComponentModel.Design.ActivityDesigner.IsRootDesigner" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob es sich beim Designer um einen Stammdesigner handelt.</summary>
        <value><see langword="true" />, wenn der Designer ein Stammdesigner ist, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dem Stammdesigner sind keine Designer übergeordnet. Der Stammdesigner dient als Designer für den vollständigen Workflow, da es sich bei allen Workflowkomponenten um untergeordnete Elemente handelt.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSelected">
      <MemberSignature Language="C#" Value="public bool IsSelected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSelected" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.ActivityDesigner.IsSelected" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSelected As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSelected { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSelected : bool" Usage="System.Workflow.ComponentModel.Design.ActivityDesigner.IsSelected" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob die dem Designer zugeordnete Aktivität ausgewählt ist.</summary>
        <value><see langword="true" />, wenn die dem Designer zugeordnete Aktivität ausgewählt ist, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie die <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.IsSelected%2A>-Eigenschaft für Vorgänge wie Ausschneiden und Einfügen oder für das Aktualisieren der Eigenschaften einer Aktivität, z.&#160;B. wenn Änderungen in einem Eigenschaftsfenster vorgenommen werden.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSupportedActivityType">
      <MemberSignature Language="C#" Value="protected virtual bool IsSupportedActivityType (Type activityType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool IsSupportedActivityType(class System.Type activityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.IsSupportedActivityType(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function IsSupportedActivityType (activityType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool IsSupportedActivityType(Type ^ activityType);" />
      <MemberSignature Language="F#" Value="abstract member IsSupportedActivityType : Type -&gt; bool&#xA;override this.IsSupportedActivityType : Type -&gt; bool" Usage="activityDesigner.IsSupportedActivityType activityType" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Workflow.ComponentModel.Design.IWorkflowRootDesigner.IsSupportedActivityType(System.Type)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activityType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="activityType">Der Typ der Aktivität, die unterstützt wurde.</param>
        <summary>Gibt einen Wert zurück, der angibt, ob der angegebene Aktivitätstyp unterstützt wird, wenn es sich beim Aktivitätsdesigner um einen Stammdesigner handelt.</summary>
        <returns><see langword="true" />, wenn der <paramref name="activityType" /> unterstützt wird, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.IsSupportedActivityType%2A> wird nur aufgerufen, wenn es sich beim Aktivitätsdesigner um einen Stammdesigner handelt.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public virtual bool IsVisible { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsVisible" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.ActivityDesigner.IsVisible" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsVisible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsVisible { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsVisible : bool" Usage="System.Workflow.ComponentModel.Design.ActivityDesigner.IsVisible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob die dem Designer zugeordnete Aktivität auf dem Workflow angezeigt wird.</summary>
        <value><see langword="true" />, wenn die dem Designer zugeordnete Aktivität auf dem Workflow angezeigt wird, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.IsVisible%2A> zum Bestimmen, ob eine Aktivität auf dem Designer angezeigt wird. Für große Workflows kann ein Suchmechanismus bereitgestellt werden. Dadurch können vom Benutzer gesuchte und derzeit nicht angezeigte Aktivitäten gefunden, ausgewählt und in den angezeigten Bereich verschoben werden.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected virtual void LoadViewState (System.IO.BinaryReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void LoadViewState(class System.IO.BinaryReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.LoadViewState(System.IO.BinaryReader)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub LoadViewState (reader As BinaryReader)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void LoadViewState(System::IO::BinaryReader ^ reader);" />
      <MemberSignature Language="F#" Value="abstract member LoadViewState : System.IO.BinaryReader -&gt; unit&#xA;override this.LoadViewState : System.IO.BinaryReader -&gt; unit" Usage="activityDesigner.LoadViewState reader" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Workflow.ComponentModel.Design.IPersistUIState.LoadViewState(System.IO.BinaryReader)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.IO.BinaryReader" />
      </Parameters>
      <Docs>
        <param name="reader">Ein <see cref="T:System.IO.BinaryReader" />, der zum Wiederherstellen des Designerzustands verwendet wird.</param>
        <summary>Lädt den Ansichtszustand des Designers aus einem binären Stream.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Location">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Point Location { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Point Location" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.ActivityDesigner.Location" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Location As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Point Location { System::Drawing::Point get(); void set(System::Drawing::Point value); };" />
      <MemberSignature Language="F#" Value="member this.Location : System.Drawing.Point with get, set" Usage="System.Workflow.ComponentModel.Design.ActivityDesigner.Location" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Ort des Designers in logischen Koordinaten ab oder legt diesen fest.</summary>
        <value>Der Ort des Designers in logischen Koordinaten.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie die <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.Location%2A>-Eigenschaft zum Positionieren des Designers während der Entwurfszeit oder der Laufzeit auf der Entwurfsoberfläche.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MessageFilters">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter&gt; MessageFilters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter&gt; MessageFilters" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.ActivityDesigner.MessageFilters" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property MessageFilters As ReadOnlyCollection(Of WorkflowDesignerMessageFilter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Workflow::ComponentModel::Design::WorkflowDesignerMessageFilter ^&gt; ^ MessageFilters { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Workflow::ComponentModel::Design::WorkflowDesignerMessageFilter ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MessageFilters : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter&gt;" Usage="System.Workflow.ComponentModel.Design.ActivityDesigner.MessageFilters" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Workflow.ComponentModel.Design.IWorkflowRootDesigner.MessageFilters</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine schreibgeschützte Auflistung von Meldungsfiltern ab, die dem Aktivitätsdesigner zugeordnet sind.</summary>
        <value>Eine schreibgeschützte <see cref="T:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter" />-Auflistung, die alle Standardmeldungsfilter enthält, die dem Aktivitätsdesigner zugeordnet sind.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MinimumSize">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Size MinimumSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size MinimumSize" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.ActivityDesigner.MinimumSize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property MinimumSize As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Size MinimumSize { System::Drawing::Size get(); };" />
      <MemberSignature Language="F#" Value="member this.MinimumSize : System.Drawing.Size" Usage="System.Workflow.ComponentModel.Design.ActivityDesigner.MinimumSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die minimale Größe des Aktivitätsdesigners ab.</summary>
        <value>Die minimale Größe des Aktivitätsdesigners.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.MinimumSize%2A> wird von der Größeneinstellung bestimmt, auf die mithilfe der <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.DesignerTheme%2A>-Eigenschaft zugegriffen werden kann.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnActivityChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnActivityChanged (System.Workflow.ComponentModel.Design.ActivityChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnActivityChanged(class System.Workflow.ComponentModel.Design.ActivityChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnActivityChanged(System.Workflow.ComponentModel.Design.ActivityChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnActivityChanged (e As ActivityChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnActivityChanged(System::Workflow::ComponentModel::Design::ActivityChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnActivityChanged : System.Workflow.ComponentModel.Design.ActivityChangedEventArgs -&gt; unit&#xA;override this.OnActivityChanged : System.Workflow.ComponentModel.Design.ActivityChangedEventArgs -&gt; unit" Usage="activityDesigner.OnActivityChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Workflow.ComponentModel.Design.ActivityChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Workflow.ComponentModel.Design.ActivityChangedEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Benachrichtigt den <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" />, wenn die zugeordnete Aktivität geändert wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `e` enthält Daten zu den an <xref:System.Workflow.ComponentModel.Activity> vorgenommenen Änderungen. Sie können diese Methode zum Aktualisieren des auf dem Workflow-Designer angezeigten Designerzustands und der dort angezeigten Benutzeroberfläche verwenden, wenn ein Benutzer während der Entwurfszeit Änderungen an einer Aktivität vornimmt.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBeginResizing">
      <MemberSignature Language="C#" Value="protected virtual void OnBeginResizing (System.Workflow.ComponentModel.Design.ActivityDesignerResizeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnBeginResizing(class System.Workflow.ComponentModel.Design.ActivityDesignerResizeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnBeginResizing(System.Workflow.ComponentModel.Design.ActivityDesignerResizeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnBeginResizing (e As ActivityDesignerResizeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnBeginResizing(System::Workflow::ComponentModel::Design::ActivityDesignerResizeEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnBeginResizing : System.Workflow.ComponentModel.Design.ActivityDesignerResizeEventArgs -&gt; unit&#xA;override this.OnBeginResizing : System.Workflow.ComponentModel.Design.ActivityDesignerResizeEventArgs -&gt; unit" Usage="activityDesigner.OnBeginResizing e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Workflow.ComponentModel.Design.ActivityDesignerResizeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerResizeEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Benachrichtigt den <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" />, wenn ein Benutzer mit dem Ändern der visuellen Größe des Aktivitätsdesigners beginnt und der Designer sich in einem <see cref="T:System.Workflow.ComponentModel.Design.FreeformActivityDesigner" /> befindet.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnBeginResizing%2A> zum Verarbeiten von <xref:System.Workflow.ComponentModel.Design.ActivityDesigner> während der Entwurfszeit verwenden, wenn ein Benutzer mit dem Ändern der Größe eines Aktivitätsdesigners beginnt.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnConnected">
      <MemberSignature Language="C#" Value="protected virtual void OnConnected (System.Workflow.ComponentModel.Design.ConnectionPoint source, System.Workflow.ComponentModel.Design.ConnectionPoint target);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnConnected(class System.Workflow.ComponentModel.Design.ConnectionPoint source, class System.Workflow.ComponentModel.Design.ConnectionPoint target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnConnected(System.Workflow.ComponentModel.Design.ConnectionPoint,System.Workflow.ComponentModel.Design.ConnectionPoint)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnConnected (source As ConnectionPoint, target As ConnectionPoint)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnConnected(System::Workflow::ComponentModel::Design::ConnectionPoint ^ source, System::Workflow::ComponentModel::Design::ConnectionPoint ^ target);" />
      <MemberSignature Language="F#" Value="abstract member OnConnected : System.Workflow.ComponentModel.Design.ConnectionPoint * System.Workflow.ComponentModel.Design.ConnectionPoint -&gt; unit&#xA;override this.OnConnected : System.Workflow.ComponentModel.Design.ConnectionPoint * System.Workflow.ComponentModel.Design.ConnectionPoint -&gt; unit" Usage="activityDesigner.OnConnected (source, target)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Workflow.ComponentModel.Design.IConnectableDesigner.OnConnected(System.Workflow.ComponentModel.Design.ConnectionPoint,System.Workflow.ComponentModel.Design.ConnectionPoint)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Workflow.ComponentModel.Design.ConnectionPoint" />
        <Parameter Name="target" Type="System.Workflow.ComponentModel.Design.ConnectionPoint" />
      </Parameters>
      <Docs>
        <param name="source">Der ConnectionPoint der Quelle auf dem aktuellen Aktivitätsdesigner.</param>
        <param name="target">Der ConnectionPoint des Ziels auf dem Aktivitätsdesigner, zu dem eine Verbindung hergestellt werden soll.</param>
        <summary>Benachrichtigt den <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" />, wenn eine Verbindung zwischen zwei Verbindungspunkten hergestellt wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnConnected%2A> besitzt kein Standardverhalten. Diese Methode muss in einer Klasse überschrieben werden, die zur Bereitstellung der Verarbeitung von <xref:System.Workflow.ComponentModel.Design.ActivityDesigner> abgeleitet wird, wenn eine Verbindung zwischen zwei Designern hergestellt wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDragDrop">
      <MemberSignature Language="C#" Value="protected virtual void OnDragDrop (System.Workflow.ComponentModel.Design.ActivityDragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDragDrop(class System.Workflow.ComponentModel.Design.ActivityDragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragDrop(System.Workflow.ComponentModel.Design.ActivityDragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDragDrop (e As ActivityDragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDragDrop(System::Workflow::ComponentModel::Design::ActivityDragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDragDrop : System.Workflow.ComponentModel.Design.ActivityDragEventArgs -&gt; unit&#xA;override this.OnDragDrop : System.Workflow.ComponentModel.Design.ActivityDragEventArgs -&gt; unit" Usage="activityDesigner.OnDragDrop e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Workflow.ComponentModel.Design.ActivityDragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Workflow.ComponentModel.Design.ActivityDragEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Tritt auf, wenn ein Drag-Drop-Vorgang innerhalb der Designergrenzen abgeschlossen wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieses Ereignis tritt auf, wenn ein Drag & Drop-Vorgang innerhalb der designergrenzen beendet.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDragEnter">
      <MemberSignature Language="C#" Value="protected virtual void OnDragEnter (System.Workflow.ComponentModel.Design.ActivityDragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDragEnter(class System.Workflow.ComponentModel.Design.ActivityDragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragEnter(System.Workflow.ComponentModel.Design.ActivityDragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDragEnter (e As ActivityDragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDragEnter(System::Workflow::ComponentModel::Design::ActivityDragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDragEnter : System.Workflow.ComponentModel.Design.ActivityDragEventArgs -&gt; unit&#xA;override this.OnDragEnter : System.Workflow.ComponentModel.Design.ActivityDragEventArgs -&gt; unit" Usage="activityDesigner.OnDragEnter e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Workflow.ComponentModel.Design.ActivityDragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Workflow.ComponentModel.Design.ActivityDragEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Tritt auf, wenn der Mauszeiger während eines Drag-Drop-Vorgangs in den Bereich innerhalb der Designergrenzen bewegt wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragEnter%2A>-Ereignis wird ausgelöst, wenn die Maus in den Designer verschoben wird.  
  
 Nachfolgend wird beschrieben, wie und wann Ereignisse für Drag & Drop-Vorgänge ausgelöst werden.  
  
 Wenn es sich beim Designer um ein gültiges Ablageziel handelt, wird das <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A>-Ereignis mit dem angegebenen Drag & Drop-Effekt ausgelöst. Eine Liste der Drag & Drop-Effekte finden Sie unter der <xref:System.Windows.Forms.DragDropEffects>-Enumeration.  
  
 Änderungen der Mauszeigerposition, des Tastaturstatus und des Status des Mauskommentars werden nachverfolgt.  
  
-   Verschiebt der Benutzer die Maus an einen Punkt außerhalb der Designergrenzen, wird das <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragLeave%2A>-Ereignis ausgelöst.  
  
-   Wenn der Mauszeiger in einen anderen Designer bewegt wird, wird <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragEnter%2A> für diesen Designer ausgelöst.  
  
-   Wenn die Maus bewegt wird, ohne den Designer zu verlassen, wird das <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A>-Ereignis ausgelöst.  
  
-   Wenn der Tastatur- oder Maustastenzustand geändert wird, wird das <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnQueryContinueDrag%2A>-Ereignis ausgelöst, das entsprechend dem Wert der Action-Eigenschaft des Ereignisses <xref:System.Windows.Forms.QueryContinueDragEventArgs> bestimmt, ob der Ziehvorgang fortgesetzt, die Daten abgelegt oder der Vorgang abgebrochen werden soll.  
  
 Wenn der Wert `DragAction.Continue` lautet, wird das <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A>-Ereignis ausgelöst, um den Vorgang fortzusetzen. Zudem wird das <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A>-Ereignis mit dem neuen Effekt ausgelöst, damit eine entsprechende visuelle Rückmeldung festgelegt werden kann. Eine Liste der gültigen Ablageeffekte finden Sie unter der <xref:System.Windows.Forms.DragDropEffects>-Enumeration.  
  
> [!NOTE]
>  Das <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A>-Ereignis und das <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A>-Ereignis werden zusammengefasst, damit Benutzer beim Bewegen der Maus über das Ablageziel eine aktuelle Rückmeldung von der Mausposition erhalten.  
  
 Wenn der Wert `DragAction.Drop` ist, wird der Wert des Ablageeffekts an die Quelle zurückgegeben. Die Quellanwendung kann dadurch den entsprechenden Vorgang für die Quelldaten ausführen, z. B. einen Kommentar anzeigen, wenn es sich um einen Verschiebevorgang handelt.  
  
 Wenn der Wert `DragAction.Cancel` lautet, wird das <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragLeave%2A>-Ereignis ausgelöst.  
  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDragLeave">
      <MemberSignature Language="C#" Value="protected virtual void OnDragLeave ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDragLeave() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragLeave" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDragLeave ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDragLeave();" />
      <MemberSignature Language="F#" Value="abstract member OnDragLeave : unit -&gt; unit&#xA;override this.OnDragLeave : unit -&gt; unit" Usage="activityDesigner.OnDragLeave " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tritt auf, wenn der Mauszeiger während eines Drag-Drop-Vorgangs aus dem Bereich innerhalb der Designergrenzen bewegt wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragLeave%2A>-Ereignis wird ausgelöst, wenn der Zeiger aus dem Designer bewegt oder der aktuelle Drag&#160;&&#160;Drop-Vorgang abgebrochen wird.  
  
 Nachfolgend wird beschrieben, wie und wann Ereignisse für Drag & Drop-Vorgänge ausgelöst werden.  
  
 Wenn es sich beim Designer um ein gültiges Ablageziel handelt, wird das <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A>-Ereignis mit dem angegebenen Drag & Drop-Effekt ausgelöst. Eine Liste der Drag & Drop-Effekte finden Sie unter der <xref:System.Windows.Forms.DragDropEffects>-Enumeration.  
  
 Änderungen der Mauszeigerposition, des Tastaturstatus und des Status der Maustasten werden nachverfolgt.  
  
-   Verschiebt der Benutzer die Maus an einen Punkt außerhalb der Designergrenzen, wird das <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragLeave%2A>-Ereignis ausgelöst.  
  
-   Wenn der Mauszeiger in einen anderen Designer bewegt wird, wird <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragEnter%2A> für diesen Designer ausgelöst.  
  
-   Wenn die Maus bewegt wird, ohne den Designer zu verlassen, wird das <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A>-Ereignis ausgelöst.  
  
-   Wenn der Tastatur- oder Maustastenzustand geändert wird, wird das <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnQueryContinueDrag%2A>-Ereignis ausgelöst, das entsprechend dem Wert der Action-Eigenschaft des Ereignisses <xref:System.Windows.Forms.QueryContinueDragEventArgs> bestimmt, ob der Ziehvorgang fortgesetzt, die Daten abgelegt oder der Vorgang abgebrochen werden soll.  
  
 Wenn der Wert `DragAction.Continue` lautet, wird das <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A>-Ereignis ausgelöst, um den Vorgang fortzusetzen. Zudem wird das <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A>-Ereignis mit dem neuen Effekt ausgelöst, damit eine entsprechende visuelle Rückmeldung festgelegt werden kann. Eine Liste der gültigen Ablageeffekte finden Sie unter der <xref:System.Windows.Forms.DragDropEffects>-Enumeration.  
  
> [!NOTE]
>  Das <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A>-Ereignis und das <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A>-Ereignis werden zusammengefasst, damit Benutzer beim Bewegen der Maus über das Ablageziel eine aktuelle Rückmeldung von der Mausposition erhalten.  
  
 Lautet der Wert `DragAction.Drop`, wird der Wert des Ablageeffekts an die Quelle zurückgegeben. Die Quellanwendung kann dadurch den entsprechenden Vorgang für die Quelldaten ausführen, z.&#160;B. die Daten ausschneiden, wenn es sich um einen Verschiebevorgang handelt.  
  
 Wenn der Wert `DragAction.Cancel` lautet, wird das <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragLeave%2A>-Ereignis ausgelöst.  
  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDragOver">
      <MemberSignature Language="C#" Value="protected virtual void OnDragOver (System.Workflow.ComponentModel.Design.ActivityDragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDragOver(class System.Workflow.ComponentModel.Design.ActivityDragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver(System.Workflow.ComponentModel.Design.ActivityDragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDragOver (e As ActivityDragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDragOver(System::Workflow::ComponentModel::Design::ActivityDragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDragOver : System.Workflow.ComponentModel.Design.ActivityDragEventArgs -&gt; unit&#xA;override this.OnDragOver : System.Workflow.ComponentModel.Design.ActivityDragEventArgs -&gt; unit" Usage="activityDesigner.OnDragOver e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Workflow.ComponentModel.Design.ActivityDragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Workflow.ComponentModel.Design.ActivityDragEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Tritt auf, wenn sich der Mauszeiger während eines Drag-Drop-Vorgangs im Bereich innerhalb der Designergrenzen befindet.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A>-Ereignis wird ausgelöst, wenn der Benutzer den Zeiger auf den Designer bewegt.  
  
 Nachfolgend wird beschrieben, wie und wann Ereignisse für Drag & Drop-Vorgänge ausgelöst werden.  
  
 Wenn es sich beim Designer um ein gültiges Ablageziel handelt, wird das <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A>-Ereignis mit dem angegebenen Drag & Drop-Effekt ausgelöst. Eine Liste der Drag & Drop-Effekte finden Sie unter der <xref:System.Windows.Forms.DragDropEffects>-Enumeration.  
  
-   Änderungen der Mauszeigerposition, des Tastaturstatus und des Status der Maustasten werden nachverfolgt.  
  
-   Verschiebt der Benutzer die Maus an einen Punkt außerhalb der Designergrenzen, wird das <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragLeave%2A>-Ereignis ausgelöst.  
  
-   Wenn der Mauszeiger in einen anderen Designer bewegt wird, wird <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragEnter%2A> für diesen Designer ausgelöst.  
  
-   Wenn die Maus bewegt wird, ohne den Designer zu verlassen, wird das <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A>-Ereignis ausgelöst.  
  
-   Wenn der Tastatur- oder Maustastenzustand geändert wird, wird das <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnQueryContinueDrag%2A>-Ereignis ausgelöst, das entsprechend dem Wert der Action-Eigenschaft des Ereignisses <xref:System.Windows.Forms.QueryContinueDragEventArgs> bestimmt, ob der Ziehvorgang fortgesetzt, die Daten abgelegt oder der Vorgang abgebrochen werden soll.  
  
 Wenn der Wert `DragAction.Continue` lautet, wird das <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A>-Ereignis ausgelöst, um den Vorgang fortzusetzen. Zudem wird das <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A>-Ereignis mit dem neuen Effekt ausgelöst, damit eine entsprechende visuelle Rückmeldung festgelegt werden kann. Eine Liste der gültigen Ablageeffekte finden Sie unter der <xref:System.Windows.Forms.DragDropEffects>-Enumeration.  
  
> [!NOTE]
>  Das <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A>-Ereignis und das <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A>-Ereignis werden zusammengefasst, damit Benutzer beim Bewegen der Maus über das Ablageziel eine aktuelle Rückmeldung von der Mausposition erhalten.  
  
 Lautet der Wert `DragAction.Drop`, wird der Wert des Ablageeffekts an die Quelle zurückgegeben. Die Quellanwendung kann dadurch den entsprechenden Vorgang für die Quelldaten ausführen, z.&#160;B. die Daten ausschneiden, wenn es sich um einen Verschiebevorgang handelt.  
  
 Wenn der Wert `DragAction.Cancel` lautet, wird das <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragLeave%2A>-Ereignis ausgelöst.  
  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEndResizing">
      <MemberSignature Language="C#" Value="protected virtual void OnEndResizing ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnEndResizing() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnEndResizing" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnEndResizing ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnEndResizing();" />
      <MemberSignature Language="F#" Value="abstract member OnEndResizing : unit -&gt; unit&#xA;override this.OnEndResizing : unit -&gt; unit" Usage="activityDesigner.OnEndResizing " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Workflow.ComponentModel.Design.IWorkflowDesignerMessageSink.OnEndResizing</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Benachrichtigt den <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" />, wenn ein Benutzer das Ändern der visuellen Größe des Aktivitätsdesigners abgeschlossen hat und der Designer sich in einem <see cref="T:System.Workflow.ComponentModel.Design.FreeformActivityDesigner" /> befindet.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnExecuteDesignerAction">
      <MemberSignature Language="C#" Value="protected internal virtual void OnExecuteDesignerAction (System.Workflow.ComponentModel.Design.DesignerAction designerAction);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnExecuteDesignerAction(class System.Workflow.ComponentModel.Design.DesignerAction designerAction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnExecuteDesignerAction(System.Workflow.ComponentModel.Design.DesignerAction)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnExecuteDesignerAction(System::Workflow::ComponentModel::Design::DesignerAction ^ designerAction);" />
      <MemberSignature Language="F#" Value="abstract member OnExecuteDesignerAction : System.Workflow.ComponentModel.Design.DesignerAction -&gt; unit&#xA;override this.OnExecuteDesignerAction : System.Workflow.ComponentModel.Design.DesignerAction -&gt; unit" Usage="activityDesigner.OnExecuteDesignerAction designerAction" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="designerAction" Type="System.Workflow.ComponentModel.Design.DesignerAction" />
      </Parameters>
      <Docs>
        <param name="designerAction">Die dem Konfigurationsfehler zugeordnete <see cref="T:System.Workflow.ComponentModel.Design.DesignerAction" />.</param>
        <summary>Benachrichtigt den <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" />, wenn der Benutzer auf die dem Designer zugeordneten Konfigurationsfehler klickt.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="designerAction" /> enthält einen NULL-Verweis (<see langword="Nothing" /> in Visual Basic).</exception>
      </Docs>
    </Member>
    <Member MemberName="OnGiveFeedback">
      <MemberSignature Language="C#" Value="protected virtual void OnGiveFeedback (System.Windows.Forms.GiveFeedbackEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnGiveFeedback(class System.Windows.Forms.GiveFeedbackEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnGiveFeedback (e As GiveFeedbackEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnGiveFeedback(System::Windows::Forms::GiveFeedbackEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnGiveFeedback : System.Windows.Forms.GiveFeedbackEventArgs -&gt; unit&#xA;override this.OnGiveFeedback : System.Windows.Forms.GiveFeedbackEventArgs -&gt; unit" Usage="activityDesigner.OnGiveFeedback e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.GiveFeedbackEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.GiveFeedbackEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Aktualisiert die visuellen Hinweise mit Rückmeldungen, die dem Benutzer beim Ausführen eines Ziehvorgangs zur Verfügung gestellt werden.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nachfolgend wird beschrieben, wie und wann Ereignisse für Drag & Drop-Vorgänge ausgelöst werden.  
  
 Wenn es sich beim Designer um ein gültiges Ablageziel handelt, wird das <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A>-Ereignis mit dem angegebenen Drag & Drop-Effekt ausgelöst. Eine Liste der Drag & Drop-Effekte finden Sie unter der <xref:System.Windows.Forms.DragDropEffects>-Enumeration.  
  
-   Änderungen der Mauszeigerposition, des Tastaturstatus und des Status der Maustasten werden nachverfolgt.  
  
-   Verschiebt der Benutzer die Maus an einen Punkt außerhalb der Designergrenzen, wird das <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnMouseLeave%2A>-Ereignis ausgelöst.  
  
-   Wenn der Mauszeiger in einen anderen Designer bewegt wird, wird <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragEnter%2A> für diesen Designer ausgelöst.  
  
-   Wenn die Maus bewegt wird, ohne den Designer zu verlassen, wird das <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A>-Ereignis ausgelöst.  
  
-   Wenn der Tastatur- oder Maustastenzustand geändert wird, wird das <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnQueryContinueDrag%2A>-Ereignis ausgelöst, das entsprechend dem Wert der Action-Eigenschaft des Ereignisses <xref:System.Windows.Forms.QueryContinueDragEventArgs> bestimmt, ob der Ziehvorgang fortgesetzt, die Daten abgelegt oder der Vorgang abgebrochen werden soll.  
  
 Wenn der Wert `DragAction.Continue` lautet, wird das <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A>-Ereignis ausgelöst, um den Vorgang fortzusetzen. Zudem wird das <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A>-Ereignis mit dem neuen Effekt ausgelöst, damit eine entsprechende visuelle Rückmeldung festgelegt werden kann. Eine Liste der gültigen Ablageeffekte finden Sie unter der <xref:System.Windows.Forms.DragDropEffects>-Enumeration.  
  
> [!NOTE]
>  Das <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A>-Ereignis und das <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A>-Ereignis werden zusammengefasst, damit Benutzer beim Bewegen der Maus über das Ablageziel eine aktuelle Rückmeldung von der Mausposition erhalten.  
  
 Lautet der Wert `DragAction.Drop`, wird der Wert des Ablageeffekts an die Quelle zurückgegeben. Die Quellanwendung kann dadurch den entsprechenden Vorgang für die Quelldaten ausführen, z.&#160;B. die Daten ausschneiden, wenn es sich um einen Verschiebevorgang handelt.  
  
 Wenn der Wert `DragAction.Cancel` lautet, wird das <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragLeave%2A>-Ereignis ausgelöst.  
  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected virtual void OnKeyDown (System.Windows.Forms.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnKeyDown(class System.Windows.Forms.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnKeyDown(System.Windows.Forms.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnKeyDown(System::Windows::Forms::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnKeyDown : System.Windows.Forms.KeyEventArgs -&gt; unit&#xA;override this.OnKeyDown : System.Windows.Forms.KeyEventArgs -&gt; unit" Usage="activityDesigner.OnKeyDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.KeyEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Tritt auf, wenn eine Taste gedrückt wird und der Designer den Tastaturfokus aufweist.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnKeyUp">
      <MemberSignature Language="C#" Value="protected virtual void OnKeyUp (System.Windows.Forms.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnKeyUp(class System.Windows.Forms.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnKeyUp(System.Windows.Forms.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnKeyUp (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnKeyUp(System::Windows::Forms::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnKeyUp : System.Windows.Forms.KeyEventArgs -&gt; unit&#xA;override this.OnKeyUp : System.Windows.Forms.KeyEventArgs -&gt; unit" Usage="activityDesigner.OnKeyUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.KeyEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Tritt auf, wenn eine Taste losgelassen wird, während sich der Designer im Tastaturfokus befindet.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnLayoutPosition">
      <MemberSignature Language="C#" Value="protected virtual void OnLayoutPosition (System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLayoutPosition(class System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnLayoutPosition(System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnLayoutPosition (e As ActivityDesignerLayoutEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnLayoutPosition(System::Workflow::ComponentModel::Design::ActivityDesignerLayoutEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnLayoutPosition : System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs -&gt; unit&#xA;override this.OnLayoutPosition : System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs -&gt; unit" Usage="activityDesigner.OnLayoutPosition e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Das <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Benachrichtigt den <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" />, wenn ein Benutzer visuelle Hinweise oder untergeordnete Aktivitätsdesigner neu anordnet.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode sollte zur Layoutverarbeitung überschrieben werden. Diese ist erforderlich, wenn ein Benutzer während der Entwurfszeit Elemente auf der Aktivitätsdesigneroberfläche neu anordnet.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="e" /> enthält einen NULL-Verweis (<see langword="Nothing" /> in Visual Basic).</exception>
      </Docs>
    </Member>
    <Member MemberName="OnLayoutSize">
      <MemberSignature Language="C#" Value="protected virtual System.Drawing.Size OnLayoutSize (System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance valuetype System.Drawing.Size OnLayoutSize(class System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnLayoutSize(System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnLayoutSize (e As ActivityDesignerLayoutEventArgs) As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Drawing::Size OnLayoutSize(System::Workflow::ComponentModel::Design::ActivityDesignerLayoutEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnLayoutSize : System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs -&gt; System.Drawing.Size&#xA;override this.OnLayoutSize : System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs -&gt; System.Drawing.Size" Usage="activityDesigner.OnLayoutSize e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Das <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Gibt die Größe der visuellen Hinweise oder untergeordneter Aktivitätsdesigner auf <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> zurück.</summary>
        <returns>Die neuen Größeneinstellungen für die visuellen Hinweise oder untergeordneten Aktivitätsdesigner.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Beispiel sehen Sie, wie die <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnLayoutSize%2A>-Methode überschrieben wird. In diesem Beispiel bleibt die Größe von `Activity` bei einer Höhe und einer Breite von 64 statisch.  
  
 [!code-csharp[WF_Samples#77](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#77)]
 [!code-vb[WF_Samples#77](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#77)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="e" /> enthält einen NULL-Verweis (<see langword="Nothing" /> in Visual Basic).</exception>
      </Docs>
    </Member>
    <Member MemberName="OnMouseCaptureChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseCaptureChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseCaptureChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnMouseCaptureChanged" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseCaptureChanged ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseCaptureChanged();" />
      <MemberSignature Language="F#" Value="abstract member OnMouseCaptureChanged : unit -&gt; unit&#xA;override this.OnMouseCaptureChanged : unit -&gt; unit" Usage="activityDesigner.OnMouseCaptureChanged " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tritt auf, wenn das Erfassen von Mauseingaben geändert wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 OnMouseCaptureChanged tritt auf, wenn der Benutzer eine Anzahl Objekte auf dem Designer durch Ziehen des Mauszeigers auswählt.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseDoubleClick">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseDoubleClick (System.Windows.Forms.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseDoubleClick(class System.Windows.Forms.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseDoubleClick (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseDoubleClick(System::Windows::Forms::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseDoubleClick : System.Windows.Forms.MouseEventArgs -&gt; unit&#xA;override this.OnMouseDoubleClick : System.Windows.Forms.MouseEventArgs -&gt; unit" Usage="activityDesigner.OnMouseDoubleClick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.MouseEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Tritt auf, wenn mehrmals mit der Maustaste im Designer geklickt wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 OnMouseDoubleClick tritt auf, wenn mit der Maustaste über einem Designer doppelgeklickt wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseDown">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseDown (System.Windows.Forms.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseDown(class System.Windows.Forms.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnMouseDown(System.Windows.Forms.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseDown (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseDown(System::Windows::Forms::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseDown : System.Windows.Forms.MouseEventArgs -&gt; unit&#xA;override this.OnMouseDown : System.Windows.Forms.MouseEventArgs -&gt; unit" Usage="activityDesigner.OnMouseDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.MouseEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Tritt auf, wenn die Maustaste gedrückt wird, während sich der Mauszeiger innerhalb der Designergrenzen befindet.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nachfolgend wird beschrieben, wie und wann Ereignisse für Drag & Drop-Vorgänge ausgelöst werden.  
  
 Wenn es sich beim Designer um ein gültiges Ablageziel handelt, wird das <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A>-Ereignis mit dem angegebenen Drag & Drop-Effekt ausgelöst. Eine Liste der Drag & Drop-Effekte finden Sie unter der <xref:System.Windows.Forms.DragDropEffects>-Enumeration.  
  
-   Änderungen der Mauszeigerposition, des Tastaturstatus und des Status der Maustasten werden nachverfolgt.  
  
-   Verschiebt der Benutzer die Maus an einen Punkt außerhalb der Designergrenzen, wird das <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragLeave%2A>-Ereignis ausgelöst.  
  
-   Wenn der Mauszeiger in einen anderen Designer bewegt wird, wird <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragEnter%2A> für diesen Designer ausgelöst.  
  
-   Wenn die Maus bewegt wird, ohne den Designer zu verlassen, wird das <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A>-Ereignis ausgelöst.  
  
-   Wenn der Tastatur- oder Maustastenzustand geändert wird, wird das <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnQueryContinueDrag%2A>-Ereignis ausgelöst, das entsprechend dem Wert der Action-Eigenschaft des Ereignisses <xref:System.Windows.Forms.QueryContinueDragEventArgs> bestimmt, ob der Ziehvorgang fortgesetzt, die Daten abgelegt oder der Vorgang abgebrochen werden soll.  
  
 Wenn der Wert `DragAction.Continue` lautet, wird das <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A>-Ereignis ausgelöst, um den Vorgang fortzusetzen. Zudem wird das <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A>-Ereignis mit dem neuen Effekt ausgelöst, damit eine entsprechende visuelle Rückmeldung festgelegt werden kann. Eine Liste der gültigen Ablageeffekte finden Sie unter der <xref:System.Windows.Forms.DragDropEffects>-Enumeration.  
  
> [!NOTE]
>  Das <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A>-Ereignis und das <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A>-Ereignis werden zusammengefasst, damit Benutzer beim Bewegen der Maus über das Ablageziel eine aktuelle Rückmeldung von der Mausposition erhalten.  
  
 Lautet der Wert `DragAction.Drop`, wird der Wert des Ablageeffekts an die Quelle zurückgegeben. Die Quellanwendung kann dadurch den entsprechenden Vorgang für die Quelldaten ausführen, z.&#160;B. die Daten ausschneiden, wenn es sich um einen Verschiebevorgang handelt.  
  
 Wenn der Wert `DragAction.Cancel` lautet, wird das <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragLeave%2A>-Ereignis ausgelöst.  
  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseDragBegin">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseDragBegin (System.Drawing.Point initialDragPoint, System.Windows.Forms.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseDragBegin(valuetype System.Drawing.Point initialDragPoint, class System.Windows.Forms.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnMouseDragBegin(System.Drawing.Point,System.Windows.Forms.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseDragBegin (initialDragPoint As Point, e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseDragBegin(System::Drawing::Point initialDragPoint, System::Windows::Forms::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseDragBegin : System.Drawing.Point * System.Windows.Forms.MouseEventArgs -&gt; unit&#xA;override this.OnMouseDragBegin : System.Drawing.Point * System.Windows.Forms.MouseEventArgs -&gt; unit" Usage="activityDesigner.OnMouseDragBegin (initialDragPoint, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="initialDragPoint" Type="System.Drawing.Point" />
        <Parameter Name="e" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="initialDragPoint">Ein <see cref="T:System.Drawing.Point" />, der eine einzelne x- und eine y-Koordinate darstellt.</param>
        <param name="e">Ein <see cref="T:System.Windows.Forms.MouseEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Tritt auf, wenn der Benutzer die Maus erstmals auf den Designer zieht.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nachfolgend wird beschrieben, wie und wann Ereignisse für Drag & Drop-Vorgänge ausgelöst werden.  
  
 Wenn es sich beim Designer um ein gültiges Ablageziel handelt, wird das <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A>-Ereignis mit dem angegebenen Drag & Drop-Effekt ausgelöst. Eine Liste der Drag & Drop-Effekte finden Sie unter der <xref:System.Windows.Forms.DragDropEffects>-Enumeration.  
  
-   Änderungen der Mauszeigerposition, des Tastaturstatus und des Status der Maustasten werden nachverfolgt.  
  
-   Verschiebt der Benutzer die Maus an einen Punkt außerhalb der Designergrenzen, wird das <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragLeave%2A>-Ereignis ausgelöst.  
  
-   Wenn der Mauszeiger in einen anderen Designer bewegt wird, wird <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragEnter%2A> für diesen Designer ausgelöst.  
  
-   Wenn die Maus bewegt wird, ohne den Designer zu verlassen, wird das <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A>-Ereignis ausgelöst.  
  
-   Wenn der Tastatur- oder Maustastenzustand geändert wird, wird das <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnQueryContinueDrag%2A>-Ereignis ausgelöst, das entsprechend dem Wert der Action-Eigenschaft des Ereignisses <xref:System.Windows.Forms.QueryContinueDragEventArgs> bestimmt, ob der Ziehvorgang fortgesetzt, die Daten abgelegt oder der Vorgang abgebrochen werden soll.  
  
 Wenn der Wert `DragAction.Continue` lautet, wird das <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A>-Ereignis ausgelöst, um den Vorgang fortzusetzen. Zudem wird das <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A>-Ereignis mit dem neuen Effekt ausgelöst, damit eine entsprechende visuelle Rückmeldung festgelegt werden kann. Eine Liste der gültigen Ablageeffekte finden Sie unter der <xref:System.Windows.Forms.DragDropEffects>-Enumeration.  
  
> [!NOTE]
>  Das <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A>-Ereignis und das <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A>-Ereignis werden zusammengefasst, damit Benutzer beim Bewegen der Maus über das Ablageziel eine aktuelle Rückmeldung von der Mausposition erhalten.  
  
 Lautet der Wert `DragAction.Drop`, wird der Wert des Ablageeffekts an die Quelle zurückgegeben. Die Quellanwendung kann dadurch den entsprechenden Vorgang für die Quelldaten ausführen, z.&#160;B. die Daten ausschneiden, wenn es sich um einen Verschiebevorgang handelt.  
  
 Wenn der Wert `DragAction.Cancel` lautet, wird das <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragLeave%2A>-Ereignis ausgelöst.  
  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseDragEnd">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseDragEnd ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseDragEnd() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnMouseDragEnd" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseDragEnd ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseDragEnd();" />
      <MemberSignature Language="F#" Value="abstract member OnMouseDragEnd : unit -&gt; unit&#xA;override this.OnMouseDragEnd : unit -&gt; unit" Usage="activityDesigner.OnMouseDragEnd " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tritt auf, wenn der Benutzer die Maus vom Designer wegbewegt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nachfolgend wird beschrieben, wie und wann Ereignisse für Drag & Drop-Vorgänge ausgelöst werden.  
  
 Wenn es sich beim Designer um ein gültiges Ablageziel handelt, wird das <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A>-Ereignis mit dem angegebenen Drag & Drop-Effekt ausgelöst. Eine Liste der Drag & Drop-Effekte finden Sie unter der <xref:System.Windows.Forms.DragDropEffects>-Enumeration.  
  
-   Änderungen der Mauszeigerposition, des Tastaturstatus und des Status der Maustasten werden nachverfolgt.  
  
-   Verschiebt der Benutzer die Maus an einen Punkt außerhalb der Designergrenzen, wird das <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragLeave%2A>-Ereignis ausgelöst.  
  
-   Wenn der Mauszeiger in einen anderen Designer bewegt wird, wird <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragEnter%2A> für diesen Designer ausgelöst.  
  
-   Wenn die Maus bewegt wird, ohne den Designer zu verlassen, wird das <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A>-Ereignis ausgelöst.  
  
-   Wenn der Tastatur- oder Maustastenzustand geändert wird, wird das <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnQueryContinueDrag%2A>-Ereignis ausgelöst, das entsprechend dem Wert der Action-Eigenschaft des Ereignisses <xref:System.Windows.Forms.QueryContinueDragEventArgs> bestimmt, ob der Ziehvorgang fortgesetzt, die Daten abgelegt oder der Vorgang abgebrochen werden soll.  
  
 Wenn der Wert `DragAction.Continue` lautet, wird das <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A>-Ereignis ausgelöst, um den Vorgang fortzusetzen. Zudem wird das <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A>-Ereignis mit dem neuen Effekt ausgelöst, damit eine entsprechende visuelle Rückmeldung festgelegt werden kann. Eine Liste der gültigen Ablageeffekte finden Sie unter der <xref:System.Windows.Forms.DragDropEffects>-Enumeration.  
  
> [!NOTE]
>  Das <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A>-Ereignis und das <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A>-Ereignis werden zusammengefasst, damit Benutzer beim Bewegen der Maus über das Ablageziel eine aktuelle Rückmeldung von der Mausposition erhalten.  
  
 Lautet der Wert `DragAction.Drop`, wird der Wert des Ablageeffekts an die Quelle zurückgegeben. Die Quellanwendung kann dadurch den entsprechenden Vorgang für die Quelldaten ausführen, z.&#160;B. die Daten ausschneiden, wenn es sich um einen Verschiebevorgang handelt.  
  
 Wenn der Wert `DragAction.Cancel` lautet, wird das <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragLeave%2A>-Ereignis ausgelöst.  
  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseDragMove">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseDragMove (System.Windows.Forms.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseDragMove(class System.Windows.Forms.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnMouseDragMove(System.Windows.Forms.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseDragMove (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseDragMove(System::Windows::Forms::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseDragMove : System.Windows.Forms.MouseEventArgs -&gt; unit&#xA;override this.OnMouseDragMove : System.Windows.Forms.MouseEventArgs -&gt; unit" Usage="activityDesigner.OnMouseDragMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.MouseEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Tritt bei jeder Bewegung der Maus auf, wenn der Benutzer den Zeiger auf den Designer bewegt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nachfolgend wird beschrieben, wie und wann Ereignisse für Drag & Drop-Vorgänge ausgelöst werden.  
  
 Wenn es sich beim Designer um ein gültiges Ablageziel handelt, wird das <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A>-Ereignis mit dem angegebenen Drag & Drop-Effekt ausgelöst. Eine Liste der Drag & Drop-Effekte finden Sie unter der <xref:System.Windows.Forms.DragDropEffects>-Enumeration.  
  
-   Änderungen der Mauszeigerposition, des Tastaturstatus und des Status der Maustasten werden nachverfolgt.  
  
-   Verschiebt der Benutzer die Maus an einen Punkt außerhalb der Designergrenzen, wird das <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragLeave%2A>-Ereignis ausgelöst.  
  
-   Wenn der Mauszeiger in einen anderen Designer bewegt wird, wird <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragEnter%2A> für diesen Designer ausgelöst.  
  
-   Wenn die Maus bewegt wird, ohne den Designer zu verlassen, wird das <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A>-Ereignis ausgelöst.  
  
-   Wenn der Tastatur- oder Maustastenzustand geändert wird, wird das <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnQueryContinueDrag%2A>-Ereignis ausgelöst, das entsprechend dem Wert der Action-Eigenschaft des Ereignisses <xref:System.Windows.Forms.QueryContinueDragEventArgs> bestimmt, ob der Ziehvorgang fortgesetzt, die Daten abgelegt oder der Vorgang abgebrochen werden soll.  
  
 Wenn der Wert `DragAction.Continue` lautet, wird das <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A>-Ereignis ausgelöst, um den Vorgang fortzusetzen. Zudem wird das <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A>-Ereignis mit dem neuen Effekt ausgelöst, damit eine entsprechende visuelle Rückmeldung festgelegt werden kann. Eine Liste der gültigen Ablageeffekte finden Sie unter der <xref:System.Windows.Forms.DragDropEffects>-Enumeration.  
  
> [!NOTE]
>  Das <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A>-Ereignis und das <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A>-Ereignis werden zusammengefasst, damit Benutzer beim Bewegen der Maus über das Ablageziel eine aktuelle Rückmeldung von der Mausposition erhalten.  
  
 Lautet der Wert `DragAction.Drop`, wird der Wert des Ablageeffekts an die Quelle zurückgegeben. Die Quellanwendung kann dadurch den entsprechenden Vorgang für die Quelldaten ausführen, z.&#160;B. die Daten ausschneiden, wenn es sich um einen Verschiebevorgang handelt.  
  
 Wenn der Wert `DragAction.Cancel` lautet, wird das <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragLeave%2A>-Ereignis ausgelöst.  
  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseEnter">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseEnter (System.Windows.Forms.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseEnter(class System.Windows.Forms.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnMouseEnter(System.Windows.Forms.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseEnter (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseEnter(System::Windows::Forms::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseEnter : System.Windows.Forms.MouseEventArgs -&gt; unit&#xA;override this.OnMouseEnter : System.Windows.Forms.MouseEventArgs -&gt; unit" Usage="activityDesigner.OnMouseEnter e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.MouseEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Tritt auf, wenn die Maus erstmals in den Bereich zwischen den Designergrenzen bewegt wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nachfolgend wird beschrieben, wie und wann Ereignisse für Drag & Drop-Vorgänge ausgelöst werden.  
  
 Wenn es sich beim Designer um ein gültiges Ablageziel handelt, wird das <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A>-Ereignis mit dem angegebenen Drag & Drop-Effekt ausgelöst. Eine Liste der Drag & Drop-Effekte finden Sie unter der <xref:System.Windows.Forms.DragDropEffects>-Enumeration.  
  
-   Änderungen der Mauszeigerposition, des Tastaturstatus und des Status der Maustasten werden nachverfolgt.  
  
-   Verschiebt der Benutzer die Maus an einen Punkt außerhalb der Designergrenzen, wird das <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragLeave%2A>-Ereignis ausgelöst.  
  
-   Wenn der Mauszeiger in einen anderen Designer bewegt wird, wird <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragEnter%2A> für diesen Designer ausgelöst.  
  
-   Wenn die Maus bewegt wird, ohne den Designer zu verlassen, wird das <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A>-Ereignis ausgelöst.  
  
-   Wenn der Tastatur- oder Maustastenzustand geändert wird, wird das <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnQueryContinueDrag%2A>-Ereignis ausgelöst, das entsprechend dem Wert der Action-Eigenschaft des Ereignisses <xref:System.Windows.Forms.QueryContinueDragEventArgs> bestimmt, ob der Ziehvorgang fortgesetzt, die Daten abgelegt oder der Vorgang abgebrochen werden soll.  
  
 Wenn der Wert `DragAction.Continue` lautet, wird das <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A>-Ereignis ausgelöst, um den Vorgang fortzusetzen. Zudem wird das <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A>-Ereignis mit dem neuen Effekt ausgelöst, damit eine entsprechende visuelle Rückmeldung festgelegt werden kann. Eine Liste der gültigen Ablageeffekte finden Sie unter der <xref:System.Windows.Forms.DragDropEffects>-Enumeration.  
  
> [!NOTE]
>  Das <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A>-Ereignis und das <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A>-Ereignis werden zusammengefasst, damit Benutzer beim Bewegen der Maus über das Ablageziel eine aktuelle Rückmeldung von der Mausposition erhalten.  
  
 Lautet der Wert `DragAction.Drop`, wird der Wert des Ablageeffekts an die Quelle zurückgegeben. Die Quellanwendung kann dadurch den entsprechenden Vorgang für die Quelldaten ausführen, z.&#160;B. die Daten ausschneiden, wenn es sich um einen Verschiebevorgang handelt.  
  
 Wenn der Wert `DragAction.Cancel` lautet, wird das <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragLeave%2A>-Ereignis ausgelöst.  
  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseHover">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseHover (System.Windows.Forms.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseHover(class System.Windows.Forms.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnMouseHover(System.Windows.Forms.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseHover (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseHover(System::Windows::Forms::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseHover : System.Windows.Forms.MouseEventArgs -&gt; unit&#xA;override this.OnMouseHover : System.Windows.Forms.MouseEventArgs -&gt; unit" Usage="activityDesigner.OnMouseHover e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.MouseEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Tritt auf, wenn sich der Zeiger innerhalb der Designergrenzen befindet.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nachfolgend wird beschrieben, wie und wann Ereignisse für Drag & Drop-Vorgänge ausgelöst werden.  
  
 Wenn es sich beim Designer um ein gültiges Ablageziel handelt, wird das <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A>-Ereignis mit dem angegebenen Drag & Drop-Effekt ausgelöst. Eine Liste der Drag & Drop-Effekte finden Sie unter der <xref:System.Windows.Forms.DragDropEffects>-Enumeration.  
  
-   Änderungen der Mauszeigerposition, des Tastaturstatus und des Status der Maustasten werden nachverfolgt.  
  
-   Verschiebt der Benutzer die Maus an einen Punkt außerhalb der Designergrenzen, wird das <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragLeave%2A>-Ereignis ausgelöst.  
  
-   Wenn der Mauszeiger in einen anderen Designer bewegt wird, wird <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragEnter%2A> für diesen Designer ausgelöst.  
  
-   Wenn die Maus bewegt wird, ohne den Designer zu verlassen, wird das <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A>-Ereignis ausgelöst.  
  
-   Wenn der Tastatur- oder Maustastenzustand geändert wird, wird das <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnQueryContinueDrag%2A>-Ereignis ausgelöst, das entsprechend dem Wert der Action-Eigenschaft des Ereignisses <xref:System.Windows.Forms.QueryContinueDragEventArgs> bestimmt, ob der Ziehvorgang fortgesetzt, die Daten abgelegt oder der Vorgang abgebrochen werden soll.  
  
 Wenn der Wert `DragAction.Continue` lautet, wird das <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A>-Ereignis ausgelöst, um den Vorgang fortzusetzen. Zudem wird das <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A>-Ereignis mit dem neuen Effekt ausgelöst, damit eine entsprechende visuelle Rückmeldung festgelegt werden kann. Eine Liste der gültigen Ablageeffekte finden Sie unter der <xref:System.Windows.Forms.DragDropEffects>-Enumeration.  
  
> [!NOTE]
>  Das <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A>-Ereignis und das <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A>-Ereignis werden zusammengefasst, damit Benutzer beim Bewegen der Maus über das Ablageziel eine aktuelle Rückmeldung von der Mausposition erhalten.  
  
 Lautet der Wert `DragAction.Drop`, wird der Wert des Ablageeffekts an die Quelle zurückgegeben. Die Quellanwendung kann dadurch den entsprechenden Vorgang für die Quelldaten ausführen, z.&#160;B. die Daten ausschneiden, wenn es sich um einen Verschiebevorgang handelt.  
  
 Wenn der Wert `DragAction.Cancel` lautet, wird das <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragLeave%2A>-Ereignis ausgelöst.  
  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeave">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseLeave ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseLeave() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnMouseLeave" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseLeave ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseLeave();" />
      <MemberSignature Language="F#" Value="abstract member OnMouseLeave : unit -&gt; unit&#xA;override this.OnMouseLeave : unit -&gt; unit" Usage="activityDesigner.OnMouseLeave " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tritt auf, wenn der Zeiger den Bereich innerhalb der Designergrenzen verlässt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nachfolgend wird beschrieben, wie und wann Ereignisse für Drag & Drop-Vorgänge ausgelöst werden.  
  
 Wenn es sich beim Designer um ein gültiges Ablageziel handelt, wird das <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A>-Ereignis mit dem angegebenen Drag & Drop-Effekt ausgelöst. Eine Liste der Drag & Drop-Effekte finden Sie unter der <xref:System.Windows.Forms.DragDropEffects>-Enumeration.  
  
-   Änderungen der Mauszeigerposition, des Tastaturstatus und des Status der Maustasten werden nachverfolgt.  
  
-   Verschiebt der Benutzer die Maus an einen Punkt außerhalb der Designergrenzen, wird das <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragLeave%2A>-Ereignis ausgelöst.  
  
-   Wenn der Mauszeiger in einen anderen Designer bewegt wird, wird <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragEnter%2A> für diesen Designer ausgelöst.  
  
-   Wenn die Maus bewegt wird, ohne den Designer zu verlassen, wird das <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A>-Ereignis ausgelöst.  
  
-   Wenn der Tastatur- oder Maustastenzustand geändert wird, wird das <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnQueryContinueDrag%2A>-Ereignis ausgelöst, das entsprechend dem Wert der Action-Eigenschaft des Ereignisses <xref:System.Windows.Forms.QueryContinueDragEventArgs> bestimmt, ob der Ziehvorgang fortgesetzt, die Daten abgelegt oder der Vorgang abgebrochen werden soll.  
  
 Wenn der Wert `DragAction.Continue` lautet, wird das <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A>-Ereignis ausgelöst, um den Vorgang fortzusetzen. Zudem wird das <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A>-Ereignis mit dem neuen Effekt ausgelöst, damit eine entsprechende visuelle Rückmeldung festgelegt werden kann. Eine Liste der gültigen Ablageeffekte finden Sie unter der <xref:System.Windows.Forms.DragDropEffects>-Enumeration.  
  
> [!NOTE]
>  Das <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A>-Ereignis und das <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A>-Ereignis werden zusammengefasst, damit Benutzer beim Bewegen der Maus über das Ablageziel eine aktuelle Rückmeldung von der Mausposition erhalten.  
  
 Lautet der Wert `DragAction.Drop`, wird der Wert des Ablageeffekts an die Quelle zurückgegeben. Die Quellanwendung kann dadurch den entsprechenden Vorgang für die Quelldaten ausführen, z.&#160;B. die Daten ausschneiden, wenn es sich um einen Verschiebevorgang handelt.  
  
 Wenn der Wert `DragAction.Cancel` lautet, wird das <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragLeave%2A>-Ereignis ausgelöst.  
  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseMove">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseMove (System.Windows.Forms.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseMove(class System.Windows.Forms.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnMouseMove(System.Windows.Forms.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseMove (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseMove(System::Windows::Forms::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseMove : System.Windows.Forms.MouseEventArgs -&gt; unit&#xA;override this.OnMouseMove : System.Windows.Forms.MouseEventArgs -&gt; unit" Usage="activityDesigner.OnMouseMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.MouseEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Tritt auf, wenn der Zeiger innerhalb der Designergrenzen bewegt wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nachfolgend wird beschrieben, wie und wann Ereignisse für Drag & Drop-Vorgänge ausgelöst werden.  
  
 Wenn es sich beim Designer um ein gültiges Ablageziel handelt, wird das <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A>-Ereignis mit dem angegebenen Drag & Drop-Effekt ausgelöst. Eine Liste der Drag & Drop-Effekte finden Sie unter der <xref:System.Windows.Forms.DragDropEffects>-Enumeration.  
  
-   Änderungen der Mauszeigerposition, des Tastaturstatus und des Status der Maustasten werden nachverfolgt.  
  
-   Verschiebt der Benutzer die Maus an einen Punkt außerhalb der Designergrenzen, wird das <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragLeave%2A>-Ereignis ausgelöst.  
  
-   Wenn der Mauszeiger in einen anderen Designer bewegt wird, wird <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragEnter%2A> für diesen Designer ausgelöst.  
  
-   Wenn die Maus bewegt wird, ohne den Designer zu verlassen, wird das <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A>-Ereignis ausgelöst.  
  
-   Wenn der Tastatur- oder Maustastenzustand geändert wird, wird das <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnQueryContinueDrag%2A>-Ereignis ausgelöst, das entsprechend dem Wert der Action-Eigenschaft des Ereignisses <xref:System.Windows.Forms.QueryContinueDragEventArgs> bestimmt, ob der Ziehvorgang fortgesetzt, die Daten abgelegt oder der Vorgang abgebrochen werden soll.  
  
 Wenn der Wert `DragAction.Continue` lautet, wird das <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A>-Ereignis ausgelöst, um den Vorgang fortzusetzen. Zudem wird das <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A>-Ereignis mit dem neuen Effekt ausgelöst, damit eine entsprechende visuelle Rückmeldung festgelegt werden kann. Eine Liste der gültigen Ablageeffekte finden Sie unter der <xref:System.Windows.Forms.DragDropEffects>-Enumeration.  
  
> [!NOTE]
>  Das <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A>-Ereignis und das <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A>-Ereignis werden zusammengefasst, damit Benutzer beim Bewegen der Maus über das Ablageziel eine aktuelle Rückmeldung von der Mausposition erhalten.  
  
 Lautet der Wert `DragAction.Drop`, wird der Wert des Ablageeffekts an die Quelle zurückgegeben. Die Quellanwendung kann dadurch den entsprechenden Vorgang für die Quelldaten ausführen, z.&#160;B. die Daten ausschneiden, wenn es sich um einen Verschiebevorgang handelt.  
  
 Wenn der Wert `DragAction.Cancel` lautet, wird das <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragLeave%2A>-Ereignis ausgelöst.  
  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseUp">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseUp (System.Windows.Forms.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseUp(class System.Windows.Forms.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnMouseUp(System.Windows.Forms.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseUp (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseUp(System::Windows::Forms::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseUp : System.Windows.Forms.MouseEventArgs -&gt; unit&#xA;override this.OnMouseUp : System.Windows.Forms.MouseEventArgs -&gt; unit" Usage="activityDesigner.OnMouseUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.MouseEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Tritt auf, wenn die Maustaste losgelassen wird, während sich der Mauszeiger innerhalb der Designergrenzen befindet.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nachfolgend wird beschrieben, wie und wann Ereignisse für Drag & Drop-Vorgänge ausgelöst werden.  
  
 Wenn es sich beim Designer um ein gültiges Ablageziel handelt, wird das <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A>-Ereignis mit dem angegebenen Drag & Drop-Effekt ausgelöst. Eine Liste der Drag & Drop-Effekte finden Sie unter der <xref:System.Windows.Forms.DragDropEffects>-Enumeration.  
  
-   Änderungen der Mauszeigerposition, des Tastaturstatus und des Status der Maustasten werden nachverfolgt.  
  
-   Verschiebt der Benutzer die Maus an einen Punkt außerhalb der Designergrenzen, wird das <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragLeave%2A>-Ereignis ausgelöst.  
  
-   Wenn der Mauszeiger in einen anderen Designer bewegt wird, wird <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragEnter%2A> für diesen Designer ausgelöst.  
  
-   Wenn die Maus bewegt wird, ohne den Designer zu verlassen, wird das <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A>-Ereignis ausgelöst.  
  
-   Wenn der Tastatur- oder Maustastenzustand geändert wird, wird das <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnQueryContinueDrag%2A>-Ereignis ausgelöst, das entsprechend dem Wert der Action-Eigenschaft des Ereignisses <xref:System.Windows.Forms.QueryContinueDragEventArgs> bestimmt, ob der Ziehvorgang fortgesetzt, die Daten abgelegt oder der Vorgang abgebrochen werden soll.  
  
 Wenn der Wert `DragAction.Continue` lautet, wird das <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A>-Ereignis ausgelöst, um den Vorgang fortzusetzen. Zudem wird das <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A>-Ereignis mit dem neuen Effekt ausgelöst, damit eine entsprechende visuelle Rückmeldung festgelegt werden kann. Eine Liste der gültigen Ablageeffekte finden Sie unter der <xref:System.Windows.Forms.DragDropEffects>-Enumeration.  
  
> [!NOTE]
>  Das <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A>-Ereignis und das <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A>-Ereignis werden zusammengefasst, damit Benutzer beim Bewegen der Maus über das Ablageziel eine aktuelle Rückmeldung von der Mausposition erhalten.  
  
 Lautet der Wert `DragAction.Drop`, wird der Wert des Ablageeffekts an die Quelle zurückgegeben. Die Quellanwendung kann dadurch den entsprechenden Vorgang für die Quelldaten ausführen, z.&#160;B. die Daten ausschneiden, wenn es sich um einen Verschiebevorgang handelt.  
  
 Wenn der Wert `DragAction.Cancel` lautet, wird das <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragLeave%2A>-Ereignis ausgelöst.  
  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPaint">
      <MemberSignature Language="C#" Value="protected virtual void OnPaint (System.Workflow.ComponentModel.Design.ActivityDesignerPaintEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPaint(class System.Workflow.ComponentModel.Design.ActivityDesignerPaintEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnPaint(System.Workflow.ComponentModel.Design.ActivityDesignerPaintEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPaint (e As ActivityDesignerPaintEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPaint(System::Workflow::ComponentModel::Design::ActivityDesignerPaintEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPaint : System.Workflow.ComponentModel.Design.ActivityDesignerPaintEventArgs -&gt; unit&#xA;override this.OnPaint : System.Workflow.ComponentModel.Design.ActivityDesignerPaintEventArgs -&gt; unit" Usage="activityDesigner.OnPaint e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Workflow.ComponentModel.Design.ActivityDesignerPaintEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerPaintEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Zeichnet die visuelle Darstellung einer Aktivität zur Entwurfszeit.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 In folgendem Beispiel wird ein benutzerdefinierter <xref:System.Workflow.ComponentModel.Design.ActivityDesigner> angezeigt, der die Zeichnungsverantwortung an die Basisklasse delegiert oder sich selbst in einem booleschen Wert zeichnet. Falls `useBasePaint` den Wert false aufweist, zeichnet sich die benutzerdefinierte Aktivität automatisch mithilfe der verschiedenen Methoden der <xref:System.Workflow.ComponentModel.Design.ActivityDesignerPaint>-Klasse.  
  
 [!code-csharp[WF_Samples#78](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#78)]
 [!code-vb[WF_Samples#78](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#78)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="e" /> enthält einen NULL-Verweis (<see langword="Nothing" /> in Visual Basic).</exception>
      </Docs>
    </Member>
    <Member MemberName="OnProcessMessage">
      <MemberSignature Language="C#" Value="protected virtual void OnProcessMessage (System.Windows.Forms.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnProcessMessage(valuetype System.Windows.Forms.Message message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnProcessMessage(System.Windows.Forms.Message)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnProcessMessage(System::Windows::Forms::Message message);" />
      <MemberSignature Language="F#" Value="abstract member OnProcessMessage : System.Windows.Forms.Message -&gt; unit&#xA;override this.OnProcessMessage : System.Windows.Forms.Message -&gt; unit" Usage="activityDesigner.OnProcessMessage message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.Windows.Forms.Message" />
      </Parameters>
      <Docs>
        <param name="message">Win32-<see cref="T:System.Windows.Forms.Message" /> mit den Ereignisdaten.</param>
        <summary>Ermöglicht dem Designer das Verarbeiten nicht formatierter Win32-Meldungen.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnQueryContinueDrag">
      <MemberSignature Language="C#" Value="protected virtual void OnQueryContinueDrag (System.Windows.Forms.QueryContinueDragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnQueryContinueDrag(class System.Windows.Forms.QueryContinueDragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnQueryContinueDrag(System.Windows.Forms.QueryContinueDragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnQueryContinueDrag (e As QueryContinueDragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnQueryContinueDrag(System::Windows::Forms::QueryContinueDragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnQueryContinueDrag : System.Windows.Forms.QueryContinueDragEventArgs -&gt; unit&#xA;override this.OnQueryContinueDrag : System.Windows.Forms.QueryContinueDragEventArgs -&gt; unit" Usage="activityDesigner.OnQueryContinueDrag e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.QueryContinueDragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.QueryContinueDragEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Steuert, ob der Ziehvorgang fortgesetzt werden soll.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nachfolgend wird beschrieben, wie und wann Ereignisse für Drag & Drop-Vorgänge ausgelöst werden.  
  
 Wenn es sich beim Designer um ein gültiges Ablageziel handelt, wird das <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A>-Ereignis mit dem angegebenen Drag & Drop-Effekt ausgelöst. Eine Liste der Drag & Drop-Effekte finden Sie unter der <xref:System.Windows.Forms.DragDropEffects>-Enumeration.  
  
-   Änderungen der Mauszeigerposition, des Tastaturstatus und des Status der Maustasten werden nachverfolgt.  
  
-   Verschiebt der Benutzer die Maus an einen Punkt außerhalb der Designergrenzen, wird das <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragLeave%2A>-Ereignis ausgelöst.  
  
-   Wenn der Mauszeiger in einen anderen Designer bewegt wird, wird <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragEnter%2A> für diesen Designer ausgelöst.  
  
-   Wenn die Maus bewegt wird, ohne den Designer zu verlassen, wird das <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A>-Ereignis ausgelöst.  
  
-   Wenn der Tastatur- oder Maustastenzustand geändert wird, wird das <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnQueryContinueDrag%2A>-Ereignis ausgelöst, das entsprechend dem Wert der Action-Eigenschaft des Ereignisses <xref:System.Windows.Forms.QueryContinueDragEventArgs> bestimmt, ob der Ziehvorgang fortgesetzt, die Daten abgelegt oder der Vorgang abgebrochen werden soll.  
  
 Wenn der Wert `DragAction.Continue` lautet, wird das <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A>-Ereignis ausgelöst, um den Vorgang fortzusetzen. Zudem wird das <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A>-Ereignis mit dem neuen Effekt ausgelöst, damit eine entsprechende visuelle Rückmeldung festgelegt werden kann. Eine Liste der gültigen Ablageeffekte finden Sie unter der <xref:System.Windows.Forms.DragDropEffects>-Enumeration.  
  
> [!NOTE]
>  Das <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A>-Ereignis und das <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A>-Ereignis werden zusammengefasst, damit Benutzer beim Bewegen der Maus über das Ablageziel eine aktuelle Rückmeldung von der Mausposition erhalten.  
  
 Lautet der Wert `DragAction.Drop`, wird der Wert des Ablageeffekts an die Quelle zurückgegeben. Die Quellanwendung kann dadurch den entsprechenden Vorgang für die Quelldaten ausführen, z.&#160;B. die Daten ausschneiden, wenn es sich um einen Verschiebevorgang handelt.  
  
 Wenn der Wert `DragAction.Cancel` lautet, wird das <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragLeave%2A>-Ereignis ausgelöst.  
  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnResizing">
      <MemberSignature Language="C#" Value="protected virtual void OnResizing (System.Workflow.ComponentModel.Design.ActivityDesignerResizeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnResizing(class System.Workflow.ComponentModel.Design.ActivityDesignerResizeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnResizing(System.Workflow.ComponentModel.Design.ActivityDesignerResizeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnResizing (e As ActivityDesignerResizeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnResizing(System::Workflow::ComponentModel::Design::ActivityDesignerResizeEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnResizing : System.Workflow.ComponentModel.Design.ActivityDesignerResizeEventArgs -&gt; unit&#xA;override this.OnResizing : System.Workflow.ComponentModel.Design.ActivityDesignerResizeEventArgs -&gt; unit" Usage="activityDesigner.OnResizing e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Workflow.ComponentModel.Design.ActivityDesignerResizeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Das <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerResizeEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Benachrichtigt <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" />, wenn ein Benutzer während der Entwurfszeit die visuelle Größe ändert. Die Methode wird nur aufgerufen, falls es sich beim Aktivitätsdesigner um ein untergeordnetes Element eines <see cref="T:System.Workflow.ComponentModel.Design.FreeformActivityDesigner" /> handelt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `e` gibt die <xref:System.Workflow.ComponentModel.Design.DesignerEdges> und neue Grenzen an, die für den <xref:System.Workflow.ComponentModel.Design.ActivityDesigner> mit der geänderten Größe verwendet werden.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnScroll">
      <MemberSignature Language="C#" Value="protected virtual void OnScroll (System.Windows.Forms.ScrollBar sender, int value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnScroll(class System.Windows.Forms.ScrollBar sender, int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnScroll(System.Windows.Forms.ScrollBar,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnScroll (sender As ScrollBar, value As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnScroll(System::Windows::Forms::ScrollBar ^ sender, int value);" />
      <MemberSignature Language="F#" Value="abstract member OnScroll : System.Windows.Forms.ScrollBar * int -&gt; unit&#xA;override this.OnScroll : System.Windows.Forms.ScrollBar * int -&gt; unit" Usage="activityDesigner.OnScroll (sender, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Windows.Forms.ScrollBar" />
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="sender">Die <see cref="T:System.Windows.Forms.ScrollBar" />, auf der der Benutzer die Position geändert hat.</param>
        <param name="value">Der neue Wert für die Bildlaufposition.</param>
        <summary>Benachrichtigt den <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" />, wenn ein Benutzer die Bildlaufposition ändert.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnScroll%2A> verfügen nicht über ein Standardverhalten. Es muss in einer Klasse überschrieben werden, die von <xref:System.Workflow.ComponentModel.Design.ActivityDesigner> abgeleitet wird, damit es bei Änderungen der Bildlaufposition eine Verarbeitungslogik bereitstellen kann.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnShowSmartTagVerbs">
      <MemberSignature Language="C#" Value="protected virtual void OnShowSmartTagVerbs (System.Drawing.Point smartTagPoint);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnShowSmartTagVerbs(valuetype System.Drawing.Point smartTagPoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnShowSmartTagVerbs(System.Drawing.Point)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnShowSmartTagVerbs (smartTagPoint As Point)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnShowSmartTagVerbs(System::Drawing::Point smartTagPoint);" />
      <MemberSignature Language="F#" Value="abstract member OnShowSmartTagVerbs : System.Drawing.Point -&gt; unit&#xA;override this.OnShowSmartTagVerbs : System.Drawing.Point -&gt; unit" Usage="activityDesigner.OnShowSmartTagVerbs smartTagPoint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="smartTagPoint" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="smartTagPoint">Ein <see cref="T:System.Drawing.Point" />, der den Ort festlegt, an dem das Smarttag angezeigt wird.</param>
        <summary>Zeigt die einem Smarttag am angegebenen Punkt zugeordneten Designerverben an.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSmartTagVisibilityChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnSmartTagVisibilityChanged (bool visible);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSmartTagVisibilityChanged(bool visible) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnSmartTagVisibilityChanged(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSmartTagVisibilityChanged (visible As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSmartTagVisibilityChanged(bool visible);" />
      <MemberSignature Language="F#" Value="abstract member OnSmartTagVisibilityChanged : bool -&gt; unit&#xA;override this.OnSmartTagVisibilityChanged : bool -&gt; unit" Usage="activityDesigner.OnSmartTagVisibilityChanged visible" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visible" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="visible"><see langword="true" /> zum Angeben, dass das Smarttag angezeigt werden soll; <see langword="false" /> zum Angeben, dass das Smarttag ausgeblendet werden soll.</param>
        <summary>Benachrichtigt den <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" />, ob ein Smarttag angezeigt oder ausgeblendet werden soll.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnThemeChange">
      <MemberSignature Language="C#" Value="protected virtual void OnThemeChange (System.Workflow.ComponentModel.Design.ActivityDesignerTheme newTheme);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnThemeChange(class System.Workflow.ComponentModel.Design.ActivityDesignerTheme newTheme) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnThemeChange(System.Workflow.ComponentModel.Design.ActivityDesignerTheme)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnThemeChange (newTheme As ActivityDesignerTheme)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnThemeChange(System::Workflow::ComponentModel::Design::ActivityDesignerTheme ^ newTheme);" />
      <MemberSignature Language="F#" Value="abstract member OnThemeChange : System.Workflow.ComponentModel.Design.ActivityDesignerTheme -&gt; unit&#xA;override this.OnThemeChange : System.Workflow.ComponentModel.Design.ActivityDesignerTheme -&gt; unit" Usage="activityDesigner.OnThemeChange newTheme" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newTheme" Type="System.Workflow.ComponentModel.Design.ActivityDesignerTheme" />
      </Parameters>
      <Docs>
        <param name="newTheme">Ein <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerTheme" />, das die Ereignisdaten enthält.</param>
        <summary>Benachrichtigt den Designer, dass das zugeordnete Design geändert wurde.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParentDesigner">
      <MemberSignature Language="C#" Value="public System.Workflow.ComponentModel.Design.CompositeActivityDesigner ParentDesigner { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.ComponentModel.Design.CompositeActivityDesigner ParentDesigner" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.ActivityDesigner.ParentDesigner" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ParentDesigner As CompositeActivityDesigner" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Workflow::ComponentModel::Design::CompositeActivityDesigner ^ ParentDesigner { System::Workflow::ComponentModel::Design::CompositeActivityDesigner ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ParentDesigner : System.Workflow.ComponentModel.Design.CompositeActivityDesigner" Usage="System.Workflow.ComponentModel.Design.ActivityDesigner.ParentDesigner" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Design.CompositeActivityDesigner</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den übergeordneten Designer des vorhandenen Designers ab.</summary>
        <value>Der übergeordneten Designer des vorhandenen Designers. Falls es sich beim <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> um einen Stammdesigner handelt, ist der zurückgegebene <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" /> der <see cref="T:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner" />, andernfalls ist der <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> der übergeordnete <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.ParentDesigner%2A>, um in der Struktur der geschachtelten <xref:System.Workflow.ComponentModel.Design.ActivityDesigner>-Objekte nach oben zu navigieren oder den Stammdesigner zu finden.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParentView">
      <MemberSignature Language="C#" Value="protected internal System.Workflow.ComponentModel.Design.WorkflowView ParentView { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.ComponentModel.Design.WorkflowView ParentView" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.ActivityDesigner.ParentView" />
      <MemberSignature Language="VB.NET" Value="Protected Friend ReadOnly Property ParentView As WorkflowView" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property System::Workflow::ComponentModel::Design::WorkflowView ^ ParentView { System::Workflow::ComponentModel::Design::WorkflowView ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ParentView : System.Workflow.ComponentModel.Design.WorkflowView" Usage="System.Workflow.ComponentModel.Design.ActivityDesigner.ParentView" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Design.WorkflowView</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Workflowansicht ab, die den aktuellen Aktivitätsdesigner enthält.</summary>
        <value>Die <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />, die den aktuellen Aktivitätsdesigner enthält.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PerformLayout">
      <MemberSignature Language="C#" Value="protected void PerformLayout ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void PerformLayout() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.PerformLayout" />
      <MemberSignature Language="VB.NET" Value="Protected Sub PerformLayout ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void PerformLayout();" />
      <MemberSignature Language="F#" Value="member this.PerformLayout : unit -&gt; unit" Usage="activityDesigner.PerformLayout " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Aktualisiert das Layout des Designers.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PointToLogical">
      <MemberSignature Language="C#" Value="protected System.Drawing.Point PointToLogical (System.Drawing.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance valuetype System.Drawing.Point PointToLogical(valuetype System.Drawing.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.PointToLogical(System.Drawing.Point)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Drawing::Point PointToLogical(System::Drawing::Point point);" />
      <MemberSignature Language="F#" Value="member this.PointToLogical : System.Drawing.Point -&gt; System.Drawing.Point" Usage="activityDesigner.PointToLogical point" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="point">Ein <see cref="T:System.Drawing.Point" />, der die zu transformierenden Koordinaten enthält.</param>
        <summary>Transformiert einen Punkt vom Bildschirmkoordinatensystem in das Aktivitätsdesignerkoordinatensystem.</summary>
        <returns>Ein <see cref="T:System.Drawing.Point" />, der die transformierten x- und y-Koordinaten enthält.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PointToScreen">
      <MemberSignature Language="C#" Value="protected System.Drawing.Point PointToScreen (System.Drawing.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance valuetype System.Drawing.Point PointToScreen(valuetype System.Drawing.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.PointToScreen(System.Drawing.Point)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Drawing::Point PointToScreen(System::Drawing::Point point);" />
      <MemberSignature Language="F#" Value="member this.PointToScreen : System.Drawing.Point -&gt; System.Drawing.Point" Usage="activityDesigner.PointToScreen point" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="point">Ein <see cref="T:System.Drawing.Point" />, der die zu transformierenden Koordinaten enthält.</param>
        <summary>Transformiert einen Punkt vom Aktivitätsdesignerkoordinatensystem in das Bildschirmkoordinatensystem.</summary>
        <returns>Ein <see cref="T:System.Drawing.Point" />, der die transformierten x- und y-Koordinaten enthält.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PostFilterAttributes">
      <MemberSignature Language="C#" Value="protected virtual void PostFilterAttributes (System.Collections.IDictionary attributes);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void PostFilterAttributes(class System.Collections.IDictionary attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.PostFilterAttributes(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub PostFilterAttributes (attributes As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void PostFilterAttributes(System::Collections::IDictionary ^ attributes);" />
      <MemberSignature Language="F#" Value="abstract member PostFilterAttributes : System.Collections.IDictionary -&gt; unit&#xA;override this.PostFilterAttributes : System.Collections.IDictionary -&gt; unit" Usage="activityDesigner.PostFilterAttributes attributes" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes(System.Collections.IDictionary)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="attributes">Das <see cref="T:System.Collections.IDictionary" />, das die TypeID-Werte der Attribute enthält.</param>
        <summary>Ermöglicht es einem Designer, beim Überschreiben in einer abgeleiteten Klasse Elemente in der über einen TypeDescriptor verfügbar gemachten Attributgruppe zu ändern oder zu entfernen.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PostFilterEvents">
      <MemberSignature Language="C#" Value="protected virtual void PostFilterEvents (System.Collections.IDictionary events);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void PostFilterEvents(class System.Collections.IDictionary events) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.PostFilterEvents(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub PostFilterEvents (events As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void PostFilterEvents(System::Collections::IDictionary ^ events);" />
      <MemberSignature Language="F#" Value="abstract member PostFilterEvents : System.Collections.IDictionary -&gt; unit&#xA;override this.PostFilterEvents : System.Collections.IDictionary -&gt; unit" Usage="activityDesigner.PostFilterEvents events" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents(System.Collections.IDictionary)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="events" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="events">Das <see cref="T:System.Collections.IDictionary" />, das die Ereignisnamen der Klasse enthält.</param>
        <summary>Ermöglicht es dem Designer, beim Überschreiben in einer abgeleiteten Klasse Elemente in der über einen TypeDescriptor verfügbar gemachten Menge von Ereignissen zu ändern oder daraus zu entfernen.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PostFilterProperties">
      <MemberSignature Language="C#" Value="protected virtual void PostFilterProperties (System.Collections.IDictionary properties);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void PostFilterProperties(class System.Collections.IDictionary properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.PostFilterProperties(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub PostFilterProperties (properties As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void PostFilterProperties(System::Collections::IDictionary ^ properties);" />
      <MemberSignature Language="F#" Value="abstract member PostFilterProperties : System.Collections.IDictionary -&gt; unit&#xA;override this.PostFilterProperties : System.Collections.IDictionary -&gt; unit" Usage="activityDesigner.PostFilterProperties properties" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties(System.Collections.IDictionary)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="properties">Das <see cref="T:System.Collections.IDictionary" />, das die Eigenschaftsnamen der Klasse enthält.</param>
        <summary>Ermöglicht es einem Designer, beim Überschreiben in einer abgeleiteten Klasse Elemente in der über einen TypeDescriptor verfügbar gemachten Menge von Eigenschaften zu ändern oder daraus zu entfernen.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreFilterAttributes">
      <MemberSignature Language="C#" Value="protected virtual void PreFilterAttributes (System.Collections.IDictionary attributes);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void PreFilterAttributes(class System.Collections.IDictionary attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.PreFilterAttributes(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub PreFilterAttributes (attributes As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void PreFilterAttributes(System::Collections::IDictionary ^ attributes);" />
      <MemberSignature Language="F#" Value="abstract member PreFilterAttributes : System.Collections.IDictionary -&gt; unit&#xA;override this.PreFilterAttributes : System.Collections.IDictionary -&gt; unit" Usage="activityDesigner.PreFilterAttributes attributes" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes(System.Collections.IDictionary)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="attributes">Das <see cref="T:System.Collections.IDictionary" />, das die TypeID-Werte der Attribute enthält.</param>
        <summary>Ermöglicht es einem Designer, beim Überschreiben in einer abgeleiteten Klasse Elemente zur über einen TypeDescriptor verfügbar gemachten Attributgruppe hinzuzufügen.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreFilterEvents">
      <MemberSignature Language="C#" Value="protected virtual void PreFilterEvents (System.Collections.IDictionary events);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void PreFilterEvents(class System.Collections.IDictionary events) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.PreFilterEvents(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub PreFilterEvents (events As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void PreFilterEvents(System::Collections::IDictionary ^ events);" />
      <MemberSignature Language="F#" Value="abstract member PreFilterEvents : System.Collections.IDictionary -&gt; unit&#xA;override this.PreFilterEvents : System.Collections.IDictionary -&gt; unit" Usage="activityDesigner.PreFilterEvents events" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents(System.Collections.IDictionary)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="events" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="events">Das <see cref="T:System.Collections.IDictionary" />, das die Ereignisnamen der Klasse enthält.</param>
        <summary>Ermöglicht es einem Designer, beim Überschreiben in einer abgeleiteten Klasse Elemente zur über einen TypeDescriptor verfügbar gemachten Menge von Ereignissen hinzuzufügen.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreFilterProperties">
      <MemberSignature Language="C#" Value="protected virtual void PreFilterProperties (System.Collections.IDictionary properties);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void PreFilterProperties(class System.Collections.IDictionary properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.PreFilterProperties(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub PreFilterProperties (properties As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void PreFilterProperties(System::Collections::IDictionary ^ properties);" />
      <MemberSignature Language="F#" Value="abstract member PreFilterProperties : System.Collections.IDictionary -&gt; unit&#xA;override this.PreFilterProperties : System.Collections.IDictionary -&gt; unit" Usage="activityDesigner.PreFilterProperties properties" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties(System.Collections.IDictionary)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="properties">Das <see cref="T:System.Collections.IDictionary" />, das die Eigenschaftsnamen der Klasse enthält.</param>
        <summary>Ermöglicht es einem Designer, beim Überschreiben in einer abgeleiteten Klasse Elemente zur über einen TypeDescriptor verfügbar gemachten Menge von Eigenschaften hinzuzufügen.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RectangleToLogical">
      <MemberSignature Language="C#" Value="protected System.Drawing.Rectangle RectangleToLogical (System.Drawing.Rectangle rectangle);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance valuetype System.Drawing.Rectangle RectangleToLogical(valuetype System.Drawing.Rectangle rectangle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.RectangleToLogical(System.Drawing.Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Drawing::Rectangle RectangleToLogical(System::Drawing::Rectangle rectangle);" />
      <MemberSignature Language="F#" Value="member this.RectangleToLogical : System.Drawing.Rectangle -&gt; System.Drawing.Rectangle" Usage="activityDesigner.RectangleToLogical rectangle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rectangle" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="rectangle">Ein <see cref="T:System.Drawing.Rectangle" />, das die zu transformierenden Koordinaten beschreibt.</param>
        <summary>Transformiert ein Rechteck vom Bildschirmkoordinatensystem in das Aktivitätsdesignerkoordinatensystem.</summary>
        <returns>Ein <see cref="T:System.Drawing.Rectangle" />, das die transformierten Koordinaten beschreibt.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RectangleToScreen">
      <MemberSignature Language="C#" Value="protected System.Drawing.Rectangle RectangleToScreen (System.Drawing.Rectangle rectangle);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance valuetype System.Drawing.Rectangle RectangleToScreen(valuetype System.Drawing.Rectangle rectangle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.RectangleToScreen(System.Drawing.Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Drawing::Rectangle RectangleToScreen(System::Drawing::Rectangle rectangle);" />
      <MemberSignature Language="F#" Value="member this.RectangleToScreen : System.Drawing.Rectangle -&gt; System.Drawing.Rectangle" Usage="activityDesigner.RectangleToScreen rectangle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rectangle" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="rectangle">Ein <see cref="T:System.Drawing.Rectangle" />, das die zu transformierenden Koordinaten beschreibt.</param>
        <summary>Transformiert ein Rechteck vom Aktivitätsdesignerkoordinatensystem in das Bildschirmkoordinatensystem.</summary>
        <returns>Ein <see cref="T:System.Drawing.Rectangle" />, das die transformierten Koordinaten beschreibt.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RefreshDesignerActions">
      <MemberSignature Language="C#" Value="protected internal virtual void RefreshDesignerActions ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void RefreshDesignerActions() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.RefreshDesignerActions" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub RefreshDesignerActions ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void RefreshDesignerActions();" />
      <MemberSignature Language="F#" Value="abstract member RefreshDesignerActions : unit -&gt; unit&#xA;override this.RefreshDesignerActions : unit -&gt; unit" Usage="activityDesigner.RefreshDesignerActions " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Aktualisiert die dem Designer zugeordneten Konfigurationsfehler.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Designeraktionen stellen die möglichen, einem Designer zugeordneten Konfigurationsfehler dar. Durch Aufrufen von <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.RefreshDesignerActions%2A> werden diese Fehler mit vor kurzem vorgenommenen Änderungen aktualisiert.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RefreshDesignerVerbs">
      <MemberSignature Language="C#" Value="protected void RefreshDesignerVerbs ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RefreshDesignerVerbs() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.RefreshDesignerVerbs" />
      <MemberSignature Language="VB.NET" Value="Protected Sub RefreshDesignerVerbs ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void RefreshDesignerVerbs();" />
      <MemberSignature Language="F#" Value="member this.RefreshDesignerVerbs : unit -&gt; unit" Usage="activityDesigner.RefreshDesignerVerbs " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Aktualisiert die dem Designer zugeordneten Aktivitätsdesignerverben durch Aufrufen des Statushandlers.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Designerverben werden in Kontextmenüs und Menüleisten angezeigt. Durch Aufrufen von <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.RefreshDesignerVerbs%2A> werden die Menüs aktualisiert und zeigen sämtliche vor kurzem vorgenommenen Änderungen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected virtual void SaveViewState (System.IO.BinaryWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void SaveViewState(class System.IO.BinaryWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.SaveViewState(System.IO.BinaryWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub SaveViewState (writer As BinaryWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void SaveViewState(System::IO::BinaryWriter ^ writer);" />
      <MemberSignature Language="F#" Value="abstract member SaveViewState : System.IO.BinaryWriter -&gt; unit&#xA;override this.SaveViewState : System.IO.BinaryWriter -&gt; unit" Usage="activityDesigner.SaveViewState writer" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Workflow.ComponentModel.Design.IPersistUIState.SaveViewState(System.IO.BinaryWriter)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.BinaryWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Der <see cref="T:System.IO.BinaryWriter" />, in dem der Ansichtszustand gespeichert wird.</param>
        <summary>Speichert den Ansichtszustand des Designers in einen binären Stream.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Ansichtszustand besteht aus der Ansammlung der Werte der Designereigenschaften. Wird der Ansichtszustand in einem Stream gespeichert, können die Designerwerte und -einstellungen mithilfe von <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.LoadViewState%2A> wiederhergestellt werden.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ShowInfoTip">
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Zeigt den angegebenen InfoTipp für den <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> an.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Von <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.ShowInfoTip%2A> wird die <xref:System.Workflow.ComponentModel.Design.WorkflowView.ShowInfoTip%2A?displayProperty=nameWithType>-Logik zum Anzeigen von InfoTipps verwendet, es sei denn, sie wurde in einer abgeleiteten Klasse überschrieben.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="ShowInfoTip">
      <MemberSignature Language="C#" Value="protected void ShowInfoTip (string infoTip);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ShowInfoTip(string infoTip) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.ShowInfoTip(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub ShowInfoTip (infoTip As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void ShowInfoTip(System::String ^ infoTip);" />
      <MemberSignature Language="F#" Value="member this.ShowInfoTip : string -&gt; unit" Usage="activityDesigner.ShowInfoTip infoTip" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="infoTip" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="infoTip">Der im InfoTipp anzuzeigende Text.</param>
        <summary>Zeigt die angegebene QuickInfo an.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.ShowInfoTip%2A> zum Anzeigen eines Rechtecks mit Text, das zum Anzeigen weiterer Informationen über den Designer verwendet werden kann.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowInfoTip">
      <MemberSignature Language="C#" Value="protected void ShowInfoTip (string title, string infoTip);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ShowInfoTip(string title, string infoTip) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.ShowInfoTip(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub ShowInfoTip (title As String, infoTip As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void ShowInfoTip(System::String ^ title, System::String ^ infoTip);" />
      <MemberSignature Language="F#" Value="member this.ShowInfoTip : string * string -&gt; unit" Usage="activityDesigner.ShowInfoTip (title, infoTip)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="title" Type="System.String" />
        <Parameter Name="infoTip" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="title">Eine Zeichenfolge mit dem Titel des InfoTipps.</param>
        <param name="infoTip">Eine Zeichenfolge, die den anzuzeigenden InfoTipp-Text enthält.</param>
        <summary>Zeigt den InfoTipp für den <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> mit dem angegebenen Titel und dem Text an.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowInPlaceTip">
      <MemberSignature Language="C#" Value="protected void ShowInPlaceTip (string infoTip, System.Drawing.Rectangle rectangle);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ShowInPlaceTip(string infoTip, valuetype System.Drawing.Rectangle rectangle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.ShowInPlaceTip(System.String,System.Drawing.Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void ShowInPlaceTip(System::String ^ infoTip, System::Drawing::Rectangle rectangle);" />
      <MemberSignature Language="F#" Value="member this.ShowInPlaceTip : string * System.Drawing.Rectangle -&gt; unit" Usage="activityDesigner.ShowInPlaceTip (infoTip, rectangle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="infoTip" Type="System.String" />
        <Parameter Name="rectangle" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="infoTip">Eine Zeichenfolge, die die anzuzeigende QuickInfo enthält.</param>
        <param name="rectangle">Ein <see cref="T:System.Drawing.Rectangle" />, der den Ort definiert, an dem die QuickInfo angezeigt werden soll.</param>
        <summary>Zeigt die angegebene QuickInfo am Ort, der für das Rechteck angegebenen wurde.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowSmartTag">
      <MemberSignature Language="C#" Value="protected virtual bool ShowSmartTag { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowSmartTag" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.ActivityDesigner.ShowSmartTag" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property ShowSmartTag As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool ShowSmartTag { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.ShowSmartTag : bool" Usage="System.Workflow.ComponentModel.Design.ActivityDesigner.ShowSmartTag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob die Aktivität ein Smarttag anzeigen soll.</summary>
        <value><see langword="true" />, wenn die Aktivität ein SmartTag anzeigen sollte, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.ShowSmartTag%2A> zum Bestimmen, ob ein Smarttag angezeigt werden soll, wenn eine Aktivität sich im Fokus des Designers befindet.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Size">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Size Size { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size Size" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.ActivityDesigner.Size" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Size As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Size Size { System::Drawing::Size get(); void set(System::Drawing::Size value); };" />
      <MemberSignature Language="F#" Value="member this.Size : System.Drawing.Size with get, set" Usage="System.Workflow.ComponentModel.Design.ActivityDesigner.Size" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Größe des <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> ab oder legt diese fest.</summary>
        <value>Eine <see cref="T:System.Drawing.Size" />, die den Bereich des <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie zum Anpassen der Höhe und Breite des Aktivitätsdesigners.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SmartTagRectangle">
      <MemberSignature Language="C#" Value="protected virtual System.Drawing.Rectangle SmartTagRectangle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Rectangle SmartTagRectangle" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.ActivityDesigner.SmartTagRectangle" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property SmartTagRectangle As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Drawing::Rectangle SmartTagRectangle { System::Drawing::Rectangle get(); };" />
      <MemberSignature Language="F#" Value="member this.SmartTagRectangle : System.Drawing.Rectangle" Usage="System.Workflow.ComponentModel.Design.ActivityDesigner.SmartTagRectangle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Rechteck ab, an dem das Smarttag angezeigt werden soll.</summary>
        <value>Das Rechteck, an dem das Smarttag angezeigt werden soll.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie dies zusammen mit <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.ShowSmartTag%2A> und <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.SmartTagVerbs%2A> zum Anzeigen eines Smarttags der verfügbaren Designeraktionen am von <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.SmartTagRectangle%2A> angegebenen Ort.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SmartTagVerbs">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Design.ActivityDesignerVerb&gt; SmartTagVerbs { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Workflow.ComponentModel.Design.ActivityDesignerVerb&gt; SmartTagVerbs" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.ActivityDesigner.SmartTagVerbs" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property SmartTagVerbs As ReadOnlyCollection(Of ActivityDesignerVerb)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Workflow::ComponentModel::Design::ActivityDesignerVerb ^&gt; ^ SmartTagVerbs { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Workflow::ComponentModel::Design::ActivityDesignerVerb ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SmartTagVerbs : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Design.ActivityDesignerVerb&gt;" Usage="System.Workflow.ComponentModel.Design.ActivityDesigner.SmartTagVerbs" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Design.ActivityDesignerVerb&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine schreibgeschützte Auflistung von Designeraktionen ab, denen im Aktivitätsdesigner ein Smarttag zugeordnet werden soll.</summary>
        <value>Eine schreibgeschützte <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerVerb" />-Auflistung, die dem Smarttag des Aktivitätsdesigners zugeordnet werden soll.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.IDesigner.Component">
      <MemberSignature Language="C#" Value="System.ComponentModel.IComponent System.ComponentModel.Design.IDesigner.Component { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.IComponent System.ComponentModel.Design.IDesigner.Component" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.ActivityDesigner.System#ComponentModel#Design#IDesigner#Component" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Component As IComponent Implements IDesigner.Component" />
      <MemberSignature Language="C++ CLI" Value="property System::ComponentModel::IComponent ^ System::ComponentModel::Design::IDesigner::Component { System::ComponentModel::IComponent ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.ComponentModel.Design.IDesigner.Component" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.Design.IDesigner.Component</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.IComponent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Basiskomponente ab, der der Aktivitätsdesigner zugeordnet ist.</summary>
        <value>Die <see cref="T:System.ComponentModel.IComponent" />, der der Aktivitätsdesigner zugeordnet ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.System%23ComponentModel%23Design%23IDesigner%23Component> steht für die Aktivität, die vom Aktivitätsdesigner auf der Workflowentwurfsoberfläche entworfen wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.IDesigner.DoDefaultAction">
      <MemberSignature Language="C#" Value="void IDesigner.DoDefaultAction ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.Design.IDesigner.DoDefaultAction() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.System#ComponentModel#Design#IDesigner#DoDefaultAction" />
      <MemberSignature Language="VB.NET" Value="Sub DoDefaultAction () Implements IDesigner.DoDefaultAction" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.Design.IDesigner.DoDefaultAction() = System::ComponentModel::Design::IDesigner::DoDefaultAction;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.Design.IDesigner.DoDefaultAction</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Führt die standardmäßige Aktion aus, die dem Designer zugeordnet ist.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.DoDefaultAction%2A> veranlasst das Ausführen der dem Designer zugeordneten Standardaktion.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.IDesigner.Initialize">
      <MemberSignature Language="C#" Value="void IDesigner.Initialize (System.ComponentModel.IComponent component);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.Design.IDesigner.Initialize(class System.ComponentModel.IComponent component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.System#ComponentModel#Design#IDesigner#Initialize(System.ComponentModel.IComponent)" />
      <MemberSignature Language="VB.NET" Value="Sub Initialize (component As IComponent) Implements IDesigner.Initialize" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.Design.IDesigner.Initialize(System::ComponentModel::IComponent ^ component) = System::ComponentModel::Design::IDesigner::Initialize;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.Design.IDesigner.Initialize(System.ComponentModel.IComponent)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="component">Die IComponent zum Initialisieren des Designers.</param>
        <summary>Initialisiert den der Aktivität zugeordneten Designer.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.IDesigner.Verbs">
      <MemberSignature Language="C#" Value="System.ComponentModel.Design.DesignerVerbCollection System.ComponentModel.Design.IDesigner.Verbs { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Design.DesignerVerbCollection System.ComponentModel.Design.IDesigner.Verbs" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.ActivityDesigner.System#ComponentModel#Design#IDesigner#Verbs" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Verbs As DesignerVerbCollection Implements IDesigner.Verbs" />
      <MemberSignature Language="C++ CLI" Value="property System::ComponentModel::Design::DesignerVerbCollection ^ System::ComponentModel::Design::IDesigner::Verbs { System::ComponentModel::Design::DesignerVerbCollection ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.ComponentModel.Design.IDesigner.Verbs" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.Design.IDesigner.Verbs</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.DesignerVerbCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die dem Aktivitätsdesigner zugeordneten Entwurfszeitverben ab.</summary>
        <value>Die dem Aktivitätsdesigner zugeordneten Entwurfszeitverben.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes">
      <MemberSignature Language="C#" Value="void IDesignerFilter.PostFilterAttributes (System.Collections.IDictionary attributes);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes(class System.Collections.IDictionary attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.System#ComponentModel#Design#IDesignerFilter#PostFilterAttributes(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Sub PostFilterAttributes (attributes As IDictionary) Implements IDesignerFilter.PostFilterAttributes" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes(System::Collections::IDictionary ^ attributes) = System::ComponentModel::Design::IDesignerFilter::PostFilterAttributes;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes(System.Collections.IDictionary)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="attributes">Das <see cref="T:System.Collections.IDictionary" />, das die TypeIDs der Attribute der Klasse enthält.</param>
        <summary>Ermöglicht es einem Designer, beim Überschreiben in einer abgeleiteten Klasse Elemente in der über einen TypeDescriptor verfügbar gemachten Attributgruppe zu ändern oder zu entfernen.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.IDesignerFilter.PostFilterEvents">
      <MemberSignature Language="C#" Value="void IDesignerFilter.PostFilterEvents (System.Collections.IDictionary events);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.Design.IDesignerFilter.PostFilterEvents(class System.Collections.IDictionary events) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.System#ComponentModel#Design#IDesignerFilter#PostFilterEvents(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Sub PostFilterEvents (events As IDictionary) Implements IDesignerFilter.PostFilterEvents" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.Design.IDesignerFilter.PostFilterEvents(System::Collections::IDictionary ^ events) = System::ComponentModel::Design::IDesignerFilter::PostFilterEvents;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents(System.Collections.IDictionary)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="events" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="events">Das <see cref="T:System.Collections.IDictionary" />, das die Ereignisnamen der Klasse enthält.</param>
        <summary>Ermöglicht es einem Designer, beim Überschreiben in einer abgeleiteten Klasse Elemente in der über einen TypeDescriptor verfügbar gemachten Menge von Ereignissen zu ändern oder daraus zu entfernen.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.IDesignerFilter.PostFilterProperties">
      <MemberSignature Language="C#" Value="void IDesignerFilter.PostFilterProperties (System.Collections.IDictionary properties);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.Design.IDesignerFilter.PostFilterProperties(class System.Collections.IDictionary properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.System#ComponentModel#Design#IDesignerFilter#PostFilterProperties(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Sub PostFilterProperties (properties As IDictionary) Implements IDesignerFilter.PostFilterProperties" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.Design.IDesignerFilter.PostFilterProperties(System::Collections::IDictionary ^ properties) = System::ComponentModel::Design::IDesignerFilter::PostFilterProperties;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties(System.Collections.IDictionary)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="properties">Das <see cref="T:System.Collections.IDictionary" />, das die Eigenschaftsnamen der Klasse enthält.</param>
        <summary>Ermöglicht es einem Designer, beim Überschreiben in einer abgeleiteten Klasse Elemente in der über einen TypeDescriptor verfügbar gemachten Menge von Eigenschaften zu ändern oder daraus zu entfernen.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes">
      <MemberSignature Language="C#" Value="void IDesignerFilter.PreFilterAttributes (System.Collections.IDictionary attributes);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes(class System.Collections.IDictionary attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.System#ComponentModel#Design#IDesignerFilter#PreFilterAttributes(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Sub PreFilterAttributes (attributes As IDictionary) Implements IDesignerFilter.PreFilterAttributes" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes(System::Collections::IDictionary ^ attributes) = System::ComponentModel::Design::IDesignerFilter::PreFilterAttributes;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes(System.Collections.IDictionary)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="attributes">Das <see cref="T:System.Collections.IDictionary" />, das die TypeIDs der Attribute der Klasse enthält.</param>
        <summary>Ermöglicht es einem Designer, beim Überschreiben in einer abgeleiteten Klasse Elemente zur über einen TypeDescriptor verfügbar gemachten Attributgruppe hinzuzufügen.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.IDesignerFilter.PreFilterEvents">
      <MemberSignature Language="C#" Value="void IDesignerFilter.PreFilterEvents (System.Collections.IDictionary events);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.Design.IDesignerFilter.PreFilterEvents(class System.Collections.IDictionary events) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.System#ComponentModel#Design#IDesignerFilter#PreFilterEvents(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Sub PreFilterEvents (events As IDictionary) Implements IDesignerFilter.PreFilterEvents" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.Design.IDesignerFilter.PreFilterEvents(System::Collections::IDictionary ^ events) = System::ComponentModel::Design::IDesignerFilter::PreFilterEvents;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents(System.Collections.IDictionary)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="events" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="events">Das <see cref="T:System.Collections.IDictionary" />, das die Ereignisnamen der Klasse enthält.</param>
        <summary>Ermöglicht es einem Designer, beim Überschreiben in einer abgeleiteten Klasse Elemente zur über einen TypeDescriptor verfügbar gemachten Menge von Ereignissen hinzuzufügen.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.IDesignerFilter.PreFilterProperties">
      <MemberSignature Language="C#" Value="void IDesignerFilter.PreFilterProperties (System.Collections.IDictionary properties);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.Design.IDesignerFilter.PreFilterProperties(class System.Collections.IDictionary properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.System#ComponentModel#Design#IDesignerFilter#PreFilterProperties(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Sub PreFilterProperties (properties As IDictionary) Implements IDesignerFilter.PreFilterProperties" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.Design.IDesignerFilter.PreFilterProperties(System::Collections::IDictionary ^ properties) = System::ComponentModel::Design::IDesignerFilter::PreFilterProperties;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties(System.Collections.IDictionary)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="properties">Das <see cref="T:System.Collections.IDictionary" />, das die Eigenschaftsnamen der Klasse enthält.</param>
        <summary>Ermöglicht es einem Designer, beim Überschreiben in einer abgeleiteten Klasse Elemente zur über einen TypeDescriptor verfügbar gemachten Menge von Eigenschaften hinzuzufügen.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.IRootDesigner.GetView">
      <MemberSignature Language="C#" Value="object IRootDesigner.GetView (System.ComponentModel.Design.ViewTechnology technology);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ComponentModel.Design.IRootDesigner.GetView(valuetype System.ComponentModel.Design.ViewTechnology technology) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.System#ComponentModel#Design#IRootDesigner#GetView(System.ComponentModel.Design.ViewTechnology)" />
      <MemberSignature Language="VB.NET" Value="Function GetView (technology As ViewTechnology) As Object Implements IRootDesigner.GetView" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ComponentModel.Design.IRootDesigner.GetView(System::ComponentModel::Design::ViewTechnology technology) = System::ComponentModel::Design::IRootDesigner::GetView;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.Design.IRootDesigner.GetView(System.ComponentModel.Design.ViewTechnology)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="technology" Type="System.ComponentModel.Design.ViewTechnology" />
      </Parameters>
      <Docs>
        <param name="technology">Eine <see cref="T:System.ComponentModel.Design.ViewTechnology" />, für die das Ansichtsobjekt zurückgegeben werden soll.</param>
        <summary>Gibt ein Ansichtsobjekt für die angegebene Ansichtstechnologie zurück.</summary>
        <returns>Ein Objekt, das die Ansicht für diesen Designer darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung. Er kann nur verwendet werden, wenn das <xref:System.Workflow.ComponentModel.Design.ActivityDesigner> in eine <xref:System.ComponentModel.Design.IRootDesigner>-Schnittstelle umgewandelt wird.  
  
 Weitere Informationen finden Sie unter <xref:System.ComponentModel.Design.IRootDesigner.GetView%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.IRootDesigner.SupportedTechnologies">
      <MemberSignature Language="C#" Value="System.ComponentModel.Design.ViewTechnology[] System.ComponentModel.Design.IRootDesigner.SupportedTechnologies { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ComponentModel.Design.ViewTechnology[] System.ComponentModel.Design.IRootDesigner.SupportedTechnologies" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.ActivityDesigner.System#ComponentModel#Design#IRootDesigner#SupportedTechnologies" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SupportedTechnologies As ViewTechnology() Implements IRootDesigner.SupportedTechnologies" />
      <MemberSignature Language="C++ CLI" Value="property cli::array &lt;System::ComponentModel::Design::ViewTechnology&gt; ^ System::ComponentModel::Design::IRootDesigner::SupportedTechnologies { cli::array &lt;System::ComponentModel::Design::ViewTechnology&gt; ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.ComponentModel.Design.IRootDesigner.SupportedTechnologies" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.Design.IRootDesigner.SupportedTechnologies</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.ViewTechnology[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Array von Technologien ab, dessen Anzeige der Aktivitätsdesigner unterstützen kann.</summary>
        <value>Ein Array unterstützter <see cref="T:System.ComponentModel.Design.ViewTechnology" />-Objekte.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Von <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.System%23ComponentModel%23Design%23IRootDesigner%23SupportedTechnologies> wird ein Einzelmember-Array zurückgegeben, das <xref:System.ComponentModel.Design.ViewTechnology.Default?displayProperty=nameWithType> enthält.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Drawing.Design.IToolboxUser.GetToolSupported">
      <MemberSignature Language="C#" Value="bool IToolboxUser.GetToolSupported (System.Drawing.Design.ToolboxItem toolboxItem);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Drawing.Design.IToolboxUser.GetToolSupported(class System.Drawing.Design.ToolboxItem toolboxItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.System#Drawing#Design#IToolboxUser#GetToolSupported(System.Drawing.Design.ToolboxItem)" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Drawing.Design.IToolboxUser.GetToolSupported(System::Drawing::Design::ToolboxItem ^ toolboxItem) = System::Drawing::Design::IToolboxUser::GetToolSupported;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Drawing.Design.IToolboxUser.GetToolSupported(System.Drawing.Design.ToolboxItem)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="toolboxItem" Type="System.Drawing.Design.ToolboxItem" />
      </Parameters>
      <Docs>
        <param name="toolboxItem">Der auf Unterstützung zu testende <see cref="T:System.Drawing.Design.ToolboxItem" />.</param>
        <summary>Bestimmt, ob das angegebene Toolbox-Element vom aktuellen Aktivitätsdesigner unterstützt wird.</summary>
        <returns><see langword="true" />, wenn das Tool von der Toolbox unterstützt wird und aktiviert werden kann, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen finden Sie unter <xref:System.Drawing.Design.IToolboxUser.GetToolSupported%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Drawing.Design.IToolboxUser.ToolPicked">
      <MemberSignature Language="C#" Value="void IToolboxUser.ToolPicked (System.Drawing.Design.ToolboxItem toolboxItem);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Drawing.Design.IToolboxUser.ToolPicked(class System.Drawing.Design.ToolboxItem toolboxItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.System#Drawing#Design#IToolboxUser#ToolPicked(System.Drawing.Design.ToolboxItem)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Drawing.Design.IToolboxUser.ToolPicked(System::Drawing::Design::ToolboxItem ^ toolboxItem) = System::Drawing::Design::IToolboxUser::ToolPicked;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Drawing.Design.IToolboxUser.ToolPicked(System.Drawing.Design.ToolboxItem)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="toolboxItem" Type="System.Drawing.Design.ToolboxItem" />
      </Parameters>
      <Docs>
        <param name="toolboxItem">Das auszuwählende <see cref="T:System.Drawing.Design.ToolboxItem" />.</param>
        <summary>Wählt das angegebene Toolboxelement aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen finden Sie unter <xref:System.Drawing.Design.IToolboxUser.ToolPicked%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Workflow.ComponentModel.Design.IPersistUIState.LoadViewState">
      <MemberSignature Language="C#" Value="void IPersistUIState.LoadViewState (System.IO.BinaryReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Workflow.ComponentModel.Design.IPersistUIState.LoadViewState(class System.IO.BinaryReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.System#Workflow#ComponentModel#Design#IPersistUIState#LoadViewState(System.IO.BinaryReader)" />
      <MemberSignature Language="VB.NET" Value="Sub LoadViewState (reader As BinaryReader) Implements IPersistUIState.LoadViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Workflow.ComponentModel.Design.IPersistUIState.LoadViewState(System::IO::BinaryReader ^ reader) = System::Workflow::ComponentModel::Design::IPersistUIState::LoadViewState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Workflow.ComponentModel.Design.IPersistUIState.LoadViewState(System.IO.BinaryReader)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.IO.BinaryReader" />
      </Parameters>
      <Docs>
        <param name="reader">Der <see cref="T:System.IO.BinaryReader" />, aus dem der Ansichtszustand geladen werden soll.</param>
        <summary>Stellt den Ansichtszustand eines binären Streams wieder her.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Workflow.ComponentModel.Design.IPersistUIState.SaveViewState">
      <MemberSignature Language="C#" Value="void IPersistUIState.SaveViewState (System.IO.BinaryWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Workflow.ComponentModel.Design.IPersistUIState.SaveViewState(class System.IO.BinaryWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.System#Workflow#ComponentModel#Design#IPersistUIState#SaveViewState(System.IO.BinaryWriter)" />
      <MemberSignature Language="VB.NET" Value="Sub SaveViewState (writer As BinaryWriter) Implements IPersistUIState.SaveViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Workflow.ComponentModel.Design.IPersistUIState.SaveViewState(System::IO::BinaryWriter ^ writer) = System::Workflow::ComponentModel::Design::IPersistUIState::SaveViewState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Workflow.ComponentModel.Design.IPersistUIState.SaveViewState(System.IO.BinaryWriter)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.BinaryWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Ein <see cref="T:System.IO.BinaryWriter" />, in dem der Ansichtszustand gespeichert wird.</param>
        <summary>Speichert den Ansichtszustand in einem binären Stream.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Workflow.ComponentModel.Design.IWorkflowRootDesigner.InvokingDesigner">
      <MemberSignature Language="C#" Value="System.Workflow.ComponentModel.Design.CompositeActivityDesigner System.Workflow.ComponentModel.Design.IWorkflowRootDesigner.InvokingDesigner { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.ComponentModel.Design.CompositeActivityDesigner System.Workflow.ComponentModel.Design.IWorkflowRootDesigner.InvokingDesigner" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.ActivityDesigner.System#Workflow#ComponentModel#Design#IWorkflowRootDesigner#InvokingDesigner" />
      <MemberSignature Language="VB.NET" Value=" Property InvokingDesigner As CompositeActivityDesigner Implements IWorkflowRootDesigner.InvokingDesigner" />
      <MemberSignature Language="C++ CLI" Value="property System::Workflow::ComponentModel::Design::CompositeActivityDesigner ^ System::Workflow::ComponentModel::Design::IWorkflowRootDesigner::InvokingDesigner { System::Workflow::ComponentModel::Design::CompositeActivityDesigner ^ get(); void set(System::Workflow::ComponentModel::Design::CompositeActivityDesigner ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Workflow.ComponentModel.Design.IWorkflowRootDesigner.InvokingDesigner" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Workflow.ComponentModel.Design.IWorkflowRootDesigner.InvokingDesigner</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Design.CompositeActivityDesigner</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" /> ab, von dem die Initialisierung des Aktivitätsdesigners angefordert wurde, oder legt ihn fest.</summary>
        <value>Der <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" />, von dem die Initialisierung des Aktivitätsdesigners angefordert wurde.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Workflow.ComponentModel.Design.IWorkflowRootDesigner.IsSupportedActivityType">
      <MemberSignature Language="C#" Value="bool IWorkflowRootDesigner.IsSupportedActivityType (Type activityType);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Workflow.ComponentModel.Design.IWorkflowRootDesigner.IsSupportedActivityType(class System.Type activityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.ActivityDesigner.System#Workflow#ComponentModel#Design#IWorkflowRootDesigner#IsSupportedActivityType(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Function IsSupportedActivityType (activityType As Type) As Boolean Implements IWorkflowRootDesigner.IsSupportedActivityType" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Workflow.ComponentModel.Design.IWorkflowRootDesigner.IsSupportedActivityType(Type ^ activityType) = System::Workflow::ComponentModel::Design::IWorkflowRootDesigner::IsSupportedActivityType;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Workflow.ComponentModel.Design.IWorkflowRootDesigner.IsSupportedActivityType(System.Type)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activityType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="activityType">Der <see cref="T:System.Type" /> der Aktivität zur Prüfung auf Unterstützung im Aktivitätsdesigner.</param>
        <summary>Gibt einen Wert zurück, der angibt, ob der angegebene Typ auf dem aktuellen <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> unterstützt wird.</summary>
        <returns><see langword="true" />, wenn der Typ im aktuellen Workflow Designer unterstützt wird, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 IsSupportedActivityType wird nur aufgerufen, wenn es sich bei <xref:System.Workflow.ComponentModel.Design.ActivityDesigner> um einen Stammdesigner handelt.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Workflow.ComponentModel.Design.IWorkflowRootDesigner.MessageFilters">
      <MemberSignature Language="C#" Value="System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter&gt; System.Workflow.ComponentModel.Design.IWorkflowRootDesigner.MessageFilters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter&gt; System.Workflow.ComponentModel.Design.IWorkflowRootDesigner.MessageFilters" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.ActivityDesigner.System#Workflow#ComponentModel#Design#IWorkflowRootDesigner#MessageFilters" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property MessageFilters As ReadOnlyCollection(Of WorkflowDesignerMessageFilter) Implements IWorkflowRootDesigner.MessageFilters" />
      <MemberSignature Language="C++ CLI" Value="property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Workflow::ComponentModel::Design::WorkflowDesignerMessageFilter ^&gt; ^ System::Workflow::ComponentModel::Design::IWorkflowRootDesigner::MessageFilters { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Workflow::ComponentModel::Design::WorkflowDesignerMessageFilter ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Workflow.ComponentModel.Design.IWorkflowRootDesigner.MessageFilters" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Workflow.ComponentModel.Design.IWorkflowRootDesigner.MessageFilters</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft alle dem Aktivitätsdesigner zugeordneten Meldungsfilter ab.</summary>
        <value>Eine schreibgeschützte <see cref="T:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter" />-Auflistung, die alle dem Workflow-Stammdesigner zugeordneten Meldungsfilter enthält.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Workflow.ComponentModel.Design.IWorkflowRootDesigner.SupportsLayoutPersistence">
      <MemberSignature Language="C#" Value="bool System.Workflow.ComponentModel.Design.IWorkflowRootDesigner.SupportsLayoutPersistence { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Workflow.ComponentModel.Design.IWorkflowRootDesigner.SupportsLayoutPersistence" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.ActivityDesigner.System#Workflow#ComponentModel#Design#IWorkflowRootDesigner#SupportsLayoutPersistence" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SupportsLayoutPersistence As Boolean Implements IWorkflowRootDesigner.SupportsLayoutPersistence" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Workflow::ComponentModel::Design::IWorkflowRootDesigner::SupportsLayoutPersistence { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Workflow.ComponentModel.Design.IWorkflowRootDesigner.SupportsLayoutPersistence" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Workflow.ComponentModel.Design.IWorkflowRootDesigner.SupportsLayoutPersistence</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Wert ab, der angibt, ob der tatsächliche Workflow-Stammdesigner die Layoutspeicherung unterstützt.</summary>
        <value><see langword="true" />, wenn der Designer die Layoutspeicherung unterstützt; andernfalls <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public virtual string Text { get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.ActivityDesigner.Text" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:  virtual property System::String ^ Text {  public:&#xA;System::String ^ get(); protected:&#xA; void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="System.Workflow.ComponentModel.Design.ActivityDesigner.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den dem Designer zuzuordnenden Text ab oder legt ihn fest.</summary>
        <value>Der Text, der dem Designer zugeordnet wird.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie, um dem Designer eine Textzeichenfolge zuzuordnen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextRectangle">
      <MemberSignature Language="C#" Value="protected virtual System.Drawing.Rectangle TextRectangle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Rectangle TextRectangle" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.ActivityDesigner.TextRectangle" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property TextRectangle As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Drawing::Rectangle TextRectangle { System::Drawing::Rectangle get(); };" />
      <MemberSignature Language="F#" Value="member this.TextRectangle : System.Drawing.Rectangle" Usage="System.Workflow.ComponentModel.Design.ActivityDesigner.TextRectangle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Wert des Textrechtecks in logischen Koordinaten ab.</summary>
        <value>Ein <see cref="T:System.Drawing.Rectangle" />, das den dem Designer zugeordneten Text enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie es, um den Ort auf dem Designer zu bestimmen, an dem <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.Text%2A> angezeigt wird.  
  
   
  
## Examples  
 In folgendem Beispiel sehen Sie, wie die <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.TextRectangle%2A>-Eigenschaft überschrieben wird. In diesem Beispiel wird <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.TextRectangle%2A> mithilfe der Grenzen von <xref:System.Workflow.ComponentModel.Design.ActivityDesigner> sowie dem Ort und der Größe von <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.ImageRectangle%2A> berechnet.  
  
 [!code-csharp[WF_Samples#75](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#75)]
 [!code-vb[WF_Samples#75](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#75)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Verbs">
      <MemberSignature Language="C#" Value="protected virtual System.Workflow.ComponentModel.Design.ActivityDesignerVerbCollection Verbs { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.ComponentModel.Design.ActivityDesignerVerbCollection Verbs" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.ActivityDesigner.Verbs" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property Verbs As ActivityDesignerVerbCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Workflow::ComponentModel::Design::ActivityDesignerVerbCollection ^ Verbs { System::Workflow::ComponentModel::Design::ActivityDesignerVerbCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Verbs : System.Workflow.ComponentModel.Design.ActivityDesignerVerbCollection" Usage="System.Workflow.ComponentModel.Design.ActivityDesigner.Verbs" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Design.ActivityDesignerVerbCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Auflistung der dem Designer zugeordneten Verben ab.</summary>
        <value>Die Auflistung der dem Designer zugeordneten Verben.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie die Verbenmethode zum Bestimmen der Verben, die im Kontextmenü angezeigt werden.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt, wie die <xref:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner.Verbs%2A>-Eigenschaft außer Kraft gesetzt wird, um benutzerdefinierte Verbaktionen für <xref:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner> einzufügen. `CreateActivityVerbs` erstellt ein neues <xref:System.Workflow.ComponentModel.Design.ActivityDesignerVerb> mit dem Namen `"Add New Parallel Branch"` und ordnet einen Ereignishandler namens `OnAddParallelBranch` zu. Wenn im Workflow-Designer auf das Verb geklickt wird, wird der Ereignishandler aufgerufen.  
  
 [!code-csharp[WF_Samples#73](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#73)]
 [!code-vb[WF_Samples#73](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#73)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>