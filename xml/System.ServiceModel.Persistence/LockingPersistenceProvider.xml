<Type Name="LockingPersistenceProvider" FullName="System.ServiceModel.Persistence.LockingPersistenceProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0b394709b5d19e16a8c9b59f1eb19833ce4cc711" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36614173" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class LockingPersistenceProvider : System.ServiceModel.Persistence.PersistenceProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit LockingPersistenceProvider extends System.ServiceModel.Persistence.PersistenceProvider" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Persistence.LockingPersistenceProvider" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class LockingPersistenceProvider&#xA;Inherits PersistenceProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class LockingPersistenceProvider abstract : System::ServiceModel::Persistence::PersistenceProvider" />
  <TypeSignature Language="F#" Value="type LockingPersistenceProvider = class&#xA;    inherit PersistenceProvider" />
  <AssemblyInfo>
    <AssemblyName>System.WorkflowServices</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Persistence.PersistenceProvider</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Obsolete("The WF3 types are deprecated.  Instead, please use the new WF4 types from System.Activities.*")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Die abstrakte Basisklasse, von der alle permanenten Dienstpersistenz-Provider, die das Sperren implementieren, abgeleitetet werden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zusätzlich zur Persistenz implementiert die <xref:System.ServiceModel.Persistence.LockingPersistenceProvider>-Klasse das Sperren von Dienstzustandsdatensätzen. Methoden, die Interaktion mit persistente Daten (z. B. die `Load` Methode) verfügen über einen optionalen Parameter (`lockInstance`), der definiert, ob Sperren der fraglichen Daten freigegeben oder beibehalten werden.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected LockingPersistenceProvider (Guid id);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(valuetype System.Guid id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.LockingPersistenceProvider.#ctor(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (id As Guid)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; LockingPersistenceProvider(Guid id);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Persistence.LockingPersistenceProvider : Guid -&gt; System.ServiceModel.Persistence.LockingPersistenceProvider" Usage="new System.ServiceModel.Persistence.LockingPersistenceProvider id" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="id" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="id">Der eindeutige Bezeichner, der dieser Persistenz-Providerinstanz zugeordnet werden soll.</param>
        <summary>Erstellt beim Implementieren in einer abgeleiteten Klasse eine neue Instanz der <see cref="T:System.ServiceModel.Persistence.LockingPersistenceProvider" />-Klasse, konfiguriert mit dem angegebenen Identitätswert.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginCreate">
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Startet einen asynchronen Vorgang zum Erstellen von Instanzstatusinformationen im Beibehaltungsspeicher.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginCreate">
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginCreate (object instance, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginCreate(object instance, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginCreate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BeginCreate (instance As Object, timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override IAsyncResult ^ BeginCreate(System::Object ^ instance, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="override this.BeginCreate : obj * TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="lockingPersistenceProvider.BeginCreate (instance, timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">Die Instanz, deren Statusinformationen im Beibehaltungsspeicher gespeichert werden.</param>
        <param name="timeout">Das Intervall, in dem der Vorgang abgeschlossen werden muss, ohne dass ein Timeout aufgetreten ist.</param>
        <param name="callback">Der Delegat, der beim Abschließen des Vorgangs die Benachrichtigung empfängt.</param>
        <param name="state">Die dem asynchronen Vorgang zugeordneten Statusinformationen.</param>
        <summary>Startet einen asynchronen Vorgang, um mit den Parametern Instanzstatusinformationen im Beibehaltungsspeicher zu erstellen. Diese Methode entsperrt die Instanz nicht, nachdem die Statusinformationen gespeichert wurden.</summary>
        <returns>Der Status eines asynchronen Vorgangs.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode ruft die <xref:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginCreate%2A>-Methode auf, die einen zusätzlichen Parameter benötigt, um zu ermitteln, ob die Instanz gesperrt ist. Diese Methode transferiert `false` als Wert für diesen Parameter an die aufrufende Methode.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginCreate">
      <MemberSignature Language="C#" Value="public abstract IAsyncResult BeginCreate (object instance, TimeSpan timeout, bool unlockInstance, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginCreate(object instance, valuetype System.TimeSpan timeout, bool unlockInstance, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginCreate(System.Object,System.TimeSpan,System.Boolean,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function BeginCreate (instance As Object, timeout As TimeSpan, unlockInstance As Boolean, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract IAsyncResult ^ BeginCreate(System::Object ^ instance, TimeSpan timeout, bool unlockInstance, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="override this.BeginCreate : obj * TimeSpan * bool * AsyncCallback * obj -&gt; IAsyncResult" Usage="lockingPersistenceProvider.BeginCreate (instance, timeout, unlockInstance, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="unlockInstance" Type="System.Boolean" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">Die Instanz, deren Statusinformationen im Beibehaltungsspeicher gespeichert werden.</param>
        <param name="timeout">Das Intervall, in dem der Vorgang abgeschlossen werden muss, ohne dass ein Timeout aufgetreten ist.</param>
        <param name="unlockInstance">
          <see langword="true" />, wenn die Instanz im Beibehaltungsspeicher entsperrt werden muss; andernfalls <see langword="false" />.</param>
        <param name="callback">Der Delegat, der beim Abschließen des Vorgangs die Benachrichtigung empfängt.</param>
        <param name="state">Die dem asynchronen Vorgang zugeordneten Statusinformationen.</param>
        <summary>Startet einen asynchronen Vorgang, um mit den Parametern Instanzstatusinformationen im Beibehaltungsspeicher zu erstellen. Diese Methode entsperrt die Instanz nach dem Speichern des Instanzstatus, wenn der Wert des <paramref name="unlockInstance" />-Parameters <see langword="true" /> ist.</summary>
        <returns>Der Status eines asynchronen Vorgangs.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginLoad">
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Startet einen asynchronen Vorgang, um basierend auf den Statusinformationen im Beibehaltungsspeicher eine Instanz zu laden.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginLoad">
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginLoad (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginLoad(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoad(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BeginLoad (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override IAsyncResult ^ BeginLoad(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="override this.BeginLoad : TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="lockingPersistenceProvider.BeginLoad (timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout">Das Intervall, in dem der Vorgang abgeschlossen werden muss, ohne dass ein Timeout aufgetreten ist.</param>
        <param name="callback">Der Delegat, der beim Abschließen des Vorgangs die Benachrichtigung empfängt.</param>
        <param name="state">Die dem asynchronen Vorgang zugeordneten Statusinformationen.</param>
        <summary>Startet einen asynchronen Vorgang, um mit den Parametern basierend auf den Statusinformationen im Beibehaltungsspeicher eine Instanz zu laden. Diese Methode sperrt die Instanz nicht.</summary>
        <returns>Der Status eines asynchronen Vorgangs.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode ruft <xref:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoad%2A> auf. Dieses Element benötigt einen zusätzlichen Parameter, der angibt, ob die Instanz im Beibehaltungsspeicher gesperrt werden muss. Diese Methode transferiert `false` als Wert für diesen Parameter an die aufrufende Methode.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginLoad">
      <MemberSignature Language="C#" Value="public abstract IAsyncResult BeginLoad (TimeSpan timeout, bool lockInstance, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginLoad(valuetype System.TimeSpan timeout, bool lockInstance, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoad(System.TimeSpan,System.Boolean,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function BeginLoad (timeout As TimeSpan, lockInstance As Boolean, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract IAsyncResult ^ BeginLoad(TimeSpan timeout, bool lockInstance, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="override this.BeginLoad : TimeSpan * bool * AsyncCallback * obj -&gt; IAsyncResult" Usage="lockingPersistenceProvider.BeginLoad (timeout, lockInstance, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="lockInstance" Type="System.Boolean" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout">Ein Intervall, in dem der Vorgang vor dem Ablaufen abgeschlossen werden muss.</param>
        <param name="lockInstance">
          <see langword="true" />, wenn die Instanz gesperrt werden muss; andernfalls <see langword="false" />.</param>
        <param name="callback">Der Delegat, der beim Abschließen des Vorgangs die Benachrichtigung empfängt.</param>
        <param name="state">Die dem asynchronen Vorgang zugeordneten Statusinformationen.</param>
        <summary>Startet einen asynchronen Vorgang, um mit den Parametern basierend auf den Statusinformationen im Beibehaltungsspeicher eine Instanz zu laden. Diese Methode sperrt die Instanz nach dem Laden des Instanzstatus, wenn der Wert des <paramref name="lockInstance" />-Parameters <see langword="true" /> ist.</summary>
        <returns>Der Status eines asynchronen Vorgangs.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginLoadIfChanged">
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Startet einen asynchronen Vorgang zum Laden der Instanzstatusinformationen aus dem Beibehaltungsspeicher, falls die Statusinformationen seit dem letzten Laden der Informationen durch den Aufrufer geändert wurden.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginLoadIfChanged">
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginLoadIfChanged (TimeSpan timeout, object instanceToken, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginLoadIfChanged(valuetype System.TimeSpan timeout, object instanceToken, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoadIfChanged(System.TimeSpan,System.Object,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BeginLoadIfChanged (timeout As TimeSpan, instanceToken As Object, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override IAsyncResult ^ BeginLoadIfChanged(TimeSpan timeout, System::Object ^ instanceToken, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="override this.BeginLoadIfChanged : TimeSpan * obj * AsyncCallback * obj -&gt; IAsyncResult" Usage="lockingPersistenceProvider.BeginLoadIfChanged (timeout, instanceToken, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="instanceToken" Type="System.Object" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout">Der Zeitraum, nach dem der Beibehaltungsanbieter diesen Vorgang abbricht.</param>
        <param name="instanceToken">Das von einer vorherigen <see langword="Create" /> oder <see langword="Update" />-Methode zurückgegebene Token, das den aktuellen Zustand des Aufrufers darstellt.</param>
        <param name="callback">Die Methode, die aufgerufen werden soll, wenn der Vorgang abgeschlossen ist.</param>
        <param name="state">Ein vom Benutzer bereitgestelltes Objekt, das diesen asynchronen Vorgang von anderen Vorgängen unterscheidet.</param>
        <summary>Stellt beim Implementieren in einer abgeleiteten Klasse den Beginn der LoadIfChanged-Phase dar. Die LoadIfChanged-Phase tritt auf, wenn Statusdaten aus dem Beibehaltungsspeicher in den Beibehaltungsanbieter geladen werden und die Statusdaten im Beibehaltungsspeicher geändert wurden. Dieser Methodenaufruf sperrt die Instanz nicht im Beibehaltungsspeicher.</summary>
        <returns>Der Status eines asynchronen Vorgangs.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginLoadIfChanged">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginLoadIfChanged (TimeSpan timeout, object instanceToken, bool lockInstance, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginLoadIfChanged(valuetype System.TimeSpan timeout, object instanceToken, bool lockInstance, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoadIfChanged(System.TimeSpan,System.Object,System.Boolean,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginLoadIfChanged (timeout As TimeSpan, instanceToken As Object, lockInstance As Boolean, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginLoadIfChanged(TimeSpan timeout, System::Object ^ instanceToken, bool lockInstance, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="override this.BeginLoadIfChanged : TimeSpan * obj * bool * AsyncCallback * obj -&gt; IAsyncResult" Usage="lockingPersistenceProvider.BeginLoadIfChanged (timeout, instanceToken, lockInstance, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="instanceToken" Type="System.Object" />
        <Parameter Name="lockInstance" Type="System.Boolean" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout">Der Zeitraum, nach dem der Beibehaltungsanbieter diesen Vorgang abbricht.</param>
        <param name="instanceToken">Das von einer vorherigen <see langword="Create" /> oder <see langword="Update" />-Methode zurückgegebene Token, das den aktuellen Zustand des Aufrufers darstellt.</param>
        <param name="lockInstance">
          <see langword="true" />, wenn die Instanz im Beibehaltungsspeicher gesperrt wird; andernfalls <see langword="false" />.</param>
        <param name="callback">Die Methode, die aufgerufen werden soll, wenn der Vorgang abgeschlossen ist.</param>
        <param name="state">Ein vom Benutzer bereitgestelltes Objekt, das diesen asynchronen Vorgang von anderen Vorgängen unterscheidet.</param>
        <summary>Stellt beim Implementieren in einer abgeleiteten Klasse den Beginn der LoadIfChanged-Phase dar. Die LoadIfChanged-Phase tritt auf, wenn Statusdaten aus dem Beibehaltungsspeicher in den Beibehaltungsanbieter geladen werden und die Statusdaten im Beibehaltungsspeicher geändert wurden. Mit diesem Methodenaufruf kann angegeben werden, ob die Instanz im Beibehaltungsspeicher gesperrt werden soll.</summary>
        <returns>Der Status eines asynchronen Vorgangs.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginUnlock">
      <MemberSignature Language="C#" Value="public abstract IAsyncResult BeginUnlock (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginUnlock(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUnlock(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function BeginUnlock (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract IAsyncResult ^ BeginUnlock(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginUnlock : TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="lockingPersistenceProvider.BeginUnlock (timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout">Ein Intervall, in dem der Vorgang vor dem Ablaufen abgeschlossen werden muss.</param>
        <param name="callback">Der Delegat, der beim Abschließen des Vorgangs die Benachrichtigung empfängt.</param>
        <param name="state">Die dem asynchronen Vorgang zugeordneten Statusinformationen.</param>
        <summary>Startet einen asynchronen Vorgang, um im Beibehaltungsspeicher eine Instanz zu entsperren.</summary>
        <returns>Der Status eines asynchronen Vorgangs.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginUpdate">
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Startet einen asynchronen Vorgang zum Aktualisieren von Instanzstatusinformationen im Beibehaltungsspeicher.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginUpdate">
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginUpdate (object instance, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginUpdate(object instance, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUpdate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BeginUpdate (instance As Object, timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override IAsyncResult ^ BeginUpdate(System::Object ^ instance, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="override this.BeginUpdate : obj * TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="lockingPersistenceProvider.BeginUpdate (instance, timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">Die Instanz, deren Statusinformationen im Beibehaltungsspeicher aktualisiert werden.</param>
        <param name="timeout">Das Intervall, in dem der Vorgang ohne abzulaufen abgeschlossen werden muss.</param>
        <param name="callback">Der Delegat, der beim Abschließen des Vorgangs die Benachrichtigung empfängt.</param>
        <param name="state">Die Statusinformationen über den asynchronen Vorgang.</param>
        <summary>Startet einen asynchronen Vorgang, um mit den übergebenen Parametern Instanzstatusinformationen im Beibehaltungsspeicher zu aktualisieren. Dieser Vorgang entsperrt die Instanz nicht im Instanzspeicher.</summary>
        <returns>Der Status eines asynchronen Vorgangs.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode ruft die <xref:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUpdate%2A> -Methode auf und übergibt eine `false` Wert für die `unlockInstance` Parameter.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginUpdate">
      <MemberSignature Language="C#" Value="public abstract IAsyncResult BeginUpdate (object instance, TimeSpan timeout, bool unlockInstance, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginUpdate(object instance, valuetype System.TimeSpan timeout, bool unlockInstance, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUpdate(System.Object,System.TimeSpan,System.Boolean,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function BeginUpdate (instance As Object, timeout As TimeSpan, unlockInstance As Boolean, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract IAsyncResult ^ BeginUpdate(System::Object ^ instance, TimeSpan timeout, bool unlockInstance, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="override this.BeginUpdate : obj * TimeSpan * bool * AsyncCallback * obj -&gt; IAsyncResult" Usage="lockingPersistenceProvider.BeginUpdate (instance, timeout, unlockInstance, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="unlockInstance" Type="System.Boolean" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">Die Instanz, deren Statusinformationen im Beibehaltungsspeicher aktualisiert werden.</param>
        <param name="timeout">Das Intervall, in dem der Vorgang ohne abzulaufen abgeschlossen werden muss.</param>
        <param name="unlockInstance">
          <see langword="true" />, wenn die Instanz nach dem Aktualisieren des Instanzstatus im Beibehaltungsspeicher gesperrt werden muss; andernfalls <see langword="false" />.</param>
        <param name="callback">Der Delegat, der beim Abschließen des Vorgangs die Benachrichtigung empfängt.</param>
        <param name="state">Die Statusinformationen über den asynchronen Vorgang.</param>
        <summary>Startet einen asynchronen Vorgang, um mit den übergebenen Parametern Instanzstatusinformationen im Beibehaltungsspeicher zu aktualisieren. Dieser Vorgang sperrt die Instanz im Beibehaltungsspeicher, wenn der Wert des <paramref name="unlockInstance" />-Parameters <see langword="true" /> ist.</summary>
        <returns>Der Status eines asynchronen Vorgangs.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Create">
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Erstellt Instanzstatusinformationen im Beibehaltungsspeicher.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public override object Create (object instance, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object Create(object instance, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.LockingPersistenceProvider.Create(System.Object,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Create (instance As Object, timeout As TimeSpan) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ Create(System::Object ^ instance, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="override this.Create : obj * TimeSpan -&gt; obj" Usage="lockingPersistenceProvider.Create (instance, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="instance">Das Instanzobjekt, dessen Statusinformationen im Beibehaltungsspeicher gespeichert werden müssen.</param>
        <param name="timeout">Das Intervall, in dem der Vorgang vor dem Ablaufen abgeschlossen werden muss.</param>
        <summary>Erstellt mit Parametern Instanzstatusinformationen im Beibehaltungsspeicher, die an die Methode übergeben wurden. Diese Methode entsperrt die Instanz nicht im Beibehaltungsspeicher, nachdem der Instanzstatus gespeichert wurde.</summary>
        <returns>Die Statusinformationen.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public abstract object Create (object instance, TimeSpan timeout, bool unlockInstance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Create(object instance, valuetype System.TimeSpan timeout, bool unlockInstance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.LockingPersistenceProvider.Create(System.Object,System.TimeSpan,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Create (instance As Object, timeout As TimeSpan, unlockInstance As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ Create(System::Object ^ instance, TimeSpan timeout, bool unlockInstance);" />
      <MemberSignature Language="F#" Value="override this.Create : obj * TimeSpan * bool -&gt; obj" Usage="lockingPersistenceProvider.Create (instance, timeout, unlockInstance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="unlockInstance" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="instance">Das Instanzobjekt, dessen Statusinformationen im Beibehaltungsspeicher gespeichert werden.</param>
        <param name="timeout">Das Intervall, in dem der Vorgang vor dem Ablaufen abgeschlossen werden muss.</param>
        <param name="unlockInstance">
          <see langword="true" />, wenn die Instanz im Beibehaltungsspeicher entsperrt werden muss; andernfalls <see langword="false" />.</param>
        <summary>Diese Methode erstellt mit Parametern Instanzstatusinformationen im Beibehaltungsspeicher, die an die Methode übergeben wurden. Die Methode entsperrt die Instanz im Instanzspeicher, wenn der Wert des <paramref name="unlockInstance" />-Parameters <see langword="true" /> ist.</summary>
        <returns>Die Statusinformationen.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndUnlock">
      <MemberSignature Language="C#" Value="public abstract void EndUnlock (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndUnlock(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.LockingPersistenceProvider.EndUnlock(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub EndUnlock (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void EndUnlock(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndUnlock : IAsyncResult -&gt; unit" Usage="lockingPersistenceProvider.EndUnlock result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">Das vom Entsperrvorgang zurückgegebene Ergebnis.</param>
        <summary>Beendet den asynchronen Vorgang, um im Beibehaltungsspeicher eine Instanz zu entsperren.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Load">
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Lädt Instanzstatusinformationen aus dem Instanzspeicher.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public override object Load (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object Load(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.LockingPersistenceProvider.Load(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Load (timeout As TimeSpan) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ Load(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="override this.Load : TimeSpan -&gt; obj" Usage="lockingPersistenceProvider.Load timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout">Der Zeitraum, nach dem der Persistenz-Provider diesen Versuch abbricht.</param>
        <summary>Lädt Dienststatusinformationen aus dem Beibehaltungsspeicher, ohne die Instanz zu sperren.</summary>
        <returns>Die Dienststatusinformationen.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode ruft die <xref:System.ServiceModel.Persistence.LockingPersistenceProvider.Load%2A> Methode mit `lockInstance` Parametersatz auf `false`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public abstract object Load (TimeSpan timeout, bool lockInstance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Load(valuetype System.TimeSpan timeout, bool lockInstance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.LockingPersistenceProvider.Load(System.TimeSpan,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Load (timeout As TimeSpan, lockInstance As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ Load(TimeSpan timeout, bool lockInstance);" />
      <MemberSignature Language="F#" Value="override this.Load : TimeSpan * bool -&gt; obj" Usage="lockingPersistenceProvider.Load (timeout, lockInstance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="lockInstance" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="timeout">Der Zeitraum, nach dem der Beibehaltungsanbieter diesen Vorgang abbricht.</param>
        <param name="lockInstance">
          <see langword="true" />, wenn die Instanz gesperrt werden soll; andernfalls <see langword="false" />.</param>
        <summary>Lädt Statusinformationen aus dem Beibehaltungsspeicher, nachdem die Instanz gesperrt wurde.</summary>
        <returns>Die Statusinformationen.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="LoadIfChanged">
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Lädt die Instanzstatusinformationen aus dem Beibehaltungsspeicher, wenn die Statusinformationen geändert wurden, seitdem die Informationen zum letzten Mal vom Aufrufer geladen wurden.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="LoadIfChanged">
      <MemberSignature Language="C#" Value="public override bool LoadIfChanged (TimeSpan timeout, object instanceToken, out object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool LoadIfChanged(valuetype System.TimeSpan timeout, object instanceToken, [out] object&amp; instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.LockingPersistenceProvider.LoadIfChanged(System.TimeSpan,System.Object,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function LoadIfChanged (timeout As TimeSpan, instanceToken As Object, ByRef instance As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool LoadIfChanged(TimeSpan timeout, System::Object ^ instanceToken, [Runtime::InteropServices::Out] System::Object ^ % instance);" />
      <MemberSignature Language="F#" Value="override this.LoadIfChanged : TimeSpan * obj *  -&gt; bool" Usage="lockingPersistenceProvider.LoadIfChanged (timeout, instanceToken, instance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="instanceToken" Type="System.Object" />
        <Parameter Name="instance" Type="System.Object&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="timeout">Der Zeitraum, nach dem der Beibehaltungsanbieter diesen Vorgang abbricht.</param>
        <param name="instanceToken">Das von den vorherigen <see langword="Create" /> oder <see langword="Update" />-Methodenaufrufen zurückgegebene Token, das den aktuellen Status des Aufrufers darstellt.</param>
        <param name="instance">Die tatsächlichen Instanzstatusinformationen.</param>
        <summary>Lädt die Instanzstatusinformationen aus dem Beibehaltungsspeicher, wenn die Statusinformationen geändert wurden, seitdem die Informationen zum letzten Mal vom Aufrufer geladen wurden. Diese Methode sperrt die Instanz nicht im Beibehaltungsspeicher.</summary>
        <returns>
          <see langword="true" />, wenn die Instanz am Ende dieses Vorgangs im Beibehaltungsspeicher gesperrt werden soll; andernfalls <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadIfChanged">
      <MemberSignature Language="C#" Value="public virtual bool LoadIfChanged (TimeSpan timeout, object instanceToken, bool lockInstance, out object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool LoadIfChanged(valuetype System.TimeSpan timeout, object instanceToken, bool lockInstance, [out] object&amp; instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.LockingPersistenceProvider.LoadIfChanged(System.TimeSpan,System.Object,System.Boolean,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LoadIfChanged (timeout As TimeSpan, instanceToken As Object, lockInstance As Boolean, ByRef instance As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool LoadIfChanged(TimeSpan timeout, System::Object ^ instanceToken, bool lockInstance, [Runtime::InteropServices::Out] System::Object ^ % instance);" />
      <MemberSignature Language="F#" Value="override this.LoadIfChanged : TimeSpan * obj * bool *  -&gt; bool" Usage="lockingPersistenceProvider.LoadIfChanged (timeout, instanceToken, lockInstance, instance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="instanceToken" Type="System.Object" />
        <Parameter Name="lockInstance" Type="System.Boolean" />
        <Parameter Name="instance" Type="System.Object&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="timeout">Der Zeitraum, nach dem der Beibehaltungsanbieter diesen Vorgang abbricht.</param>
        <param name="instanceToken">Das vom vorherigen Create- oder Update-Methodenaufruf zurückgegebene Token, das den aktuellen Status des Aufrufers darstellt.</param>
        <param name="lockInstance">
          <see langword="true" />, wenn die Instanz am Ende dieses Vorgangs im Beibehaltungsspeicher gesperrt werden soll; andernfalls <see langword="false" />.</param>
        <param name="instance">Die Instanzstatusinformationen.</param>
        <summary>Lädt die Instanzstatusinformationen aus dem Beibehaltungsspeicher, wenn die Statusinformationen geändert wurden, seitdem die Informationen zum letzten Mal vom Aufrufer geladen wurden. Mit dieser Methode kann der Aufrufer auch angeben, ob die Instanz im Beibehaltungsspeicher gesperrt werden soll.</summary>
        <returns>
          <see langword="true" />, wenn die Instanz am Ende dieses Vorgangs im Beibehaltungsspeicher gesperrt werden soll; andernfalls <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Unlock">
      <MemberSignature Language="C#" Value="public abstract void Unlock (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Unlock(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.LockingPersistenceProvider.Unlock(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Unlock (timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Unlock(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="abstract member Unlock : TimeSpan -&gt; unit" Usage="lockingPersistenceProvider.Unlock timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout">Der Zeitraum, nach dem der Beibehaltungsanbieter den Vorgang abbricht.</param>
        <summary>Entsperrt die Instanz, deren ID beim Erstellen des <see cref="T:System.ServiceModel.Persistence.LockingPersistenceProvider" />-Objekts im Beibehaltungsspeicher angegeben wird.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Update">
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Aktualisiert die Instanzstatusinformationen im Beibehaltungsspeicher.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public override object Update (object instance, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object Update(object instance, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.LockingPersistenceProvider.Update(System.Object,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Update (instance As Object, timeout As TimeSpan) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ Update(System::Object ^ instance, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="override this.Update : obj * TimeSpan -&gt; obj" Usage="lockingPersistenceProvider.Update (instance, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="instance">Die Instanzstatusinformationen.</param>
        <param name="timeout">Der Zeitraum, nach dem der Beibehaltungsanbieter den Vorgang abbricht.</param>
        <summary>Aktualisiert beim Implementieren in einer abgeleiteten Klasse die Instanzstatusinformationen im Beibehaltungsspeicher. Diese Methode entsperrt die Instanz nicht im Beibehaltungsspeicher, nachdem die Instanzstatusinformationen aktualisiert wurden.</summary>
        <returns>Die Instanzstatusinformationen.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public abstract object Update (object instance, TimeSpan timeout, bool unlockInstance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Update(object instance, valuetype System.TimeSpan timeout, bool unlockInstance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.LockingPersistenceProvider.Update(System.Object,System.TimeSpan,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Update (instance As Object, timeout As TimeSpan, unlockInstance As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ Update(System::Object ^ instance, TimeSpan timeout, bool unlockInstance);" />
      <MemberSignature Language="F#" Value="override this.Update : obj * TimeSpan * bool -&gt; obj" Usage="lockingPersistenceProvider.Update (instance, timeout, unlockInstance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="unlockInstance" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="instance">Die Instanzstatusinformationen.</param>
        <param name="timeout">Der Zeitraum, nach dem der Beibehaltungsanbieter den Vorgang abbricht.</param>
        <param name="unlockInstance">
          <see langword="true" />, wenn die Instanz entsperrt wird, nachdem die Instanzstatusinformationen aktualisiert wurden; andernfalls <see langword="false" />.</param>
        <summary>Aktualisiert beim Implementieren in einer abgeleiteten Klasse die Instanzstatusinformationen im Beibehaltungsspeicher. Diese Methode entsperrt die Instanz nicht im Beibehaltungsspeicher, nachdem die Instanzstatusinformationen aktualisiert wurden.</summary>
        <returns>Die Instanzstatusinformationen.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>