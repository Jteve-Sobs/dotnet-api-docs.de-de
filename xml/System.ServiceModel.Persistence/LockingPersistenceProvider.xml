<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="LockingPersistenceProvider.xml" source-language="en-US" target-language="de-DE">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5f247b1033bbcd6013576f6a0b93353c70f425be2.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f247b1033bbcd6013576f6a0b93353c70f425be2</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Persistence.LockingPersistenceProvider">
          <source>The abstract base class from which all durable service persistence providers that implement locking are derived.</source>
          <target state="translated">Die abstrakte Basisklasse, von der alle permanenten Dienstpersistenz-Provider, die das Sperren implementieren, abgeleitetet werden.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Persistence.LockingPersistenceProvider">
          <source>In addition to persistence, the <ph id="ph1">&lt;xref:System.ServiceModel.Persistence.LockingPersistenceProvider&gt;</ph> class implements locking of service state data records.</source>
          <target state="translated">Zusätzlich zur Persistenz implementiert die <ph id="ph1">&lt;xref:System.ServiceModel.Persistence.LockingPersistenceProvider&gt;</ph>-Klasse das Sperren von Dienstzustandsdatensätzen.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Persistence.LockingPersistenceProvider">
          <source>Methods that interact with persisted data (such as the <ph id="ph1">`Load`</ph> method) have an optional parameter (<ph id="ph2">`lockInstance`</ph>) that defines whether locks on the data in question are released or maintained.</source>
          <target state="translated">Methoden, die Interaktion mit persistente Daten (z. B. die <ph id="ph1">`Load`</ph> Methode) verfügen über einen optionalen Parameter (<ph id="ph2">`lockInstance`</ph>), der definiert, ob Sperren der fraglichen Daten freigegeben oder beibehalten werden.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.LockingPersistenceProvider.#ctor(System.Guid)">
          <source>The unique identifier to be associated with this persistence provider instance.</source>
          <target state="translated">Der eindeutige Bezeichner, der dieser Persistenz-Providerinstanz zugeordnet werden soll.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.LockingPersistenceProvider.#ctor(System.Guid)">
          <source>When implemented in a derived class, creates a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Persistence.LockingPersistenceProvider" /&gt;</ph> class, configured with the specified identity value.</source>
          <target state="translated">Erstellt beim Implementieren in einer abgeleiteten Klasse eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.ServiceModel.Persistence.LockingPersistenceProvider" /&gt;</ph>-Klasse, konfiguriert mit dem angegebenen Identitätswert.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Persistence.LockingPersistenceProvider">
          <source>Begins an asynchronous operation to create instance state information in the persistence store.</source>
          <target state="translated">Startet einen asynchronen Vorgang zum Erstellen von Instanzstatusinformationen im Beibehaltungsspeicher.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginCreate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The instance whose state information is saved into the persistence store.</source>
          <target state="translated">Die Instanz, deren Statusinformationen im Beibehaltungsspeicher gespeichert werden.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginCreate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The interval in which the operation must be completed without timing out.</source>
          <target state="translated">Das Intervall, in dem der Vorgang abgeschlossen werden muss, ohne dass ein Timeout aufgetreten ist.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginCreate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The delegate that receives the notification when the operation completes.</source>
          <target state="translated">Der Delegat, der beim Abschließen des Vorgangs die Benachrichtigung empfängt.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginCreate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The state information associated with the asynchronous operation.</source>
          <target state="translated">Die dem asynchronen Vorgang zugeordneten Statusinformationen.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginCreate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>Begins an asynchronous operation to create instance state information in the persistence store using the parameters.</source>
          <target state="translated">Startet einen asynchronen Vorgang, um mit den Parametern Instanzstatusinformationen im Beibehaltungsspeicher zu erstellen.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginCreate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>This method does not unlock the instance after saving the state information.</source>
          <target state="translated">Diese Methode entsperrt die Instanz nicht, nachdem die Statusinformationen gespeichert wurden.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginCreate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The status of an asynchronous operation.</source>
          <target state="translated">Der Status eines asynchronen Vorgangs.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginCreate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>This method calls into the <ph id="ph1">&lt;xref:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginCreate%2A&gt;</ph> method, which takes an additional parameter to determine whether the instance is unlocked.</source>
          <target state="translated">Diese Methode ruft die <ph id="ph1">&lt;xref:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginCreate%2A&gt;</ph>-Methode auf, die einen zusätzlichen Parameter benötigt, um zu ermitteln, ob die Instanz gesperrt ist.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginCreate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>This method passes <ph id="ph1">`false`</ph> as a value for this parameter to the calling method.</source>
          <target state="translated">Diese Methode transferiert <ph id="ph1">`false`</ph> als Wert für diesen Parameter an die aufrufende Methode.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginCreate(System.Object,System.TimeSpan,System.Boolean,System.AsyncCallback,System.Object)">
          <source>The instance whose state information is saved into the persistence store.</source>
          <target state="translated">Die Instanz, deren Statusinformationen im Beibehaltungsspeicher gespeichert werden.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginCreate(System.Object,System.TimeSpan,System.Boolean,System.AsyncCallback,System.Object)">
          <source>The interval in which the operation must be completed without timing out.</source>
          <target state="translated">Das Intervall, in dem der Vorgang abgeschlossen werden muss, ohne dass ein Timeout aufgetreten ist.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginCreate(System.Object,System.TimeSpan,System.Boolean,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the instance must be unlocked in the persistence store; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn die Instanz im Beibehaltungsspeicher entsperrt werden muss; andernfalls <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginCreate(System.Object,System.TimeSpan,System.Boolean,System.AsyncCallback,System.Object)">
          <source>The delegate that receives the notification when the operation completes.</source>
          <target state="translated">Der Delegat, der beim Abschließen des Vorgangs die Benachrichtigung empfängt.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginCreate(System.Object,System.TimeSpan,System.Boolean,System.AsyncCallback,System.Object)">
          <source>The state information associated with the asynchronous operation.</source>
          <target state="translated">Die dem asynchronen Vorgang zugeordneten Statusinformationen.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginCreate(System.Object,System.TimeSpan,System.Boolean,System.AsyncCallback,System.Object)">
          <source>Begins an asynchronous operation to create instance state information in the persistence store using the parameters.</source>
          <target state="translated">Startet einen asynchronen Vorgang, um mit den Parametern Instanzstatusinformationen im Beibehaltungsspeicher zu erstellen.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginCreate(System.Object,System.TimeSpan,System.Boolean,System.AsyncCallback,System.Object)">
          <source>This method unlocks the instance after saving the instance state if the value of the <ph id="ph1">&lt;paramref name="unlockInstance" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Diese Methode entsperrt die Instanz nach dem Speichern des Instanzstatus, wenn der Wert des <ph id="ph1">&lt;paramref name="unlockInstance" /&gt;</ph>-Parameters <ph id="ph2">&lt;see langword="true" /&gt;</ph> ist.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginCreate(System.Object,System.TimeSpan,System.Boolean,System.AsyncCallback,System.Object)">
          <source>The status of an asynchronous operation.</source>
          <target state="translated">Der Status eines asynchronen Vorgangs.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Persistence.LockingPersistenceProvider">
          <source>Begins an asynchronous operation to load an instance based on state information in the persistence store.</source>
          <target state="translated">Startet einen asynchronen Vorgang, um basierend auf den Statusinformationen im Beibehaltungsspeicher eine Instanz zu laden.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoad(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The interval in which the operation must be completed without timing out.</source>
          <target state="translated">Das Intervall, in dem der Vorgang abgeschlossen werden muss, ohne dass ein Timeout aufgetreten ist.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoad(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The delegate that receives the notification when the operation completes.</source>
          <target state="translated">Der Delegat, der beim Abschließen des Vorgangs die Benachrichtigung empfängt.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoad(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The state information associated with the asynchronous operation.</source>
          <target state="translated">Die dem asynchronen Vorgang zugeordneten Statusinformationen.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoad(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>Begins an asynchronous operation to load an instance based on state information in the persistence store using the parameters.</source>
          <target state="translated">Startet einen asynchronen Vorgang, um mit den Parametern basierend auf den Statusinformationen im Beibehaltungsspeicher eine Instanz zu laden.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoad(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>This method does not lock the instance.</source>
          <target state="translated">Diese Methode sperrt die Instanz nicht.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoad(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The status of an asynchronous operation.</source>
          <target state="translated">Der Status eines asynchronen Vorgangs.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoad(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>This method calls into the <ph id="ph1">&lt;xref:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoad%2A&gt;</ph>, which takes an additional parameter that specifies whether the instance must be locked in the persistence store.</source>
          <target state="translated">Diese Methode ruft <ph id="ph1">&lt;xref:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoad%2A&gt;</ph> auf. Dieses Element benötigt einen zusätzlichen Parameter, der angibt, ob die Instanz im Beibehaltungsspeicher gesperrt werden muss.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoad(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>This method passes <ph id="ph1">`false`</ph> as a value for this parameter to the calling method.</source>
          <target state="translated">Diese Methode transferiert <ph id="ph1">`false`</ph> als Wert für diesen Parameter an die aufrufende Methode.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoad(System.TimeSpan,System.Boolean,System.AsyncCallback,System.Object)">
          <source>An interval in which the operation must be completed before timing out.</source>
          <target state="translated">Ein Intervall, in dem der Vorgang vor dem Ablaufen abgeschlossen werden muss.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoad(System.TimeSpan,System.Boolean,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the instance must be locked; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn die Instanz gesperrt werden muss; andernfalls <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoad(System.TimeSpan,System.Boolean,System.AsyncCallback,System.Object)">
          <source>The delegate that receives the notification when the operation completes.</source>
          <target state="translated">Der Delegat, der beim Abschließen des Vorgangs die Benachrichtigung empfängt.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoad(System.TimeSpan,System.Boolean,System.AsyncCallback,System.Object)">
          <source>The state information associated with the asynchronous operation.</source>
          <target state="translated">Die dem asynchronen Vorgang zugeordneten Statusinformationen.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoad(System.TimeSpan,System.Boolean,System.AsyncCallback,System.Object)">
          <source>Begins an asynchronous operation to load an instance based on state information in the persistence store using the parameters.</source>
          <target state="translated">Startet einen asynchronen Vorgang, um mit den Parametern basierend auf den Statusinformationen im Beibehaltungsspeicher eine Instanz zu laden.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoad(System.TimeSpan,System.Boolean,System.AsyncCallback,System.Object)">
          <source>This method locks the instance after loading the instance state if the value of the <ph id="ph1">&lt;paramref name="lockInstance" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Diese Methode sperrt die Instanz nach dem Laden des Instanzstatus, wenn der Wert des <ph id="ph1">&lt;paramref name="lockInstance" /&gt;</ph>-Parameters <ph id="ph2">&lt;see langword="true" /&gt;</ph> ist.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoad(System.TimeSpan,System.Boolean,System.AsyncCallback,System.Object)">
          <source>The status of an asynchronous operation.</source>
          <target state="translated">Der Status eines asynchronen Vorgangs.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Persistence.LockingPersistenceProvider">
          <source>Begins an asynchronous operation to load the instance state information from the persistence store if the state information has been changed since the last time the information was loaded by the caller.</source>
          <target state="translated">Startet einen asynchronen Vorgang zum Laden der Instanzstatusinformationen aus dem Beibehaltungsspeicher, falls die Statusinformationen seit dem letzten Laden der Informationen durch den Aufrufer geändert wurden.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoadIfChanged(System.TimeSpan,System.Object,System.AsyncCallback,System.Object)">
          <source>The time period after which the persistence provider aborts this operation.</source>
          <target state="translated">Der Zeitraum, nach dem der Beibehaltungsanbieter diesen Vorgang abbricht.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoadIfChanged(System.TimeSpan,System.Object,System.AsyncCallback,System.Object)">
          <source>The token returned by a previous <ph id="ph1">&lt;see langword="Create" /&gt;</ph> or <ph id="ph2">&lt;see langword="Update" /&gt;</ph> method that represents the current state held by the caller.</source>
          <target state="translated">Das von einer vorherigen <ph id="ph1">&lt;see langword="Create" /&gt;</ph> oder <ph id="ph2">&lt;see langword="Update" /&gt;</ph>-Methode zurückgegebene Token, das den aktuellen Zustand des Aufrufers darstellt.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoadIfChanged(System.TimeSpan,System.Object,System.AsyncCallback,System.Object)">
          <source>The method to be called when the operation is completed.</source>
          <target state="translated">Die Methode, die aufgerufen werden soll, wenn der Vorgang abgeschlossen ist.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoadIfChanged(System.TimeSpan,System.Object,System.AsyncCallback,System.Object)">
          <source>A user-provided object that distinguishes this particular asynchronous operation from other operations.</source>
          <target state="translated">Ein vom Benutzer bereitgestelltes Objekt, das diesen asynchronen Vorgang von anderen Vorgängen unterscheidet.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoadIfChanged(System.TimeSpan,System.Object,System.AsyncCallback,System.Object)">
          <source>When implemented in a derived class, represents the beginning of the LoadIfChanged phase.</source>
          <target state="translated">Stellt beim Implementieren in einer abgeleiteten Klasse den Beginn der LoadIfChanged-Phase dar.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoadIfChanged(System.TimeSpan,System.Object,System.AsyncCallback,System.Object)">
          <source>The LoadIfChanged phase occurs when state data is loaded into the persistence provider from the persistence store and the state data in the persistence store has been changed.</source>
          <target state="translated">Die LoadIfChanged-Phase tritt auf, wenn Statusdaten aus dem Beibehaltungsspeicher in den Beibehaltungsanbieter geladen werden und die Statusdaten im Beibehaltungsspeicher geändert wurden.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoadIfChanged(System.TimeSpan,System.Object,System.AsyncCallback,System.Object)">
          <source>This method call does not lock the instance in the persistence store.</source>
          <target state="translated">Dieser Methodenaufruf sperrt die Instanz nicht im Beibehaltungsspeicher.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoadIfChanged(System.TimeSpan,System.Object,System.AsyncCallback,System.Object)">
          <source>The status of an asynchronous operation.</source>
          <target state="translated">Der Status eines asynchronen Vorgangs.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoadIfChanged(System.TimeSpan,System.Object,System.Boolean,System.AsyncCallback,System.Object)">
          <source>The time period after which the persistence provider aborts this operation.</source>
          <target state="translated">Der Zeitraum, nach dem der Beibehaltungsanbieter diesen Vorgang abbricht.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoadIfChanged(System.TimeSpan,System.Object,System.Boolean,System.AsyncCallback,System.Object)">
          <source>The token returned by a previous <ph id="ph1">&lt;see langword="Create" /&gt;</ph> or <ph id="ph2">&lt;see langword="Update" /&gt;</ph> method that represents the current state held by the caller.</source>
          <target state="translated">Das von einer vorherigen <ph id="ph1">&lt;see langword="Create" /&gt;</ph> oder <ph id="ph2">&lt;see langword="Update" /&gt;</ph>-Methode zurückgegebene Token, das den aktuellen Zustand des Aufrufers darstellt.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoadIfChanged(System.TimeSpan,System.Object,System.Boolean,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the instance is locked in the persistence store; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn die Instanz im Beibehaltungsspeicher gesperrt wird; andernfalls <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoadIfChanged(System.TimeSpan,System.Object,System.Boolean,System.AsyncCallback,System.Object)">
          <source>The method to be called when the operation is completed.</source>
          <target state="translated">Die Methode, die aufgerufen werden soll, wenn der Vorgang abgeschlossen ist.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoadIfChanged(System.TimeSpan,System.Object,System.Boolean,System.AsyncCallback,System.Object)">
          <source>A user-provided object that distinguishes this particular asynchronous operation from other operations.</source>
          <target state="translated">Ein vom Benutzer bereitgestelltes Objekt, das diesen asynchronen Vorgang von anderen Vorgängen unterscheidet.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoadIfChanged(System.TimeSpan,System.Object,System.Boolean,System.AsyncCallback,System.Object)">
          <source>When implemented in a derived class, represents the beginning of the LoadIfChanged phase.</source>
          <target state="translated">Stellt beim Implementieren in einer abgeleiteten Klasse den Beginn der LoadIfChanged-Phase dar.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoadIfChanged(System.TimeSpan,System.Object,System.Boolean,System.AsyncCallback,System.Object)">
          <source>The LoadIfChanged phase occurs when state data is loaded into the persistence provider from the persistence store and the state data in the persistence store has been changed.</source>
          <target state="translated">Die LoadIfChanged-Phase tritt auf, wenn Statusdaten aus dem Beibehaltungsspeicher in den Beibehaltungsanbieter geladen werden und die Statusdaten im Beibehaltungsspeicher geändert wurden.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoadIfChanged(System.TimeSpan,System.Object,System.Boolean,System.AsyncCallback,System.Object)">
          <source>This method call lets you specify whether you want to lock the instance in the persistence store.</source>
          <target state="translated">Mit diesem Methodenaufruf kann angegeben werden, ob die Instanz im Beibehaltungsspeicher gesperrt werden soll.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoadIfChanged(System.TimeSpan,System.Object,System.Boolean,System.AsyncCallback,System.Object)">
          <source>The status of an asynchronous operation.</source>
          <target state="translated">Der Status eines asynchronen Vorgangs.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUnlock(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>An interval in which the operation must be completed before timing out.</source>
          <target state="translated">Ein Intervall, in dem der Vorgang vor dem Ablaufen abgeschlossen werden muss.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUnlock(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The delegate that receives the notification when the operation completes.</source>
          <target state="translated">Der Delegat, der beim Abschließen des Vorgangs die Benachrichtigung empfängt.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUnlock(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The state information associated with the asynchronous operation.</source>
          <target state="translated">Die dem asynchronen Vorgang zugeordneten Statusinformationen.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUnlock(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>Begins an asynchronous operation to unlock an instance in the persistence store.</source>
          <target state="translated">Startet einen asynchronen Vorgang, um im Beibehaltungsspeicher eine Instanz zu entsperren.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUnlock(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The status of an asynchronous operation.</source>
          <target state="translated">Der Status eines asynchronen Vorgangs.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Persistence.LockingPersistenceProvider">
          <source>Begins an asynchronous operation to update instance state information in the persistence store.</source>
          <target state="translated">Startet einen asynchronen Vorgang zum Aktualisieren von Instanzstatusinformationen im Beibehaltungsspeicher.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUpdate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The instance whose state information is being updated in the persistence store.</source>
          <target state="translated">Die Instanz, deren Statusinformationen im Beibehaltungsspeicher aktualisiert werden.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUpdate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The interval in which the operation must complete without timing out.</source>
          <target state="translated">Das Intervall, in dem der Vorgang ohne abzulaufen abgeschlossen werden muss.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUpdate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The delegate that receives the notification when the operation is completed.</source>
          <target state="translated">Der Delegat, der beim Abschließen des Vorgangs die Benachrichtigung empfängt.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUpdate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The state information about the asynchronous operation.</source>
          <target state="translated">Die Statusinformationen über den asynchronen Vorgang.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUpdate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>Begins an asynchronous operation to update instance state information in the persistence store using the parameters passed.</source>
          <target state="translated">Startet einen asynchronen Vorgang, um mit den übergebenen Parametern Instanzstatusinformationen im Beibehaltungsspeicher zu aktualisieren.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUpdate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>This operation does not unlock the instance in the instance store.</source>
          <target state="translated">Dieser Vorgang entsperrt die Instanz nicht im Instanzspeicher.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUpdate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The status of an asynchronous operation.</source>
          <target state="translated">Der Status eines asynchronen Vorgangs.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUpdate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>This method calls into the <ph id="ph1">&lt;xref:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUpdate%2A&gt;</ph> method and passes a <ph id="ph2">`false`</ph> value for the <ph id="ph3">`unlockInstance`</ph> parameter.</source>
          <target state="translated">Diese Methode ruft die <ph id="ph1">&lt;xref:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUpdate%2A&gt;</ph> -Methode auf und übergibt eine <ph id="ph2">`false`</ph> Wert für die <ph id="ph3">`unlockInstance`</ph> Parameter.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUpdate(System.Object,System.TimeSpan,System.Boolean,System.AsyncCallback,System.Object)">
          <source>The instance whose state information is being updated in the persistence store.</source>
          <target state="translated">Die Instanz, deren Statusinformationen im Beibehaltungsspeicher aktualisiert werden.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUpdate(System.Object,System.TimeSpan,System.Boolean,System.AsyncCallback,System.Object)">
          <source>The interval in which the operation must complete without timing out.</source>
          <target state="translated">Das Intervall, in dem der Vorgang ohne abzulaufen abgeschlossen werden muss.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUpdate(System.Object,System.TimeSpan,System.Boolean,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the instance must be locked after the instance state is updated in the persistence store; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn die Instanz nach dem Aktualisieren des Instanzstatus im Beibehaltungsspeicher gesperrt werden muss; andernfalls <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUpdate(System.Object,System.TimeSpan,System.Boolean,System.AsyncCallback,System.Object)">
          <source>The delegate that receives the notification when the operation completes.</source>
          <target state="translated">Der Delegat, der beim Abschließen des Vorgangs die Benachrichtigung empfängt.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUpdate(System.Object,System.TimeSpan,System.Boolean,System.AsyncCallback,System.Object)">
          <source>The state information about the asynchronous operation.</source>
          <target state="translated">Die Statusinformationen über den asynchronen Vorgang.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUpdate(System.Object,System.TimeSpan,System.Boolean,System.AsyncCallback,System.Object)">
          <source>Begins an asynchronous operation to update instance state information in the persistence store using the parameters passed.</source>
          <target state="translated">Startet einen asynchronen Vorgang, um mit den übergebenen Parametern Instanzstatusinformationen im Beibehaltungsspeicher zu aktualisieren.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUpdate(System.Object,System.TimeSpan,System.Boolean,System.AsyncCallback,System.Object)">
          <source>This operation locks the instance in the persistence store if the value of the <ph id="ph1">&lt;paramref name="unlockInstance" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Dieser Vorgang sperrt die Instanz im Beibehaltungsspeicher, wenn der Wert des <ph id="ph1">&lt;paramref name="unlockInstance" /&gt;</ph>-Parameters <ph id="ph2">&lt;see langword="true" /&gt;</ph> ist.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUpdate(System.Object,System.TimeSpan,System.Boolean,System.AsyncCallback,System.Object)">
          <source>The status of an asynchronous operation.</source>
          <target state="translated">Der Status eines asynchronen Vorgangs.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Persistence.LockingPersistenceProvider">
          <source>Creates instance state information in the persistence store.</source>
          <target state="translated">Erstellt Instanzstatusinformationen im Beibehaltungsspeicher.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.LockingPersistenceProvider.Create(System.Object,System.TimeSpan)">
          <source>The instance object whose state information must be saved into the persistence store.</source>
          <target state="translated">Das Instanzobjekt, dessen Statusinformationen im Beibehaltungsspeicher gespeichert werden müssen.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.LockingPersistenceProvider.Create(System.Object,System.TimeSpan)">
          <source>The interval in which the operation must complete before timing out.</source>
          <target state="translated">Das Intervall, in dem der Vorgang vor dem Ablaufen abgeschlossen werden muss.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.LockingPersistenceProvider.Create(System.Object,System.TimeSpan)">
          <source>Creates instance state information in the persistence store using parameters passed into the method.</source>
          <target state="translated">Erstellt mit Parametern Instanzstatusinformationen im Beibehaltungsspeicher, die an die Methode übergeben wurden.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.LockingPersistenceProvider.Create(System.Object,System.TimeSpan)">
          <source>This method does not unlock the instance in the persistence store after saving the instance state.</source>
          <target state="translated">Diese Methode entsperrt die Instanz nicht im Beibehaltungsspeicher, nachdem der Instanzstatus gespeichert wurde.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.LockingPersistenceProvider.Create(System.Object,System.TimeSpan)">
          <source>The state information.</source>
          <target state="translated">Die Statusinformationen.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.LockingPersistenceProvider.Create(System.Object,System.TimeSpan,System.Boolean)">
          <source>The instance object whose state information is saved into the persistence store.</source>
          <target state="translated">Das Instanzobjekt, dessen Statusinformationen im Beibehaltungsspeicher gespeichert werden.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.LockingPersistenceProvider.Create(System.Object,System.TimeSpan,System.Boolean)">
          <source>The interval within which the operation must complete before timing out.</source>
          <target state="translated">Das Intervall, in dem der Vorgang vor dem Ablaufen abgeschlossen werden muss.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.LockingPersistenceProvider.Create(System.Object,System.TimeSpan,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the instance must be unlocked in the persistence store; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn die Instanz im Beibehaltungsspeicher entsperrt werden muss; andernfalls <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.LockingPersistenceProvider.Create(System.Object,System.TimeSpan,System.Boolean)">
          <source>This method creates instance state information in the persistence store using parameters passed into the method.</source>
          <target state="translated">Diese Methode erstellt mit Parametern Instanzstatusinformationen im Beibehaltungsspeicher, die an die Methode übergeben wurden.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.LockingPersistenceProvider.Create(System.Object,System.TimeSpan,System.Boolean)">
          <source>The method unlocks the instance in the instance store if the value of the <ph id="ph1">&lt;paramref name="unlockInstance" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Die Methode entsperrt die Instanz im Instanzspeicher, wenn der Wert des <ph id="ph1">&lt;paramref name="unlockInstance" /&gt;</ph>-Parameters <ph id="ph2">&lt;see langword="true" /&gt;</ph> ist.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.LockingPersistenceProvider.Create(System.Object,System.TimeSpan,System.Boolean)">
          <source>The state information.</source>
          <target state="translated">Die Statusinformationen.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.LockingPersistenceProvider.EndUnlock(System.IAsyncResult)">
          <source>The result returned by the unlock operation.</source>
          <target state="translated">Das vom Entsperrvorgang zurückgegebene Ergebnis.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.LockingPersistenceProvider.EndUnlock(System.IAsyncResult)">
          <source>Ends the asynchronous operation to unlock an instance in the persistence store.</source>
          <target state="translated">Beendet den asynchronen Vorgang, um im Beibehaltungsspeicher eine Instanz zu entsperren.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Persistence.LockingPersistenceProvider">
          <source>Loads instance state information from the instance store.</source>
          <target state="translated">Lädt Instanzstatusinformationen aus dem Instanzspeicher.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.LockingPersistenceProvider.Load(System.TimeSpan)">
          <source>The time period after which the persistence provider aborts this attempt.</source>
          <target state="translated">Der Zeitraum, nach dem der Persistenz-Provider diesen Versuch abbricht.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.LockingPersistenceProvider.Load(System.TimeSpan)">
          <source>Loads service state information from the persistence store without locking the instance.</source>
          <target state="translated">Lädt Dienststatusinformationen aus dem Beibehaltungsspeicher, ohne die Instanz zu sperren.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.LockingPersistenceProvider.Load(System.TimeSpan)">
          <source>The service state information.</source>
          <target state="translated">Die Dienststatusinformationen.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Persistence.LockingPersistenceProvider.Load(System.TimeSpan)">
          <source>This method invokes the <ph id="ph1">&lt;xref:System.ServiceModel.Persistence.LockingPersistenceProvider.Load%2A&gt;</ph> method with <ph id="ph2">`lockInstance`</ph> parameter set to <ph id="ph3">`false`</ph>.</source>
          <target state="translated">Diese Methode ruft die <ph id="ph1">&lt;xref:System.ServiceModel.Persistence.LockingPersistenceProvider.Load%2A&gt;</ph> Methode mit <ph id="ph2">`lockInstance`</ph> Parametersatz auf <ph id="ph3">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.LockingPersistenceProvider.Load(System.TimeSpan,System.Boolean)">
          <source>The period after which the persistence provider aborts this operation.</source>
          <target state="translated">Der Zeitraum, nach dem der Beibehaltungsanbieter diesen Vorgang abbricht.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.LockingPersistenceProvider.Load(System.TimeSpan,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the instance should be locked; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn die Instanz gesperrt werden soll; andernfalls <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.LockingPersistenceProvider.Load(System.TimeSpan,System.Boolean)">
          <source>Loads state information from the persistence store after locking the instance.</source>
          <target state="translated">Lädt Statusinformationen aus dem Beibehaltungsspeicher, nachdem die Instanz gesperrt wurde.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.LockingPersistenceProvider.Load(System.TimeSpan,System.Boolean)">
          <source>The state information.</source>
          <target state="translated">Die Statusinformationen.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Persistence.LockingPersistenceProvider">
          <source>Loads the instance state information from the persistence store if the state information has been changed since the last time the information was loaded by the caller.</source>
          <target state="translated">Lädt die Instanzstatusinformationen aus dem Beibehaltungsspeicher, wenn die Statusinformationen geändert wurden, seitdem die Informationen zum letzten Mal vom Aufrufer geladen wurden.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.LockingPersistenceProvider.LoadIfChanged(System.TimeSpan,System.Object,System.Object@)">
          <source>The time period after which the persistence provider aborts this operation.</source>
          <target state="translated">Der Zeitraum, nach dem der Beibehaltungsanbieter diesen Vorgang abbricht.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.LockingPersistenceProvider.LoadIfChanged(System.TimeSpan,System.Object,System.Object@)">
          <source>The token returned by the previous <ph id="ph1">&lt;see langword="Create" /&gt;</ph> or <ph id="ph2">&lt;see langword="Update" /&gt;</ph> method calls, which represents the current state held by the caller.</source>
          <target state="translated">Das von den vorherigen <ph id="ph1">&lt;see langword="Create" /&gt;</ph> oder <ph id="ph2">&lt;see langword="Update" /&gt;</ph>-Methodenaufrufen zurückgegebene Token, das den aktuellen Status des Aufrufers darstellt.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.LockingPersistenceProvider.LoadIfChanged(System.TimeSpan,System.Object,System.Object@)">
          <source>The actual instance state information.</source>
          <target state="translated">Die tatsächlichen Instanzstatusinformationen.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.LockingPersistenceProvider.LoadIfChanged(System.TimeSpan,System.Object,System.Object@)">
          <source>Loads the instance state information from the persistence store if the state information has been changed since the last time the information was loaded by the caller.</source>
          <target state="translated">Lädt die Instanzstatusinformationen aus dem Beibehaltungsspeicher, wenn die Statusinformationen geändert wurden, seitdem die Informationen zum letzten Mal vom Aufrufer geladen wurden.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.LockingPersistenceProvider.LoadIfChanged(System.TimeSpan,System.Object,System.Object@)">
          <source>This method does not lock the instance in the persistence store.</source>
          <target state="translated">Diese Methode sperrt die Instanz nicht im Beibehaltungsspeicher.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.LockingPersistenceProvider.LoadIfChanged(System.TimeSpan,System.Object,System.Object@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the instance should be locked in the persistence store at the end of this operation; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn die Instanz am Ende dieses Vorgangs im Beibehaltungsspeicher gesperrt werden soll; andernfalls <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.LockingPersistenceProvider.LoadIfChanged(System.TimeSpan,System.Object,System.Boolean,System.Object@)">
          <source>The time period after which the persistence provider aborts this operation.</source>
          <target state="translated">Der Zeitraum, nach dem der Beibehaltungsanbieter diesen Vorgang abbricht.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.LockingPersistenceProvider.LoadIfChanged(System.TimeSpan,System.Object,System.Boolean,System.Object@)">
          <source>The token returned by the previous Create or Update method calls, which represents the current state held by the caller.</source>
          <target state="translated">Das vom vorherigen Create- oder Update-Methodenaufruf zurückgegebene Token, das den aktuellen Status des Aufrufers darstellt.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.LockingPersistenceProvider.LoadIfChanged(System.TimeSpan,System.Object,System.Boolean,System.Object@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the instance should be locked in the persistence store at the end of this operation; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn die Instanz am Ende dieses Vorgangs im Beibehaltungsspeicher gesperrt werden soll; andernfalls <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.LockingPersistenceProvider.LoadIfChanged(System.TimeSpan,System.Object,System.Boolean,System.Object@)">
          <source>The instance state information.</source>
          <target state="translated">Die Instanzstatusinformationen.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.LockingPersistenceProvider.LoadIfChanged(System.TimeSpan,System.Object,System.Boolean,System.Object@)">
          <source>Loads the instance state information from the persistence store if the state information has been changed since the last time the information was loaded by the caller.</source>
          <target state="translated">Lädt die Instanzstatusinformationen aus dem Beibehaltungsspeicher, wenn die Statusinformationen geändert wurden, seitdem die Informationen zum letzten Mal vom Aufrufer geladen wurden.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.LockingPersistenceProvider.LoadIfChanged(System.TimeSpan,System.Object,System.Boolean,System.Object@)">
          <source>This method also lets the caller specify whether to lock the instance in the persistence store.</source>
          <target state="translated">Mit dieser Methode kann der Aufrufer auch angeben, ob die Instanz im Beibehaltungsspeicher gesperrt werden soll.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.LockingPersistenceProvider.LoadIfChanged(System.TimeSpan,System.Object,System.Boolean,System.Object@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the instance should be locked in the persistence store at the end of this operation; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn die Instanz am Ende dieses Vorgangs im Beibehaltungsspeicher gesperrt werden soll; andernfalls <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.LockingPersistenceProvider.Unlock(System.TimeSpan)">
          <source>The time period after which the persistence provider aborts the operation.</source>
          <target state="translated">Der Zeitraum, nach dem der Beibehaltungsanbieter den Vorgang abbricht.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.LockingPersistenceProvider.Unlock(System.TimeSpan)">
          <source>Unlocks the instance whose ID is specified when constructing the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Persistence.LockingPersistenceProvider" /&gt;</ph> object in the persistence store.</source>
          <target state="translated">Entsperrt die Instanz, deren ID beim Erstellen des <ph id="ph1">&lt;see cref="T:System.ServiceModel.Persistence.LockingPersistenceProvider" /&gt;</ph>-Objekts im Beibehaltungsspeicher angegeben wird.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Persistence.LockingPersistenceProvider">
          <source>Updates the instance state information in the persistence store.</source>
          <target state="translated">Aktualisiert die Instanzstatusinformationen im Beibehaltungsspeicher.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.LockingPersistenceProvider.Update(System.Object,System.TimeSpan)">
          <source>The instance state information.</source>
          <target state="translated">Die Instanzstatusinformationen.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.LockingPersistenceProvider.Update(System.Object,System.TimeSpan)">
          <source>The time period after which the persistence provider aborts the operation.</source>
          <target state="translated">Der Zeitraum, nach dem der Beibehaltungsanbieter den Vorgang abbricht.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.LockingPersistenceProvider.Update(System.Object,System.TimeSpan)">
          <source>When implemented in a derived class, updates the instance state information in the persistence store.</source>
          <target state="translated">Aktualisiert beim Implementieren in einer abgeleiteten Klasse die Instanzstatusinformationen im Beibehaltungsspeicher.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.LockingPersistenceProvider.Update(System.Object,System.TimeSpan)">
          <source>This method does not unlock the instance after updating the instance state information in the persistence store.</source>
          <target state="translated">Diese Methode entsperrt die Instanz nicht im Beibehaltungsspeicher, nachdem die Instanzstatusinformationen aktualisiert wurden.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.LockingPersistenceProvider.Update(System.Object,System.TimeSpan)">
          <source>The instance state information.</source>
          <target state="translated">Die Instanzstatusinformationen.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.LockingPersistenceProvider.Update(System.Object,System.TimeSpan,System.Boolean)">
          <source>The instance state information.</source>
          <target state="translated">Die Instanzstatusinformationen.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.LockingPersistenceProvider.Update(System.Object,System.TimeSpan,System.Boolean)">
          <source>The time period after which the persistence provider aborts the operation.</source>
          <target state="translated">Der Zeitraum, nach dem der Beibehaltungsanbieter den Vorgang abbricht.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.LockingPersistenceProvider.Update(System.Object,System.TimeSpan,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the instance is unlocked after the instance state information is updated; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn die Instanz entsperrt wird, nachdem die Instanzstatusinformationen aktualisiert wurden; andernfalls <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.LockingPersistenceProvider.Update(System.Object,System.TimeSpan,System.Boolean)">
          <source>When implemented in a derived class, updates the instance state information in the persistence store.</source>
          <target state="translated">Aktualisiert beim Implementieren in einer abgeleiteten Klasse die Instanzstatusinformationen im Beibehaltungsspeicher.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.LockingPersistenceProvider.Update(System.Object,System.TimeSpan,System.Boolean)">
          <source>This method does not unlock the instance after updating the instance state information in the persistence store.</source>
          <target state="translated">Diese Methode entsperrt die Instanz nicht im Beibehaltungsspeicher, nachdem die Instanzstatusinformationen aktualisiert wurden.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.LockingPersistenceProvider.Update(System.Object,System.TimeSpan,System.Boolean)">
          <source>The instance state information.</source>
          <target state="translated">Die Instanzstatusinformationen.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>