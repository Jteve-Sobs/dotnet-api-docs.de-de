<Type Name="PersistenceProvider" FullName="System.ServiceModel.Persistence.PersistenceProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1178cdd8c5168fa50956232d8b26b1ecc2bf18f2" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36414971" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class PersistenceProvider : System.ServiceModel.Channels.CommunicationObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit PersistenceProvider extends System.ServiceModel.Channels.CommunicationObject" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Persistence.PersistenceProvider" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class PersistenceProvider&#xA;Inherits CommunicationObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class PersistenceProvider abstract : System::ServiceModel::Channels::CommunicationObject" />
  <TypeSignature Language="F#" Value="type PersistenceProvider = class&#xA;    inherit CommunicationObject" />
  <AssemblyInfo>
    <AssemblyName>System.WorkflowServices</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Channels.CommunicationObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Obsolete("The WF3 types are deprecated.  Instead, please use the new WF4 types from System.Activities.*")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="4a416-101">Die abstrakte Basisklasse, von der alle permanenten Dienstpersistenz-Provider abgeleitetet werden.</span>
      <span class="sxs-lookup">
        <span data-stu-id="4a416-101">The abstract base class from which all durable service persistence providers are derived.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a416-102">Benutzer können von diesem Typ abgeleitete Klassen erstellen, um permanente Dienstpersistenz-Provider zu erstellen, die benutzerdefinierte persistente Speicher verwenden, z.&#160;B. Drittanbieter-Datenbanken, das Dateisystem oder Speichersysteme mit Remotezugriff.</span><span class="sxs-lookup"><span data-stu-id="4a416-102">Users can create classes derived from this type to create durable service persistence providers that use custom persistence stores, such as third-party databases, the file system, or storage systems accessed remotely.</span></span> <span data-ttu-id="4a416-103">Informationen zum Erstellen einer vom System vorgegebenen Implementierung dieses Typs, die Microsoft SQL Server als Beibehaltungsspeicher verwendet, finden Sie unter <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory>.</span><span class="sxs-lookup"><span data-stu-id="4a416-103">To create a system-provided implementation of this type that uses Microsoft SQL Server as a persistence store, see <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4a416-104">Beim Erstellen von Persistenz-Providerimplementierungen ist es wichtig, die ursprüngliche Identität des Threads in den Methoden des neuen Providers beizubehalten (z.&#160;B. <xref:System.ServiceModel.Persistence.PersistenceProvider.Load%2A>.)</span><span class="sxs-lookup"><span data-stu-id="4a416-104">When creating persistence provider implementations, it is important to maintain the thread's original identity in the new provider's methods (such as <xref:System.ServiceModel.Persistence.PersistenceProvider.Load%2A>.</span></span> <span data-ttu-id="4a416-105">Andernfalls könnten Sicherheitslücken erzeugt werden, da Vorgänge dann unter der falschen Identität ausgeführt werden würden.</span><span class="sxs-lookup"><span data-stu-id="4a416-105">Otherwise, security loopholes could be created, because operations would then run under the wrong identity.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a416-106">Eine Implementierung dieses Typs, bei der das Dateisystem als persistenter Speicher verwendet wird, finden Sie in der Datei FilePersistenceProviderFactory.cs im SDK-Beispiel DurableServiceFactory.</span><span class="sxs-lookup"><span data-stu-id="4a416-106">For an implementation of this type that uses the file system as a persistence store, see the FilePersistenceProviderFactory.cs file in the DurableServiceFactory SDK sample.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PersistenceProvider (Guid id);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(valuetype System.Guid id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.PersistenceProvider.#ctor(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (id As Guid)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PersistenceProvider(Guid id);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Persistence.PersistenceProvider : Guid -&gt; System.ServiceModel.Persistence.PersistenceProvider" Usage="new System.ServiceModel.Persistence.PersistenceProvider id" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="id" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="id">
          <span data-ttu-id="4a416-107">Der eindeutige Bezeichner der Dienstzustandsdaten, die gespeichert werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a416-107">The unique identifier of the service state data being saved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a416-108">Initialisiert beim Implementieren in einer abgeleiteten Klasse eine neue Instanz der <see cref="T:System.ServiceModel.Persistence.PersistenceProvider" />-Klasse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a416-108">When implemented in a derived class, initializes a new instance of the <see cref="T:System.ServiceModel.Persistence.PersistenceProvider" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a416-109">Im folgenden Code wird die Verwendung des <xref:System.ServiceModel.Persistence.PersistenceProvider>-Konstruktors veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="4a416-109">The following code demonstrates how to use the <xref:System.ServiceModel.Persistence.PersistenceProvider> constructor.</span></span> <span data-ttu-id="4a416-110">Dieses Codebeispiel stammt aus dem SDK-Beispiel DurableServiceFactory in der Datei FilePersistenceProviderFactory.cs.</span><span class="sxs-lookup"><span data-stu-id="4a416-110">This code example is part of the DurableServiceFactory SDK sample from the FilePersistenceProviderFactory.cs file.</span></span> <span data-ttu-id="4a416-111">Weitere Informationen finden Sie im SDK-Beispiel DurableServiceFactory.</span><span class="sxs-lookup"><span data-stu-id="4a416-111">For more information, see the DurableServiceFactory SDK sample.</span></span>  
  
 [!code-csharp[PersistenceProvider#0](~/samples/snippets/csharp/VS_Snippets_CFX/persistenceprovider/cs/filepersistenceprovider.cs#0)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginCreate">
      <MemberSignature Language="C#" Value="public abstract IAsyncResult BeginCreate (object instance, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginCreate(object instance, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.PersistenceProvider.BeginCreate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function BeginCreate (instance As Object, timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract IAsyncResult ^ BeginCreate(System::Object ^ instance, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginCreate : obj * TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="persistenceProvider.BeginCreate (instance, timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="4a416-112">Der tatsächliche Instanzzustand.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a416-112">The actual instance state.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="4a416-113">Der Zeitraum, nach dem der Persistenz-Provider diesen Versuch abbricht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a416-113">The time period after which the persistence provider aborts this attempt.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="4a416-114">Die Methode, die aufgerufen werden soll, wenn der Vorgang abgeschlossen ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a416-114">The method to be called when the operation is completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="4a416-115">Ein vom Benutzer bereitgestelltes Objekt, das diesen asynchronen Vorgang von anderen Vorgängen unterscheidet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a416-115">A user-provided object that distinguishes this particular asynchronous operation from other operations.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a416-116">Stellt beim Implementieren in einer abgeleiteten Klasse den Beginn der Erstellungsphase dar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a416-116">When implemented in a derived class, represents the beginning of the Create phase.</span>
          </span>
          <span data-ttu-id="4a416-117">Die Erstellungsphase tritt auf, wenn Dienstinstanzdatensätze zuerst im persistenten Speicher erstellt werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a416-117">The Create phase occurs when service instance records are first created in the persistence store.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a416-118">Der Status des asynchronen <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.BeginCreate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)" />-Methodenaufrufs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a416-118">The state of the <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.BeginCreate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)" /> asynchronous method call.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a416-119">Im folgenden Code wird das Implementieren der <xref:System.ServiceModel.Persistence.PersistenceProvider.BeginCreate%2A>-Methode veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="4a416-119">The following code demonstrates how to implement the <xref:System.ServiceModel.Persistence.PersistenceProvider.BeginCreate%2A> method.</span></span>  
  
 [!code-csharp[PersistenceProvider#14](~/samples/snippets/csharp/VS_Snippets_CFX/persistenceprovider/cs/filepersistenceprovider.cs#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginDelete">
      <MemberSignature Language="C#" Value="public abstract IAsyncResult BeginDelete (object instance, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginDelete(object instance, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.PersistenceProvider.BeginDelete(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function BeginDelete (instance As Object, timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract IAsyncResult ^ BeginDelete(System::Object ^ instance, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginDelete : obj * TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="persistenceProvider.BeginDelete (instance, timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="4a416-120">Der tatsächliche Instanzzustand.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a416-120">The actual instance state.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="4a416-121">Der Zeitraum, nach dem der Persistenz-Provider diesen Versuch abbricht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a416-121">The time period after which the persistence provider aborts this attempt.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="4a416-122">Die Methode, die aufgerufen werden soll, wenn der Vorgang abgeschlossen ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a416-122">The method to be called when the operation is completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="4a416-123">Ein vom Benutzer bereitgestelltes Objekt, das diesen asynchronen Vorgang von anderen Vorgängen unterscheidet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a416-123">A user-provided object that distinguishes this particular asynchronous operation from other operations.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a416-124">Stellt beim Implementieren in einer abgeleiteten Klasse den Beginn der Löschungsphase dar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a416-124">When implemented in a derived class, represents the beginning of the Delete phase.</span>
          </span>
          <span data-ttu-id="4a416-125">Die Löschungsphase tritt auf, wenn Dienstzustandsdaten dauerhaft aus dem persistenten Speicher gelöscht werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a416-125">The Delete phase occurs when service state data is permanently deleted from the persistence store.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a416-126">Der Status des asynchronen <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.BeginDelete(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)" />-Methodenaufrufs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a416-126">The state of the <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.BeginDelete(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)" /> asynchronous method call.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a416-127">Im folgenden Code wird das Implementieren der `BeginDelete`-Methode veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="4a416-127">The following code demonstrates how to implement the `BeginDelete` method.</span></span> <span data-ttu-id="4a416-128">Dieses Codebeispiel stammt aus dem SDK-Beispiel DurableServiceFactory in der Datei FilePersistenceProviderFactory.cs.</span><span class="sxs-lookup"><span data-stu-id="4a416-128">This code example is part of the DurableServiceFactory SDK sample from the FilePersistenceProviderFactory.cs file.</span></span> <span data-ttu-id="4a416-129">Weitere Informationen finden Sie im SDK-Beispiel DurableServiceFactory.</span><span class="sxs-lookup"><span data-stu-id="4a416-129">For more information, see the DurableServiceFactory SDK sample.</span></span>  
  
 [!code-csharp[PersistenceProvider#6](~/samples/snippets/csharp/VS_Snippets_CFX/persistenceprovider/cs/filepersistenceprovider.cs#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginLoad">
      <MemberSignature Language="C#" Value="public abstract IAsyncResult BeginLoad (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginLoad(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.PersistenceProvider.BeginLoad(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function BeginLoad (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract IAsyncResult ^ BeginLoad(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginLoad : TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="persistenceProvider.BeginLoad (timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="4a416-130">Der Zeitraum, nach dem der Persistenz-Provider diesen Versuch abbricht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a416-130">The time period after which the persistence provider aborts this attempt.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="4a416-131">Die Methode, die aufgerufen werden soll, wenn der Vorgang abgeschlossen ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a416-131">The method to be called when the operation is completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="4a416-132">Ein vom Benutzer bereitgestelltes Objekt, das diesen asynchronen Vorgang von anderen Vorgängen unterscheidet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a416-132">A user-provided object that distinguishes this particular asynchronous operation from other operations.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a416-133">Stellt beim Implementieren in einer abgeleiteten Klasse den Beginn der Ladenphase dar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a416-133">When implemented in a derived class, represents the beginning of the Load phase.</span>
          </span>
          <span data-ttu-id="4a416-134">Die Ladenphase tritt auf, wenn Zustandsdaten aus dem persistenten Speicher in den Persistenz-Provider geladen werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a416-134">The Load phase occurs when state data is loaded into the persistence provider from the persistence store.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a416-135">Der Status des asynchronen <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.BeginLoad(System.TimeSpan,System.AsyncCallback,System.Object)" />-Methodenaufrufs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a416-135">The state of the <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.BeginLoad(System.TimeSpan,System.AsyncCallback,System.Object)" /> asynchronous method call.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a416-136">Im folgenden Code wird das Implementieren der `BeginLoad`-Methode veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="4a416-136">The following code demonstrates how to implement the `BeginLoad` method.</span></span> <span data-ttu-id="4a416-137">Dieses Codebeispiel stammt aus dem SDK-Beispiel DurableServiceFactory in der Datei FilePersistenceProviderFactory.cs.</span><span class="sxs-lookup"><span data-stu-id="4a416-137">This code example is part of the DurableServiceFactory SDK sample from the FilePersistenceProviderFactory.cs file.</span></span> <span data-ttu-id="4a416-138">Weitere Informationen finden Sie im SDK-Beispiel DurableServiceFactory.</span><span class="sxs-lookup"><span data-stu-id="4a416-138">For more information, see the DurableServiceFactory SDK sample.</span></span>  
  
 [!code-csharp[PersistenceProvider#7](~/samples/snippets/csharp/VS_Snippets_CFX/persistenceprovider/cs/filepersistenceprovider.cs#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginLoadIfChanged">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginLoadIfChanged (TimeSpan timeout, object instanceToken, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginLoadIfChanged(valuetype System.TimeSpan timeout, object instanceToken, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.PersistenceProvider.BeginLoadIfChanged(System.TimeSpan,System.Object,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginLoadIfChanged (timeout As TimeSpan, instanceToken As Object, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginLoadIfChanged(TimeSpan timeout, System::Object ^ instanceToken, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginLoadIfChanged : TimeSpan * obj * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginLoadIfChanged : TimeSpan * obj * AsyncCallback * obj -&gt; IAsyncResult" Usage="persistenceProvider.BeginLoadIfChanged (timeout, instanceToken, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="instanceToken" Type="System.Object" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="4a416-139">Der Zeitraum, nach dem der Persistenz-Provider diesen Versuch abbricht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a416-139">The time period after which the persistence provider aborts this attempt.</span>
          </span>
        </param>
        <param name="instanceToken">
          <span data-ttu-id="4a416-140">Das von einer vorherigen <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.Create(System.Object,System.TimeSpan)" /> oder <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.Update(System.Object,System.TimeSpan)" /> zurückgegebene Token, das den aktuellen Zustand des Aufrufers darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a416-140">The token returned by a previous <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.Create(System.Object,System.TimeSpan)" /> or <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.Update(System.Object,System.TimeSpan)" /> that represents the current state held by the caller.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="4a416-141">Die Methode, die aufgerufen werden soll, wenn der Vorgang abgeschlossen ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a416-141">The method to be called when the operation is completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="4a416-142">Ein vom Benutzer bereitgestelltes Objekt, das diesen asynchronen Vorgang von anderen Vorgängen unterscheidet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a416-142">A user-provided object that distinguishes this particular asynchronous operation from other operations.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a416-143">Stellt beim Implementieren in einer abgeleiteten Klasse den Beginn der LoadIfChanged-Phase dar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a416-143">When implemented in a derived class, represents the beginning of the LoadIfChanged phase.</span>
          </span>
          <span data-ttu-id="4a416-144">Die LoadIfChanged-Phase tritt auf, wenn Zustandsdaten aus dem persistenten Speicher in den Persistenz-Provider geladen werden und die Zustandsdaten im persistenten Speicher geändert wurden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a416-144">The LoadIfChanged phase occurs when state data is loaded into the persistence provider from the persistence store, and the state data in the persistence store has been changed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a416-145">Der Status des asynchronen <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.BeginLoadIfChanged(System.TimeSpan,System.Object,System.AsyncCallback,System.Object)" />-Methodenaufrufs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a416-145">The state of the <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.BeginLoadIfChanged(System.TimeSpan,System.Object,System.AsyncCallback,System.Object)" /> asynchronous method call.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a416-146">Im folgenden Code wird das Implementieren der <xref:System.ServiceModel.Persistence.PersistenceProvider.BeginLoadIfChanged%2A>-Methode veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="4a416-146">The following code demonstrates how to implement the <xref:System.ServiceModel.Persistence.PersistenceProvider.BeginLoadIfChanged%2A> method.</span></span>  
  
 [!code-csharp[PersistenceProvider#11](~/samples/snippets/csharp/VS_Snippets_CFX/persistenceprovider/cs/filepersistenceprovider.cs#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginUpdate">
      <MemberSignature Language="C#" Value="public abstract IAsyncResult BeginUpdate (object instance, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginUpdate(object instance, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.PersistenceProvider.BeginUpdate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function BeginUpdate (instance As Object, timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract IAsyncResult ^ BeginUpdate(System::Object ^ instance, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginUpdate : obj * TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="persistenceProvider.BeginUpdate (instance, timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="4a416-147">Der tatsächliche Instanzzustand.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a416-147">The actual instance state.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="4a416-148">Der Zeitraum, nach dem der Persistenz-Provider diesen Versuch abbricht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a416-148">The time period after which the persistence provider aborts this attempt.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="4a416-149">Die Methode, die aufgerufen werden soll, wenn der Vorgang abgeschlossen ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a416-149">The method to be called when the operation is completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="4a416-150">Ein vom Benutzer bereitgestelltes Objekt, das diesen asynchronen Vorgang von anderen Vorgängen unterscheidet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a416-150">A user-provided object that distinguishes this particular asynchronous operation from other operations.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a416-151">Stellt beim Implementieren in einer abgeleiteten Klasse den Beginn der Aktualisierungsphase dar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a416-151">When implemented in a derived class, represents the beginning of the Update phase.</span>
          </span>
          <span data-ttu-id="4a416-152">Die Aktualisierungsphase tritt auf, wenn Dienstzustandsdaten im persistenten Speicher aktualisiert werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a416-152">The Update phase occurs when service state data is updated in the persistence store.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a416-153">Der Status des asynchronen <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.BeginUpdate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)" />-Methodenaufrufs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a416-153">The state of the <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.BeginUpdate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)" /> asynchronous method call.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a416-154">Im folgenden Code wird das Implementieren der <xref:System.ServiceModel.Persistence.PersistenceProvider.BeginUpdate%2A>-Methode veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="4a416-154">The following code demonstrates how to implement the <xref:System.ServiceModel.Persistence.PersistenceProvider.BeginUpdate%2A> method.</span></span>  
  
 [!code-csharp[PersistenceProvider#17](~/samples/snippets/csharp/VS_Snippets_CFX/persistenceprovider/cs/filepersistenceprovider.cs#17)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public abstract object Create (object instance, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Create(object instance, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.PersistenceProvider.Create(System.Object,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Create (instance As Object, timeout As TimeSpan) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ Create(System::Object ^ instance, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="abstract member Create : obj * TimeSpan -&gt; obj" Usage="persistenceProvider.Create (instance, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="4a416-155">Der tatsächliche Instanzzustand.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a416-155">The actual instance state.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="4a416-156">Der Zeitraum, nach dem der Persistenz-Provider diesen Versuch abbricht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a416-156">The time period after which the persistence provider aborts this attempt.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a416-157">Erstellt beim Implementieren in einer abgeleiteten Klasse einen Dienstzustandsdatensatz im persistenten Speicher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a416-157">When implemented in a derived class, creates a service state record in the persistence store.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a416-158">Das Instanztoken, das dem gerade gespeicherten Zustand entspricht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a416-158">The instance token corresponding to the state just saved.</span>
          </span>
          <span data-ttu-id="4a416-159">Es kann an <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.LoadIfChanged(System.TimeSpan,System.Object,System.Object@)" /> übergeben werden, um festzustellen, ob sich der Zustand im persistenten Speicher vom Zustand beim Aufrufen der Erstellung unterscheidet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a416-159">This can be passed to <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.LoadIfChanged(System.TimeSpan,System.Object,System.Object@)" /> to determine whether the state in the persistence store differs from the state when Create was called.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a416-160">Im folgenden Code wird das Implementieren der <xref:System.ServiceModel.Persistence.PersistenceProvider.Create%2A>-Methode veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="4a416-160">The following code demonstrates how to implement the <xref:System.ServiceModel.Persistence.PersistenceProvider.Create%2A> method.</span></span>  
  
 [!code-csharp[PersistenceProvider#15](~/samples/snippets/csharp/VS_Snippets_CFX/persistenceprovider/cs/filepersistenceprovider.cs#15)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public abstract void Delete (object instance, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Delete(object instance, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.PersistenceProvider.Delete(System.Object,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Delete (instance As Object, timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Delete(System::Object ^ instance, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="abstract member Delete : obj * TimeSpan -&gt; unit" Usage="persistenceProvider.Delete (instance, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="4a416-161">Der tatsächliche Instanzzustand.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a416-161">The actual instance state.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="4a416-162">Der Zeitraum, nach dem der Persistenz-Provider diesen Versuch abbricht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a416-162">The time period after which the persistence provider aborts this attempt.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a416-163">Löscht beim Implementieren in einer abgeleiteten Klasse Dienstzustandsinformationen dauerhaft aus dem persistenten Speicher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a416-163">When implemented in a derived class, permanently deletes service state information from the persistence store.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a416-164">Im folgenden Code wird das Implementieren der <xref:System.ServiceModel.Persistence.PersistenceProvider.Delete%2A>-Methode veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="4a416-164">The following code demonstrates how to implement the <xref:System.ServiceModel.Persistence.PersistenceProvider.Delete%2A> method.</span></span> <span data-ttu-id="4a416-165">Dieses Codebeispiel stammt aus dem SDK-Beispiel DurableServiceFactory in der Datei FilePersistenceProviderFactory.cs.</span><span class="sxs-lookup"><span data-stu-id="4a416-165">This code example is part of the DurableServiceFactory SDK sample from the FilePersistenceProviderFactory.cs file.</span></span> <span data-ttu-id="4a416-166">Weitere Informationen finden Sie im SDK-Beispiel DurableServiceFactory.</span><span class="sxs-lookup"><span data-stu-id="4a416-166">For more information, see the DurableServiceFactory SDK sample.</span></span>  
  
 [!code-csharp[PersistenceProvider#9](~/samples/snippets/csharp/VS_Snippets_CFX/persistenceprovider/cs/filepersistenceprovider.cs#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndCreate">
      <MemberSignature Language="C#" Value="public abstract object EndCreate (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object EndCreate(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.PersistenceProvider.EndCreate(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function EndCreate (result As IAsyncResult) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ EndCreate(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndCreate : IAsyncResult -&gt; obj" Usage="persistenceProvider.EndCreate result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="4a416-167">Ein Verweis auf das Ergebnis des Vorgangs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a416-167">A reference to the result of the operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a416-168">Stellt beim Implementieren in einer abgeleiteten Klasse das Ende der Erstellungsphase dar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a416-168">When implemented in a derived class, represents the end of the Create phase.</span>
          </span>
          <span data-ttu-id="4a416-169">Die Erstellungsphase tritt auf, wenn Dienstzustandsdatensätze zuerst im persistenten Speicher erstellt werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a416-169">The Create phase occurs when service state records are first created in the persistence store.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a416-170">Das Instanztoken, das dem gerade gespeicherten Zustand entspricht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a416-170">The instance token corresponding to the state just saved.</span>
          </span>
          <span data-ttu-id="4a416-171">Es kann an <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.LoadIfChanged(System.TimeSpan,System.Object,System.Object@)" /> übergeben werden, um festzustellen, ob sich der Zustand im persistenten Speicher vom Zustand beim Aufrufen der Erstellung unterscheidet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a416-171">This can be passed to <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.LoadIfChanged(System.TimeSpan,System.Object,System.Object@)" /> to determine whether the state in the persistence store differs from the state when Create was called.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a416-172">Im folgenden Code wird das Implementieren der <xref:System.ServiceModel.Persistence.PersistenceProvider.EndCreate%2A>-Methode veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="4a416-172">The following code demonstrates how to implement the <xref:System.ServiceModel.Persistence.PersistenceProvider.EndCreate%2A> method.</span></span>  
  
 [!code-csharp[PersistenceProvider#16](~/samples/snippets/csharp/VS_Snippets_CFX/persistenceprovider/cs/filepersistenceprovider.cs#16)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndDelete">
      <MemberSignature Language="C#" Value="public abstract void EndDelete (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndDelete(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.PersistenceProvider.EndDelete(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub EndDelete (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void EndDelete(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndDelete : IAsyncResult -&gt; unit" Usage="persistenceProvider.EndDelete result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="4a416-173">Ein Verweis auf das Ergebnis des Vorgangs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a416-173">A reference to the result of the operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a416-174">Stellt beim Implementieren in einer abgeleiteten Klasse das Ende der Löschungsphase dar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a416-174">When implemented in a derived class, represents the end of the Delete phase.</span>
          </span>
          <span data-ttu-id="4a416-175">Die Löschungsphase beginnt, wenn Zustandsdaten dauerhaft aus dem persistenten Speicher gelöscht werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a416-175">The Delete phase occurs when state data is permanently deleted from the persistence store.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a416-176">Im folgenden Code wird das Implementieren der <xref:System.ServiceModel.Persistence.PersistenceProvider.EndDelete%2A>-Methode veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="4a416-176">The following code demonstrates how to implement the <xref:System.ServiceModel.Persistence.PersistenceProvider.EndDelete%2A> method.</span></span> <span data-ttu-id="4a416-177">Dieses Codebeispiel stammt aus dem SDK-Beispiel DurableServiceFactory in der Datei FilePersistenceProviderFactory.cs.</span><span class="sxs-lookup"><span data-stu-id="4a416-177">This code example is part of the DurableServiceFactory SDK sample from the FilePersistenceProviderFactory.cs file.</span></span> <span data-ttu-id="4a416-178">Weitere Informationen finden Sie im SDK-Beispiel DurableServiceFactory.</span><span class="sxs-lookup"><span data-stu-id="4a416-178">For more information, see the DurableServiceFactory SDK sample.</span></span>  
  
 [!code-csharp[PersistenceProvider#5](~/samples/snippets/csharp/VS_Snippets_CFX/persistenceprovider/cs/filepersistenceprovider.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndLoad">
      <MemberSignature Language="C#" Value="public abstract object EndLoad (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object EndLoad(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.PersistenceProvider.EndLoad(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function EndLoad (result As IAsyncResult) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ EndLoad(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndLoad : IAsyncResult -&gt; obj" Usage="persistenceProvider.EndLoad result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="4a416-179">Ein Verweis auf das Ergebnis des Vorgangs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a416-179">A reference to the result of the operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a416-180">Stellt beim Implementieren in einer abgeleiteten Klasse das Ende der Ladenphase dar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a416-180">When implemented in a derived class, represents the end of the Load phase.</span>
          </span>
          <span data-ttu-id="4a416-181">Die Ladenphase tritt auf, wenn Zustandsdaten aus dem persistenten Speicher in den Persistenz-Provider geladen werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a416-181">The Load phase occurs when state data is loaded into the persistence provider from the persistence store.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a416-182">Die Dienststatusinformationen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a416-182">The service state information.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a416-183">Im folgenden Code wird die Verwendung der `EndLoad`-Methode veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="4a416-183">The following code demonstrates how to use the `EndLoad` method.</span></span> <span data-ttu-id="4a416-184">Dieses Codebeispiel stammt aus dem SDK-Beispiel DurableServiceFactory in der Datei FilePersistenceProviderFactory.cs.</span><span class="sxs-lookup"><span data-stu-id="4a416-184">This code example is part of the DurableServiceFactory SDK sample from the FilePersistenceProviderFactory.cs file.</span></span> <span data-ttu-id="4a416-185">Weitere Informationen finden Sie im SDK-Beispiel DurableServiceFactory.</span><span class="sxs-lookup"><span data-stu-id="4a416-185">For more information, see the DurableServiceFactory SDK sample.</span></span>  
  
 [!code-csharp[PersistenceProvider#1](~/samples/snippets/csharp/VS_Snippets_CFX/persistenceprovider/cs/filepersistenceprovider.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndLoadIfChanged">
      <MemberSignature Language="C#" Value="public virtual bool EndLoadIfChanged (IAsyncResult result, out object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool EndLoadIfChanged(class System.IAsyncResult result, [out] object&amp; instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.PersistenceProvider.EndLoadIfChanged(System.IAsyncResult,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function EndLoadIfChanged (result As IAsyncResult, ByRef instance As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool EndLoadIfChanged(IAsyncResult ^ result, [Runtime::InteropServices::Out] System::Object ^ % instance);" />
      <MemberSignature Language="F#" Value="abstract member EndLoadIfChanged : IAsyncResult *  -&gt; bool&#xA;override this.EndLoadIfChanged : IAsyncResult *  -&gt; bool" Usage="persistenceProvider.EndLoadIfChanged (result, instance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
        <Parameter Name="instance" Type="System.Object&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="4a416-186">Ein Verweis auf das Ergebnis des Vorgangs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a416-186">A reference to the result of the operation.</span>
          </span>
        </param>
        <param name="instance">
          <span data-ttu-id="4a416-187">Der tatsächliche Instanzzustand.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a416-187">The actual instance state.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a416-188">Stellt beim Implementieren in einer abgeleiteten Klasse das Ende der LoadIfChanged-Phase dar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a416-188">When implemented in a derived class, represents the end of the LoadIfChanged phase.</span>
          </span>
          <span data-ttu-id="4a416-189">Die LoadIfChanged-Phase tritt auf, wenn Zustandsdaten aus dem persistenten Speicher in den Persistenz-Provider geladen werden und die Zustandsdaten im persistenten Speicher geändert wurden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a416-189">The LoadIfChanged phase occurs when state data is loaded into the persistence provider from the persistence store, and the state data in the persistence store has been changed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a416-190">
            <see langword="true" />, wenn der <see langword="out" />-Instanzparameter mit der aktuellsten Kopie aus dem persistenten Speicher festgelegt wurde, und <see langword="false" />, wenn der lokal zwischengespeicherte Zustand bereits aktuell ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a416-190">
              <see langword="true" /> if the instance <see langword="out" /> parameter has been set with the latest copy from the persistence store; <see langword="false" /> if the locally cached state is already up-to-date.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a416-191">Im folgenden Code wird das Implementieren der <xref:System.ServiceModel.Persistence.PersistenceProvider.EndLoadIfChanged%2A>-Methode veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="4a416-191">The following code demonstrates how to implement the <xref:System.ServiceModel.Persistence.PersistenceProvider.EndLoadIfChanged%2A> method.</span></span>  
  
 [!code-csharp[PersistenceProvider#12](~/samples/snippets/csharp/VS_Snippets_CFX/persistenceprovider/cs/filepersistenceprovider.cs#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndUpdate">
      <MemberSignature Language="C#" Value="public abstract object EndUpdate (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object EndUpdate(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.PersistenceProvider.EndUpdate(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function EndUpdate (result As IAsyncResult) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ EndUpdate(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndUpdate : IAsyncResult -&gt; obj" Usage="persistenceProvider.EndUpdate result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="4a416-192">Ein Verweis auf das Ergebnis des Vorgangs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a416-192">A reference to the result of the operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a416-193">Stellt das Ende der Aktualisierungsphase dar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a416-193">Represents the end of the Update phase.</span>
          </span>
          <span data-ttu-id="4a416-194">Die Aktualisierungsphase tritt auf, wenn Dienstzustandsdatensätze im persistenten Speicher aktualisiert werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a416-194">The Update phase occurs when service state records are updated in the persistence store.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a416-195">Das Instanztoken, das dem gerade gespeicherten Zustand entspricht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a416-195">The instance token corresponding to the state just saved.</span>
          </span>
          <span data-ttu-id="4a416-196">Es kann an <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.LoadIfChanged(System.TimeSpan,System.Object,System.Object@)" /> übergeben werden, um festzustellen, ob sich der Zustand im persistenten Speicher vom Zustand beim Aufrufen der Erstellung unterscheidet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a416-196">This can be passed to <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.LoadIfChanged(System.TimeSpan,System.Object,System.Object@)" /> to determine whether the state in the persistence store differs from the state when Create was called.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a416-197">Im folgenden Code wird das Implementieren der <xref:System.ServiceModel.Persistence.PersistenceProvider.EndUpdate%2A>-Methode veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="4a416-197">The following code demonstrates how to implement the <xref:System.ServiceModel.Persistence.PersistenceProvider.EndUpdate%2A> method.</span></span>  
  
 [!code-csharp[PersistenceProvider#19](~/samples/snippets/csharp/VS_Snippets_CFX/persistenceprovider/cs/filepersistenceprovider.cs#19)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public Guid Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid Id" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Persistence.PersistenceProvider.Id" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Id As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Guid Id { Guid get(); };" />
      <MemberSignature Language="F#" Value="member this.Id : Guid" Usage="System.ServiceModel.Persistence.PersistenceProvider.Id" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4a416-198">Stellt die dieser Instanz zugeordnete <see cref="T:System.Guid" /> dar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a416-198">Represents the <see cref="T:System.Guid" /> associated with this instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4a416-199">Der dieser Instanz zugeordnete GUID.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a416-199">The GUID associated with this instance.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a416-200">Im folgenden Codebeispiel wird die Verwendung der <xref:System.ServiceModel.Persistence.PersistenceProvider.Id%2A>-Eigenschaft veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="4a416-200">The following code demonstrates how to use the <xref:System.ServiceModel.Persistence.PersistenceProvider.Id%2A> property.</span></span>  
  
 [!code-csharp[PersistenceProvider#10](~/samples/snippets/csharp/VS_Snippets_CFX/persistenceprovider/cs/filepersistenceprovider.cs#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public abstract object Load (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Load(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.PersistenceProvider.Load(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Load (timeout As TimeSpan) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ Load(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="abstract member Load : TimeSpan -&gt; obj" Usage="persistenceProvider.Load timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="4a416-201">Der Zeitraum, nach dem der Persistenz-Provider diesen Versuch abbricht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a416-201">The time period after which the persistence provider aborts this attempt.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a416-202">Lädt beim Implementieren in einer abgeleiteten Klasse Dienstzustandsinformationen aus dem persistenten Speicher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a416-202">When implemented in a derived class, loads service state information from the persistence store.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a416-203">Der geladene Instanzzustand.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a416-203">The loaded instance state.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a416-204">Änderungen des Sicherheitstokens in der <xref:System.ServiceModel.Persistence.PersistenceProvider.Load%2A>-Methode gelten weiter für die restliche Verarbeitung dieser Nachricht, wenn sie nicht zurückgesetzt werden.</span><span class="sxs-lookup"><span data-stu-id="4a416-204">Changes made to the security token in the <xref:System.ServiceModel.Persistence.PersistenceProvider.Load%2A> method, if not reverted, stay in effect for the remainder of that message's processing.</span></span> <span data-ttu-id="4a416-205">Dies bedeutet, dass der Benutzercode des Dienstvorgangs, der Antwort-Nachrichtenpfad durch den Verteiler sowie alle Fehlerpfade im geänderten Sicherheitskontext ausgeführt werden.</span><span class="sxs-lookup"><span data-stu-id="4a416-205">This means that the service operation's user code, the response message path through the dispatcher, as well as any error paths, run in the changed security context.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a416-206">Im folgenden Code wird das Implementieren der <xref:System.ServiceModel.Persistence.PersistenceProvider.Load%2A>-Methode veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="4a416-206">The following code demonstrates how to implement the <xref:System.ServiceModel.Persistence.PersistenceProvider.Load%2A> method.</span></span> <span data-ttu-id="4a416-207">Dieses Codebeispiel stammt aus dem SDK-Beispiel DurableServiceFactory in der Datei FilePersistenceProviderFactory.cs.</span><span class="sxs-lookup"><span data-stu-id="4a416-207">This code example is part of the DurableServiceFactory SDK sample from the FilePersistenceProviderFactory.cs file.</span></span> <span data-ttu-id="4a416-208">Weitere Informationen finden Sie im SDK-Beispiel DurableServiceFactory.</span><span class="sxs-lookup"><span data-stu-id="4a416-208">For more information, see the DurableServiceFactory SDK sample.</span></span>  
  
 [!code-csharp[PersistenceProvider#3](~/samples/snippets/csharp/VS_Snippets_CFX/persistenceprovider/cs/filepersistenceprovider.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadIfChanged">
      <MemberSignature Language="C#" Value="public virtual bool LoadIfChanged (TimeSpan timeout, object instanceToken, out object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool LoadIfChanged(valuetype System.TimeSpan timeout, object instanceToken, [out] object&amp; instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.PersistenceProvider.LoadIfChanged(System.TimeSpan,System.Object,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LoadIfChanged (timeout As TimeSpan, instanceToken As Object, ByRef instance As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool LoadIfChanged(TimeSpan timeout, System::Object ^ instanceToken, [Runtime::InteropServices::Out] System::Object ^ % instance);" />
      <MemberSignature Language="F#" Value="abstract member LoadIfChanged : TimeSpan * obj *  -&gt; bool&#xA;override this.LoadIfChanged : TimeSpan * obj *  -&gt; bool" Usage="persistenceProvider.LoadIfChanged (timeout, instanceToken, instance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="instanceToken" Type="System.Object" />
        <Parameter Name="instance" Type="System.Object&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="4a416-209">Der Zeitraum, nach dem der Persistenz-Provider diesen Versuch abbricht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a416-209">The time period after which the persistence provider aborts this attempt.</span>
          </span>
        </param>
        <param name="instanceToken">
          <span data-ttu-id="4a416-210">Das von einer vorherigen <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.Create(System.Object,System.TimeSpan)" /> oder <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.Update(System.Object,System.TimeSpan)" /> zurückgegebene Token, das den aktuellen Zustand des Aufrufers darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a416-210">The token returned by a previous <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.Create(System.Object,System.TimeSpan)" /> or <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.Update(System.Object,System.TimeSpan)" />, which represents the current state held by the caller.</span>
          </span>
        </param>
        <param name="instance">
          <span data-ttu-id="4a416-211">Der tatsächliche Instanzzustand.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a416-211">The actual instance state.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a416-212">Lädt beim Implementieren in einer abgeleiteten Klasse Dienstzustandsinformationen aus dem persistenten Speicher, wenn diese Daten geändert wurden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a416-212">When implemented in a derived class, loads service state information from the persistence store if that data has been changed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a416-213">
            <see langword="true" />, wenn der <paramref name="instance" /><see langword="out" />-Parameter mit der aktuellsten Kopie aus dem persistenten Speicher festgelegt wurde; <see langword="false" />, wenn der lokal zwischengespeicherte Zustand bereits aktuell ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a416-213">
              <see langword="true" /> if the <paramref name="instance" /><see langword="out" /> parameter has been set with the latest copy from the persistence store; <see langword="false" /> if the locally cached state is already up to date.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a416-214">Im folgenden Code wird das Implementieren der <xref:System.ServiceModel.Persistence.PersistenceProvider.LoadIfChanged%2A>-Methode veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="4a416-214">The following code demonstrates how to implement the <xref:System.ServiceModel.Persistence.PersistenceProvider.LoadIfChanged%2A> method.</span></span>  
  
 [!code-csharp[PersistenceProvider#13](~/samples/snippets/csharp/VS_Snippets_CFX/persistenceprovider/cs/filepersistenceprovider.cs#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public abstract object Update (object instance, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Update(object instance, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.PersistenceProvider.Update(System.Object,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Update (instance As Object, timeout As TimeSpan) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ Update(System::Object ^ instance, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="abstract member Update : obj * TimeSpan -&gt; obj" Usage="persistenceProvider.Update (instance, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="4a416-215">Der tatsächliche Instanzzustand.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a416-215">The actual instance state.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="4a416-216">Der Zeitraum, nach dem der Persistenz-Provider diesen Versuch abbricht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a416-216">The time period after which the persistence provider aborts this attempt.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a416-217">Aktualisiert beim Implementieren in einer abgeleiteten Klasse Dienstzustandsdatensätze im persistenten Speicher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a416-217">When implemented in a derived class, updates service state records in the persistence store.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a416-218">Das Instanztoken, das dem gerade gespeicherten Zustand entspricht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a416-218">The instance token corresponding to the state just saved.</span>
          </span>
          <span data-ttu-id="4a416-219">Es kann an <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.LoadIfChanged(System.TimeSpan,System.Object,System.Object@)" /> übergeben werden, um festzustellen, ob sich der Zustand im persistenten Speicher vom Zustand beim Aufrufen der Erstellung unterscheidet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a416-219">This can be passed to <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.LoadIfChanged(System.TimeSpan,System.Object,System.Object@)" /> to determine whether the state in the persistence store differs from the state when Create was called.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a416-220">Im folgenden Code wird das Implementieren der <xref:System.ServiceModel.Persistence.PersistenceProvider.Update%2A>-Methode veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="4a416-220">The following code demonstrates how to implement the <xref:System.ServiceModel.Persistence.PersistenceProvider.Update%2A> method.</span></span>  
  
 [!code-csharp[PersistenceProvider#18](~/samples/snippets/csharp/VS_Snippets_CFX/persistenceprovider/cs/filepersistenceprovider.cs#18)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>