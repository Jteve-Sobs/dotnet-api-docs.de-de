<Type Name="UndoEngine+UndoUnit" FullName="System.ComponentModel.Design.UndoEngine+UndoUnit">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6059af23968a795f32b98b50f910606dbe2c2461" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="39837479" /></Metadata><TypeSignature Language="C#" Value="protected class UndoEngine.UndoUnit" />
  <TypeSignature Language="ILAsm" Value=".class nested protected auto ansi beforefieldinit UndoEngine/UndoUnit extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.UndoEngine.UndoUnit" />
  <TypeSignature Language="VB.NET" Value="Protected Class UndoEngine.UndoUnit" />
  <TypeSignature Language="C++ CLI" Value="protected: ref class UndoEngine::UndoUnit" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="3dbeb-101">Kapselt eine Arbeitseinheit, die ein Benutzer rückgängig machen kann.</span><span class="sxs-lookup"><span data-stu-id="3dbeb-101">Encapsulates a unit of work that a user can undo.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3dbeb-102">Die <xref:System.ComponentModel.Design.UndoEngine.UndoUnit> -Klasse ist eine geschachtelte Klasse innerhalb <xref:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoEngine%2A> , kapselt eine Aktion, die ein Benutzer rückgängig machen kann.</span><span class="sxs-lookup"><span data-stu-id="3dbeb-102">The <xref:System.ComponentModel.Design.UndoEngine.UndoUnit> class is a nested class within <xref:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoEngine%2A> that encapsulates an action that a user can undo.</span></span> <span data-ttu-id="3dbeb-103">Der Standardwert <xref:System.ComponentModel.Design.UndoEngine.UndoUnit> -Implementierung von änderungsbenachrichtigungen überwacht und erstellt eine Liste der Ereignisse für jede Änderung an.</span><span class="sxs-lookup"><span data-stu-id="3dbeb-103">The default <xref:System.ComponentModel.Design.UndoEngine.UndoUnit> implementation monitors change notifications and builds up a list of events for each change.</span></span> <span data-ttu-id="3dbeb-104">Er speichert diese Ereignisse mit <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationService>.</span><span class="sxs-lookup"><span data-stu-id="3dbeb-104">It saves these events using <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationService>.</span></span> <span data-ttu-id="3dbeb-105">Ein <xref:System.ComponentModel.Design.UndoEngine.UndoUnit> empfängt ereignisbenachrichtigungen Änderungen direkt von <xref:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoEngine%2A> durch mehrere `public virtual` Methoden.</span><span class="sxs-lookup"><span data-stu-id="3dbeb-105">An <xref:System.ComponentModel.Design.UndoEngine.UndoUnit> receives event notifications for changes directly from <xref:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoEngine%2A> through several `public virtual` methods.</span></span> <span data-ttu-id="3dbeb-106">Es sind ableitungen von <xref:System.ComponentModel.Design.UndoEngine.UndoUnit> und eine zusätzliche Logik ausführen.</span><span class="sxs-lookup"><span data-stu-id="3dbeb-106">You can derive from <xref:System.ComponentModel.Design.UndoEngine.UndoUnit> and perform any additional logic.</span></span> <span data-ttu-id="3dbeb-107">Falls gewünscht, können Sie die Standardeinstellung vollständig umgehen <xref:System.ComponentModel.Design.UndoEngine.UndoUnit> Implementierung.</span><span class="sxs-lookup"><span data-stu-id="3dbeb-107">If desired, you can completely bypass the default <xref:System.ComponentModel.Design.UndoEngine.UndoUnit> implementation.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.Design.UndoEngine" />
    <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationService" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UndoUnit (System.ComponentModel.Design.UndoEngine engine, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.Design.UndoEngine engine, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.UndoEngine.UndoUnit.#ctor(System.ComponentModel.Design.UndoEngine,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (engine As UndoEngine, name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UndoUnit(System::ComponentModel::Design::UndoEngine ^ engine, System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Design.UndoEngine.UndoUnit : System.ComponentModel.Design.UndoEngine * string -&gt; System.ComponentModel.Design.UndoEngine.UndoUnit" Usage="new System.ComponentModel.Design.UndoEngine.UndoUnit (engine, name)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="engine" Type="System.ComponentModel.Design.UndoEngine" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="engine"><span data-ttu-id="3dbeb-108">Die Rückgängig-Engine, die diese Rückgängigeinheit besitzt.</span><span class="sxs-lookup"><span data-stu-id="3dbeb-108">The undo engine that owns this undo unit.</span></span></param>
        <param name="name"><span data-ttu-id="3dbeb-109">Der Name dieser Rückgängigeinheit.</span><span class="sxs-lookup"><span data-stu-id="3dbeb-109">The name for this undo unit.</span></span></param>
        <summary><span data-ttu-id="3dbeb-110">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="3dbeb-110">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3dbeb-111"><paramref name="engine" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="3dbeb-111"><paramref name="engine" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.ComponentModel.Design.UndoEngine" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public virtual void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Close();" />
      <MemberSignature Language="F#" Value="abstract member Close : unit -&gt; unit&#xA;override this.Close : unit -&gt; unit" Usage="undoUnit.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3dbeb-112">Empfängt einen Aufruf von der Rückgängig-Engine, diese Einheit zu schließen.</span><span class="sxs-lookup"><span data-stu-id="3dbeb-112">Receives a call from the undo engine to close this unit.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3dbeb-113">Wenn eine Einheit geschlossen wird, können keine weiteren Ereignisse in die verschiedenen Ereignismethoden stammen.</span><span class="sxs-lookup"><span data-stu-id="3dbeb-113">When a unit is closed, no more events can come into its various event methods.</span></span> <span data-ttu-id="3dbeb-114">Die <xref:System.ComponentModel.Design.UndoEngine.UndoUnit> selbst dauert Aktion, um sicherzustellen, dass alle Ereignisse, die zurzeit geöffneten geschlossen werden.</span><span class="sxs-lookup"><span data-stu-id="3dbeb-114">The <xref:System.ComponentModel.Design.UndoEngine.UndoUnit> itself may take action here to ensure that any events that are currently open are closed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ComponentAdded">
      <MemberSignature Language="C#" Value="public virtual void ComponentAdded (System.ComponentModel.Design.ComponentEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ComponentAdded(class System.ComponentModel.Design.ComponentEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentAdded(System.ComponentModel.Design.ComponentEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ComponentAdded (e As ComponentEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ComponentAdded(System::ComponentModel::Design::ComponentEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member ComponentAdded : System.ComponentModel.Design.ComponentEventArgs -&gt; unit&#xA;override this.ComponentAdded : System.ComponentModel.Design.ComponentEventArgs -&gt; unit" Usage="undoUnit.ComponentAdded e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.Design.ComponentEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="3dbeb-115">Ein <see cref="T:System.ComponentModel.Design.ComponentEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="3dbeb-115">A <see cref="T:System.ComponentModel.Design.ComponentEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="3dbeb-116">Empfängt einen Aufruf vom <see cref="T:System.ComponentModel.Design.UndoEngine" /> als Antwort auf das <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentAdded" />-Ereignis.</span><span class="sxs-lookup"><span data-stu-id="3dbeb-116">Receives a call from the <see cref="T:System.ComponentModel.Design.UndoEngine" /> in response to a <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentAdded" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.Design.UndoEngine" />
        <altmember cref="T:System.ComponentModel.Design.IComponentChangeService" />
      </Docs>
    </Member>
    <Member MemberName="ComponentAdding">
      <MemberSignature Language="C#" Value="public virtual void ComponentAdding (System.ComponentModel.Design.ComponentEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ComponentAdding(class System.ComponentModel.Design.ComponentEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentAdding(System.ComponentModel.Design.ComponentEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ComponentAdding (e As ComponentEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ComponentAdding(System::ComponentModel::Design::ComponentEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member ComponentAdding : System.ComponentModel.Design.ComponentEventArgs -&gt; unit&#xA;override this.ComponentAdding : System.ComponentModel.Design.ComponentEventArgs -&gt; unit" Usage="undoUnit.ComponentAdding e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.Design.ComponentEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="3dbeb-117">Ein <see cref="T:System.ComponentModel.Design.ComponentEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="3dbeb-117">A <see cref="T:System.ComponentModel.Design.ComponentEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="3dbeb-118">Empfängt einen Aufruf vom <see cref="T:System.ComponentModel.Design.UndoEngine" /> als Antwort auf das <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentAdding" />-Ereignis.</span><span class="sxs-lookup"><span data-stu-id="3dbeb-118">Receives a call from the <see cref="T:System.ComponentModel.Design.UndoEngine" /> in response to a <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentAdding" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.Design.UndoEngine" />
        <altmember cref="T:System.ComponentModel.Design.IComponentChangeService" />
      </Docs>
    </Member>
    <Member MemberName="ComponentChanged">
      <MemberSignature Language="C#" Value="public virtual void ComponentChanged (System.ComponentModel.Design.ComponentChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ComponentChanged(class System.ComponentModel.Design.ComponentChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentChanged(System.ComponentModel.Design.ComponentChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ComponentChanged (e As ComponentChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ComponentChanged(System::ComponentModel::Design::ComponentChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member ComponentChanged : System.ComponentModel.Design.ComponentChangedEventArgs -&gt; unit&#xA;override this.ComponentChanged : System.ComponentModel.Design.ComponentChangedEventArgs -&gt; unit" Usage="undoUnit.ComponentChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.Design.ComponentChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="3dbeb-119">Ein <see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="3dbeb-119">A <see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="3dbeb-120">Empfängt einen Aufruf vom <see cref="T:System.ComponentModel.Design.UndoEngine" /> als Antwort auf das <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanged" />-Ereignis.</span><span class="sxs-lookup"><span data-stu-id="3dbeb-120">Receives a call from the <see cref="T:System.ComponentModel.Design.UndoEngine" /> in response to a <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanged" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.Design.UndoEngine" />
        <altmember cref="T:System.ComponentModel.Design.IComponentChangeService" />
      </Docs>
    </Member>
    <Member MemberName="ComponentChanging">
      <MemberSignature Language="C#" Value="public virtual void ComponentChanging (System.ComponentModel.Design.ComponentChangingEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ComponentChanging(class System.ComponentModel.Design.ComponentChangingEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentChanging(System.ComponentModel.Design.ComponentChangingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ComponentChanging (e As ComponentChangingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ComponentChanging(System::ComponentModel::Design::ComponentChangingEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member ComponentChanging : System.ComponentModel.Design.ComponentChangingEventArgs -&gt; unit&#xA;override this.ComponentChanging : System.ComponentModel.Design.ComponentChangingEventArgs -&gt; unit" Usage="undoUnit.ComponentChanging e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.Design.ComponentChangingEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="3dbeb-121">Ein <see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="3dbeb-121">A <see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="3dbeb-122">Empfängt einen Aufruf vom <see cref="T:System.ComponentModel.Design.UndoEngine" /> als Antwort auf das <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanging" />-Ereignis.</span><span class="sxs-lookup"><span data-stu-id="3dbeb-122">Receives a call from the <see cref="T:System.ComponentModel.Design.UndoEngine" /> in response to a <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanging" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.Design.UndoEngine" />
        <altmember cref="T:System.ComponentModel.Design.IComponentChangeService" />
      </Docs>
    </Member>
    <Member MemberName="ComponentRemoved">
      <MemberSignature Language="C#" Value="public virtual void ComponentRemoved (System.ComponentModel.Design.ComponentEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ComponentRemoved(class System.ComponentModel.Design.ComponentEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentRemoved(System.ComponentModel.Design.ComponentEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ComponentRemoved (e As ComponentEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ComponentRemoved(System::ComponentModel::Design::ComponentEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member ComponentRemoved : System.ComponentModel.Design.ComponentEventArgs -&gt; unit&#xA;override this.ComponentRemoved : System.ComponentModel.Design.ComponentEventArgs -&gt; unit" Usage="undoUnit.ComponentRemoved e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.Design.ComponentEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="3dbeb-123">Ein <see cref="T:System.ComponentModel.Design.ComponentEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="3dbeb-123">A <see cref="T:System.ComponentModel.Design.ComponentEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="3dbeb-124">Empfängt einen Aufruf vom <see cref="T:System.ComponentModel.Design.UndoEngine" /> als Antwort auf das <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentRemoved" />-Ereignis.</span><span class="sxs-lookup"><span data-stu-id="3dbeb-124">Receives a call from the <see cref="T:System.ComponentModel.Design.UndoEngine" /> in response to a <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentRemoved" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.Design.UndoEngine" />
        <altmember cref="T:System.ComponentModel.Design.IComponentChangeService" />
      </Docs>
    </Member>
    <Member MemberName="ComponentRemoving">
      <MemberSignature Language="C#" Value="public virtual void ComponentRemoving (System.ComponentModel.Design.ComponentEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ComponentRemoving(class System.ComponentModel.Design.ComponentEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentRemoving(System.ComponentModel.Design.ComponentEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ComponentRemoving (e As ComponentEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ComponentRemoving(System::ComponentModel::Design::ComponentEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member ComponentRemoving : System.ComponentModel.Design.ComponentEventArgs -&gt; unit&#xA;override this.ComponentRemoving : System.ComponentModel.Design.ComponentEventArgs -&gt; unit" Usage="undoUnit.ComponentRemoving e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.Design.ComponentEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="3dbeb-125">Ein <see cref="T:System.ComponentModel.Design.ComponentEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="3dbeb-125">A <see cref="T:System.ComponentModel.Design.ComponentEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="3dbeb-126">Empfängt einen Aufruf vom <see cref="T:System.ComponentModel.Design.UndoEngine" /> als Antwort auf das <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentRemoving" />-Ereignis.</span><span class="sxs-lookup"><span data-stu-id="3dbeb-126">Receives a call from the <see cref="T:System.ComponentModel.Design.UndoEngine" /> in response to a <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentRemoving" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.Design.UndoEngine" />
        <altmember cref="T:System.ComponentModel.Design.IComponentChangeService" />
      </Docs>
    </Member>
    <Member MemberName="ComponentRename">
      <MemberSignature Language="C#" Value="public virtual void ComponentRename (System.ComponentModel.Design.ComponentRenameEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ComponentRename(class System.ComponentModel.Design.ComponentRenameEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentRename(System.ComponentModel.Design.ComponentRenameEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ComponentRename (e As ComponentRenameEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ComponentRename(System::ComponentModel::Design::ComponentRenameEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member ComponentRename : System.ComponentModel.Design.ComponentRenameEventArgs -&gt; unit&#xA;override this.ComponentRename : System.ComponentModel.Design.ComponentRenameEventArgs -&gt; unit" Usage="undoUnit.ComponentRename e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.Design.ComponentRenameEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="3dbeb-127">Ein <see cref="T:System.ComponentModel.Design.ComponentRenameEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="3dbeb-127">A <see cref="T:System.ComponentModel.Design.ComponentRenameEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="3dbeb-128">Empfängt einen Aufruf vom <see cref="T:System.ComponentModel.Design.UndoEngine" /> als Antwort auf das <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentRename" />-Ereignis.</span><span class="sxs-lookup"><span data-stu-id="3dbeb-128">Receives a call from the <see cref="T:System.ComponentModel.Design.UndoEngine" /> in response to a <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentRename" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.Design.UndoEngine" />
        <altmember cref="T:System.ComponentModel.Design.IComponentChangeService" />
      </Docs>
    </Member>
    <Member MemberName="GetService">
      <MemberSignature Language="C#" Value="protected object GetService (Type serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance object GetService(class System.Type serviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.UndoEngine.UndoUnit.GetService(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetService (serviceType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Object ^ GetService(Type ^ serviceType);" />
      <MemberSignature Language="F#" Value="member this.GetService : Type -&gt; obj" Usage="undoUnit.GetService serviceType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceType"><span data-ttu-id="3dbeb-129">Der Typ des abzurufenden Diensts.</span><span class="sxs-lookup"><span data-stu-id="3dbeb-129">The type of service to retrieve.</span></span></param>
        <summary><span data-ttu-id="3dbeb-130">Ruft eine Instanz des angeforderten Diensts ab.</span><span class="sxs-lookup"><span data-stu-id="3dbeb-130">Gets an instance of the requested service.</span></span></summary>
        <returns><span data-ttu-id="3dbeb-131">Eine Instanz des angegebenen Diensts oder <see langword="null" />, wenn der Dienst nicht aufgelöst werden kann.</span><span class="sxs-lookup"><span data-stu-id="3dbeb-131">An instance of the given service, or <see langword="null" /> if the service cannot be resolved.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEmpty">
      <MemberSignature Language="C#" Value="public virtual bool IsEmpty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEmpty" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.UndoEngine.UndoUnit.IsEmpty" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsEmpty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsEmpty { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEmpty : bool" Usage="System.ComponentModel.Design.UndoEngine.UndoUnit.IsEmpty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3dbeb-132">Ruft einen Wert ab, der angibt, ob die <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /> keine Ereignisse enthält.</span><span class="sxs-lookup"><span data-stu-id="3dbeb-132">Gets a value indicating whether the <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /> contains no events.</span></span></summary>
        <value><span data-ttu-id="3dbeb-133"><see langword="true" />, wenn die <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /> keine Ereignisse enthält, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="3dbeb-133"><see langword="true" /> if the <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /> contains no events; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3dbeb-134">Die rückgängig-Engine kann es sich um leere Einheiten verwerfen.</span><span class="sxs-lookup"><span data-stu-id="3dbeb-134">The undo engine may discard empty units.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.UndoEngine.UndoUnit.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.ComponentModel.Design.UndoEngine.UndoUnit.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3dbeb-135">Ruft den Namen der <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /> ab.</span><span class="sxs-lookup"><span data-stu-id="3dbeb-135">Gets the name of the <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" />.</span></span></summary>
        <value><span data-ttu-id="3dbeb-136">Der Name des <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" />.</span><span class="sxs-lookup"><span data-stu-id="3dbeb-136">The name of the <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="undoUnit.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3dbeb-137">Gibt einen <see cref="T:System.String" /> zurück, der den aktuellen Namen der Einheit darstellt.</span><span class="sxs-lookup"><span data-stu-id="3dbeb-137">Returns a <see cref="T:System.String" /> that represents the current name of the unit.</span></span></summary>
        <returns><span data-ttu-id="3dbeb-138">Ein <see cref="T:System.String" />, der den aktuellen Namen der Einheit darstellt.</span><span class="sxs-lookup"><span data-stu-id="3dbeb-138">A <see cref="T:System.String" /> that represents the current name of the unit.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Undo">
      <MemberSignature Language="C#" Value="public void Undo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Undo() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo" />
      <MemberSignature Language="VB.NET" Value="Public Sub Undo ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Undo();" />
      <MemberSignature Language="F#" Value="member this.Undo : unit -&gt; unit" Usage="undoUnit.Undo " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3dbeb-139">Führt eine Rückgängig- oder Wiederherstellaktion aus.</span><span class="sxs-lookup"><span data-stu-id="3dbeb-139">Performs an undo or redo action.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3dbeb-140">Rückgängig-Aktionen zum Rückgängigmachen zwischen sich selbst, und wiederholen Sie die Zustände, daher ist das Aufrufen <xref:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo%2A> zweimal legt das Objekt wieder in den ursprünglichen Zustand fest.</span><span class="sxs-lookup"><span data-stu-id="3dbeb-140">Undo actions toggle themselves between undo and redo states, so calling <xref:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo%2A> twice sets the object back to its original state.</span></span>  
  
 <span data-ttu-id="3dbeb-141">Die <xref:System.ComponentModel.Design.UndoEngine.UndoUnit> Klasse anfänglich setzt voraus, dass die Arbeitsschritt bereits geschehen ist, damit der erste Aufruf von <xref:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo%2A> Arbeit macht.</span><span class="sxs-lookup"><span data-stu-id="3dbeb-141">The <xref:System.ComponentModel.Design.UndoEngine.UndoUnit> class initially assumes that the undoable work has already been done, so the first call to <xref:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo%2A> undoes the work.</span></span> <span data-ttu-id="3dbeb-142">Der nächste Aufruf macht den vorherigen Rückgängig-Vorgang, die eine Wiederholung ausführen.</span><span class="sxs-lookup"><span data-stu-id="3dbeb-142">The next call undoes the previous undo operation, performing a redo.</span></span>  
  
 <span data-ttu-id="3dbeb-143">Die <xref:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo%2A> Methodenaufrufe der <xref:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoCore%2A> Methode, um ein Rückgängig-Vorgang auszuführen.</span><span class="sxs-lookup"><span data-stu-id="3dbeb-143">The <xref:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo%2A> method calls the <xref:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoCore%2A> method to perform an undo operation.</span></span> <span data-ttu-id="3dbeb-144">Die <xref:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo%2A> Methode selbst funktioniert, um die Erhaltung des konsistenten Zustands innerhalb der <xref:System.ComponentModel.Design.UndoEngine.UndoUnit>, dies gilt auch beim Auftreten einer Ausnahme wird ausgelöst, indem <xref:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoCore%2A>.</span><span class="sxs-lookup"><span data-stu-id="3dbeb-144">The <xref:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo%2A> method itself works to maintain consistent state within the <xref:System.ComponentModel.Design.UndoEngine.UndoUnit>, even in the event of an exception thrown by <xref:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoCore%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><span data-ttu-id="3dbeb-145"><para>Rufen Sie nicht die <see cref="M:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoCore" /> Methode direkt, wenn Sie möchten, aber immer aufrufen, überschreiben die <see langword="public" /> <see cref="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo" /> Methode, um die Rückgängig-Vorgänge. Die <see cref="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo" /> Methode benachrichtigt den rückgängig-Engine zum Anhalten der Rückgängig-Daten erfassen, bis der aktuelle Rückgängig-Vorgang abgeschlossen ist. Dadurch wird verhindert, dass neue Rückgängig-Komponenten, die als Reaktion auf diese Einheit, die Arbeit erstellt werden.</para></span><span class="sxs-lookup"><span data-stu-id="3dbeb-145"><para>Do not call the <see cref="M:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoCore" /> method directly; override it if you want, but always call the <see langword="public" /><see cref="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo" /> method to perform undo work. The <see cref="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo" /> method notifies the undo engine to suspend undo data gathering until the current undo operation is completed. This prevents new undo units from being created in response to this unit doing work.</para></span></span></block>
        <altmember cref="T:System.ComponentModel.Design.UndoEngine" />
        <altmember cref="M:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoCore" />
        <altmember cref="T:System.ComponentModel.Design.IComponentChangeService" />
      </Docs>
    </Member>
    <Member MemberName="UndoCore">
      <MemberSignature Language="C#" Value="protected virtual void UndoCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void UndoCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub UndoCore ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void UndoCore();" />
      <MemberSignature Language="F#" Value="abstract member UndoCore : unit -&gt; unit&#xA;override this.UndoCore : unit -&gt; unit" Usage="undoUnit.UndoCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3dbeb-146">Wird von <see cref="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo" /> aufgerufen, um eine Rückgängigaktion auszuführen.</span><span class="sxs-lookup"><span data-stu-id="3dbeb-146">Called by <see cref="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo" /> to perform an undo action.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3dbeb-147">Die <xref:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo%2A> Methodenaufrufe der <xref:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoCore%2A> Methode, um ein Rückgängig-Vorgang auszuführen.</span><span class="sxs-lookup"><span data-stu-id="3dbeb-147">The <xref:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo%2A> method calls the <xref:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoCore%2A> method to perform an undo operation.</span></span> <span data-ttu-id="3dbeb-148">Die <xref:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo%2A> Methode selbst funktioniert, um die Erhaltung des konsistenten Zustands innerhalb der <xref:System.ComponentModel.Design.UndoEngine.UndoUnit>, dies gilt auch beim Auftreten einer Ausnahme wird ausgelöst, indem <xref:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoCore%2A>.</span><span class="sxs-lookup"><span data-stu-id="3dbeb-148">The <xref:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo%2A> method itself works to maintain consistent state within the <xref:System.ComponentModel.Design.UndoEngine.UndoUnit>, even in the event of an exception thrown by <xref:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoCore%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><span data-ttu-id="3dbeb-149"><para>Rufen Sie nicht die <see cref="M:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoCore" /> Methode direkt, wenn Sie möchten, aber immer aufrufen, überschreiben die <see langword="public" /> <see cref="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo" /> Methode, um die Rückgängig-Vorgänge. Die <see cref="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo" /> Methode benachrichtigt den rückgängig-Engine zum Anhalten der Rückgängig-Vorgang Daten erfassen, bis der aktuelle Rückgängig-Vorgang abgeschlossen ist. Dadurch wird verhindert, dass neue Rückgängig-Komponenten, die als Reaktion auf diese Einheit, die Arbeit erstellt werden.</para></span><span class="sxs-lookup"><span data-stu-id="3dbeb-149"><para>Do not call the <see cref="M:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoCore" /> method directly; override it if you want, but always call the <see langword="public" /><see cref="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo" /> method to perform undo work. The <see cref="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo" /> method notifies the undo engine to suspend undo-operation data gathering until the current undo operation is completed. This prevents new undo units from being created in response to this unit doing work.</para></span></span></block>
        <altmember cref="T:System.ComponentModel.Design.UndoEngine" />
        <altmember cref="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo" />
        <altmember cref="T:System.ComponentModel.Design.IComponentChangeService" />
      </Docs>
    </Member>
    <Member MemberName="UndoEngine">
      <MemberSignature Language="C#" Value="protected System.ComponentModel.Design.UndoEngine UndoEngine { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Design.UndoEngine UndoEngine" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoEngine" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property UndoEngine As UndoEngine" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::ComponentModel::Design::UndoEngine ^ UndoEngine { System::ComponentModel::Design::UndoEngine ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UndoEngine : System.ComponentModel.Design.UndoEngine" Usage="System.ComponentModel.Design.UndoEngine.UndoUnit.UndoEngine" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.UndoEngine</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3dbeb-150">Ruft das übergeordnete <see cref="P:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoEngine" /> ab.</span><span class="sxs-lookup"><span data-stu-id="3dbeb-150">Gets the parent <see cref="P:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoEngine" />.</span></span></summary>
        <value><span data-ttu-id="3dbeb-151">Das <see cref="P:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoEngine" />, an das <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /> angefügt ist.</span><span class="sxs-lookup"><span data-stu-id="3dbeb-151">The <see cref="P:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoEngine" /> to which this <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /> is attached.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>