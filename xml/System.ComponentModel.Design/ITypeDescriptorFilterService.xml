<Type Name="ITypeDescriptorFilterService" FullName="System.ComponentModel.Design.ITypeDescriptorFilterService">
  <Metadata><Meta Name="ms.openlocfilehash" Value="560d1d0f3f0ac591966c66d848c794269545cf1d" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51919432" /></Metadata><TypeSignature Language="C#" Value="public interface ITypeDescriptorFilterService" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ITypeDescriptorFilterService" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.ITypeDescriptorFilterService" />
  <TypeSignature Language="VB.NET" Value="Public Interface ITypeDescriptorFilterService" />
  <TypeSignature Language="C++ CLI" Value="public interface class ITypeDescriptorFilterService" />
  <TypeSignature Language="F#" Value="type ITypeDescriptorFilterService = interface" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Stellt eine Schnittstelle bereit, mit der der Satz der Memberdeskriptoren für eine Komponente im Entwurfsmodus bearbeitet werden kann.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.ComponentModel.Design.ITypeDescriptorFilterService> Schnittstelle stellt eine Schnittstelle, über die Änderung der Eigenschaften, Ereignisse und Attribute auf Klassenebene, einer Komponente zur Entwurfszeit, bereit. Diese Änderung wird durch den Satz von Deskriptoren, die durch eine Komponente stellt eine <xref:System.ComponentModel.TypeDescriptor>. Der Typdeskriptor fragt eine Komponentensite für die <xref:System.ComponentModel.Design.ITypeDescriptorFilterService> service und übergibt, sofern er vorhanden ist, der Typdeskriptor werden alle Metadaten, die sie für diesen Dienst gesammelt hat. Der Dienst können Sie dann die Metadaten ändern hinzufügen, entfernen und Ändern von vorhandenen Eigenschaften der Komponente.  
  
 Beispielsweise können die Eigenschaften einer Komponente geändert werden, durch einen Aufruf der <xref:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties%2A> Methode. Der Filterdienst ruft ein Wörterbuch mit Eigenschaftennamen und die eigenschaftsbeschreibungen des Typs <xref:System.ComponentModel.PropertyDescriptor>. Die Änderungen werden mit der folgenden Logik implementiert.  
  
|Änderung|Implementierung|  
|------------------|--------------------|  
|Entfernen|Löschen Sie den entsprechenden Eintrag im Wörterbuch.|  
|Addition|Fügen Sie den entsprechenden Eintrag in das Wörterbuch hinzu.|  
|Der Typ der Änderung|Rufen Sie vorhandene Eigenschaft-Deskriptor-Methoden auf, ersetzen Sie die zugeordnete Eigenschaft Beschreibungseintrag oder Ersetzen Sie das gesamte Schlüssel/Wert-Paar im Wörterbuch.|  
  
 Der Rückgabewert von <xref:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties%2A> bestimmt, ob dieser Satz von Eigenschaften behoben wurde. Wenn diese Methode zurückgibt `true`, <xref:System.ComponentModel.TypeDescriptor> für diese Komponente die Ergebnisse zwischengespeichert werden kann. Dieser Cache wird verwaltet, bis entweder die Komponente Garbage Collection ist oder die <xref:System.ComponentModel.TypeDescriptor.Refresh%2A> des Typdeskriptors wird aufgerufen.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, einen Designer, verwendet der <xref:System.ComponentModel.Design.ITypeDescriptorFilterService> zum Filtern der attributauflistung der jedem neuen oder vorhandenen <xref:System.Windows.Forms.Button> ein Designer-Attribut für einen neuen Designer vor dem Laden oder das erneute Laden der Designers für die Schaltfläche hinzuzufügen.  
  
 Verwenden Sie das Beispiel, fügen Sie den Code zu einer Windows Forms-Projekt, und Laden Sie die Komponenten in der Klassenbibliothek in die Toolbox.  
  
 Siehe auch [Exemplarische Vorgehensweise: Automatisches Füllen der Toolbox mit benutzerdefinierten Komponenten](https://msdn.microsoft.com/library/fw694kde\(v=vs.110\).aspx).  
  
 Fügen Sie dem Formular einige Schaltflächen hinzu. Hinzufügen einer `ButtonDesignerFilterComponent` zum Formular, und er wird in der Komponentenleiste angezeigt. Die `ButtonDesignerFilterComponent` fügen eine `ButtonDesignerFilterService`, implementiert <xref:System.ComponentModel.Design.ITypeDescriptorFilterService>, als eine Entwurfsmodus-Dienstanbieter. Vorhandene oder neue <xref:System.Windows.Forms.Button> Objekte auf dem Formular Farbe, die nach dem Durchlauf beginnt die `ButtonDesignerFilterService` ersetzt den Designer für jede vorhandene und neue Schaltfläche mit einem `ColorCycleButtonDesigner`. Die Farbe der Schaltflächen Zyklus beim Bewegen den Mauszeiger darüber, und klicken Sie alternativ weiterhin Durchlauf oder Zurücksetzen die Farben Hintergrund- und Vordergrundfarben für `MouseLeave` Ereignisse. Neue <xref:System.Windows.Forms.Button> Objekte erhält die `ColorCycleButtonDesigner` über die <xref:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes%2A> -Methode der der `ButtonDesignerFilterService` , wurde geladen, bis die `ButtonDesignerFilterComponent` freigegeben wird und ersetzt die ursprüngliche <xref:System.ComponentModel.Design.ITypeDescriptorFilterService>. Die `ColorCycleButton` Klasse in diesem Beispiel wird eine <xref:System.Windows.Forms.Button> zugeordneten eine `ColorCycleButtonDesigner`.  
  
 [!code-cpp[ITypeDescriptorFilterService#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ITypeDescriptorFilterService/CPP/source.cpp#1)]
 [!code-csharp[ITypeDescriptorFilterService#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ITypeDescriptorFilterService/CS/source.cs#1)]
 [!code-vb[ITypeDescriptorFilterService#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ITypeDescriptorFilterService/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>Um die Memberdeskriptoren verfügbar gemacht werden, indem eine <see cref="T:System.ComponentModel.TypeDescriptor" />, implementieren diese Schnittstelle für eine Komponente, und überschreiben die <see cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)" />, <see cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)" />, oder <see cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)" /> Methoden dieser Klasse, um die Attribute, Eigenschaften oder Ereignisse zu filtern.</para></block>
    <altmember cref="T:System.ComponentModel.TypeDescriptor" />
    <altmember cref="T:System.ComponentModel.EventDescriptor" />
    <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
    <altmember cref="T:System.Attribute" />
    <altmember cref="T:System.Collections.IDictionary" />
  </Docs>
  <Members>
    <Member MemberName="FilterAttributes">
      <MemberSignature Language="C#" Value="public bool FilterAttributes (System.ComponentModel.IComponent component, System.Collections.IDictionary attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool FilterAttributes(class System.ComponentModel.IComponent component, class System.Collections.IDictionary attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function FilterAttributes (component As IComponent, attributes As IDictionary) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool FilterAttributes(System::ComponentModel::IComponent ^ component, System::Collections::IDictionary ^ attributes);" />
      <MemberSignature Language="F#" Value="abstract member FilterAttributes : System.ComponentModel.IComponent * System.Collections.IDictionary -&gt; bool" Usage="iTypeDescriptorFilterService.FilterAttributes (component, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
        <Parameter Name="attributes" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="component">Die Komponente, deren Attribute gefiltert werden sollen.</param>
        <param name="attributes">Ein Attributwörterbuch, das geändert werden kann.</param>
        <summary>Filtert die Attribute, die eine Komponente über einen <see cref="T:System.ComponentModel.TypeDescriptor" /> verfügbar macht.</summary>
        <returns><see langword="true" />, wenn der Satz von gefilterten Attributen zwischengespeichert werden soll; <see langword="false" />, wenn der Filterdienst eine weitere Abfrage ausführen muss.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird aufgerufen, wenn ein Benutzer einen Satz von Attributen für eine Komponente anfordert. Die Attribute werden hinzugefügt, die dem Wörterbuch mit des Attributs des <xref:System.Attribute.TypeId%2A> als Schlüssel und das tatsächliche Attribut als Wert. Während der Implementierung dieses Diensts können hinzufügen, entfernen oder Ändern von vorhandenen Attributeinträge im Wörterbuch.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Zurückgeben <see langword="false" /> nur, wenn erforderlich, da wiederholte Abfragen der Filter-Dienst-Deskriptor können die Leistung reduzieren.</para></block>
        <altmember cref="T:System.Attribute" />
        <altmember cref="P:System.Attribute.TypeId" />
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
    <Member MemberName="FilterEvents">
      <MemberSignature Language="C#" Value="public bool FilterEvents (System.ComponentModel.IComponent component, System.Collections.IDictionary events);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool FilterEvents(class System.ComponentModel.IComponent component, class System.Collections.IDictionary events) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function FilterEvents (component As IComponent, events As IDictionary) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool FilterEvents(System::ComponentModel::IComponent ^ component, System::Collections::IDictionary ^ events);" />
      <MemberSignature Language="F#" Value="abstract member FilterEvents : System.ComponentModel.IComponent * System.Collections.IDictionary -&gt; bool" Usage="iTypeDescriptorFilterService.FilterEvents (component, events)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
        <Parameter Name="events" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="component">Die Komponente, deren Ereignisse gefiltert werden sollen.</param>
        <param name="events">Ein Ereigniswörterbuch, das geändert werden kann.</param>
        <summary>Filtert die Ereignisse, die eine Komponente über einen <see cref="T:System.ComponentModel.TypeDescriptor" /> verfügbar macht.</summary>
        <returns><see langword="true" />, wenn der Satz von gefilterten Ereignissen zwischengespeichert werden soll; <see langword="false" />, wenn der Filterdienst eine neue Abfrage ausführen muss.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird aufgerufen, wenn ein Benutzer einen Satz von Ereignissen für eine Komponente anfordert. Die Ereignisse werden hinzugefügt, die dem Wörterbuch mit den Ereignisnamen als Schlüssel und den entsprechenden <xref:System.ComponentModel.EventDescriptor> Objekte als Werte. Während der Implementierung dieses Diensts können hinzufügen, entfernen oder ändern die Ereigniseinträge im Wörterbuch.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Zurückgeben <see langword="false" /> nur, wenn erforderlich, da wiederholte Abfragen der Filter-Dienst-Deskriptor können die Leistung reduzieren.</para></block>
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
    <Member MemberName="FilterProperties">
      <MemberSignature Language="C#" Value="public bool FilterProperties (System.ComponentModel.IComponent component, System.Collections.IDictionary properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool FilterProperties(class System.ComponentModel.IComponent component, class System.Collections.IDictionary properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function FilterProperties (component As IComponent, properties As IDictionary) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool FilterProperties(System::ComponentModel::IComponent ^ component, System::Collections::IDictionary ^ properties);" />
      <MemberSignature Language="F#" Value="abstract member FilterProperties : System.ComponentModel.IComponent * System.Collections.IDictionary -&gt; bool" Usage="iTypeDescriptorFilterService.FilterProperties (component, properties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
        <Parameter Name="properties" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="component">Die Komponente, deren Eigenschaften gefiltert werden sollen.</param>
        <param name="properties">Ein Eigenschaftenwörterbuch, das geändert werden kann.</param>
        <summary>Filtert die Eigenschaften, die eine Komponente über einen <see cref="T:System.ComponentModel.TypeDescriptor" /> verfügbar macht.</summary>
        <returns><see langword="true" />, wenn der Satz von gefilterten Eigenschaften zwischengespeichert werden soll; <see langword="false" />, wenn der Filterdienst eine neue Abfrage ausführen muss.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird aufgerufen, wenn ein Benutzer einen Satz von Eigenschaften für eine Komponente anfordert. Die Eigenschaften werden hinzugefügt, die dem Wörterbuch mit den Eigenschaftennamen als Schlüssel und den entsprechenden <xref:System.ComponentModel.PropertyDescriptor> Objekte als Werte. Während der Implementierung dieses Diensts können hinzufügen, entfernen oder Ändern der Eigenschafteneinträge im Wörterbuch.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Zurückgeben <see langword="false" /> nur, wenn erforderlich, da wiederholte Abfragen der Filter-Dienst-Deskriptor können die Leistung reduzieren.</para></block>
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
  </Members>
</Type>