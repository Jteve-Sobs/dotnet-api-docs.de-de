<Type Name="ITypeDescriptorFilterService" FullName="System.ComponentModel.Design.ITypeDescriptorFilterService">
  <Metadata><Meta Name="ms.openlocfilehash" Value="66b92e907ec18eae57c989be8bde76bb6a3837e2" /><Meta Name="ms.sourcegitcommit" Value="f828282420515ef705e09bbdb6c22116df98b5e3" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="83413351" /></Metadata><TypeSignature Language="C#" Value="public interface ITypeDescriptorFilterService" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ITypeDescriptorFilterService" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.ITypeDescriptorFilterService" />
  <TypeSignature Language="VB.NET" Value="Public Interface ITypeDescriptorFilterService" />
  <TypeSignature Language="C++ CLI" Value="public interface class ITypeDescriptorFilterService" />
  <TypeSignature Language="F#" Value="type ITypeDescriptorFilterService = interface" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.ComponentModel.TypeConverter" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Interfaces />
  <Docs>
    <summary>Stellt eine Schnittstelle bereit, mit der der Satz der Memberdeskriptoren für eine Komponente im Entwurfsmodus bearbeitet werden kann.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die- <xref:System.ComponentModel.Design.ITypeDescriptorFilterService> Schnittstelle stellt eine Schnittstelle bereit, die das Ändern der Eigenschaften, Ereignisse und Attribute auf Klassenebene einer Komponente zur Entwurfszeit ermöglicht. Diese Änderung erfolgt über den Satz von Deskriptoren, die eine Komponente über einen bereitstellt <xref:System.ComponentModel.TypeDescriptor> . Der Typdeskriptor fragt die Website einer Komponente nach dem <xref:System.ComponentModel.Design.ITypeDescriptorFilterService> Dienst ab. falls vorhanden, übergibt der Typdeskriptor alle Metadaten, die er an diesen Dienst gesammelt hat. Der Dienst kann dann die Metadaten durch Hinzufügen, entfernen und Ändern vorhandener Eigenschaften der Komponente ändern.  
  
 Beispielsweise können die Eigenschaften einer Komponente durch einen aufzurufenden-Methode geändert werden <xref:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties%2A> . Der Filter Dienst Ruft ein Wörterbuch ab, das Eigenschaftsnamen und deren Eigenschafts Deskriptoren vom Typ enthält <xref:System.ComponentModel.PropertyDescriptor> . Die Änderungen werden mithilfe der folgenden Logik implementiert.  
  
|Änderung|Implementierung|  
|------------------|--------------------|  
|Entfernen|Löschen Sie den entsprechenden Eintrag im Wörterbuch.|  
|Addition|Fügen Sie dem Wörterbuch den entsprechenden Eintrag hinzu.|  
|Geändert|Ruft vorhandene Eigenschaften deskriptormethoden auf, ersetzt den zugehörigen Eigenschaften deskriptoreintrag oder ersetzt das gesamte Eigenschafts Schlüssel-Wert-Paar im Wörterbuch.|  
  
 Der Rückgabewert von <xref:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties%2A> bestimmt, ob dieser Satz von Eigenschaften festgelegt ist. Wenn diese Methode zurückgibt `true` , <xref:System.ComponentModel.TypeDescriptor> kann der für diese Komponente die Ergebnisse Zwischenspeichern. Dieser Cache wird so lange beibehalten, bis entweder eine Garbage Collection der Komponente erfolgt oder die- <xref:System.ComponentModel.TypeDescriptor.Refresh%2A> Methode des Typdeskriptors aufgerufen wird.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird ein Designer veranschaulicht, der mithilfe von die Attribut Auflistung <xref:System.ComponentModel.Design.ITypeDescriptorFilterService> von neuen oder vorhandenen filtert <xref:System.Windows.Forms.Button> , um ein Designer Attribut für einen neuen Designer hinzuzufügen, bevor der Designer für die Schaltfläche geladen oder erneut geladen wird.  
  
 Um das Beispiel zu verwenden, fügen Sie den Code zu einem Windows Forms Projekt hinzu, und laden Sie die Komponenten aus der Klassenbibliothek in die Toolbox.  
  
 Siehe auch Exemplarische Vorgehensweise [: Automatisches Auffüllen der Toolbox mit benutzerdefinierten Komponenten](https://msdn.microsoft.com/library/fw694kde\(v=vs.110\).aspx).  
  
 Fügen Sie dem Formular einige Schaltflächen hinzu. Fügen Sie dem Formular eine hinzu `ButtonDesignerFilterComponent` , die in der Komponenten Leiste angezeigt wird. `ButtonDesignerFilterComponent`Fügt einen hinzu `ButtonDesignerFilterService` , der implementiert <xref:System.ComponentModel.Design.ITypeDescriptorFilterService> , als Dienstanbieter für den Entwurfs Modus. Vorhandene oder neue <xref:System.Windows.Forms.Button> Objekte im Formular beginnen mit dem Farbrad, nachdem der `ButtonDesignerFilterService` Designer für jede vorhandene und neue Schaltfläche mit einem ersetzt hat `ColorCycleButtonDesigner` . Wenn Sie den Mauszeiger darüber bewegen, werden die Schaltflächen mit dem Mauszeiger über die Schaltflächen angezeigt, und Sie können die Hintergrund-und Vorder Grundfarben für Ereignisse auch fortsetzen `MouseLeave` . Neue <xref:System.Windows.Forms.Button> Objekte werden `ColorCycleButtonDesigner` über die-Methode des-Objekts übergeben, das geladen wurde <xref:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes%2A> `ButtonDesignerFilterService` , bis das verworfen `ButtonDesignerFilterComponent` wird und das ursprüngliche ersetzt <xref:System.ComponentModel.Design.ITypeDescriptorFilterService> . Die- `ColorCycleButton` Klasse in diesem Beispiel ist eine, die <xref:System.Windows.Forms.Button> einem zugeordnet ist `ColorCycleButtonDesigner` .  
  
 [!code-cpp[ITypeDescriptorFilterService#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ITypeDescriptorFilterService/CPP/source.cpp#1)]
 [!code-csharp[ITypeDescriptorFilterService#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ITypeDescriptorFilterService/CS/source.cs#1)]
 [!code-vb[ITypeDescriptorFilterService#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ITypeDescriptorFilterService/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>Um die von einem verfügbar gemachten Element Deskriptoren zu filtern <see cref="T:System.ComponentModel.TypeDescriptor" /> , implementieren Sie diese Schnittstelle für eine Komponente, und überschreiben Sie die <see cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)" /> <see cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)" /> Methoden, oder <see cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)" /> dieser Klasse, um Attribute, Ereignisse bzw. Eigenschaften zu filtern.</para></block>
    <altmember cref="T:System.ComponentModel.TypeDescriptor" />
    <altmember cref="T:System.ComponentModel.EventDescriptor" />
    <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
    <altmember cref="T:System.Attribute" />
    <altmember cref="T:System.Collections.IDictionary" />
  </Docs>
  <Members>
    <Member MemberName="FilterAttributes">
      <MemberSignature Language="C#" Value="public bool FilterAttributes (System.ComponentModel.IComponent component, System.Collections.IDictionary attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool FilterAttributes(class System.ComponentModel.IComponent component, class System.Collections.IDictionary attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function FilterAttributes (component As IComponent, attributes As IDictionary) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool FilterAttributes(System::ComponentModel::IComponent ^ component, System::Collections::IDictionary ^ attributes);" />
      <MemberSignature Language="F#" Value="abstract member FilterAttributes : System.ComponentModel.IComponent * System.Collections.IDictionary -&gt; bool" Usage="iTypeDescriptorFilterService.FilterAttributes (component, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
        <Parameter Name="attributes" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="component">Die Komponente, deren Attribute gefiltert werden sollen.</param>
        <param name="attributes">Ein Attributwörterbuch, das geändert werden kann.</param>
        <summary>Filtert die Attribute, die eine Komponente über einen <see cref="T:System.ComponentModel.TypeDescriptor" /> verfügbar macht.</summary>
        <returns><see langword="true" />, wenn der Satz von gefilterten Attributen zwischengespeichert werden soll; <see langword="false" />, wenn der Filterdienst eine weitere Abfrage ausführen muss.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird aufgerufen, wenn ein Benutzer einen Satz von Attributen für eine Komponente anfordert. Die Attribute werden dem Wörterbuch hinzugefügt, wobei die Schlüssel des Attributs <xref:System.Attribute.TypeId%2A> als Schlüssel und das tatsächliche Attribut als Wert dienen. Implementierer dieses Dienstanbieter können vorhandene Attribut Einträge im Wörterbuch hinzufügen, entfernen oder ändern.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><see langword="false" />Nur bei Bedarf zurückgeben, da die Leistung durch wiederholte Abfragen des typdeskriptorfilterdienstanbieter beeinträchtigt werden kann.</para></block>
        <altmember cref="T:System.Attribute" />
        <altmember cref="P:System.Attribute.TypeId" />
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
    <Member MemberName="FilterEvents">
      <MemberSignature Language="C#" Value="public bool FilterEvents (System.ComponentModel.IComponent component, System.Collections.IDictionary events);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool FilterEvents(class System.ComponentModel.IComponent component, class System.Collections.IDictionary events) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function FilterEvents (component As IComponent, events As IDictionary) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool FilterEvents(System::ComponentModel::IComponent ^ component, System::Collections::IDictionary ^ events);" />
      <MemberSignature Language="F#" Value="abstract member FilterEvents : System.ComponentModel.IComponent * System.Collections.IDictionary -&gt; bool" Usage="iTypeDescriptorFilterService.FilterEvents (component, events)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
        <Parameter Name="events" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="component">Die Komponente, deren Ereignisse gefiltert werden sollen.</param>
        <param name="events">Ein Ereigniswörterbuch, das geändert werden kann.</param>
        <summary>Filtert die Ereignisse, die eine Komponente über einen <see cref="T:System.ComponentModel.TypeDescriptor" /> verfügbar macht.</summary>
        <returns><see langword="true" />, wenn der Satz von gefilterten Ereignissen zwischengespeichert werden soll; <see langword="false" />, wenn der Filterdienst eine neue Abfrage ausführen muss.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird aufgerufen, wenn ein Benutzer eine Reihe von Ereignissen für eine Komponente anfordert. Die Ereignisse werden dem Wörterbuch mit den Ereignis Namen als Schlüssel und den entsprechenden <xref:System.ComponentModel.EventDescriptor> Objekten als Werte hinzugefügt. Implementierer dieses Dienstanbieter können Ereignis Einträge im Wörterbuch hinzufügen, entfernen oder ändern.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><see langword="false" />Nur bei Bedarf zurückgeben, da die Leistung durch wiederholte Abfragen des typdeskriptorfilterdienstanbieter beeinträchtigt werden kann.</para></block>
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
    <Member MemberName="FilterProperties">
      <MemberSignature Language="C#" Value="public bool FilterProperties (System.ComponentModel.IComponent component, System.Collections.IDictionary properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool FilterProperties(class System.ComponentModel.IComponent component, class System.Collections.IDictionary properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function FilterProperties (component As IComponent, properties As IDictionary) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool FilterProperties(System::ComponentModel::IComponent ^ component, System::Collections::IDictionary ^ properties);" />
      <MemberSignature Language="F#" Value="abstract member FilterProperties : System.ComponentModel.IComponent * System.Collections.IDictionary -&gt; bool" Usage="iTypeDescriptorFilterService.FilterProperties (component, properties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
        <Parameter Name="properties" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="component">Die Komponente, deren Eigenschaften gefiltert werden sollen.</param>
        <param name="properties">Ein Eigenschaftenwörterbuch, das geändert werden kann.</param>
        <summary>Filtert die Eigenschaften, die eine Komponente über einen <see cref="T:System.ComponentModel.TypeDescriptor" /> verfügbar macht.</summary>
        <returns><see langword="true" />, wenn der Satz von gefilterten Eigenschaften zwischengespeichert werden soll; <see langword="false" />, wenn der Filterdienst eine neue Abfrage ausführen muss.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird aufgerufen, wenn ein Benutzer einen Satz von Eigenschaften für eine Komponente anfordert. Die Eigenschaften werden dem Wörterbuch mit den Eigenschaftsnamen als Schlüssel und den entsprechenden <xref:System.ComponentModel.PropertyDescriptor> Objekten als Werte hinzugefügt. Implementierer dieses Dienstanbieter können Eigenschaften Einträge im Wörterbuch hinzufügen, entfernen oder ändern.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><see langword="false" />Nur bei Bedarf zurückgeben, da die Leistung durch wiederholte Abfragen des typdeskriptorfilterdienstanbieter beeinträchtigt werden kann.</para></block>
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
  </Members>
</Type>
