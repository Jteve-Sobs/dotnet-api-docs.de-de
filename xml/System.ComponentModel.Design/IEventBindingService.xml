<Type Name="IEventBindingService" FullName="System.ComponentModel.Design.IEventBindingService">
  <Metadata><Meta Name="ms.openlocfilehash" Value="be65292b12965f5997e1c5df97473dc86a3f77da" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58733382" /></Metadata><TypeSignature Language="C#" Value="public interface IEventBindingService" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IEventBindingService" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.IEventBindingService" />
  <TypeSignature Language="VB.NET" Value="Public Interface IEventBindingService" />
  <TypeSignature Language="C++ CLI" Value="public interface class IEventBindingService" />
  <TypeSignature Language="F#" Value="type IEventBindingService = interface" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="0bec6-101">Stellt einen Dienst zum Registrieren von Ereignishandlern für Komponentenereignisse bereit.</span><span class="sxs-lookup"><span data-stu-id="0bec6-101">Provides a service for registering event handlers for component events.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0bec6-102">Der Ereignisdienst für die Bindung bietet eine Möglichkeit, einen Ereignishandler mit einem vom Designer-Code zu verknüpfen.</span><span class="sxs-lookup"><span data-stu-id="0bec6-102">The event binding service provides a way to link an event handler with a component event from designer code.</span></span>  
  
 <span data-ttu-id="0bec6-103">Verknüpfen Sie einen Ereignishandler mit einer Komponente-Ereignis mit der <xref:System.ComponentModel.Design.IEventBindingService>, benötigen Sie zunächst eine <xref:System.ComponentModel.EventDescriptor> für das Ereignis von der Komponente, die Sie verknüpfen möchten.</span><span class="sxs-lookup"><span data-stu-id="0bec6-103">To link an event handler with a component event using the <xref:System.ComponentModel.Design.IEventBindingService>, you must first obtain an <xref:System.ComponentModel.EventDescriptor> for the event of the component you intend to link.</span></span> <span data-ttu-id="0bec6-104">Die <xref:System.ComponentModel.Design.IEventBindingService> bietet Methoden, die konvertiert werden können ein <xref:System.ComponentModel.EventDescriptor> zu einem <xref:System.ComponentModel.PropertyDescriptor> die Sie verwenden können, um das Ereignis mit dem Namen einer Ereignishandlermethode konfigurieren.</span><span class="sxs-lookup"><span data-stu-id="0bec6-104">The <xref:System.ComponentModel.Design.IEventBindingService> provides methods that can convert an <xref:System.ComponentModel.EventDescriptor> to a <xref:System.ComponentModel.PropertyDescriptor> which you can use to configure the event with an event handler method name.</span></span>  
  
 <span data-ttu-id="0bec6-105">Die <xref:System.ComponentModel.TypeDescriptor> -Objekt bietet eine <xref:System.ComponentModel.TypeDescriptor.GetEvents%2A> -Methode, die Sie, zum Abrufen verwenden können einer <xref:System.ComponentModel.EventDescriptorCollection> mit <xref:System.ComponentModel.EventDescriptor> Objekte für jedes Ereignis einer Komponente.</span><span class="sxs-lookup"><span data-stu-id="0bec6-105">The <xref:System.ComponentModel.TypeDescriptor> object provides a <xref:System.ComponentModel.TypeDescriptor.GetEvents%2A> method that you can use to obtain an <xref:System.ComponentModel.EventDescriptorCollection> containing <xref:System.ComponentModel.EventDescriptor> objects for each event of a component.</span></span> <span data-ttu-id="0bec6-106">Die <xref:System.ComponentModel.Design.IEventBindingService.GetEventProperty%2A> und <xref:System.ComponentModel.Design.IEventBindingService.GetEventProperties%2A> Methoden der <xref:System.ComponentModel.Design.IEventBindingService> Zurückgeben einer <xref:System.ComponentModel.PropertyDescriptor> für jede <xref:System.ComponentModel.EventDescriptor> an eine Methode übergeben.</span><span class="sxs-lookup"><span data-stu-id="0bec6-106">The <xref:System.ComponentModel.Design.IEventBindingService.GetEventProperty%2A> and <xref:System.ComponentModel.Design.IEventBindingService.GetEventProperties%2A> methods of the <xref:System.ComponentModel.Design.IEventBindingService> return a <xref:System.ComponentModel.PropertyDescriptor> for each <xref:System.ComponentModel.EventDescriptor> passed to either method.</span></span> <span data-ttu-id="0bec6-107">Jede <xref:System.ComponentModel.PropertyDescriptor> Merry <xref:System.ComponentModel.Design.IEventBindingService.GetEventProperty%2A> oder <xref:System.ComponentModel.Design.IEventBindingService.GetEventProperties%2A> weist den Eigenschaftentyp der Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="0bec6-107">Each <xref:System.ComponentModel.PropertyDescriptor> returned from <xref:System.ComponentModel.Design.IEventBindingService.GetEventProperty%2A> or <xref:System.ComponentModel.Design.IEventBindingService.GetEventProperties%2A> has a property type of string.</span></span> <span data-ttu-id="0bec6-108">Sie können diese Zeichenfolge festlegen, auf einen Wert, der den Namen der Ereignishandler-Methode, die das Ereignis mit der Verwendung von link angibt. die <xref:System.ComponentModel.PropertyDescriptor.SetValue%2A> -Methode der der <xref:System.ComponentModel.PropertyDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="0bec6-108">You can set this string to a value that indicates the name of the event-handler method to link the event with using the <xref:System.ComponentModel.PropertyDescriptor.SetValue%2A> method of the <xref:System.ComponentModel.PropertyDescriptor>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0bec6-109">Das folgende Beispiel zeigt einen Designer, verwendet der <xref:System.ComponentModel.Design.IEventBindingService> um das Ereignis einer Komponente mit einem Ereignishandler zur Entwurfszeit zu verknüpfen, wenn die benutzerdefinierte Kontextmenübefehl, die der Designer für die Komponente fügt aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="0bec6-109">The following example demonstrates a designer that uses the <xref:System.ComponentModel.Design.IEventBindingService> to link a component's event with an event handler at design time when the custom shortcut menu command that the designer adds for the component is invoked.</span></span> <span data-ttu-id="0bec6-110">Um das Beispiel zu verwenden, eine Klassenbibliothek kompilieren, fügen Sie einen Verweis von einem Windows Forms-Projekt hinzu, die Komponente zur Toolbox mit der rechten Maustaste in der Klassenbibliothek hinzufügen der **Toolbox** und **"Toolbox anpassen"**, klicken Sie dann die Klassenbibliothek auswählen und auf **OK**, und fügen Sie eine Instanz des EventControl zu einem Formular.</span><span class="sxs-lookup"><span data-stu-id="0bec6-110">To use the example, compile it to a class library, add a reference from a Windows Forms project, add the component in the class library to the Toolbox by right-clicking the **Toolbox** and selecting **Customize Toolbox**, then choosing the class library and clicking **OK**, and add an instance of the EventControl to a Form.</span></span> <span data-ttu-id="0bec6-111">Klicken Sie dann mit der rechten Maustaste EventControl, und klicken Sie auf der Connect TestEvent Befehl im Kontextmenü.</span><span class="sxs-lookup"><span data-stu-id="0bec6-111">Then right-click the EventControl and click the Connect testEvent shortcut menu command.</span></span> <span data-ttu-id="0bec6-112">Eine leere Ereignishandlermethode wird erstellt und EventControls TestEvent-Methode wird an diesen Ereignishandler in der Initialisierungscode für das Formular initialisiert.</span><span class="sxs-lookup"><span data-stu-id="0bec6-112">An empty event handler method is created and the EventControl's testEvent method is initialized to this event handler in the initialization code for the Form.</span></span>  
  
 [!code-cpp[IEventBindingServiceExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/IEventBindingServiceExample/CPP/source.cpp#1)]
 [!code-csharp[IEventBindingServiceExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/IEventBindingServiceExample/CS/source.cs#1)]
 [!code-vb[IEventBindingServiceExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/IEventBindingServiceExample/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
    <altmember cref="T:System.ComponentModel.EventDescriptor" />
    <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
    <altmember cref="T:System.ComponentModel.EventDescriptorCollection" />
  </Docs>
  <Members>
    <Member MemberName="CreateUniqueMethodName">
      <MemberSignature Language="C#" Value="public string CreateUniqueMethodName (System.ComponentModel.IComponent component, System.ComponentModel.EventDescriptor e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string CreateUniqueMethodName(class System.ComponentModel.IComponent component, class System.ComponentModel.EventDescriptor e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IEventBindingService.CreateUniqueMethodName(System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateUniqueMethodName (component As IComponent, e As EventDescriptor) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ CreateUniqueMethodName(System::ComponentModel::IComponent ^ component, System::ComponentModel::EventDescriptor ^ e);" />
      <MemberSignature Language="F#" Value="abstract member CreateUniqueMethodName : System.ComponentModel.IComponent * System.ComponentModel.EventDescriptor -&gt; string" Usage="iEventBindingService.CreateUniqueMethodName (component, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
        <Parameter Name="e" Type="System.ComponentModel.EventDescriptor" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="0bec6-113">Die Komponenteninstanz, mit dem das Ereignis verbunden ist.</span><span class="sxs-lookup"><span data-stu-id="0bec6-113">The component instance the event is connected to.</span></span></param>
        <param name="e"><span data-ttu-id="0bec6-114">Das Ereignis, für das ein Name erstellt werden soll.</span><span class="sxs-lookup"><span data-stu-id="0bec6-114">The event to create a name for.</span></span></param>
        <summary><span data-ttu-id="0bec6-115">Erstellt einen eindeutigen Namen einer Ereignishandlermethode für die angegebene Komponente und das angegebene Ereignis.</span><span class="sxs-lookup"><span data-stu-id="0bec6-115">Creates a unique name for an event-handler method for the specified component and event.</span></span></summary>
        <returns><span data-ttu-id="0bec6-116">Der empfohlene Name der Ereignishandlermethode für dieses Ereignis.</span><span class="sxs-lookup"><span data-stu-id="0bec6-116">The recommended name for the event-handler method for this event.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0bec6-117">Diese Methode gibt einen Namen, der Namen einer anderen Methode im Quellcode des Benutzers eindeutig ist.</span><span class="sxs-lookup"><span data-stu-id="0bec6-117">This method returns a name that is unique from any other method name in the user's source code.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCompatibleMethods">
      <MemberSignature Language="C#" Value="public System.Collections.ICollection GetCompatibleMethods (System.ComponentModel.EventDescriptor e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.ICollection GetCompatibleMethods(class System.ComponentModel.EventDescriptor e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IEventBindingService.GetCompatibleMethods(System.ComponentModel.EventDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCompatibleMethods (e As EventDescriptor) As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ICollection ^ GetCompatibleMethods(System::ComponentModel::EventDescriptor ^ e);" />
      <MemberSignature Language="F#" Value="abstract member GetCompatibleMethods : System.ComponentModel.EventDescriptor -&gt; System.Collections.ICollection" Usage="iEventBindingService.GetCompatibleMethods e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.EventDescriptor" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="0bec6-118">Das Ereignis, für das die kompatiblen Ereignishandlermethoden abgerufen werden sollen.</span><span class="sxs-lookup"><span data-stu-id="0bec6-118">The event to get the compatible event-handler methods for.</span></span></param>
        <summary><span data-ttu-id="0bec6-119">Ruft eine Auflistung von Ereignishandlermethoden ab, die über eine mit dem angegebenen Ereignis kompatible Methodensignatur verfügen.</span><span class="sxs-lookup"><span data-stu-id="0bec6-119">Gets a collection of event-handler methods that have a method signature compatible with the specified event.</span></span></summary>
        <returns><span data-ttu-id="0bec6-120">Eine Auflistung von Zeichenfolgen.</span><span class="sxs-lookup"><span data-stu-id="0bec6-120">A collection of strings.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0bec6-121">Jede Zeichenfolge in der Auflistung ist der Name der eine Methode mit einer mit dem angegebenen Ereignis kompatible Methodensignatur ab.</span><span class="sxs-lookup"><span data-stu-id="0bec6-121">Each string in the collection is the name of a method that has a method signature compatible with the specified event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEvent">
      <MemberSignature Language="C#" Value="public System.ComponentModel.EventDescriptor GetEvent (System.ComponentModel.PropertyDescriptor property);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.EventDescriptor GetEvent(class System.ComponentModel.PropertyDescriptor property) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IEventBindingService.GetEvent(System.ComponentModel.PropertyDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEvent (property As PropertyDescriptor) As EventDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::EventDescriptor ^ GetEvent(System::ComponentModel::PropertyDescriptor ^ property);" />
      <MemberSignature Language="F#" Value="abstract member GetEvent : System.ComponentModel.PropertyDescriptor -&gt; System.ComponentModel.EventDescriptor" Usage="iEventBindingService.GetEvent property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.EventDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.ComponentModel.PropertyDescriptor" />
      </Parameters>
      <Docs>
        <param name="property"><span data-ttu-id="0bec6-122">Die Eigenschaft, die ein Ereignis darstellt.</span><span class="sxs-lookup"><span data-stu-id="0bec6-122">The property that represents an event.</span></span></param>
        <summary><span data-ttu-id="0bec6-123">Ruft einen <see cref="T:System.ComponentModel.EventDescriptor" /> für das Ereignis ab, das vom angegebenen Eigenschaftenbezeichner dargestellt wird, sofern dieser ein Ereignis darstellt.</span><span class="sxs-lookup"><span data-stu-id="0bec6-123">Gets an <see cref="T:System.ComponentModel.EventDescriptor" /> for the event that the specified property descriptor represents, if it represents an event.</span></span></summary>
        <returns><span data-ttu-id="0bec6-124">Ein <see cref="T:System.ComponentModel.EventDescriptor" /> für das Ereignis, das die Eigenschaft darstellt, oder <see langword="null" />, wenn die Eigenschaft kein Ereignis darstellt.</span><span class="sxs-lookup"><span data-stu-id="0bec6-124">An <see cref="T:System.ComponentModel.EventDescriptor" /> for the event that the property represents, or <see langword="null" /> if the property does not represent an event.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEventProperties">
      <MemberSignature Language="C#" Value="public System.ComponentModel.PropertyDescriptorCollection GetEventProperties (System.ComponentModel.EventDescriptorCollection events);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.PropertyDescriptorCollection GetEventProperties(class System.ComponentModel.EventDescriptorCollection events) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IEventBindingService.GetEventProperties(System.ComponentModel.EventDescriptorCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEventProperties (events As EventDescriptorCollection) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::PropertyDescriptorCollection ^ GetEventProperties(System::ComponentModel::EventDescriptorCollection ^ events);" />
      <MemberSignature Language="F#" Value="abstract member GetEventProperties : System.ComponentModel.EventDescriptorCollection -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="iEventBindingService.GetEventProperties events" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="events" Type="System.ComponentModel.EventDescriptorCollection" />
      </Parameters>
      <Docs>
        <param name="events"><span data-ttu-id="0bec6-125">Die Ereignisse, die zu Eigenschaften konvertiert werden sollen.</span><span class="sxs-lookup"><span data-stu-id="0bec6-125">The events to convert to properties.</span></span></param>
        <summary><span data-ttu-id="0bec6-126">Konvertiert eine Gruppe von Ereignisdeskriptoren in eine Gruppe von Eigenschaftenbezeichnern.</span><span class="sxs-lookup"><span data-stu-id="0bec6-126">Converts a set of event descriptors to a set of property descriptors.</span></span></summary>
        <returns><span data-ttu-id="0bec6-127">Ein Array von <see cref="T:System.ComponentModel.PropertyDescriptor" />-Objekten, die die Ereignisgruppe beschreiben.</span><span class="sxs-lookup"><span data-stu-id="0bec6-127">An array of <see cref="T:System.ComponentModel.PropertyDescriptor" /> objects that describe the event set.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0bec6-128">Jede zurückgegebene <xref:System.ComponentModel.PropertyDescriptor> verfügt über eine <xref:System.ComponentModel.PropertyDescriptor.PropertyType%2A> Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="0bec6-128">Each returned <xref:System.ComponentModel.PropertyDescriptor> has a <xref:System.ComponentModel.PropertyDescriptor.PropertyType%2A> of string.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEventProperty">
      <MemberSignature Language="C#" Value="public System.ComponentModel.PropertyDescriptor GetEventProperty (System.ComponentModel.EventDescriptor e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.PropertyDescriptor GetEventProperty(class System.ComponentModel.EventDescriptor e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IEventBindingService.GetEventProperty(System.ComponentModel.EventDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEventProperty (e As EventDescriptor) As PropertyDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::PropertyDescriptor ^ GetEventProperty(System::ComponentModel::EventDescriptor ^ e);" />
      <MemberSignature Language="F#" Value="abstract member GetEventProperty : System.ComponentModel.EventDescriptor -&gt; System.ComponentModel.PropertyDescriptor" Usage="iEventBindingService.GetEventProperty e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.EventDescriptor" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="0bec6-129">Das zu konvertierende Ereignis.</span><span class="sxs-lookup"><span data-stu-id="0bec6-129">The event to convert.</span></span></param>
        <summary><span data-ttu-id="0bec6-130">Konvertiert einen einzelnen Ereignisdeskriptor in einen Eigenschaftenbezeichner.</span><span class="sxs-lookup"><span data-stu-id="0bec6-130">Converts a single event descriptor to a property descriptor.</span></span></summary>
        <returns><span data-ttu-id="0bec6-131">Ein <see cref="T:System.ComponentModel.PropertyDescriptor" />, der das Ereignis beschreibt.</span><span class="sxs-lookup"><span data-stu-id="0bec6-131">A <see cref="T:System.ComponentModel.PropertyDescriptor" /> that describes the event.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0bec6-132">Das zurückgegebene <xref:System.ComponentModel.PropertyDescriptor> verfügt über eine <xref:System.ComponentModel.PropertyDescriptor.PropertyType%2A> Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="0bec6-132">The returned <xref:System.ComponentModel.PropertyDescriptor> has a <xref:System.ComponentModel.PropertyDescriptor.PropertyType%2A> of string.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ShowCode">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0bec6-133">Zeigt den Benutzercode für den Designer an.</span><span class="sxs-lookup"><span data-stu-id="0bec6-133">Displays the user code for the designer.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ShowCode">
      <MemberSignature Language="C#" Value="public bool ShowCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ShowCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IEventBindingService.ShowCode" />
      <MemberSignature Language="VB.NET" Value="Public Function ShowCode () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShowCode();" />
      <MemberSignature Language="F#" Value="abstract member ShowCode : unit -&gt; bool" Usage="iEventBindingService.ShowCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0bec6-134">Zeigt den Benutzercode für den Designer an.</span><span class="sxs-lookup"><span data-stu-id="0bec6-134">Displays the user code for the designer.</span></span></summary>
        <returns><span data-ttu-id="0bec6-135"><see langword="true" />, wenn der Code angezeigt wird, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="0bec6-135"><see langword="true" /> if the code is displayed; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0bec6-136">Diese Methode zeigt den Code-Editor.</span><span class="sxs-lookup"><span data-stu-id="0bec6-136">This method displays the code editor.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowCode">
      <MemberSignature Language="C#" Value="public bool ShowCode (int lineNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ShowCode(int32 lineNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IEventBindingService.ShowCode(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ShowCode (lineNumber As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShowCode(int lineNumber);" />
      <MemberSignature Language="F#" Value="abstract member ShowCode : int -&gt; bool" Usage="iEventBindingService.ShowCode lineNumber" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lineNumber" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="lineNumber"><span data-ttu-id="0bec6-137">Die Nummer der Zeile, in die die Einfügemarke gesetzt werden soll.</span><span class="sxs-lookup"><span data-stu-id="0bec6-137">The line number to place the caret on.</span></span></param>
        <summary><span data-ttu-id="0bec6-138">Zeigt den Benutzercode für den Designer in der angegebenen Zeile an.</span><span class="sxs-lookup"><span data-stu-id="0bec6-138">Displays the user code for the designer at the specified line.</span></span></summary>
        <returns><span data-ttu-id="0bec6-139"><see langword="true" />, wenn der Code angezeigt wird, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="0bec6-139"><see langword="true" /> if the code is displayed; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0bec6-140">Diese Methode zeigt den Code-Editor, und platziert den Cursor in der angegebenen Zeile.</span><span class="sxs-lookup"><span data-stu-id="0bec6-140">This method displays the code editor and positions the cursor on the specified line.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowCode">
      <MemberSignature Language="C#" Value="public bool ShowCode (System.ComponentModel.IComponent component, System.ComponentModel.EventDescriptor e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ShowCode(class System.ComponentModel.IComponent component, class System.ComponentModel.EventDescriptor e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IEventBindingService.ShowCode(System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Public Function ShowCode (component As IComponent, e As EventDescriptor) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShowCode(System::ComponentModel::IComponent ^ component, System::ComponentModel::EventDescriptor ^ e);" />
      <MemberSignature Language="F#" Value="abstract member ShowCode : System.ComponentModel.IComponent * System.ComponentModel.EventDescriptor -&gt; bool" Usage="iEventBindingService.ShowCode (component, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
        <Parameter Name="e" Type="System.ComponentModel.EventDescriptor" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="0bec6-141">Die Komponente, mit der das Ereignis verbunden ist.</span><span class="sxs-lookup"><span data-stu-id="0bec6-141">The component that the event is connected to.</span></span></param>
        <param name="e"><span data-ttu-id="0bec6-142">Das anzuzeigende Ereignis.</span><span class="sxs-lookup"><span data-stu-id="0bec6-142">The event to display.</span></span></param>
        <summary><span data-ttu-id="0bec6-143">Zeigt den Benutzercode für das angegebene Ereignis an.</span><span class="sxs-lookup"><span data-stu-id="0bec6-143">Displays the user code for the specified event.</span></span></summary>
        <returns><span data-ttu-id="0bec6-144"><see langword="true" />, wenn der Code angezeigt wird, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="0bec6-144"><see langword="true" /> if the code is displayed; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0bec6-145">Diese Methode zeigt den Code-Editor und positioniert den Cursor in die Zeile, der das angegebene Ereignis deklariert ist.</span><span class="sxs-lookup"><span data-stu-id="0bec6-145">This method displays the code editor and positions the cursor on the line that the specified event is declared on.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>