<Type Name="IEventBindingService" FullName="System.ComponentModel.Design.IEventBindingService">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b67fac3077327e5c803f3939d5c7009e97eefe81" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IEventBindingService" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IEventBindingService" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.IEventBindingService" />
  <TypeSignature Language="VB.NET" Value="Public Interface IEventBindingService" />
  <TypeSignature Language="C++ CLI" Value="public interface class IEventBindingService" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="3d2c8-101">Stellt einen Dienst zum Registrieren von Ereignishandlern für Komponentenereignisse bereit.</span>
      <span class="sxs-lookup">
        <span data-stu-id="3d2c8-101">Provides a service for registering event handlers for component events.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d2c8-102">Der Ereignisdienst für die Bindung bietet eine Möglichkeit, einen Ereignishandler mit einem vom Designer-Code zu verknüpfen.</span><span class="sxs-lookup"><span data-stu-id="3d2c8-102">The event binding service provides a way to link an event handler with a component event from designer code.</span></span>  
  
 <span data-ttu-id="3d2c8-103">Verknüpfen Sie einen Ereignishandler mit einer Komponente Ereignis unter Verwendung der <xref:System.ComponentModel.Design.IEventBindingService>, benötigen Sie zunächst eine <xref:System.ComponentModel.EventDescriptor> für das Ereignis für die Komponente, die Sie verknüpfen möchten.</span><span class="sxs-lookup"><span data-stu-id="3d2c8-103">To link an event handler with a component event using the <xref:System.ComponentModel.Design.IEventBindingService>, you must first obtain an <xref:System.ComponentModel.EventDescriptor> for the event of the component you intend to link.</span></span> <span data-ttu-id="3d2c8-104">Die <xref:System.ComponentModel.Design.IEventBindingService> bietet Methoden, die konvertiert werden können ein <xref:System.ComponentModel.EventDescriptor> auf eine <xref:System.ComponentModel.PropertyDescriptor> die Sie verwenden können, um das Ereignis mit dem Namen einer Ereignishandlermethode konfigurieren.</span><span class="sxs-lookup"><span data-stu-id="3d2c8-104">The <xref:System.ComponentModel.Design.IEventBindingService> provides methods that can convert an <xref:System.ComponentModel.EventDescriptor> to a <xref:System.ComponentModel.PropertyDescriptor> which you can use to configure the event with an event handler method name.</span></span>  
  
 <span data-ttu-id="3d2c8-105">Die <xref:System.ComponentModel.TypeDescriptor> Objekt enthält eine <xref:System.ComponentModel.TypeDescriptor.GetEvents%2A> -Methode, die Sie, zum Abrufen verwenden können einer <xref:System.ComponentModel.EventDescriptorCollection> mit <xref:System.ComponentModel.EventDescriptor> Objekte für jedes Ereignis einer Komponente.</span><span class="sxs-lookup"><span data-stu-id="3d2c8-105">The <xref:System.ComponentModel.TypeDescriptor> object provides a <xref:System.ComponentModel.TypeDescriptor.GetEvents%2A> method that you can use to obtain an <xref:System.ComponentModel.EventDescriptorCollection> containing <xref:System.ComponentModel.EventDescriptor> objects for each event of a component.</span></span> <span data-ttu-id="3d2c8-106">Die <xref:System.ComponentModel.Design.IEventBindingService.GetEventProperty%2A> und <xref:System.ComponentModel.Design.IEventBindingService.GetEventProperties%2A> Methoden die <xref:System.ComponentModel.Design.IEventBindingService> Zurückgeben einer <xref:System.ComponentModel.PropertyDescriptor> für jede <xref:System.ComponentModel.EventDescriptor> an beide Methoden übergeben.</span><span class="sxs-lookup"><span data-stu-id="3d2c8-106">The <xref:System.ComponentModel.Design.IEventBindingService.GetEventProperty%2A> and <xref:System.ComponentModel.Design.IEventBindingService.GetEventProperties%2A> methods of the <xref:System.ComponentModel.Design.IEventBindingService> return a <xref:System.ComponentModel.PropertyDescriptor> for each <xref:System.ComponentModel.EventDescriptor> passed to either method.</span></span> <span data-ttu-id="3d2c8-107">Jede <xref:System.ComponentModel.PropertyDescriptor> Merry <xref:System.ComponentModel.Design.IEventBindingService.GetEventProperty%2A> oder <xref:System.ComponentModel.Design.IEventBindingService.GetEventProperties%2A> gehört zum Eigenschaftentyp der Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="3d2c8-107">Each <xref:System.ComponentModel.PropertyDescriptor> returned from <xref:System.ComponentModel.Design.IEventBindingService.GetEventProperty%2A> or <xref:System.ComponentModel.Design.IEventBindingService.GetEventProperties%2A> has a property type of string.</span></span> <span data-ttu-id="3d2c8-108">Sie können diese Zeichenfolge festlegen, auf einen Wert, der den Namen der Ereignishandlermethode das Ereignis mit der Verwendung von verknüpfen angibt der <xref:System.ComponentModel.PropertyDescriptor.SetValue%2A> Methode der <xref:System.ComponentModel.PropertyDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="3d2c8-108">You can set this string to a value that indicates the name of the event-handler method to link the event with using the <xref:System.ComponentModel.PropertyDescriptor.SetValue%2A> method of the <xref:System.ComponentModel.PropertyDescriptor>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d2c8-109">Das folgende Beispiel zeigt einen Designer, verwendet die <xref:System.ComponentModel.Design.IEventBindingService> zum Ereignis einer Komponente mit einem Ereignishandler zur Entwurfszeit zu verknüpfen, wenn die benutzerdefinierte Kontextmenübefehl, die der Designer für die Komponente fügt aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="3d2c8-109">The following example demonstrates a designer that uses the <xref:System.ComponentModel.Design.IEventBindingService> to link a component's event with an event handler at design time when the custom shortcut menu command that the designer adds for the component is invoked.</span></span> <span data-ttu-id="3d2c8-110">Verwenden Sie das Beispiel, kompilieren Sie ihn in eine Klassenbibliothek, fügen Sie einen Verweis von einem Windows Forms-Projekt, fügen die Komponente in der Klassenbibliothek zur Toolbox von mit der rechten Maustaste in der Toolbox und Toolbox anpassen..., und anschließend die Klassenbibliothek auswählen und durch Klicken auf "OK", und Fügen Sie eine Instanz des EventControl zu einem Formular ein.</span><span class="sxs-lookup"><span data-stu-id="3d2c8-110">To use the example, compile it to a class library, add a reference from a Windows Forms project, add the component in the class library to the Toolbox by right-clicking the Toolbox and selecting Customize Toolbox..., then choosing the class library and clicking OK, and add an instance of the EventControl to a Form.</span></span> <span data-ttu-id="3d2c8-111">Klicken Sie dann mit der rechten Maustaste EventControl, und klicken Sie auf den Menübefehl verbinden TestEvent Verknüpfung.</span><span class="sxs-lookup"><span data-stu-id="3d2c8-111">Then right-click the EventControl and click the Connect testEvent shortcut menu command.</span></span> <span data-ttu-id="3d2c8-112">Eine leere Ereignishandlermethode erstellt, und die EventControl TestEvent-Methode wird für das Formular an diesen Ereignishandler in der Initialisierungscode initialisiert.</span><span class="sxs-lookup"><span data-stu-id="3d2c8-112">An empty event handler method is created and the EventControl's testEvent method is initialized to this event handler in the initialization code for the Form.</span></span>  
  
 [!code-cpp[IEventBindingServiceExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/IEventBindingServiceExample/CPP/source.cpp#1)]
 [!code-csharp[IEventBindingServiceExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/IEventBindingServiceExample/CS/source.cs#1)]
 [!code-vb[IEventBindingServiceExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/IEventBindingServiceExample/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
    <altmember cref="T:System.ComponentModel.EventDescriptor" />
    <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
    <altmember cref="T:System.ComponentModel.EventDescriptorCollection" />
  </Docs>
  <Members>
    <Member MemberName="CreateUniqueMethodName">
      <MemberSignature Language="C#" Value="public string CreateUniqueMethodName (System.ComponentModel.IComponent component, System.ComponentModel.EventDescriptor e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string CreateUniqueMethodName(class System.ComponentModel.IComponent component, class System.ComponentModel.EventDescriptor e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IEventBindingService.CreateUniqueMethodName(System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateUniqueMethodName (component As IComponent, e As EventDescriptor) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ CreateUniqueMethodName(System::ComponentModel::IComponent ^ component, System::ComponentModel::EventDescriptor ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
        <Parameter Name="e" Type="System.ComponentModel.EventDescriptor" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="3d2c8-113">Die Komponenteninstanz, mit dem das Ereignis verbunden ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d2c8-113">The component instance the event is connected to.</span>
          </span>
        </param>
        <param name="e">
          <span data-ttu-id="3d2c8-114">Das Ereignis, für das ein Name erstellt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d2c8-114">The event to create a name for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d2c8-115">Erstellt einen eindeutigen Namen einer Ereignishandlermethode für die angegebene Komponente und das angegebene Ereignis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d2c8-115">Creates a unique name for an event-handler method for the specified component and event.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3d2c8-116">Der empfohlene Name der Ereignishandlermethode für dieses Ereignis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d2c8-116">The recommended name for the event-handler method for this event.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d2c8-117">Diese Methode gibt einen eindeutigen Namen von Methodennamen einer anderen im Quellcode des Benutzers zurück.</span><span class="sxs-lookup"><span data-stu-id="3d2c8-117">This method returns a name that is unique from any other method name in the user's source code.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCompatibleMethods">
      <MemberSignature Language="C#" Value="public System.Collections.ICollection GetCompatibleMethods (System.ComponentModel.EventDescriptor e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.ICollection GetCompatibleMethods(class System.ComponentModel.EventDescriptor e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IEventBindingService.GetCompatibleMethods(System.ComponentModel.EventDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCompatibleMethods (e As EventDescriptor) As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ICollection ^ GetCompatibleMethods(System::ComponentModel::EventDescriptor ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.EventDescriptor" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3d2c8-118">Das Ereignis, für das die kompatiblen Ereignishandlermethoden abgerufen werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d2c8-118">The event to get the compatible event-handler methods for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d2c8-119">Ruft eine Auflistung von Ereignishandlermethoden ab, die über eine mit dem angegebenen Ereignis kompatible Methodensignatur verfügen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d2c8-119">Gets a collection of event-handler methods that have a method signature compatible with the specified event.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3d2c8-120">Eine Auflistung von Zeichenfolgen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d2c8-120">A collection of strings.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d2c8-121">Jede Zeichenfolge in der Auflistung ist der Name einer Methode, die Signatur einer Methode kompatibel, mit dem angegebenen Ereignis verfügt.</span><span class="sxs-lookup"><span data-stu-id="3d2c8-121">Each string in the collection is the name of a method that has a method signature compatible with the specified event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEvent">
      <MemberSignature Language="C#" Value="public System.ComponentModel.EventDescriptor GetEvent (System.ComponentModel.PropertyDescriptor property);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.EventDescriptor GetEvent(class System.ComponentModel.PropertyDescriptor property) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IEventBindingService.GetEvent(System.ComponentModel.PropertyDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEvent (property As PropertyDescriptor) As EventDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::EventDescriptor ^ GetEvent(System::ComponentModel::PropertyDescriptor ^ property);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.EventDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.ComponentModel.PropertyDescriptor" />
      </Parameters>
      <Docs>
        <param name="property">
          <span data-ttu-id="3d2c8-122">Die Eigenschaft, die ein Ereignis darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d2c8-122">The property that represents an event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d2c8-123">Ruft einen <see cref="T:System.ComponentModel.EventDescriptor" /> für das Ereignis ab, das vom angegebenen Eigenschaftenbezeichner dargestellt wird, sofern dieser ein Ereignis darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d2c8-123">Gets an <see cref="T:System.ComponentModel.EventDescriptor" /> for the event that the specified property descriptor represents, if it represents an event.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3d2c8-124">Ein <see cref="T:System.ComponentModel.EventDescriptor" /> für das Ereignis, das die Eigenschaft darstellt, oder <see langword="null" />, wenn die Eigenschaft kein Ereignis darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d2c8-124">An <see cref="T:System.ComponentModel.EventDescriptor" /> for the event that the property represents, or <see langword="null" /> if the property does not represent an event.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEventProperties">
      <MemberSignature Language="C#" Value="public System.ComponentModel.PropertyDescriptorCollection GetEventProperties (System.ComponentModel.EventDescriptorCollection events);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.PropertyDescriptorCollection GetEventProperties(class System.ComponentModel.EventDescriptorCollection events) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IEventBindingService.GetEventProperties(System.ComponentModel.EventDescriptorCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEventProperties (events As EventDescriptorCollection) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::PropertyDescriptorCollection ^ GetEventProperties(System::ComponentModel::EventDescriptorCollection ^ events);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="events" Type="System.ComponentModel.EventDescriptorCollection" />
      </Parameters>
      <Docs>
        <param name="events">
          <span data-ttu-id="3d2c8-125">Die Ereignisse, die zu Eigenschaften konvertiert werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d2c8-125">The events to convert to properties.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d2c8-126">Konvertiert eine Gruppe von Ereignisdeskriptoren in eine Gruppe von Eigenschaftenbezeichnern.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d2c8-126">Converts a set of event descriptors to a set of property descriptors.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3d2c8-127">Ein Array von <see cref="T:System.ComponentModel.PropertyDescriptor" />-Objekten, die die Ereignisgruppe beschreiben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d2c8-127">An array of <see cref="T:System.ComponentModel.PropertyDescriptor" /> objects that describe the event set.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d2c8-128">Jede zurückgegebene <xref:System.ComponentModel.PropertyDescriptor> verfügt über eine <xref:System.ComponentModel.PropertyDescriptor.PropertyType%2A> der Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="3d2c8-128">Each returned <xref:System.ComponentModel.PropertyDescriptor> has a <xref:System.ComponentModel.PropertyDescriptor.PropertyType%2A> of string.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEventProperty">
      <MemberSignature Language="C#" Value="public System.ComponentModel.PropertyDescriptor GetEventProperty (System.ComponentModel.EventDescriptor e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.PropertyDescriptor GetEventProperty(class System.ComponentModel.EventDescriptor e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IEventBindingService.GetEventProperty(System.ComponentModel.EventDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEventProperty (e As EventDescriptor) As PropertyDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::PropertyDescriptor ^ GetEventProperty(System::ComponentModel::EventDescriptor ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.EventDescriptor" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3d2c8-129">Das zu konvertierende Ereignis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d2c8-129">The event to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d2c8-130">Konvertiert einen einzelnen Ereignisdeskriptor in einen Eigenschaftenbezeichner.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d2c8-130">Converts a single event descriptor to a property descriptor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3d2c8-131">Ein <see cref="T:System.ComponentModel.PropertyDescriptor" />, der das Ereignis beschreibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d2c8-131">A <see cref="T:System.ComponentModel.PropertyDescriptor" /> that describes the event.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d2c8-132">Das zurückgegebene <xref:System.ComponentModel.PropertyDescriptor> verfügt über eine <xref:System.ComponentModel.PropertyDescriptor.PropertyType%2A> der Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="3d2c8-132">The returned <xref:System.ComponentModel.PropertyDescriptor> has a <xref:System.ComponentModel.PropertyDescriptor.PropertyType%2A> of string.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ShowCode">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3d2c8-133">Zeigt den Benutzercode für den Designer an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d2c8-133">Displays the user code for the designer.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ShowCode">
      <MemberSignature Language="C#" Value="public bool ShowCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ShowCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IEventBindingService.ShowCode" />
      <MemberSignature Language="VB.NET" Value="Public Function ShowCode () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShowCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3d2c8-134">Zeigt den Benutzercode für den Designer an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d2c8-134">Displays the user code for the designer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3d2c8-135">
            <see langword="true" />, wenn der Code angezeigt wird, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d2c8-135">
              <see langword="true" /> if the code is displayed; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d2c8-136">Diese Methode wird im Code-Editor angezeigt.</span><span class="sxs-lookup"><span data-stu-id="3d2c8-136">This method displays the code editor.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowCode">
      <MemberSignature Language="C#" Value="public bool ShowCode (int lineNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ShowCode(int32 lineNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IEventBindingService.ShowCode(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ShowCode (lineNumber As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShowCode(int lineNumber);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lineNumber" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="lineNumber">
          <span data-ttu-id="3d2c8-137">Die Nummer der Zeile, in die die Einfügemarke gesetzt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d2c8-137">The line number to place the caret on.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d2c8-138">Zeigt den Benutzercode für den Designer in der angegebenen Zeile an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d2c8-138">Displays the user code for the designer at the specified line.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3d2c8-139">
            <see langword="true" />, wenn der Code angezeigt wird, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d2c8-139">
              <see langword="true" /> if the code is displayed; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d2c8-140">Diese Methode zeigt den Code-Editor und platziert den Cursor in der angegebenen Zeile.</span><span class="sxs-lookup"><span data-stu-id="3d2c8-140">This method displays the code editor and positions the cursor on the specified line.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowCode">
      <MemberSignature Language="C#" Value="public bool ShowCode (System.ComponentModel.IComponent component, System.ComponentModel.EventDescriptor e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ShowCode(class System.ComponentModel.IComponent component, class System.ComponentModel.EventDescriptor e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IEventBindingService.ShowCode(System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Public Function ShowCode (component As IComponent, e As EventDescriptor) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShowCode(System::ComponentModel::IComponent ^ component, System::ComponentModel::EventDescriptor ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
        <Parameter Name="e" Type="System.ComponentModel.EventDescriptor" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="3d2c8-141">Die Komponente, mit der das Ereignis verbunden ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d2c8-141">The component that the event is connected to.</span>
          </span>
        </param>
        <param name="e">
          <span data-ttu-id="3d2c8-142">Das anzuzeigende Ereignis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d2c8-142">The event to display.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d2c8-143">Zeigt den Benutzercode für das angegebene Ereignis an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d2c8-143">Displays the user code for the specified event.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3d2c8-144">
            <see langword="true" />, wenn der Code angezeigt wird, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d2c8-144">
              <see langword="true" /> if the code is displayed; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d2c8-145">Diese Methode zeigt den Code-Editor und platziert den Cursor in der Zeile, der das angegebene Ereignis deklariert ist.</span><span class="sxs-lookup"><span data-stu-id="3d2c8-145">This method displays the code editor and positions the cursor on the line that the specified event is declared on.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>