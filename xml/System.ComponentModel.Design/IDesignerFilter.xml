<Type Name="IDesignerFilter" FullName="System.ComponentModel.Design.IDesignerFilter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="37922b851425bf4cdf3e90c34d8602cbe6265dfc" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69348887" /></Metadata><TypeSignature Language="C#" Value="public interface IDesignerFilter" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDesignerFilter" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.IDesignerFilter" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDesignerFilter" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDesignerFilter" />
  <TypeSignature Language="F#" Value="type IDesignerFilter = interface" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Stellt eine Schnittstelle bereit, die einem Designer den Zugriff auf und das Filtern von Wörterbüchern eines <see cref="T:System.ComponentModel.TypeDescriptor" /> ermöglicht, der Eigenschafts-, Attribut- und Ereignisdeskriptoren enthält, die ein Komponenten-Designer für die Entwurfszeitumgebung verfügbar machen kann.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.Design.IDesignerFilter>ermöglicht es einem Designer, den Satz von Eigenschaften, Attributen und Ereignis Deskriptoren zu filtern, die die zugeordnete Komponente <xref:System.ComponentModel.TypeDescriptor>über einen verfügbar macht. Die Methoden dieser Schnittstelle, deren Namen mit `Pre` beginnen, werden unmittelbar vor den Methoden aufgerufen, deren `Post`Namen mit beginnen.  
  
 Wenn Sie Attribute, Ereignis oder Eigenschafts Deskriptoren hinzufügen möchten, verwenden Sie <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes%2A>eine <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents%2A>-, <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties%2A> -oder-Methode.  
  
 Wenn Sie Attribute, Ereignisse oder Eigenschafts Deskriptoren ändern oder entfernen möchten, verwenden Sie eine <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes%2A>- <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents%2A>,- <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties%2A> oder-Methode.  
  
   
  
## Examples  
 Im folgenden Beispiel wird eine Überschreibung <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties%2A> von veranschaulicht, mit der dem Eigenschaftenfenster eine Eigenschaft des Designers hinzugefügt wird, wenn das Steuerelement des Designers zur Entwurfszeit ausgewählt wird. Im Beispiel für die <xref:System.Windows.Forms.Design.ControlDesigner> -Klasse finden Sie ein Beispiel für ein umfassendes Designer, das die <xref:System.ComponentModel.Design.IDesignerFilter> -Schnittstelle verwendet.  
  
 [!code-cpp[ControlDesignerExample#2](~/samples/snippets/cpp/VS_Snippets_Winforms/ControlDesignerExample/CPP/controldesignerexample.cpp#2)]
 [!code-csharp[ControlDesignerExample#2](~/samples/snippets/csharp/VS_Snippets_Winforms/ControlDesignerExample/CS/controldesignerexample.cs#2)]
 [!code-vb[ControlDesignerExample#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ControlDesignerExample/VB/controldesignerexample.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.Design.ITypeDescriptorFilterService" />
    <altmember cref="T:System.ComponentModel.TypeDescriptor" />
  </Docs>
  <Members>
    <Member MemberName="PostFilterAttributes">
      <MemberSignature Language="C#" Value="public void PostFilterAttributes (System.Collections.IDictionary attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PostFilterAttributes(class System.Collections.IDictionary attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PostFilterAttributes (attributes As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PostFilterAttributes(System::Collections::IDictionary ^ attributes);" />
      <MemberSignature Language="F#" Value="abstract member PostFilterAttributes : System.Collections.IDictionary -&gt; unit" Usage="iDesignerFilter.PostFilterAttributes attributes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="attributes">Die <see cref="T:System.Attribute" />-Objekte für die Klasse der Komponente. Die Schlüssel im Attributwörterbuch sind die <see cref="P:System.Attribute.TypeId" />-Werte der Attribute.</param>
        <summary>Ermöglicht es einem Designer, beim Überschreiben in einer abgeleiteten Klasse Elemente in der über einen <see cref="T:System.ComponentModel.TypeDescriptor" /> verfügbar gemachten Attributgruppe zu ändern oder zu entfernen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode bietet eine Möglichkeit, Elemente im Wörterbuch von Attributen zu ändern oder zu entfernen, die von der zugeordneten Komponente des Designers, der <xref:System.ComponentModel.TypeDescriptor>diese Schnittstelle implementiert, über einen verfügbar gemacht wird.  
  
 Die Schlüssel im Attribut Wörterbuch sind die typids der Attribute. Die Objekte sind vom Typ <xref:System.Attribute>. Diese Methode wird unmittelbar nach <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes%2A>aufgerufen.  
  
 Die Typ-ID eines Attributs kann ein beliebiges Objekt sein. Standardmäßig <xref:System.Attribute> <xref:System.Attribute.TypeId%2A> gibt die-Eigenschaft alsWertder-Eigenschaftzurück.<xref:System.Type> Sie können den <xref:System.Attribute.TypeId%2A> eines Attributs im Wörterbuch auf Äquivalenz mit einem bekannten <xref:System.Attribute.TypeId%2A> Attribut eines Attributs überprüfen, um es <xref:System.Reflection> zu identifizieren, oder verwenden Sie, um das Attribut Objekt selbst zu identifizieren.  
  
 Wenn einer Komponente ein Attribut hinzugefügt <xref:System.Attribute.TypeId%2A> wird, das das gleiche wie ein vorhandenes oder geerbtes Attribut hat, ersetzt das neue Attribut das alte Attribut. Bei vielen Attributen ersetzt ein neues Attribut desselben Typs alle vorherigen Attribute des Typs. Einige Typen von Attributen geben jedoch eine <xref:System.Attribute.TypeId%2A> zurück, durch die das Attribut selektiv unterschieden wird. Um z. b. verschiedene Typen von gleichzeitig aktiven Designern für <xref:System.ComponentModel.Design.IRootDesigner> einen Typ, z. b. <xref:System.ComponentModel.Design.IDesigner>und, bereitzustellen, gibt die <xref:System.Attribute.TypeId%2A> Klasse einen zurück, der <xref:System.ComponentModel.DesignerAttribute> das Attribut und den Basis-Designer eindeutig identifiziert. Sorte. Mit <xref:System.ComponentModel.DesignerAttribute> dem-Konstruktor können Sie zusätzlich zum jeweiligen Typ den Basis-Designer-Typ des Designers angeben und <xref:System.ComponentModel.DesignerAttribute> einen <xref:System.Attribute.TypeId%2A> zurückgeben, der diese wieder gibt. Wenn Sie daher ein neues <xref:System.ComponentModel.DesignerAttribute> -Attribut mit einem Basis-Designertyp desselben Typs wie der Basis-Designertyp eines vorhandenen <xref:System.ComponentModel.DesignerAttribute>hinzufügen, wird das alte Attribut durch das neue-Attribut ersetzt.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Sie können das Wörterbuch, auf das über den <paramref name="attributes" /> -Parameter zugegriffen werden kann, direkt filtern, oder Sie können es unverändert lassen. Wenn Sie diese Methode überschreiben, wenden Sie die Basis Implementierung an, nachdem Sie eine eigene Filterung durchgeführt haben.</para></block>
        <altmember cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="PostFilterEvents">
      <MemberSignature Language="C#" Value="public void PostFilterEvents (System.Collections.IDictionary events);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PostFilterEvents(class System.Collections.IDictionary events) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PostFilterEvents (events As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PostFilterEvents(System::Collections::IDictionary ^ events);" />
      <MemberSignature Language="F#" Value="abstract member PostFilterEvents : System.Collections.IDictionary -&gt; unit" Usage="iDesignerFilter.PostFilterEvents events" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="events" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="events">Die <see cref="T:System.ComponentModel.EventDescriptor" />-Objekte, die die Ereignisse der Klasse der Komponente darstellen. Die Schlüssel im Ereigniswörterbuch sind Ereignisnamen.</param>
        <summary>Ermöglicht einem Designer, beim Überschreiben in einer abgeleiteten Klasse Elemente in der über einen <see cref="T:System.ComponentModel.TypeDescriptor" /> verfügbar gemachten Menge von Ereignissen zu ändern oder daraus entfernen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode bietet eine Möglichkeit, Elemente innerhalb des Wörterbuchs von Ereignissen zu ändern oder zu entfernen, die <xref:System.ComponentModel.TypeDescriptor>durch einen verfügbar gemacht werden.  
  
 Bei den Schlüsseln im Ereignis Wörterbuch handelt es sich um die Namen der Ereignisse. Die Objekte sind vom Typ <xref:System.ComponentModel.EventDescriptor>. Diese Methode wird unmittelbar nach <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents%2A>aufgerufen.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Sie können das Wörterbuch, auf das über den <paramref name="events" /> -Parameter zugegriffen werden kann, direkt filtern, oder Sie können es unverändert lassen. Wenn Sie diese Methode überschreiben, wenden Sie die Basis Implementierung an, nachdem Sie eine eigene Filterung durchgeführt haben.</para></block>
        <altmember cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="PostFilterProperties">
      <MemberSignature Language="C#" Value="public void PostFilterProperties (System.Collections.IDictionary properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PostFilterProperties(class System.Collections.IDictionary properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PostFilterProperties (properties As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PostFilterProperties(System::Collections::IDictionary ^ properties);" />
      <MemberSignature Language="F#" Value="abstract member PostFilterProperties : System.Collections.IDictionary -&gt; unit" Usage="iDesignerFilter.PostFilterProperties properties" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="properties">Die <see cref="T:System.ComponentModel.PropertyDescriptor" />-Objekte, die die Eigenschaften der Klasse der Komponente darstellen. Die Schlüssel im Eigenschaftenwörterbuch sind Eigenschaftennamen.</param>
        <summary>Ermöglicht einem Designer, beim Überschreiben in einer abgeleiteten Klasse Elemente in der über einen <see cref="T:System.ComponentModel.TypeDescriptor" /> verfügbar gemachten Menge von Eigenschaften zu ändern oder daraus entfernen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode bietet eine Möglichkeit, Elemente innerhalb des Wörterbuchs von Eigenschaften zu ändern oder zu entfernen, die <xref:System.ComponentModel.TypeDescriptor>durch einen verfügbar gemacht werden.  
  
 Die Schlüssel im Eigenschaften Wörterbuch sind die Namen der Eigenschaften. Die Objekte sind vom Typ <xref:System.ComponentModel.PropertyDescriptor>. Diese Methode wird unmittelbar nach <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties%2A>aufgerufen.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Sie können das Wörterbuch, auf das über den <paramref name="properties" /> -Parameter zugegriffen werden kann, direkt filtern, oder Sie können es unverändert lassen. Wenn Sie diese Methode überschreiben, wenden Sie die Basis Implementierung an, nachdem Sie eine eigene Filterung durchgeführt haben.</para></block>
        <altmember cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="PreFilterAttributes">
      <MemberSignature Language="C#" Value="public void PreFilterAttributes (System.Collections.IDictionary attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PreFilterAttributes(class System.Collections.IDictionary attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PreFilterAttributes (attributes As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PreFilterAttributes(System::Collections::IDictionary ^ attributes);" />
      <MemberSignature Language="F#" Value="abstract member PreFilterAttributes : System.Collections.IDictionary -&gt; unit" Usage="iDesignerFilter.PreFilterAttributes attributes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="attributes">Die <see cref="T:System.Attribute" />-Objekte für die Klasse der Komponente. Die Schlüssel im Attributwörterbuch sind die <see cref="P:System.Attribute.TypeId" />-Werte der Attribute.</param>
        <summary>Ermöglicht es einem Designer, beim Überschreiben in einer abgeleiteten Klasse den über einen <see cref="T:System.ComponentModel.TypeDescriptor" /> verfügbar gemachten Attributen Elemente hinzuzufügen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode bietet eine Möglichkeit zum Hinzufügen von Elementen zum Wörterbuch von Attributen, die die zugeordnete Komponente des Designers, der diese <xref:System.ComponentModel.TypeDescriptor>Schnittstelle implementiert, über einen verfügbar macht.  
  
 Die Schlüssel im Attribut Wörterbuch sind die typids der Attribute. Die Objekte sind vom Typ <xref:System.Attribute>. Diese Methode wird unmittelbar vor <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes%2A>aufgerufen.  
  
 Die Typ-ID eines Attributs kann ein beliebiges Objekt sein. Standardmäßig <xref:System.Attribute> <xref:System.Attribute.TypeId%2A> gibt die-Eigenschaft alsWertder-Eigenschaftzurück.<xref:System.Type> Sie können den <xref:System.Attribute.TypeId%2A> eines Attributs im Wörterbuch auf Äquivalenz mit einem bekannten <xref:System.Attribute.TypeId%2A> Attribut eines Attributs überprüfen, um es <xref:System.Reflection> zu identifizieren, oder verwenden Sie, um das Attribut Objekt selbst zu identifizieren.  
  
 Wenn einer Komponente ein Attribut hinzugefügt <xref:System.Attribute.TypeId%2A> wird, das das gleiche wie ein vorhandenes oder geerbtes Attribut hat, ersetzt das neue Attribut das alte Attribut. Bei vielen Attributen ersetzt ein neues Attribut desselben Typs alle vorherigen Attribute des Typs. Einige Typen von Attributen geben jedoch eine <xref:System.Attribute.TypeId%2A> zurück, durch die das Attribut selektiv unterschieden wird. Um z. b. verschiedene Typen von gleichzeitig aktiven Designern für <xref:System.ComponentModel.Design.IRootDesigner> einen Typ, z. b. <xref:System.ComponentModel.Design.IDesigner>und, bereitzustellen, gibt die <xref:System.Attribute.TypeId%2A> Klasse einen zurück, der <xref:System.ComponentModel.DesignerAttribute> das Attribut und den Basis-Designer eindeutig identifiziert. Sorte. Mit <xref:System.ComponentModel.DesignerAttribute> dem-Konstruktor können Sie zusätzlich zum jeweiligen Typ den Basis-Designer-Typ des Designers angeben und <xref:System.ComponentModel.DesignerAttribute> einen <xref:System.Attribute.TypeId%2A> zurückgeben, der diese wieder gibt. Wenn Sie daher ein neues <xref:System.ComponentModel.DesignerAttribute> -Attribut mit einem Basis-Designertyp desselben Typs wie der Basis-Designertyp eines vorhandenen <xref:System.ComponentModel.DesignerAttribute>hinzufügen, wird das alte Attribut durch das neue-Attribut ersetzt.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Sie können das Wörterbuch, auf das über den <paramref name="attributes" /> -Parameter zugegriffen werden kann, direkt filtern, oder Sie können es unverändert lassen. Wenn Sie diese Methode überschreiben, wenden Sie die Basis Implementierung an, nachdem Sie eine eigene Filterung durchgeführt haben.</para></block>
        <altmember cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="PreFilterEvents">
      <MemberSignature Language="C#" Value="public void PreFilterEvents (System.Collections.IDictionary events);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PreFilterEvents(class System.Collections.IDictionary events) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PreFilterEvents (events As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PreFilterEvents(System::Collections::IDictionary ^ events);" />
      <MemberSignature Language="F#" Value="abstract member PreFilterEvents : System.Collections.IDictionary -&gt; unit" Usage="iDesignerFilter.PreFilterEvents events" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="events" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="events">Die <see cref="T:System.ComponentModel.EventDescriptor" />-Objekte, die die Ereignisse der Klasse der Komponente darstellen. Die Schlüssel im Ereigniswörterbuch sind Ereignisnamen.</param>
        <summary>Ermöglicht es einem Designer, beim Überschreiben in einer abgeleiteten Klasse der über einen <see cref="T:System.ComponentModel.TypeDescriptor" /> verfügbar gemachten Gruppe von Ereignissen Elemente hinzuzufügen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode bietet eine Möglichkeit zum Hinzufügen von Elementen zum Wörterbuch von Ereignissen, die ein Designer <xref:System.ComponentModel.TypeDescriptor>über einen verfügbar macht.  
  
 Bei den Schlüsseln im Ereignis Wörterbuch handelt es sich um die Namen der Ereignisse. Die Objekte sind vom Typ <xref:System.ComponentModel.EventDescriptor>. Diese Methode wird unmittelbar vor <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents%2A>aufgerufen.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Sie können das Wörterbuch direkt ändern, auf das über <paramref name="events" /> den-Parameter zugegriffen werden kann, oder Sie können es unverändert lassen. Wenn Sie diese Methode überschreiben, wenden Sie die Basis Implementierung an, bevor Sie Ihre eigene Filterung durchführen.</para></block>
        <altmember cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="PreFilterProperties">
      <MemberSignature Language="C#" Value="public void PreFilterProperties (System.Collections.IDictionary properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PreFilterProperties(class System.Collections.IDictionary properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PreFilterProperties (properties As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PreFilterProperties(System::Collections::IDictionary ^ properties);" />
      <MemberSignature Language="F#" Value="abstract member PreFilterProperties : System.Collections.IDictionary -&gt; unit" Usage="iDesignerFilter.PreFilterProperties properties" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="properties">Die <see cref="T:System.ComponentModel.PropertyDescriptor" />-Objekte, die die Eigenschaften der Klasse der Komponente darstellen. Die Schlüssel im Eigenschaftenwörterbuch sind Eigenschaftennamen.</param>
        <summary>Ermöglicht es einem Designer, beim Überschreiben in einer abgeleiteten Klasse der über einen <see cref="T:System.ComponentModel.TypeDescriptor" /> verfügbar gemachten Gruppe von Eigenschaften Elemente hinzuzufügen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode bietet eine Möglichkeit zum Hinzufügen von Elementen zum Wörterbuch von Eigenschaften, die ein Designer <xref:System.ComponentModel.TypeDescriptor>über einen verfügbar macht.  
  
 Die Schlüssel im Eigenschaften Wörterbuch sind die Namen der Eigenschaften. Die Objekte sind vom Typ <xref:System.ComponentModel.PropertyDescriptor>. Diese Methode wird unmittelbar vor <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties%2A>aufgerufen.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Sie können das Wörterbuch direkt ändern, auf das über <paramref name="properties" /> den-Parameter zugegriffen werden kann, oder Sie können es unverändert lassen. Wenn Sie diese Methode überschreiben, wenden Sie die Basis Implementierung an, bevor Sie Ihre eigene Filterung durchführen.</para></block>
        <altmember cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      </Docs>
    </Member>
  </Members>
</Type>
