<Type Name="MenuCommandService" FullName="System.ComponentModel.Design.MenuCommandService">
  <TypeSignature Language="C#" Value="public class MenuCommandService : IDisposable, System.ComponentModel.Design.IMenuCommandService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MenuCommandService extends System.Object implements class System.ComponentModel.Design.IMenuCommandService, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.MenuCommandService" />
  <TypeSignature Language="VB.NET" Value="Public Class MenuCommandService&#xA;Implements IDisposable, IMenuCommandService" />
  <TypeSignature Language="C++ CLI" Value="public ref class MenuCommandService : IDisposable, System::ComponentModel::Design::IMenuCommandService" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.Design.IMenuCommandService</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="cfc2b-101">Implementiert die <see cref="T:System.ComponentModel.Design.IMenuCommandService" />-Schnittstelle.</span><span class="sxs-lookup"><span data-stu-id="cfc2b-101">Implements the <see cref="T:System.ComponentModel.Design.IMenuCommandService" /> interface.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cfc2b-102">Die <xref:System.ComponentModel.Design.MenuCommandService> -Klasse implementiert die <xref:System.ComponentModel.Design.IMenuCommandService> -Schnittstelle, die die verwaltete Schnittstelle, die Handler für Menübefehle hinzu und Definieren von Verben verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="cfc2b-102">The <xref:System.ComponentModel.Design.MenuCommandService> class implements the <xref:System.ComponentModel.Design.IMenuCommandService> interface, which is the managed interface used to add handlers for menu commands and to define verbs.</span></span>  
  
 <span data-ttu-id="cfc2b-103">Die <xref:System.ComponentModel.Design.MenuCommandService> Klasse automatisch von der Paketklasse globale Befehle für ein ganzes Paket zur angeboten wird, und es wird auch von Angeboten die `Microsoft.VisualStudio.Shell.WindowPane` Klasse, um Befehle für das aktuelle Fenster bieten.</span><span class="sxs-lookup"><span data-stu-id="cfc2b-103">The <xref:System.ComponentModel.Design.MenuCommandService> class is automatically offered by the package class to offer global commands for an entire package, and it is also offered by the `Microsoft.VisualStudio.Shell.WindowPane` class to offer commands for the current window.</span></span> <span data-ttu-id="cfc2b-104">Dieses Angebot immer erfolgt über Dienstcontainer, sodass jeder Ableiten aus dem Paket oder Bereich Fensterklassen entfernen oder Ersetzen Sie die standardmäßige Implementierung des können die <xref:System.ComponentModel.Design.IMenuCommandService> Schnittstelle.</span><span class="sxs-lookup"><span data-stu-id="cfc2b-104">This offering is always done through the service container, so anyone deriving from the package or window pane classes can remove or replace the default implementation of the <xref:System.ComponentModel.Design.IMenuCommandService> interface.</span></span>  
  
 <span data-ttu-id="cfc2b-105">Die <xref:System.ComponentModel.Design.MenuCommandService> Klasse verwendet mehrere andere Dienste.</span><span class="sxs-lookup"><span data-stu-id="cfc2b-105">The <xref:System.ComponentModel.Design.MenuCommandService> class utilizes several other services.</span></span> <span data-ttu-id="cfc2b-106">Alle diese Dienste sind optional, sodass das Verhalten der <xref:System.ComponentModel.Design.MenuCommandService> Klasse beeinträchtigt wird, wenn eine oder mehrere Dienste fehlen.</span><span class="sxs-lookup"><span data-stu-id="cfc2b-106">All of these services are optional, so the behavior of the <xref:System.ComponentModel.Design.MenuCommandService> class degrades if one or more services are missing.</span></span> <span data-ttu-id="cfc2b-107">Die folgende Tabelle zeigt, welche Dienste verwendet werden und für welchen Zweck.</span><span class="sxs-lookup"><span data-stu-id="cfc2b-107">The following table shows which services are used and for what purpose.</span></span>  
  
|<span data-ttu-id="cfc2b-108">Dienst</span><span class="sxs-lookup"><span data-stu-id="cfc2b-108">Service</span></span>|<span data-ttu-id="cfc2b-109">Zweck</span><span class="sxs-lookup"><span data-stu-id="cfc2b-109">Purpose</span></span>|  
|-------------|-------------|  
|<xref:System.ComponentModel.Design.ISelectionService>|<span data-ttu-id="cfc2b-110">Zum Ermitteln der aktuellen Auswahl um Verben, die von der aktuell ausgewählten Designer Angeboten zu erhalten.</span><span class="sxs-lookup"><span data-stu-id="cfc2b-110">Used to discover the current selection in order to obtain verbs offered by the currently selected designer.</span></span>|  
|<xref:System.ComponentModel.Design.IDesignerHost>|<span data-ttu-id="cfc2b-111">Verwendet zum Abrufen des Designers für die aktuell ausgewählte Komponente, sofern vorhanden.</span><span class="sxs-lookup"><span data-stu-id="cfc2b-111">Used to obtain the designer for the currently selected component, if any.</span></span>|  
|`Microsoft.VisualStudio.Shell.Interop.IVsUIShell`|<span data-ttu-id="cfc2b-112">Verwendet, um Visual Studio zu benachrichtigen, dass der Befehlsstatus geändert hat.</span><span class="sxs-lookup"><span data-stu-id="cfc2b-112">Used to notify Visual Studio that the command status has changed.</span></span>|  
|`Microsoft.VisualStudio.Shell.Interop.IOleComponentUIManager`|<span data-ttu-id="cfc2b-113">Zum Anzeigen des Kontextmenüs verwendet.</span><span class="sxs-lookup"><span data-stu-id="cfc2b-113">Used to show context menus.</span></span>|  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
    <altmember cref="T:System.ComponentModel.Design.DesignerVerb" />
    <altmember cref="T:System.ComponentModel.Design.CommandID" />
    <altmember cref="T:System.IServiceProvider" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MenuCommandService (IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.MenuCommandService.#ctor(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (serviceProvider As IServiceProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MenuCommandService(IServiceProvider ^ serviceProvider);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="serviceProvider"><span data-ttu-id="cfc2b-114">Der Dienstanbieter, den dieser Dienst verwendet, um andere Dienste abzurufen.</span><span class="sxs-lookup"><span data-stu-id="cfc2b-114">The service provider that this service uses to obtain other services.</span></span></param>
        <summary><span data-ttu-id="cfc2b-115">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.Design.MenuCommandService" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="cfc2b-115">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.MenuCommandService" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cfc2b-116">Wenn der Dienst mit einem Designer verwendet wird, ist die `serviceProvider` Parameter muss der Dienstanbieter für den Designer, wie bei der Fall ist <xref:System.ComponentModel.Design.DesignSurface>.</span><span class="sxs-lookup"><span data-stu-id="cfc2b-116">If the service is being used with a designer, the `serviceProvider` parameter should be the service provider for the designer, as is the case with <xref:System.ComponentModel.Design.DesignSurface>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
        <altmember cref="T:System.IServiceProvider" />
      </Docs>
    </Member>
    <Member MemberName="AddCommand">
      <MemberSignature Language="C#" Value="public virtual void AddCommand (System.ComponentModel.Design.MenuCommand command);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddCommand(class System.ComponentModel.Design.MenuCommand command) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.MenuCommandService.AddCommand(System.ComponentModel.Design.MenuCommand)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddCommand (command As MenuCommand)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddCommand(System::ComponentModel::Design::MenuCommand ^ command);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.ComponentModel.Design.MenuCommand" />
      </Parameters>
      <Docs>
        <param name="command"><span data-ttu-id="cfc2b-117">Das hinzuzufügende <see cref="T:System.ComponentModel.Design.MenuCommand" />.</span><span class="sxs-lookup"><span data-stu-id="cfc2b-117">The <see cref="T:System.ComponentModel.Design.MenuCommand" /> to add.</span></span></param>
        <summary><span data-ttu-id="cfc2b-118">Fügt dem Menübefehlsdienst einen Befehlshandler hinzu.</span><span class="sxs-lookup"><span data-stu-id="cfc2b-118">Adds a command handler to the menu command service.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cfc2b-119">Die <xref:System.ComponentModel.Design.MenuCommandService.AddCommand%2A> Methode wird der Befehl menüdienst Befehlshandler hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="cfc2b-119">The <xref:System.ComponentModel.Design.MenuCommandService.AddCommand%2A> method adds a command handler to the menu command service.</span></span> <span data-ttu-id="cfc2b-120">Befehlshandler definieren nicht den Text, die Verknüpfung oder die Platzierung eines Menüelements.</span><span class="sxs-lookup"><span data-stu-id="cfc2b-120">Command handlers do not define the text, shortcut, or placement of a menu item.</span></span> <span data-ttu-id="cfc2b-121">Stattdessen definieren sie das Menüelement Verhalten, wenn das Element geklickt wird.</span><span class="sxs-lookup"><span data-stu-id="cfc2b-121">Rather, they define the menu item’s behavior if the item is clicked.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cfc2b-122"><paramref name="command" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cfc2b-122"><paramref name="command" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="cfc2b-123">Ein Befehlshandler-<paramref name="command" /> ist bereits vorhanden.</span><span class="sxs-lookup"><span data-stu-id="cfc2b-123">A command handler <paramref name="command" /> already exists.</span></span></exception>
        <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
        <altmember cref="T:System.ComponentModel.Design.DesignerVerb" />
        <altmember cref="T:System.ComponentModel.Design.CommandID" />
        <altmember cref="T:System.IServiceProvider" />
      </Docs>
    </Member>
    <Member MemberName="AddVerb">
      <MemberSignature Language="C#" Value="public virtual void AddVerb (System.ComponentModel.Design.DesignerVerb verb);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddVerb(class System.ComponentModel.Design.DesignerVerb verb) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.MenuCommandService.AddVerb(System.ComponentModel.Design.DesignerVerb)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddVerb (verb As DesignerVerb)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddVerb(System::ComponentModel::Design::DesignerVerb ^ verb);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="verb" Type="System.ComponentModel.Design.DesignerVerb" />
      </Parameters>
      <Docs>
        <param name="verb"><span data-ttu-id="cfc2b-124">Das hinzuzufügende <see cref="T:System.ComponentModel.Design.DesignerVerb" />.</span><span class="sxs-lookup"><span data-stu-id="cfc2b-124">The <see cref="T:System.ComponentModel.Design.DesignerVerb" /> to add.</span></span></param>
        <summary><span data-ttu-id="cfc2b-125">Fügt der Verbtabelle des <see cref="T:System.ComponentModel.Design.MenuCommandService" /> ein Verb hinzu.</span><span class="sxs-lookup"><span data-stu-id="cfc2b-125">Adds a verb to the verb table of the <see cref="T:System.ComponentModel.Design.MenuCommandService" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cfc2b-126">Das Verb ist verfügbar, unabhängig davon, welcher Designer derzeit ausgewählt ist.</span><span class="sxs-lookup"><span data-stu-id="cfc2b-126">This verb is available regardless of what designer is currently selected.</span></span> <span data-ttu-id="cfc2b-127">Im Gegensatz zu Menübefehlen Verben können definieren, dass des Texts, der dem Benutzer angezeigt wird, aber sie definieren nicht die Platzierung des Befehls auf dem Menü.</span><span class="sxs-lookup"><span data-stu-id="cfc2b-127">Unlike menu commands, verbs can define the text that is displayed to the user, but they do not define the placement of the command on the actual menu.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cfc2b-128"><paramref name="verb" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cfc2b-128"><paramref name="verb" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
        <altmember cref="T:System.ComponentModel.Design.DesignerVerb" />
        <altmember cref="T:System.ComponentModel.Design.CommandID" />
        <altmember cref="T:System.IServiceProvider" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="cfc2b-129">Gibt alle vom <see cref="T:System.ComponentModel.Design.MenuCommandService" /> verwendeten Ressourcen frei.</span><span class="sxs-lookup"><span data-stu-id="cfc2b-129">Releases all resources used by the <see cref="T:System.ComponentModel.Design.MenuCommandService" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.MenuCommandService.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cfc2b-130">Gibt alle vom <see cref="T:System.ComponentModel.Design.MenuCommandService" /> verwendeten Ressourcen frei.</span><span class="sxs-lookup"><span data-stu-id="cfc2b-130">Releases all resources used by the <see cref="T:System.ComponentModel.Design.MenuCommandService" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cfc2b-131">Rufen Sie <xref:System.ComponentModel.Design.MenuCommandService.Dispose%2A> auf, wenn Sie <xref:System.ComponentModel.Design.MenuCommandService> nicht mehr benötigen.</span><span class="sxs-lookup"><span data-stu-id="cfc2b-131">Call <xref:System.ComponentModel.Design.MenuCommandService.Dispose%2A> when you are finished using the <xref:System.ComponentModel.Design.MenuCommandService>.</span></span> <span data-ttu-id="cfc2b-132">Die <xref:System.ComponentModel.Design.MenuCommandService.Dispose%2A>-Methode bewirkt, dass <xref:System.ComponentModel.Design.MenuCommandService> nicht mehr verwendet werden kann.</span><span class="sxs-lookup"><span data-stu-id="cfc2b-132">The <xref:System.ComponentModel.Design.MenuCommandService.Dispose%2A> method leaves the <xref:System.ComponentModel.Design.MenuCommandService> in an unusable state.</span></span> <span data-ttu-id="cfc2b-133">Nach dem Aufruf <xref:System.ComponentModel.Design.MenuCommandService.Dispose%2A>, müssen Sie alle Verweise auf Freigeben der <xref:System.ComponentModel.Design.MenuCommandService> , damit der Garbage Collector den Arbeitsspeicher freigeben kann, die die <xref:System.ComponentModel.Design.MenuCommandService> belegt wurde.</span><span class="sxs-lookup"><span data-stu-id="cfc2b-133">After calling <xref:System.ComponentModel.Design.MenuCommandService.Dispose%2A>, you must release all references to the <xref:System.ComponentModel.Design.MenuCommandService> so the garbage collector can reclaim the memory that the <xref:System.ComponentModel.Design.MenuCommandService> was occupying.</span></span> <span data-ttu-id="cfc2b-134">Weitere Informationen finden Sie unter [Bereinigen von nicht verwalteten Ressourcen](~/docs/standard/garbage-collection/unmanaged.md) und [Implementieren einer Dispose-Methode](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="cfc2b-134">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cfc2b-135">Rufen Sie immer <xref:System.ComponentModel.Design.MenuCommandService.Dispose%2A> auf, bevor Sie den letzten Verweis auf das <xref:System.ComponentModel.Design.MenuCommandService> freigeben.</span><span class="sxs-lookup"><span data-stu-id="cfc2b-135">Always call <xref:System.ComponentModel.Design.MenuCommandService.Dispose%2A> before you release your last reference to the <xref:System.ComponentModel.Design.MenuCommandService>.</span></span> <span data-ttu-id="cfc2b-136">Andernfalls bleiben die verwendeten Ressourcen reserviert, bis die Garbage Collection die <xref:System.ComponentModel.Design.MenuCommandService>-Methode des `Finalize`-Objekts aufruft.</span><span class="sxs-lookup"><span data-stu-id="cfc2b-136">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.ComponentModel.Design.MenuCommandService> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.MenuCommandService.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="cfc2b-137"><see langword="true" />, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben, <see langword="false" />, um ausschließlich nicht verwaltete Ressourcen freizugeben.</span><span class="sxs-lookup"><span data-stu-id="cfc2b-137"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="cfc2b-138">Gibt alle vom <see cref="T:System.ComponentModel.Design.MenuCommandService" /> verwendeten Ressourcen frei.</span><span class="sxs-lookup"><span data-stu-id="cfc2b-138">Releases all resources used by the <see cref="T:System.ComponentModel.Design.MenuCommandService" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cfc2b-139">Diese Methode wird aufgerufen, der öffentlich `Dispose()` Methode und die <xref:System.Object.Finalize%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="cfc2b-139">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="cfc2b-140">`Dispose()` Ruft die geschützte `Dispose(Boolean)` Methode mit dem `disposing` Parametersatz auf `true`.</span><span class="sxs-lookup"><span data-stu-id="cfc2b-140">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="cfc2b-141"><xref:System.Object.Finalize%2A> Ruft `Dispose` mit `disposing` festgelegt `false`.</span><span class="sxs-lookup"><span data-stu-id="cfc2b-141"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="cfc2b-142">Wenn die `disposing` Parameter ist "true", gibt diese Methode sämtliche Ressourcen frei, die für verwaltete Objekte, die von diesem <xref:System.ComponentModel.Design.MenuCommandService> Verweise.</span><span class="sxs-lookup"><span data-stu-id="cfc2b-142">When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.ComponentModel.Design.MenuCommandService> references.</span></span> <span data-ttu-id="cfc2b-143">Diese Methode ruft die `Dispose()`-Methode aller Objekte auf, auf die verwiesen wird.</span><span class="sxs-lookup"><span data-stu-id="cfc2b-143">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="cfc2b-144"><see langword="Dispose" /> kann von anderen Objekten mehrmals aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="cfc2b-144"><see langword="Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="cfc2b-145">Zum Überschreiben <see langword="Dispose(Boolean)" /> Achten Sie darauf, dass Sie nicht auf Objekte verweisen, die einen früheren Aufruf freigegeben wurden <see langword="Dispose" />.</span><span class="sxs-lookup"><span data-stu-id="cfc2b-145">When overriding <see langword="Dispose(Boolean)" /> be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span></span> <span data-ttu-id="cfc2b-146">Weitere Informationen zum Implementieren <see langword="Dispose(Boolean)" />, finden Sie unter [Implementieren einer Dispose-Methode](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="cfc2b-146">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
 <span data-ttu-id="cfc2b-147">Weitere Informationen zu <see langword="Dispose" /> und <see cref="M:System.Object.Finalize" />, finden Sie unter [Bereinigen von nicht verwalteten Ressourcen](~/docs/standard/garbage-collection/unmanaged.md) und [Überschreiben der Finalize-Methode](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</span><span class="sxs-lookup"><span data-stu-id="cfc2b-147">For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="EnsureVerbs">
      <MemberSignature Language="C#" Value="protected void EnsureVerbs ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void EnsureVerbs() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.MenuCommandService.EnsureVerbs" />
      <MemberSignature Language="VB.NET" Value="Protected Sub EnsureVerbs ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void EnsureVerbs();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cfc2b-148">Stellt sicher, dass die Verbliste erstellt wurde.</span><span class="sxs-lookup"><span data-stu-id="cfc2b-148">Ensures that the verb list has been created.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cfc2b-149">Die <xref:System.ComponentModel.Design.MenuCommandService.EnsureVerbs%2A> Methode erstellt Liste von Verben auf, wenn er nicht bereits erstellt wurde.</span><span class="sxs-lookup"><span data-stu-id="cfc2b-149">The <xref:System.ComponentModel.Design.MenuCommandService.EnsureVerbs%2A> method creates the verb list if it has not already been created.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
        <altmember cref="T:System.ComponentModel.Design.DesignerVerb" />
        <altmember cref="T:System.ComponentModel.Design.CommandID" />
        <altmember cref="T:System.IServiceProvider" />
      </Docs>
    </Member>
    <MemberGroup MemberName="FindCommand">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="cfc2b-150">Sucht nach dem der angegebenen Befehls-ID zugeordneten <see cref="T:System.ComponentModel.Design.MenuCommand" />.</span><span class="sxs-lookup"><span data-stu-id="cfc2b-150">Searches for the <see cref="T:System.ComponentModel.Design.MenuCommand" /> associated with the given command ID.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindCommand">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Design.MenuCommand FindCommand (System.ComponentModel.Design.CommandID commandID);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.Design.MenuCommand FindCommand(class System.ComponentModel.Design.CommandID commandID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.MenuCommandService.FindCommand(System.ComponentModel.Design.CommandID)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ComponentModel::Design::MenuCommand ^ FindCommand(System::ComponentModel::Design::CommandID ^ commandID);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.MenuCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandID" Type="System.ComponentModel.Design.CommandID" />
      </Parameters>
      <Docs>
        <param name="commandID"><span data-ttu-id="cfc2b-151">Das zu suchende <see cref="T:System.ComponentModel.Design.CommandID" />.</span><span class="sxs-lookup"><span data-stu-id="cfc2b-151">The <see cref="T:System.ComponentModel.Design.CommandID" /> to find.</span></span></param>
        <summary><span data-ttu-id="cfc2b-152">Sucht nach dem der angegebenen Befehls-ID zugeordneten <see cref="T:System.ComponentModel.Design.MenuCommand" />.</span><span class="sxs-lookup"><span data-stu-id="cfc2b-152">Searches for the <see cref="T:System.ComponentModel.Design.MenuCommand" /> associated with the given command ID.</span></span></summary>
        <returns><span data-ttu-id="cfc2b-153">Der dem angegebenen Befehl zugeordnete <see cref="T:System.ComponentModel.Design.MenuCommand" />, andernfalls <see langword="null" />, wenn der Befehl nicht gefunden wird.</span><span class="sxs-lookup"><span data-stu-id="cfc2b-153">The <see cref="T:System.ComponentModel.Design.MenuCommand" /> associated with the given command; otherwise, <see langword="null" /> if the command is not found.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
        <altmember cref="T:System.ComponentModel.Design.DesignerVerb" />
        <altmember cref="T:System.ComponentModel.Design.CommandID" />
        <altmember cref="T:System.IServiceProvider" />
      </Docs>
    </Member>
    <Member MemberName="FindCommand">
      <MemberSignature Language="C#" Value="protected System.ComponentModel.Design.MenuCommand FindCommand (Guid guid, int id);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.ComponentModel.Design.MenuCommand FindCommand(valuetype System.Guid guid, int32 id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.MenuCommandService.FindCommand(System.Guid,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::ComponentModel::Design::MenuCommand ^ FindCommand(Guid guid, int id);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.MenuCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="guid" Type="System.Guid" />
        <Parameter Name="id" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="guid"><span data-ttu-id="cfc2b-154">Die GUID des Befehls.</span><span class="sxs-lookup"><span data-stu-id="cfc2b-154">The GUID of the command.</span></span></param>
        <param name="id"><span data-ttu-id="cfc2b-155">Die ID des Befehls.</span><span class="sxs-lookup"><span data-stu-id="cfc2b-155">The ID of the command.</span></span></param>
        <summary><span data-ttu-id="cfc2b-156">Sucht nach dem <see cref="T:System.ComponentModel.Design.MenuCommand" />, der dem angegebenen Befehl zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="cfc2b-156">Searches for the <see cref="T:System.ComponentModel.Design.MenuCommand" /> associated with the given command.</span></span></summary>
        <returns><span data-ttu-id="cfc2b-157">Der dem angegebenen Befehl zugeordnete <see cref="T:System.ComponentModel.Design.MenuCommand" />, andernfalls <see langword="null" />, wenn der Befehl nicht gefunden wird.</span><span class="sxs-lookup"><span data-stu-id="cfc2b-157">The <see cref="T:System.ComponentModel.Design.MenuCommand" /> associated with the given command; otherwise, <see langword="null" /> if the command is not found.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
        <altmember cref="T:System.ComponentModel.Design.DesignerVerb" />
        <altmember cref="T:System.ComponentModel.Design.CommandID" />
        <altmember cref="T:System.IServiceProvider" />
      </Docs>
    </Member>
    <Member MemberName="GetCommandList">
      <MemberSignature Language="C#" Value="protected System.Collections.ICollection GetCommandList (Guid guid);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Collections.ICollection GetCommandList(valuetype System.Guid guid) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.MenuCommandService.GetCommandList(System.Guid)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Collections::ICollection ^ GetCommandList(Guid guid);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="guid" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="guid"><span data-ttu-id="cfc2b-158">Die GUID der Befehlsliste.</span><span class="sxs-lookup"><span data-stu-id="cfc2b-158">The GUID of the command list.</span></span></param>
        <summary><span data-ttu-id="cfc2b-159">Ruft die Befehlsliste für eine gegebene GUID ab.</span><span class="sxs-lookup"><span data-stu-id="cfc2b-159">Gets the command list for a given GUID.</span></span></summary>
        <returns><span data-ttu-id="cfc2b-160">Eine <see cref="T:System.Collections.ICollection" /> von Befehlen.</span><span class="sxs-lookup"><span data-stu-id="cfc2b-160">An <see cref="T:System.Collections.ICollection" /> of commands.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
        <altmember cref="T:System.ComponentModel.Design.DesignerVerb" />
        <altmember cref="T:System.ComponentModel.Design.CommandID" />
        <altmember cref="T:System.IServiceProvider" />
      </Docs>
    </Member>
    <Member MemberName="GetService">
      <MemberSignature Language="C#" Value="protected object GetService (Type serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance object GetService(class System.Type serviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.MenuCommandService.GetService(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetService (serviceType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Object ^ GetService(Type ^ serviceType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceType"><span data-ttu-id="cfc2b-161">Der <see cref="T:System.Type" /> des abzurufenden Dienstes.</span><span class="sxs-lookup"><span data-stu-id="cfc2b-161">The <see cref="T:System.Type" /> of the service to retrieve.</span></span></param>
        <summary><span data-ttu-id="cfc2b-162">Ruft einen Verweis auf den angeforderten Dienst ab.</span><span class="sxs-lookup"><span data-stu-id="cfc2b-162">Gets a reference to the requested service.</span></span></summary>
        <returns><span data-ttu-id="cfc2b-163">Ein Verweis auf <paramref name="serviceType" />, andernfalls <see langword="null" />, wenn der Dienst nicht gefunden wird.</span><span class="sxs-lookup"><span data-stu-id="cfc2b-163">A reference to <paramref name="serviceType" />; otherwise, <see langword="null" /> if the service is not found.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cfc2b-164"><paramref name="serviceType" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cfc2b-164"><paramref name="serviceType" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
        <altmember cref="T:System.ComponentModel.Design.DesignerVerb" />
        <altmember cref="T:System.ComponentModel.Design.CommandID" />
        <altmember cref="T:System.IServiceProvider" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GlobalInvoke">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="cfc2b-165">Ruft einen Befehl für das lokale Formular oder in der globalen Umgebung auf.</span><span class="sxs-lookup"><span data-stu-id="cfc2b-165">Invokes a command on the local form or in the global environment.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GlobalInvoke">
      <MemberSignature Language="C#" Value="public virtual bool GlobalInvoke (System.ComponentModel.Design.CommandID commandID);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GlobalInvoke(class System.ComponentModel.Design.CommandID commandID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.MenuCommandService.GlobalInvoke(System.ComponentModel.Design.CommandID)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GlobalInvoke(System::ComponentModel::Design::CommandID ^ commandID);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandID" Type="System.ComponentModel.Design.CommandID" />
      </Parameters>
      <Docs>
        <param name="commandID"><span data-ttu-id="cfc2b-166">Der aufzurufende Befehl.</span><span class="sxs-lookup"><span data-stu-id="cfc2b-166">The command to invoke.</span></span></param>
        <summary><span data-ttu-id="cfc2b-167">Ruft den angegebenen Befehl für das lokale Formular oder in der globalen Umgebung auf.</span><span class="sxs-lookup"><span data-stu-id="cfc2b-167">Invokes the given command on the local form or in the global environment.</span></span></summary>
        <returns>
          <span data-ttu-id="cfc2b-168"><see langword="true" />, wenn der Befehl gefunden wurde, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="cfc2b-168"><see langword="true" />, if the command was found; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cfc2b-169">Das lokale Formular wird zuerst nach der angegebenen Befehls-ID. durchsucht.</span><span class="sxs-lookup"><span data-stu-id="cfc2b-169">The local form is first searched for the given command ID.</span></span> <span data-ttu-id="cfc2b-170">Wenn es gefunden wird, wird er aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="cfc2b-170">If it is found, it is invoked.</span></span> <span data-ttu-id="cfc2b-171">Andernfalls wird die Befehls-ID an Befehlshandler globalen Umgebung übergeben, wenn ein solcher verfügbar ist.</span><span class="sxs-lookup"><span data-stu-id="cfc2b-171">Otherwise, the command ID is passed to the global environment command handler, if one is available.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
        <altmember cref="T:System.ComponentModel.Design.DesignerVerb" />
        <altmember cref="T:System.ComponentModel.Design.CommandID" />
        <altmember cref="T:System.IServiceProvider" />
      </Docs>
    </Member>
    <Member MemberName="GlobalInvoke">
      <MemberSignature Language="C#" Value="public virtual bool GlobalInvoke (System.ComponentModel.Design.CommandID commandId, object arg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GlobalInvoke(class System.ComponentModel.Design.CommandID commandId, object arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.MenuCommandService.GlobalInvoke(System.ComponentModel.Design.CommandID,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GlobalInvoke(System::ComponentModel::Design::CommandID ^ commandId, System::Object ^ arg);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandId" Type="System.ComponentModel.Design.CommandID" />
        <Parameter Name="arg" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="commandId"><span data-ttu-id="cfc2b-172">Der aufzurufende Befehl.</span><span class="sxs-lookup"><span data-stu-id="cfc2b-172">The command to invoke.</span></span></param>
        <param name="arg"><span data-ttu-id="cfc2b-173">Ein Parameter für den Aufruf.</span><span class="sxs-lookup"><span data-stu-id="cfc2b-173">A parameter for the invocation.</span></span></param>
        <summary><span data-ttu-id="cfc2b-174">Ruft den angegebenen Befehl mit dem angegebenen Parameter auf dem lokalen Formular oder in der globalen Umgebung auf.</span><span class="sxs-lookup"><span data-stu-id="cfc2b-174">Invokes the given command with the given parameter on the local form or in the global environment.</span></span></summary>
        <returns>
          <span data-ttu-id="cfc2b-175"><see langword="true" />, wenn der Befehl gefunden wurde, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="cfc2b-175"><see langword="true" />, if the command was found; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cfc2b-176">Das lokale Formular wird zuerst nach der angegebenen Befehls-ID. durchsucht.</span><span class="sxs-lookup"><span data-stu-id="cfc2b-176">The local form is first searched for the given command ID.</span></span> <span data-ttu-id="cfc2b-177">Wenn es gefunden wird, wird er aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="cfc2b-177">If it is found, it is invoked.</span></span> <span data-ttu-id="cfc2b-178">Andernfalls wird die Befehls-ID an Befehlshandler globalen Umgebung übergeben, wenn ein solcher verfügbar ist.</span><span class="sxs-lookup"><span data-stu-id="cfc2b-178">Otherwise, the command ID is passed to the global environment command handler, if one is available.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
        <altmember cref="T:System.ComponentModel.Design.DesignerVerb" />
        <altmember cref="T:System.ComponentModel.Design.CommandID" />
        <altmember cref="T:System.IServiceProvider" />
      </Docs>
    </Member>
    <Member MemberName="MenuCommandsChanged">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.Design.MenuCommandsChangedEventHandler MenuCommandsChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.Design.MenuCommandsChangedEventHandler MenuCommandsChanged" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.MenuCommandService.MenuCommandsChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MenuCommandsChanged As MenuCommandsChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::Design::MenuCommandsChangedEventHandler ^ MenuCommandsChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.MenuCommandsChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cfc2b-179">Tritt auf, wenn sich der Status eines Menübefehls geändert hat.</span><span class="sxs-lookup"><span data-stu-id="cfc2b-179">Occurs when the status of a menu command has changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cfc2b-180">Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [NIB: Behandeln von Ereignissen](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span><span class="sxs-lookup"><span data-stu-id="cfc2b-180">For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCommandsChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnCommandsChanged (System.ComponentModel.Design.MenuCommandsChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCommandsChanged(class System.ComponentModel.Design.MenuCommandsChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.MenuCommandService.OnCommandsChanged(System.ComponentModel.Design.MenuCommandsChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCommandsChanged (e As MenuCommandsChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCommandsChanged(System::ComponentModel::Design::MenuCommandsChangedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.Design.MenuCommandsChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="cfc2b-181">Ein <see cref="T:System.ComponentModel.Design.MenuCommandsChangedEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="cfc2b-181">A <see cref="T:System.ComponentModel.Design.MenuCommandsChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="cfc2b-182">Löst das <see cref="E:System.ComponentModel.Design.MenuCommandService.MenuCommandsChanged" />-Ereignis aus.</span><span class="sxs-lookup"><span data-stu-id="cfc2b-182">Raises the <see cref="E:System.ComponentModel.Design.MenuCommandService.MenuCommandsChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cfc2b-183">Die <xref:System.ComponentModel.Design.MenuCommandService.OnCommandsChanged%2A> Methode wird von einem Menübefehl aufgerufen, wenn dessen Status geändert hat.</span><span class="sxs-lookup"><span data-stu-id="cfc2b-183">The <xref:System.ComponentModel.Design.MenuCommandService.OnCommandsChanged%2A> method is called by a menu command when its status has changed.</span></span>  
  
 <span data-ttu-id="cfc2b-184">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="cfc2b-184">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="cfc2b-185">Weitere Informationen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="cfc2b-185">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="cfc2b-186">Mit der <xref:System.ComponentModel.Design.MenuCommandService.OnCommandsChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln.</span><span class="sxs-lookup"><span data-stu-id="cfc2b-186">The <xref:System.ComponentModel.Design.MenuCommandService.OnCommandsChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="cfc2b-187">Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="cfc2b-187">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="cfc2b-188">Zum Überschreiben <see cref="M:System.ComponentModel.Design.MenuCommandService.OnCommandsChanged(System.ComponentModel.Design.MenuCommandsChangedEventArgs)" /> werden Sie in einer abgeleiteten Klasse der Basisklasse aufrufen <see cref="M:System.ComponentModel.Design.MenuCommandService.OnCommandsChanged(System.ComponentModel.Design.MenuCommandsChangedEventArgs)" /> Methode, damit registrierte Delegaten das Ereignis empfangen.</span><span class="sxs-lookup"><span data-stu-id="cfc2b-188">When overriding <see cref="M:System.ComponentModel.Design.MenuCommandService.OnCommandsChanged(System.ComponentModel.Design.MenuCommandsChangedEventArgs)" /> in a derived class, be sure to call the base class’s <see cref="M:System.ComponentModel.Design.MenuCommandService.OnCommandsChanged(System.ComponentModel.Design.MenuCommandsChangedEventArgs)" /> method so that registered delegates receive the event.</span></span></para>
        </block>
        <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
        <altmember cref="T:System.ComponentModel.Design.DesignerVerb" />
        <altmember cref="T:System.ComponentModel.Design.CommandID" />
        <altmember cref="T:System.IServiceProvider" />
      </Docs>
    </Member>
    <Member MemberName="RemoveCommand">
      <MemberSignature Language="C#" Value="public virtual void RemoveCommand (System.ComponentModel.Design.MenuCommand command);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveCommand(class System.ComponentModel.Design.MenuCommand command) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.MenuCommandService.RemoveCommand(System.ComponentModel.Design.MenuCommand)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveCommand (command As MenuCommand)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveCommand(System::ComponentModel::Design::MenuCommand ^ command);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.ComponentModel.Design.MenuCommand" />
      </Parameters>
      <Docs>
        <param name="command"><span data-ttu-id="cfc2b-189">Der zu entfernende Befehl.</span><span class="sxs-lookup"><span data-stu-id="cfc2b-189">The command to remove.</span></span></param>
        <summary><span data-ttu-id="cfc2b-190">Entfernt den angegebenen Menübefehl aus dem Dokument.</span><span class="sxs-lookup"><span data-stu-id="cfc2b-190">Removes the given menu command from the document.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cfc2b-191">Wenn keine weiteren Befehle in der Befehlsgruppe vorhanden sind, wird die Gruppe entfernt.</span><span class="sxs-lookup"><span data-stu-id="cfc2b-191">If there are no more commands in the command group, the group is removed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cfc2b-192"><paramref name="command" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cfc2b-192"><paramref name="command" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
        <altmember cref="T:System.ComponentModel.Design.DesignerVerb" />
        <altmember cref="T:System.ComponentModel.Design.CommandID" />
        <altmember cref="T:System.IServiceProvider" />
      </Docs>
    </Member>
    <Member MemberName="RemoveVerb">
      <MemberSignature Language="C#" Value="public virtual void RemoveVerb (System.ComponentModel.Design.DesignerVerb verb);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveVerb(class System.ComponentModel.Design.DesignerVerb verb) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.MenuCommandService.RemoveVerb(System.ComponentModel.Design.DesignerVerb)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveVerb (verb As DesignerVerb)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveVerb(System::ComponentModel::Design::DesignerVerb ^ verb);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="verb" Type="System.ComponentModel.Design.DesignerVerb" />
      </Parameters>
      <Docs>
        <param name="verb"><span data-ttu-id="cfc2b-193">Das zu entfernende Verb.</span><span class="sxs-lookup"><span data-stu-id="cfc2b-193">The verb to remove.</span></span></param>
        <summary><span data-ttu-id="cfc2b-194">Entfernt das angegebene Verb aus dem Dokument.</span><span class="sxs-lookup"><span data-stu-id="cfc2b-194">Removes the given verb from the document.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cfc2b-195"><paramref name="verb" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cfc2b-195"><paramref name="verb" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
        <altmember cref="T:System.ComponentModel.Design.DesignerVerb" />
        <altmember cref="T:System.ComponentModel.Design.CommandID" />
        <altmember cref="T:System.IServiceProvider" />
      </Docs>
    </Member>
    <Member MemberName="ShowContextMenu">
      <MemberSignature Language="C#" Value="public virtual void ShowContextMenu (System.ComponentModel.Design.CommandID menuID, int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ShowContextMenu(class System.ComponentModel.Design.CommandID menuID, int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.MenuCommandService.ShowContextMenu(System.ComponentModel.Design.CommandID,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ShowContextMenu (menuID As CommandID, x As Integer, y As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ShowContextMenu(System::ComponentModel::Design::CommandID ^ menuID, int x, int y);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="menuID" Type="System.ComponentModel.Design.CommandID" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="menuID"><span data-ttu-id="cfc2b-196">Das anzuzeigende Kontextmenü.</span><span class="sxs-lookup"><span data-stu-id="cfc2b-196">The shortcut menu to display.</span></span></param>
        <param name="x"><span data-ttu-id="cfc2b-197">Die x-Koordinate der Position des Kontextmenüs.</span><span class="sxs-lookup"><span data-stu-id="cfc2b-197">The x-coordinate of the shortcut menu's location.</span></span></param>
        <param name="y"><span data-ttu-id="cfc2b-198">Die y-Koordinate der Position des Kontextmenüs.</span><span class="sxs-lookup"><span data-stu-id="cfc2b-198">The y-coordinate of the shortcut menu's location.</span></span></param>
        <summary><span data-ttu-id="cfc2b-199">Zeigt das Kontextmenü mit der angegebenen Befehls-ID an der angegebenen Position an.</span><span class="sxs-lookup"><span data-stu-id="cfc2b-199">Shows the shortcut menu with the given command ID at the given location.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cfc2b-200">Bei der Standardimplementierung wird keine Aktion ausgeführt.</span><span class="sxs-lookup"><span data-stu-id="cfc2b-200">The default implementation does nothing.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
        <altmember cref="T:System.ComponentModel.Design.DesignerVerb" />
        <altmember cref="T:System.ComponentModel.Design.CommandID" />
        <altmember cref="T:System.IServiceProvider" />
      </Docs>
    </Member>
    <Member MemberName="Verbs">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.Design.DesignerVerbCollection Verbs { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Design.DesignerVerbCollection Verbs" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.MenuCommandService.Verbs" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Verbs As DesignerVerbCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ComponentModel::Design::DesignerVerbCollection ^ Verbs { System::ComponentModel::Design::DesignerVerbCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.DesignerVerbCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cfc2b-201">Ruft eine Auflistung der aktuell verfügbaren Designerverben ab.</span><span class="sxs-lookup"><span data-stu-id="cfc2b-201">Gets a collection of the designer verbs that are currently available.</span></span></summary>
        <value><span data-ttu-id="cfc2b-202">Eine <see cref="T:System.ComponentModel.Design.DesignerVerbCollection" /> der aktuell verfügbaren Designerverben.</span><span class="sxs-lookup"><span data-stu-id="cfc2b-202">A <see cref="T:System.ComponentModel.Design.DesignerVerbCollection" /> of the designer verbs that are currently available.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cfc2b-203">Die <xref:System.ComponentModel.Design.MenuCommandService.Verbs%2A> Eigenschaft stellt eine Auflistung von Verben.</span><span class="sxs-lookup"><span data-stu-id="cfc2b-203">The <xref:System.ComponentModel.Design.MenuCommandService.Verbs%2A> property provides a collection of verbs.</span></span> <span data-ttu-id="cfc2b-204">Diese Verben stammen aus zwei Stellen:</span><span class="sxs-lookup"><span data-stu-id="cfc2b-204">These verbs come from two places:</span></span>  
  
-   <span data-ttu-id="cfc2b-205">Verben, die hinzugefügt wird, über die <xref:System.ComponentModel.Design.MenuCommandService.AddVerb%2A> Methode <xref:System.ComponentModel.Design.MenuCommandService.Verbs%2A>.</span><span class="sxs-lookup"><span data-stu-id="cfc2b-205">Verbs added through the <xref:System.ComponentModel.Design.MenuCommandService.AddVerb%2A> method of <xref:System.ComponentModel.Design.MenuCommandService.Verbs%2A>.</span></span>  
  
-   <span data-ttu-id="cfc2b-206">Verben, die von der aktuell ausgewählten Designer bereitgestellt werden.</span><span class="sxs-lookup"><span data-stu-id="cfc2b-206">Verbs offered by the currently selected designer.</span></span>  
  
 <span data-ttu-id="cfc2b-207">Verben hinzugefügt, die auf diesen Dienst über die <xref:System.ComponentModel.Design.MenuCommandService.AddVerb%2A> Methode globale Verben genannt werden, da sie gelten global für diesen Dienst, aber es gibt im Allgemeinen eine Instanz dieses Diensts für jedes Fenster Tool- oder Dokumentfenster.</span><span class="sxs-lookup"><span data-stu-id="cfc2b-207">Verbs added to this service through the <xref:System.ComponentModel.Design.MenuCommandService.AddVerb%2A> method are called global verbs because they are global to this service, but generally there is one instance of this service for each tool or document window.</span></span> <span data-ttu-id="cfc2b-208">Designerverben werden abgerufen, indem Sie Abfragen den Dienstanbieter für <xref:System.ComponentModel.Design.IDesignerHost> und <xref:System.ComponentModel.Design.ISelectionService>.</span><span class="sxs-lookup"><span data-stu-id="cfc2b-208">Designer verbs are obtained by querying the service provider for <xref:System.ComponentModel.Design.IDesignerHost> and <xref:System.ComponentModel.Design.ISelectionService>.</span></span> <span data-ttu-id="cfc2b-209">Wenn der Auswahldienst eine primäre Auswahl bietet, und ein Designer kann, für die Auswahl von abgerufen werden <xref:System.ComponentModel.Design.IDesignerHost>, die Verben des Designers zu dieser Liste hinzugefügt werden.</span><span class="sxs-lookup"><span data-stu-id="cfc2b-209">If the selection service offers a primary selection, and a designer can be obtained for that selection from <xref:System.ComponentModel.Design.IDesignerHost>, the designer’s verbs are added to this list.</span></span> <span data-ttu-id="cfc2b-210">Wenn der Name der globalen Verbs durch den Namen des ein Designerverb in Konflikt steht, hat der Designer bereitgestellte Designerverb Vorrang vor.</span><span class="sxs-lookup"><span data-stu-id="cfc2b-210">If the name of a global verb conflicts with the name of a designer verb, the designer-provided designer verb takes precedence.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.MenuCommand" />
        <altmember cref="T:System.ComponentModel.Design.DesignerVerb" />
        <altmember cref="T:System.ComponentModel.Design.CommandID" />
        <altmember cref="T:System.IServiceProvider" />
      </Docs>
    </Member>
  </Members>
</Type>