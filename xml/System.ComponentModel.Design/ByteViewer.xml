<Type Name="ByteViewer" FullName="System.ComponentModel.Design.ByteViewer">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6c2496b429c0f062f9349ef6b5784cff8173b851" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36708007" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ByteViewer : System.Windows.Forms.TableLayoutPanel" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ByteViewer extends System.Windows.Forms.TableLayoutPanel" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.ByteViewer" />
  <TypeSignature Language="VB.NET" Value="Public Class ByteViewer&#xA;Inherits TableLayoutPanel" />
  <TypeSignature Language="C++ CLI" Value="public ref class ByteViewer : System::Windows::Forms::TableLayoutPanel" />
  <TypeSignature Language="F#" Value="type ByteViewer = class&#xA;    inherit TableLayoutPanel" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.TableLayoutPanel</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DesignTimeVisible(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItem(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Zeigt Bytearrays im hexadezimalen Format, ANSI-Format und Unicode-Format an.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.Design.ByteViewer> Stellt eine Schnittstelle für die Anzeige von hexadezimalen, ANSI und Unicode-Format der Daten.  
  
 Die <xref:System.ComponentModel.Design.DisplayMode> Enumeration gibt an, die Bezeichner, die verwendet werden, um den Anzeigemodus verwenden anzugeben. Die <xref:System.ComponentModel.Design.DisplayMode.Auto> Anzeigemodus wählt einen Standardanzeigemodus basierend auf dem Inhalt des Bytearrays. <xref:System.ComponentModel.Design.ByteViewer> verwendet einen einfachen Algorithmus bestimmt, welche Art von Daten im Puffer gespeichert ist. Der Hexadezimalwert <xref:System.ComponentModel.Design.DisplayMode.Hexdump> zeigt den hexadezimalen Werten und entsprechenden bytedarstellungen (Zeichen) in einem schreibgeschützten Feld bearbeiten. Die Standardanzahl von Spalten ist 16. Die <xref:System.ComponentModel.Design.DisplayMode.Ansi> und <xref:System.ComponentModel.Design.DisplayMode.Unicode> Ansichten das Bytearray in ein nur-Lese Bearbeitungsfeld angezeigt. In diesen Ansichten `NUL` Zeichen mit Unicode-Blockzeichen ersetzt werden.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird von Hosts einen <xref:System.ComponentModel.Design.ByteViewer> -Steuerelement in einer <xref:System.Windows.Forms.Form> und stellt eine Schnittstelle zum Konfigurieren und Steuern der <xref:System.ComponentModel.Design.ByteViewer>.  
  
 [!code-cpp[ByteViewerExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ByteViewerExample/CPP/form1.cpp#1)]
 [!code-csharp[ByteViewerExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ByteViewerExample/CS/form1.cs#1)]
 [!code-vb[ByteViewerExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ByteViewerExample/VB/form1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.Design.DisplayMode" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ByteViewer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ByteViewer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ByteViewer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.Design.ByteViewer" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public virtual byte[] GetBytes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] GetBytes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ByteViewer.GetBytes" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBytes () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Byte&gt; ^ GetBytes();" />
      <MemberSignature Language="F#" Value="abstract member GetBytes : unit -&gt; byte[]&#xA;override this.GetBytes : unit -&gt; byte[]" Usage="byteViewer.GetBytes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft die Bytes im Puffer ab.</summary>
        <returns>Der Verweis auf ein Bytearray ohne Vorzeichen.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDisplayMode">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.Design.DisplayMode GetDisplayMode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.ComponentModel.Design.DisplayMode GetDisplayMode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ByteViewer.GetDisplayMode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDisplayMode () As DisplayMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ComponentModel::Design::DisplayMode GetDisplayMode();" />
      <MemberSignature Language="F#" Value="abstract member GetDisplayMode : unit -&gt; System.ComponentModel.Design.DisplayMode&#xA;override this.GetDisplayMode : unit -&gt; System.ComponentModel.Design.DisplayMode" Usage="byteViewer.GetDisplayMode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.DisplayMode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft den Anzeigemodus für das Steuerelement ab.</summary>
        <returns>Der Anzeigemodus, den dieses Steuerelement verwendet. Der Rückgabewert ist in <see cref="T:System.ComponentModel.Design.DisplayMode" /> definiert.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.Design.DisplayMode" />
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected override void OnKeyDown (System.Windows.Forms.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyDown(class System.Windows.Forms.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ByteViewer.OnKeyDown(System.Windows.Forms.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyDown(System::Windows::Forms::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnKeyDown : System.Windows.Forms.KeyEventArgs -&gt; unit" Usage="byteViewer.OnKeyDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.KeyEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.Control.KeyDown" />-Ereignis aus.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnKeyDown(System.Windows.Forms.KeyEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnLayout">
      <MemberSignature Language="C#" Value="protected override void OnLayout (System.Windows.Forms.LayoutEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnLayout(class System.Windows.Forms.LayoutEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ByteViewer.OnLayout(System.Windows.Forms.LayoutEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnLayout (e As LayoutEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnLayout(System::Windows::Forms::LayoutEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnLayout : System.Windows.Forms.LayoutEventArgs -&gt; unit" Usage="byteViewer.OnLayout e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.LayoutEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.LayoutEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.Control.Layout" />-Ereignis aus.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPaint">
      <MemberSignature Language="C#" Value="protected override void OnPaint (System.Windows.Forms.PaintEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPaint(class System.Windows.Forms.PaintEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ByteViewer.OnPaint(System.Windows.Forms.PaintEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPaint (e As PaintEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPaint(System::Windows::Forms::PaintEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPaint : System.Windows.Forms.PaintEventArgs -&gt; unit" Usage="byteViewer.OnPaint e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.PaintEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Forms.PaintEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Windows.Forms.Control.Paint" />-Ereignis aus.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnPaint(System.Windows.Forms.PaintEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="SaveToFile">
      <MemberSignature Language="C#" Value="public virtual void SaveToFile (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SaveToFile(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ByteViewer.SaveToFile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SaveToFile (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SaveToFile(System::String ^ path);" />
      <MemberSignature Language="F#" Value="abstract member SaveToFile : string -&gt; unit&#xA;override this.SaveToFile : string -&gt; unit" Usage="byteViewer.SaveToFile path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">Der Pfad zum Speichern der Datei.</param>
        <summary>Schreibt die unformatierten Daten aus dem Datenpuffer in eine Datei.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="path" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="path" /> ist eine leere Zeichenfolge (""), enthält nur Leerzeichen oder enthält mindestens ein ungültiges Zeichen.</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">Der angegebene Pfad ist ungültig, z. B. befindet er sich auf einem nicht zugeordneten Laufwerk.</exception>
        <exception cref="T:System.IO.IOException">In die Datei konnte nicht geschrieben werden.</exception>
        <exception cref="T:System.IO.PathTooLongException">Der angegebene Pfad und/oder Dateiname überschreiten die vom System definierte maximale Länge.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Der angeforderte Zugriff für den angegebenen <paramref name="path" /> wird durch das Betriebssystem nicht zugelassen. Dies ist z. B. der Fall, wenn <see langword="Write" />- oder <see langword="ReadWrite" />-Zugriff festgelegt sind und für die Datei oder das Verzeichnis schreibgeschützter Zugriff festgelegt wurde.</exception>
      </Docs>
    </Member>
    <Member MemberName="ScrollChanged">
      <MemberSignature Language="C#" Value="protected virtual void ScrollChanged (object source, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ScrollChanged(object source, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ByteViewer.ScrollChanged(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ScrollChanged (source As Object, e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ScrollChanged(System::Object ^ source, EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member ScrollChanged : obj * EventArgs -&gt; unit&#xA;override this.ScrollChanged : obj * EventArgs -&gt; unit" Usage="byteViewer.ScrollChanged (source, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="source">Die Quelle des Ereignisses.</param>
        <param name="e">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Behandelt das <see cref="E:System.Windows.Forms.ScrollBar.ValueChanged" />-Ereignis für die <see cref="T:System.ComponentModel.Design.ByteViewer" /> des <see cref="T:System.Windows.Forms.ScrollBar" />-Steuerelements.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetBytes">
      <MemberSignature Language="C#" Value="public virtual void SetBytes (byte[] bytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetBytes(unsigned int8[] bytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ByteViewer.SetBytes(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetBytes (bytes As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetBytes(cli::array &lt;System::Byte&gt; ^ bytes);" />
      <MemberSignature Language="F#" Value="abstract member SetBytes : byte[] -&gt; unit&#xA;override this.SetBytes : byte[] -&gt; unit" Usage="byteViewer.SetBytes bytes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="bytes">Das Bytearray, das angezeigt werden soll.</param>
        <summary>Legt das das Bytearray fest, das im Viewer angezeigt werden soll.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Das angegebene Bytearray ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetDisplayMode">
      <MemberSignature Language="C#" Value="public virtual void SetDisplayMode (System.ComponentModel.Design.DisplayMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetDisplayMode(valuetype System.ComponentModel.Design.DisplayMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ByteViewer.SetDisplayMode(System.ComponentModel.Design.DisplayMode)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetDisplayMode (mode As DisplayMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetDisplayMode(System::ComponentModel::Design::DisplayMode mode);" />
      <MemberSignature Language="F#" Value="abstract member SetDisplayMode : System.ComponentModel.Design.DisplayMode -&gt; unit&#xA;override this.SetDisplayMode : System.ComponentModel.Design.DisplayMode -&gt; unit" Usage="byteViewer.SetDisplayMode mode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="System.ComponentModel.Design.DisplayMode" />
      </Parameters>
      <Docs>
        <param name="mode">Der Anzeigemodus, der festgelegt werden soll.</param>
        <summary>Legt den aktuellen Anzeigemodus fest.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Der angegebene Anzeigemodus gehört nicht zur <see cref="T:System.ComponentModel.Design.DisplayMode" />-Enumeration.</exception>
        <altmember cref="T:System.ComponentModel.Design.DisplayMode" />
      </Docs>
    </Member>
    <Member MemberName="SetFile">
      <MemberSignature Language="C#" Value="public virtual void SetFile (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetFile(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ByteViewer.SetFile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetFile (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetFile(System::String ^ path);" />
      <MemberSignature Language="F#" Value="abstract member SetFile : string -&gt; unit&#xA;override this.SetFile : string -&gt; unit" Usage="byteViewer.SetFile path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">Der Pfad zum Laden der Datei.</param>
        <summary>Legt die Datei fest, die im Viewer angezeigt werden soll.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Viewer lädt die Daten aus der angegebenen Datei. Diese Methode löst eine Ausnahme aus, wenn das Laden der Datei ein Fehler auftritt.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="path" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="path" /> ist eine leere Zeichenfolge (""), enthält nur Leerzeichen oder enthält mindestens ein ungültiges Zeichen.</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">Der angegebene Pfad ist ungültig, z. B. befindet er sich auf einem nicht zugeordneten Laufwerk.</exception>
        <exception cref="T:System.IO.IOException">Die Datei konnte nicht geladen werden.</exception>
        <exception cref="T:System.IO.PathTooLongException">Der angegebene Pfad und/oder Dateiname überschreiten die vom System definierte maximale Länge.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Der angeforderte Zugriff für den angegebenen <paramref name="path" /> wird durch das Betriebssystem nicht zugelassen. Dies ist z. B. der Fall, wenn <see langword="Write" />- oder <see langword="ReadWrite" />-Zugriff festgelegt sind und für die Datei oder das Verzeichnis schreibgeschützter Zugriff festgelegt wurde.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetStartLine">
      <MemberSignature Language="C#" Value="public virtual void SetStartLine (int line);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetStartLine(int32 line) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ByteViewer.SetStartLine(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetStartLine (line As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetStartLine(int line);" />
      <MemberSignature Language="F#" Value="abstract member SetStartLine : int -&gt; unit&#xA;override this.SetStartLine : int -&gt; unit" Usage="byteViewer.SetStartLine line" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="line" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="line">Die aktuelle Zeile, aus der Daten angezeigt werden sollen.</param>
        <summary>Legt die aktuelle Zeile für die <see cref="F:System.ComponentModel.Design.DisplayMode.Hexdump" />-Ansicht fest.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.ComponentModel.Design.DisplayMode.Hexdump> Anzeigemodus wird den Puffer, ab der angegebenen Zeile angezeigt. Wenn die angegebene Zeile außerhalb des gültigen Bereichs liegt, wird die Startzeile auf 0 (null) festgelegt.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>