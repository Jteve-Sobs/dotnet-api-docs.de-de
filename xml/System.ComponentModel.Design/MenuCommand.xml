<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="MenuCommand.xml" source-language="en-US" target-language="de-DE">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac59857b16d26530fe05c26f2d684fccf8ed627f766.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9857b16d26530fe05c26f2d684fccf8ed627f766</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.Design.MenuCommand">
          <source>Represents a Windows menu or toolbar command item.</source>
          <target state="translated">Stellt einen Befehl in einem Windows-Menü oder auf einer Windows-Symbolleiste dar.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.MenuCommand">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.MenuCommand&gt;</ph> class represents information about a Windows menu or toolbar command.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.ComponentModel.Design.MenuCommand&gt;</ph> Klasse stellt Informationen zu einem Windows-Menüs oder Symbolleisten-Befehl.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.MenuCommand">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.IMenuCommandService&gt;</ph> interface allows you to add <ph id="ph2">&lt;xref:System.ComponentModel.Design.MenuCommand&gt;</ph> objects to the Visual Studio menu.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.ComponentModel.Design.IMenuCommandService&gt;</ph> Schnittstelle ermöglicht es Ihnen hinzuzufügende <ph id="ph2">&lt;xref:System.ComponentModel.Design.MenuCommand&gt;</ph> -Objekten, die Visual Studio-Menü.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.MenuCommand">
          <source>This class provides the following members:</source>
          <target state="translated">Diese Klasse bietet die folgenden Elemente:</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.MenuCommand">
          <source>An event-handler property to which you can attach an event handler for the command.</source>
          <target state="translated">Eine Ereignishandler-Eigenschaft, zu der Sie einen Ereignishandler für den Befehl anfügen können.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.MenuCommand">
          <source>A <ph id="ph1">&lt;xref:System.ComponentModel.Design.CommandID&gt;</ph> property that uniquely identifies the command.</source>
          <target state="translated">Ein <ph id="ph1">&lt;xref:System.ComponentModel.Design.CommandID&gt;</ph> -Eigenschaft, die den Befehl eindeutig identifiziert.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.MenuCommand">
          <source>An <ph id="ph1">&lt;xref:System.ComponentModel.Design.MenuCommand.Invoke%2A&gt;</ph> method that executes the command.</source>
          <target state="translated">Ein <ph id="ph1">&lt;xref:System.ComponentModel.Design.MenuCommand.Invoke%2A&gt;</ph> -Methode, die der Befehl ausgeführt wird.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.MenuCommand">
          <source>An <ph id="ph1">&lt;xref:System.ComponentModel.Design.MenuCommand.OnCommandChanged%2A&gt;</ph> method that can be overridden to handle the event that occurs when a new command is selected.</source>
          <target state="translated">Ein <ph id="ph1">&lt;xref:System.ComponentModel.Design.MenuCommand.OnCommandChanged%2A&gt;</ph> -Methode, die überschrieben werden kann, um das Ereignis zu behandeln, das auftritt, wenn ein neuer Befehl aktiviert ist.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.MenuCommand">
          <source>Boolean flag states that indicate whether the command is <ph id="ph1">&lt;xref:System.ComponentModel.Design.MenuCommand.Checked%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.ComponentModel.Design.MenuCommand.Enabled%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.ComponentModel.Design.MenuCommand.Supported%2A&gt;</ph>, or <ph id="ph4">&lt;xref:System.ComponentModel.Design.MenuCommand.Visible%2A&gt;</ph>.</source>
          <target state="translated">Boolesches Flag, das Zustände, die angeben, ob der Befehl ist <ph id="ph1">&lt;xref:System.ComponentModel.Design.MenuCommand.Checked%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.ComponentModel.Design.MenuCommand.Enabled%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.ComponentModel.Design.MenuCommand.Supported%2A&gt;</ph>, oder <ph id="ph4">&lt;xref:System.ComponentModel.Design.MenuCommand.Visible%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.MenuCommand">
          <source>An <ph id="ph1">&lt;xref:System.ComponentModel.Design.MenuCommand.OleStatus%2A&gt;</ph> property that indicates the OLE command status code for the command.</source>
          <target state="translated">Ein <ph id="ph1">&lt;xref:System.ComponentModel.Design.MenuCommand.OleStatus%2A&gt;</ph> -Eigenschaft, die die OLE--Befehl Statuscode für den Befehl.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.MenuCommand">
          <source>An override for the <ph id="ph1">&lt;xref:System.ComponentModel.Design.MenuCommand.ToString%2A&gt;</ph> method.</source>
          <target state="translated">Eine Außerkraftsetzung für die <ph id="ph1">&lt;xref:System.ComponentModel.Design.MenuCommand.ToString%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.MenuCommand">
          <source>The following code example creates a <ph id="ph1">&lt;xref:System.ComponentModel.Design.MenuCommand&gt;</ph> object, configures its properties, and adds it to the <ph id="ph2">&lt;xref:System.ComponentModel.Design.IMenuCommandService&gt;</ph>.</source>
          <target state="translated">Das folgende Codebeispiel erstellt eine <ph id="ph1">&lt;xref:System.ComponentModel.Design.MenuCommand&gt;</ph> -Objekt, dessen Eigenschaften konfiguriert und fügt es der <ph id="ph2">&lt;xref:System.ComponentModel.Design.IMenuCommandService&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.MenuCommand">
          <source>Create an instance of the <ph id="ph1">`Component1`</ph> class on your form and open the form in a design environment like Visual Studio.</source>
          <target state="translated">Erstellen Sie eine Instanz von der <ph id="ph1">`Component1`</ph> -Klasse auf das Formular, und öffnen Sie das Formular in einer entwurfsumgebung wie Visual Studio.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.MenuCommand">
          <source>Press the F1 key to invoke the <ph id="ph1">&lt;xref:System.ComponentModel.Design.MenuCommand&gt;</ph>.</source>
          <target state="translated">Drücken Sie die F1-Taste zum Aufrufen der <ph id="ph1">&lt;xref:System.ComponentModel.Design.MenuCommand&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.MenuCommand">
          <source>for full access to system resources.</source>
          <target state="translated">für Vollzugriff auf Systemressourcen verfügbar sind.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.MenuCommand">
          <source>Demand values: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" /&gt;</ph>.</source>
          <target state="translated">"Demand" Werte: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.MenuCommand">
          <source>Associated state:</source>
          <target state="translated">Zugeordneten Zustand:</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.MenuCommand.#ctor(System.EventHandler,System.ComponentModel.Design.CommandID)">
          <source>The event to raise when the user selects the menu item or toolbar button.</source>
          <target state="translated">Das Ereignis, das ausgelöst werden soll, wenn der Benutzer den Menübefehl oder die Symbolleisten-Schaltfläche auswählt.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.MenuCommand.#ctor(System.EventHandler,System.ComponentModel.Design.CommandID)">
          <source>The unique command ID that links this menu command to the environment's menu.</source>
          <target state="translated">Die eindeutige Befehls-ID, durch die dieser Menübefehl mit dem Umgebungsmenü verknüpft ist.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.MenuCommand.#ctor(System.EventHandler,System.ComponentModel.Design.CommandID)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.MenuCommand" /&gt;</ph> class.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.MenuCommand" /&gt;</ph>-Klasse.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.MenuCommand.#ctor(System.EventHandler,System.ComponentModel.Design.CommandID)">
          <source>The following code example creates a <ph id="ph1">&lt;xref:System.ComponentModel.Design.MenuCommand&gt;</ph> object, configures its properties, and adds it to an <ph id="ph2">&lt;xref:System.ComponentModel.Design.IMenuCommandService&gt;</ph> object.</source>
          <target state="translated">Das folgende Codebeispiel erstellt eine <ph id="ph1">&lt;xref:System.ComponentModel.Design.MenuCommand&gt;</ph> -Objekt, dessen Eigenschaften konfiguriert und fügt es ein <ph id="ph2">&lt;xref:System.ComponentModel.Design.IMenuCommandService&gt;</ph> Objekt.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.MenuCommand.Checked">
          <source>Gets or sets a value indicating whether this menu item is checked.</source>
          <target state="translated">Ruft einen Wert ab, der angibt, ob dieses Menüelement aktiviert ist, oder legt diesen fest.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.MenuCommand.Checked">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the item is checked; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn das Element aktiviert ist, andernfalls <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="E:System.ComponentModel.Design.MenuCommand.CommandChanged">
          <source>Occurs when the menu command changes.</source>
          <target state="translated">Tritt bei einer Änderung des Menübefehls ein.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Design.MenuCommand.CommandChanged">
          <source>A command can change if it becomes checked or disabled.</source>
          <target state="translated">Wenn es aktiviert oder deaktiviert wird, kann ein Befehl ändern.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.MenuCommand.CommandID">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.CommandID" /&gt;</ph> associated with this menu command.</source>
          <target state="translated">Ruft die <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.CommandID" /&gt;</ph>-Klasse ab, die diesem Menübefehl zugeordnet ist.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.MenuCommand.CommandID">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.CommandID" /&gt;</ph> associated with the menu command.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.CommandID" /&gt;</ph>-Klasse, die dem Menübefehl zugeordnet ist.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.MenuCommand.Enabled">
          <source>Gets a value indicating whether this menu item is available.</source>
          <target state="translated">Ruft einen Wert ab, der angibt, ob dieses Menüelement verfügbar ist.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.MenuCommand.Enabled">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the item is enabled; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn das Element aktiviert ist, andernfalls <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.MenuCommand.Enabled">
          <source>The following code example creates a <ph id="ph1">&lt;xref:System.ComponentModel.Design.MenuCommand&gt;</ph> object, configures its properties, and adds it to <ph id="ph2">&lt;xref:System.ComponentModel.Design.IMenuCommandService&gt;</ph>.</source>
          <target state="translated">Das folgende Codebeispiel erstellt eine <ph id="ph1">&lt;xref:System.ComponentModel.Design.MenuCommand&gt;</ph> -Objekt, dessen Eigenschaften konfiguriert und fügt es <ph id="ph2">&lt;xref:System.ComponentModel.Design.IMenuCommandService&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.Design.MenuCommand">
          <source>Invokes the command.</source>
          <target state="translated">Ruft den Befehl auf.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.MenuCommand.Invoke">
          <source>Invokes the command.</source>
          <target state="translated">Ruft den Befehl auf.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.MenuCommand.Invoke(System.Object)">
          <source>An optional argument for use by the command.</source>
          <target state="translated">Ein optionales Argument für die Verwendung durch den Befehl.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.MenuCommand.Invoke(System.Object)">
          <source>Invokes the command with the given parameter.</source>
          <target state="translated">Ruft den Befehl mit dem angegebenen Parameter auf.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.MenuCommand.Invoke(System.Object)">
          <source>The default implementation of this method ignores <ph id="ph1">&lt;paramref name="arg" /&gt;</ph>, but deriving classes may override this method and use it.</source>
          <target state="translated">Die standardmäßige Implementierung dieser Methode ignoriert <ph id="ph1">&lt;paramref name="arg" /&gt;</ph>, aber diese Methode überschreiben und verwenden Sie es möglicherweise abgeleitete Klassen.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.MenuCommand.OleStatus">
          <source>Gets the OLE command status code for this menu item.</source>
          <target state="translated">Ruft den OLE-Befehlsstatus für dieses Menüelement ab.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.MenuCommand.OleStatus">
          <source>An integer containing a mixture of status flags that reflect the state of this menu item.</source>
          <target state="translated">Eine ganze Zahl, die eine Kombination von Statusflags enthält, die den Zustand dieses Menübefehls wiedergeben.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.MenuCommand.OnCommandChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>, das die Ereignisdaten enthält.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.MenuCommand.OnCommandChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.ComponentModel.Design.MenuCommand.CommandChanged" /&gt;</ph> event.</source>
          <target state="translated">Löst das <ph id="ph1">&lt;see cref="E:System.ComponentModel.Design.MenuCommand.CommandChanged" /&gt;</ph>-Ereignis aus.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.MenuCommand.OnCommandChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.MenuCommand.OnCommandChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">Weitere Informationen finden Sie unter <bpt id="p1">[</bpt>behandeln und Auslösen von Ereignissen<ept id="p1">](~/docs/standard/events/index.md)</ept>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.MenuCommand.OnCommandChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.MenuCommand.OnCommandChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">Mit der <ph id="ph1">&lt;xref:System.ComponentModel.Design.MenuCommand.OnCommandChanged%2A&gt;</ph>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.MenuCommand.OnCommandChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.MenuCommand.OnCommandChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.ComponentModel.Design.MenuCommand.OnCommandChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class’s <ph id="ph2">&lt;see cref="M:System.ComponentModel.Design.MenuCommand.OnCommandChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Zum Überschreiben <ph id="ph1">&lt;see cref="M:System.ComponentModel.Design.MenuCommand.OnCommandChanged(System.EventArgs)" /&gt;</ph> werden Sie in einer abgeleiteten Klasse der Basisklasse aufrufen <ph id="ph2">&lt;see cref="M:System.ComponentModel.Design.MenuCommand.OnCommandChanged(System.EventArgs)" /&gt;</ph> Methode, damit registrierte Delegaten das Ereignis empfangen.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.MenuCommand.Properties">
          <source>Gets the public properties associated with the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.MenuCommand" /&gt;</ph>.</source>
          <target state="translated">Ruft die öffentlichen Eigenschaften ab, die der <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.MenuCommand" /&gt;</ph>-Klasse zugeordnet sind.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.MenuCommand.Properties">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> containing the public properties of the <ph id="ph2">&lt;see cref="T:System.ComponentModel.Design.MenuCommand" /&gt;</ph>.</source>
          <target state="translated">Eine <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph>-Schnittstelle mit den öffentlichen Eigenschaften der <ph id="ph2">&lt;see cref="T:System.ComponentModel.Design.MenuCommand" /&gt;</ph>-Klasse.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.MenuCommand.Properties">
          <source>All menu commands store their public properties in the <ph id="ph1">&lt;xref:System.ComponentModel.Design.MenuCommand.Properties%2A&gt;</ph> collection.</source>
          <target state="translated">Alle Befehle im Menü speichern ihre öffentliche Eigenschaften in der <ph id="ph1">&lt;xref:System.ComponentModel.Design.MenuCommand.Properties%2A&gt;</ph> Auflistung.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.MenuCommand.Properties">
          <source>The key in the properties dictionary is the property name.</source>
          <target state="translated">Der Schlüssel im Eigenschaftenwörterbuch ist der Eigenschaftenname.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.MenuCommand.Properties">
          <source>This allows for generic enumeration of properties and provides a consistent substrate from which new properties can be added without modifying the class definition.</source>
          <target state="translated">Dies ermöglicht die Enumeration der allgemeinen Eigenschaften und bietet eine konsistente Substrate aus dem neue Eigenschaften hinzugefügt werden können, ohne die Klassendefinition ändern.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.MenuCommand.Supported">
          <source>Gets or sets a value indicating whether this menu item is supported.</source>
          <target state="translated">Ruft einen Wert ab, der angibt, ob dieses Menüelement unterstützt wird, oder legt diesen fest.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.MenuCommand.Supported">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the item is supported, which is the default; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn das Element unterstützt wird (Standardeinstellung), andernfalls <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.MenuCommand.Supported">
          <source>The following code example creates a <ph id="ph1">&lt;xref:System.ComponentModel.Design.MenuCommand&gt;</ph> object, configures its properties, and adds it to the <ph id="ph2">&lt;xref:System.ComponentModel.Design.IMenuCommandService&gt;</ph>.</source>
          <target state="translated">Das folgende Codebeispiel erstellt eine <ph id="ph1">&lt;xref:System.ComponentModel.Design.MenuCommand&gt;</ph> -Objekt, dessen Eigenschaften konfiguriert und fügt es der <ph id="ph2">&lt;xref:System.ComponentModel.Design.IMenuCommandService&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.MenuCommand.ToString">
          <source>Returns a string representation of this menu command.</source>
          <target state="translated">Gibt eine Zeichenfolgendarstellung dieses Menübefehls zurück.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.MenuCommand.ToString">
          <source>A string containing the value of the <ph id="ph1">&lt;see cref="P:System.ComponentModel.Design.MenuCommand.CommandID" /&gt;</ph> property appended with the names of any flags that are set, separated by pipe bars (|).</source>
          <target state="translated">Eine Zeichenfolge, die den Wert der <ph id="ph1">&lt;see cref="P:System.ComponentModel.Design.MenuCommand.CommandID" /&gt;</ph>-Eigenschaft enthält, auf die die Namen sämtlicher festgelegter Flags folgen, die getrennt sind durch das Symbol (|</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.MenuCommand.ToString">
          <source>These flag properties include <ph id="ph1">&lt;see cref="P:System.ComponentModel.Design.MenuCommand.Checked" /&gt;</ph>, <ph id="ph2">&lt;see cref="P:System.ComponentModel.Design.MenuCommand.Enabled" /&gt;</ph>, <ph id="ph3">&lt;see cref="P:System.ComponentModel.Design.MenuCommand.Supported" /&gt;</ph>, and <ph id="ph4">&lt;see cref="P:System.ComponentModel.Design.MenuCommand.Visible" /&gt;</ph>.</source>
          <target state="translated">Zu diesen Flageigenschaften gehören <ph id="ph1">&lt;see cref="P:System.ComponentModel.Design.MenuCommand.Checked" /&gt;</ph>, <ph id="ph2">&lt;see cref="P:System.ComponentModel.Design.MenuCommand.Enabled" /&gt;</ph>, <ph id="ph3">&lt;see cref="P:System.ComponentModel.Design.MenuCommand.Supported" /&gt;</ph> und <ph id="ph4">&lt;see cref="P:System.ComponentModel.Design.MenuCommand.Visible" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.MenuCommand.Visible">
          <source>Gets or sets a value indicating whether this menu item is visible.</source>
          <target state="translated">Ruft einen Wert ab, der angibt, ob dieses Menüelement sichtbar ist, oder legt diesen fest.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.MenuCommand.Visible">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the item is visible; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn das Element sichtbar ist, andernfalls <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.MenuCommand.Visible">
          <source>The following code example creates a <ph id="ph1">&lt;xref:System.ComponentModel.Design.MenuCommand&gt;</ph> object, configures its properties, and adds it to the <ph id="ph2">&lt;xref:System.ComponentModel.Design.IMenuCommandService&gt;</ph>.</source>
          <target state="translated">Das folgende Codebeispiel erstellt eine <ph id="ph1">&lt;xref:System.ComponentModel.Design.MenuCommand&gt;</ph> -Objekt, dessen Eigenschaften konfiguriert und fügt es der <ph id="ph2">&lt;xref:System.ComponentModel.Design.IMenuCommandService&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>