<Type Name="DesignerActionService" FullName="System.ComponentModel.Design.DesignerActionService">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="42dcb34d43a78ca3caa207a4d231e6a0f025e330" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39841824" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DesignerActionService : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DesignerActionService extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.DesignerActionService" />
  <TypeSignature Language="VB.NET" Value="Public Class DesignerActionService&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class DesignerActionService : IDisposable" />
  <TypeSignature Language="F#" Value="type DesignerActionService = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Richtet einen Dienst zur Entwurfszeit ein, der die Auflistung der <see cref="T:System.ComponentModel.Design.DesignerActionItem" />-Objekte für Komponenten verwaltet.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.ComponentModel.Design.DesignerActionService> -Klasse dient zum Verwalten der Auflistung der <xref:System.ComponentModel.Design.DesignerActionItem> Objekte für jede Instanz einer Komponente, die in einem Formular zur Entwurfszeit vorhanden ist. Diese Klasse ermöglicht, dass eine direct Pushmodell der Erstellung des Eintrags, und ist hauptsächlich für die Verwendung von Entwicklern während der Entwurfszeit-Tool, obwohl es auch von der Komponente und Entwickler von benutzerdefinierten Steuerelementen verwendet werden kann.  
  
 Bestimmen die Liste der Elemente, die für eine Komponente anzuzeigen und zu bestimmen, wann diese Liste ändert sich müssen während der Entwurfszeit die Entwickler. Sie können auch-add-ins, die ausgeführt werden erstellen, in Verbindung mit der Smarttag-Bereich-Objekten.  
  
 Erweiterte Komponente, die Entwickler möglicherweise eine Komponente gehörigen Elemente dynamisch zu steuern. daher ersetzen oder ergänzen die standard-Pull-Modell müssen. Panel-Befehlen können z. B. je nach Zusammenhang, deren Verwendung und die Entwurfszeit-Status der Komponente geändert werden.  
  
> [!NOTE]
>  Die <xref:System.ComponentModel.Design.DesignerActionService> ist tatsächlich der fahrmuster – Dienst, sowohl die Push-und Pull; allerdings im zweiten Fall sie implizit ausgeführt wird.  
  
 <xref:System.ComponentModel.Design.DesignerActionService> bietet eine einfache Schnittstelle zum Aufrufen und bearbeiten die Elemente für jede Komponente, einschließlich der folgenden Methoden und Ereignisse:  
  
-   Die <xref:System.ComponentModel.Design.DesignerActionService.Contains%2A> Methode bestimmt, ob die <xref:System.ComponentModel.Design.DesignerActionService> wird zurzeit von einer bestimmten Komponente verwaltet.  
  
-   Die <xref:System.ComponentModel.Design.DesignerActionService.GetComponentActions%2A> -Methode unterstützt die Enumeration der Listen von Elementen.  
  
-   Die <xref:System.ComponentModel.Design.DesignerActionService.Add%2A> Methode ermöglicht das Hinzufügen einer <xref:System.ComponentModel.Design.DesignerActionList> oder <xref:System.ComponentModel.Design.DesignerActionListCollection> auf den Satz von vorhandenen Elementen für eine Instanz der Komponente. Im Gegensatz dazu die <xref:System.ComponentModel.Design.DesignerActionService.Remove%2A> Methode entfernt einen oder alle der einer Komponente zugeordneten Elementlisten.  
  
    > [!NOTE]
    >  Die <xref:System.ComponentModel.Design.DesignerActionService.Add%2A> Methode darstellt, das direct Push-Modell von Panel-Elemente mit einer Komponente. Im Gegensatz dazu Pull-Modell basiert, überschreiben die <xref:System.ComponentModel.Design.ComponentDesigner.ActionLists%2A> Eigenschaft der Designer-Klasse für die jeweilige Komponente. Die entwurfsumgebung ist verantwortlich für das Hinzufügen dieser Elemente in der aktuellen <xref:System.ComponentModel.Design.DesignerActionService> Wenn eine Komponente auf der Entwurfsoberfläche erstellt wird.  
  
    > [!IMPORTANT]
    >  Die <xref:System.ComponentModel.Design.DesignerActionService.Add%2A>, <xref:System.ComponentModel.Design.DesignerActionService.Remove%2A>, <xref:System.ComponentModel.Design.DesignerActionService.Contains%2A>, und <xref:System.ComponentModel.Design.DesignerActionService.Clear%2A> Methoden berücksichtigen und Push-Modell Elemente beeinflussen nur.  
  
-   Die <xref:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged> Ereignis gibt an, wenn die Auflistung von Elementen für eine Komponente ändert.  
  
 Da es oft wünschenswert sein ist, einige der in der Komponente zur Entwurfszeit Kontextmenü und dessen Bereich die gleichen Panel-Elemente verwenden, gibt es ein hohes Maß an Interoperabilität zwischen <xref:System.ComponentModel.Design.DesignerActionItem> Objekte und Designerverben.  
  
 Wenn ein Komponenten-Designer nicht explizit angeben, wird eine <xref:System.ComponentModel.Design.DesignerActionList> (d. h., er enthält keine überschriebene <xref:System.ComponentModel.Design.ComponentDesigner.ActionLists%2A> Eigenschaft), und klicken Sie dann eine Liste von vorhandenen Designerverben erstellt wird. Diese Verben werden angegeben, indem die <xref:System.ComponentModel.Design.ComponentDesigner.Verbs%2A> Eigenschaft. In diesem Fall wird eine interne Verb-List-Klasse verwendet, auf die Auflistung von bereichseinträgen für Verb-Element enthalten.  
  
 Wenn Sie möchten eine <xref:System.ComponentModel.Design.DesignerActionMethodItem> sowohl als Bereichseintrag und als während der Entwurfszeit Kontextmenüeintrag verwendet werden, können Sie festlegen der `includeAsDesignerVerb` Parameter im Konstruktor des Elements.  
  
 Verwenden der <xref:System.ComponentModel.Design.DesignerActionUIService> zum Steuern der Anzeige des Designers <xref:System.ComponentModel.Design.ComponentDesigner.ActionLists%2A>.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.Design.DesignerActionListCollection" />
    <altmember cref="T:System.ComponentModel.Design.ComponentDesigner" />
    <altmember cref="T:System.ComponentModel.Design.DesignerActionItem" />
    <altmember cref="T:System.ComponentModel.Design.DesignerActionUIService" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DesignerActionService (IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignerActionService.#ctor(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (serviceProvider As IServiceProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DesignerActionService(IServiceProvider ^ serviceProvider);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Design.DesignerActionService : IServiceProvider -&gt; System.ComponentModel.Design.DesignerActionService" Usage="new System.ComponentModel.Design.DesignerActionService serviceProvider" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="serviceProvider">Der Dienstanbieter für die aktuelle Entwurfszeitumgebung.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.Design.DesignerActionService" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein Dienstanbieter ist erforderlich, für die Überwachung von Auswahl und Änderungen an der Serverkomponenten. Es wird erwartet, zur Unterstützung der <xref:System.ComponentModel.Design.IDesignerHost> und <xref:System.ComponentModel.Design.IComponentChangeService> Typen. Die <xref:System.ComponentModel.Design.DesignerActionService> Klasse verwendet eine interne Tabelle zum Verwalten von Komponenten und ihre zugeordneten <xref:System.ComponentModel.Design.DesignerActionList> Smarttags.  
  
 Komponentenentwickler müssen in der Regel nicht zum Erstellen einer Instanz dieser Klasse; Stattdessen erhalten sie eine vorhandene Instanz durch einen Aufruf der <xref:System.ComponentModel.Component.GetService%2A?displayProperty=nameWithType> Methode.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.Design.DesignerActionService.Dispose" />
        <altmember cref="T:System.ComponentModel.Design.IDesignerHost" />
        <altmember cref="T:System.ComponentModel.Design.IComponentChangeService" />
        <altmember cref="M:System.ComponentModel.Component.GetService(System.Type)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Fügt der aktuellen Auflistung verwalteter Smarttags ein oder mehrere <see cref="T:System.ComponentModel.Design.DesignerActionList" />-Objekte hinzu.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.ComponentModel.IComponent comp, System.ComponentModel.Design.DesignerActionList actionList);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.ComponentModel.IComponent comp, class System.ComponentModel.Design.DesignerActionList actionList) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignerActionService.Add(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionList)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (comp As IComponent, actionList As DesignerActionList)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::ComponentModel::IComponent ^ comp, System::ComponentModel::Design::DesignerActionList ^ actionList);" />
      <MemberSignature Language="F#" Value="member this.Add : System.ComponentModel.IComponent * System.ComponentModel.Design.DesignerActionList -&gt; unit" Usage="designerActionService.Add (comp, actionList)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comp" Type="System.ComponentModel.IComponent" />
        <Parameter Name="actionList" Type="System.ComponentModel.Design.DesignerActionList" />
      </Parameters>
      <Docs>
        <param name="comp">Die <see cref="T:System.ComponentModel.IComponent" />, der die Smarttags zugeordnet werden sollen.</param>
        <param name="actionList">Die <see cref="T:System.ComponentModel.Design.DesignerActionList" />, welche die neuen, hinzuzufügenden Smarttagelemente enthält.</param>
        <summary>Fügt der aktuellen Auflistung verwalteter Smarttags eine <see cref="T:System.ComponentModel.Design.DesignerActionList" /> hinzu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.ComponentModel.Design.DesignerActionService.Add%2A> Methode darstellt, das Push-Modell des Hinzufügens von Smarttag-Elementen. Die alternative Pullmodell überschreiben die <xref:System.ComponentModel.Design.ComponentDesigner.ActionLists%2A> Eigenschaft im Designer für die entsprechende Komponente.  
  
 Wenn diese Methode aufgerufen wird, werden die Listen hinzugefügt werden für alle überprüft <xref:System.ComponentModel.Design.DesignerActionMethodItem> mit der <xref:System.ComponentModel.Design.DesignerActionMethodItem.IncludeAsDesignerVerb%2A> -Eigenschaftensatz auf `true`. Diese Elemente werden hinzugefügt, die Liste mit den Designerverben für diese Komponente durch einen Aufruf der <xref:System.ComponentModel.Design.MenuCommandService.AddVerb%2A?displayProperty=nameWithType> Methode.  
  
 Smarttags werden auf Basis von Komponenteninstanzen verwaltet. Die verwaltete Sammlung kann es sich um doppelte Einträge enthalten.  
  
 Diese Methode löst die <xref:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged> Ereignis.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Ein oder beide Parameter sind <see langword="null" />.</exception>
        <altmember cref="T:System.ComponentModel.Design.DesignerActionList" />
        <altmember cref="P:System.ComponentModel.Design.ComponentDesigner.ActionLists" />
        <altmember cref="Overload:System.ComponentModel.Design.DesignerActionService.Remove" />
        <altmember cref="M:System.ComponentModel.Design.DesignerActionService.Contains(System.ComponentModel.IComponent)" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.ComponentModel.IComponent comp, System.ComponentModel.Design.DesignerActionListCollection designerActionListCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.ComponentModel.IComponent comp, class System.ComponentModel.Design.DesignerActionListCollection designerActionListCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignerActionService.Add(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::ComponentModel::IComponent ^ comp, System::ComponentModel::Design::DesignerActionListCollection ^ designerActionListCollection);" />
      <MemberSignature Language="F#" Value="member this.Add : System.ComponentModel.IComponent * System.ComponentModel.Design.DesignerActionListCollection -&gt; unit" Usage="designerActionService.Add (comp, designerActionListCollection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comp" Type="System.ComponentModel.IComponent" />
        <Parameter Name="designerActionListCollection" Type="System.ComponentModel.Design.DesignerActionListCollection" />
      </Parameters>
      <Docs>
        <param name="comp">Die <see cref="T:System.ComponentModel.IComponent" />, der die Smarttags zugeordnet werden sollen.</param>
        <param name="designerActionListCollection">Die <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" />, welche die neuen, hinzuzufügenden Smarttagelemente enthält.</param>
        <summary>Fügt der aktuellen Auflistung verwalteter Smarttags eine <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> hinzu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.ComponentModel.Design.DesignerActionService.Add%2A> Methode darstellt, das Push-Modell des Hinzufügens von Smarttag-Elementen. Die alternative Pullmodell überschreiben die <xref:System.ComponentModel.Design.ComponentDesigner.ActionLists%2A> Eigenschaft im Designer für die entsprechende Komponente.  
  
 Wenn diese Methode aufgerufen wird, werden die Listen hinzugefügt werden für alle überprüft <xref:System.ComponentModel.Design.DesignerActionMethodItem> mit der <xref:System.ComponentModel.Design.DesignerActionMethodItem.IncludeAsDesignerVerb%2A> -Eigenschaftensatz auf `true`. Diese Elemente werden hinzugefügt, die Liste mit den Designerverben für diese Komponente durch einen Aufruf der <xref:System.ComponentModel.Design.MenuCommandService.AddVerb%2A?displayProperty=nameWithType> Methode.  
  
 Smarttags werden auf Basis von Komponenteninstanzen verwaltet. Die verwaltete Sammlung kann es sich um doppelte Einträge enthalten.  
  
 Diese Methode löst die <xref:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged> Ereignis.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Ein oder beide Parameter sind <see langword="null" />.</exception>
        <altmember cref="T:System.ComponentModel.Design.DesignerActionList" />
        <altmember cref="P:System.ComponentModel.Design.ComponentDesigner.ActionLists" />
        <altmember cref="Overload:System.ComponentModel.Design.DesignerActionService.Remove" />
        <altmember cref="M:System.ComponentModel.Design.DesignerActionService.Contains(System.ComponentModel.IComponent)" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignerActionService.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="designerActionService.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt alle Komponenten von der Verwaltung frei und löscht alle Pushmodellsmarttaglisten.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.ComponentModel.Design.DesignerActionService.Clear%2A> Methode leert die interne Tabelle zum Speichern von Informationen, die Informationen zu Komponenten und ihre Push-Modell smart Tag-Listen verwendet.  
  
> [!CAUTION]
>  Da diese Methode alle Komponenten, die vom aktuellen Dienst verwalteten und nicht nur die aktuelle Komponente betrifft, sollte diese Methode mit Bedacht verwendet werden. In der Regel wird die Entwurfszeit-Tool-Entwicklerin beim Zurücksetzen einer Entwurfsoberfläche. Komponentenentwickler sollten anhand einer der der <xref:System.ComponentModel.Design.DesignerActionService.Remove%2A> Methoden stattdessen So entfernen Sie einzelne Smarttag Elemente ab oder listet diese.  
  
 Ein <xref:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged> Ereignis wird ausgelöst, für die einzelnen Komponenten, die zuvor vom aktuellen Dienst verwaltet wurde.  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.ComponentModel.Design.DesignerActionService.Remove" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.ComponentModel.IComponent comp);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.ComponentModel.IComponent comp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignerActionService.Contains(System.ComponentModel.IComponent)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (comp As IComponent) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::ComponentModel::IComponent ^ comp);" />
      <MemberSignature Language="F#" Value="member this.Contains : System.ComponentModel.IComponent -&gt; bool" Usage="designerActionService.Contains comp" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comp" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="comp">Die zu suchende <see cref="T:System.ComponentModel.IComponent" />.</param>
        <summary>Bestimmt, ob der aktuelle Smarttagdienst die Aktionslisten für die angegebene Komponente verwaltet.</summary>
        <returns>
          <see langword="true" />, wenn die Komponente vom aktuellen Dienst verwaltet wird, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.ComponentModel.Design.DesignerActionService.Contains%2A> Methode erkennt nur Pushmodell smart Tags, die eine Komponente mit zugeordnet sind die <xref:System.ComponentModel.Design.DesignerActionService.Add%2A> Methode.  
  
 Aber es keine Einschränkung durch strukturelle Flachheit auf der Anzahl der gleichzeitigen gibt <xref:System.ComponentModel.Design.DesignerActionService> Instanzen von einem Tool zur Entwurfszeit erstellt wurden, in der Regel nur eine einzige Instanz des Diensts wird pro Entwurfsoberfläche erstellt.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="comp" /> ist <see langword="null" />.</exception>
        <altmember cref="Overload:System.ComponentModel.Design.DesignerActionService.Add" />
        <altmember cref="Overload:System.ComponentModel.Design.DesignerActionService.Remove" />
      </Docs>
    </Member>
    <Member MemberName="DesignerActionListsChanged">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.Design.DesignerActionListsChangedEventHandler DesignerActionListsChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.Design.DesignerActionListsChangedEventHandler DesignerActionListsChanged" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DesignerActionListsChanged As DesignerActionListsChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::Design::DesignerActionListsChangedEventHandler ^ DesignerActionListsChanged;" />
      <MemberSignature Language="F#" Value="member this.DesignerActionListsChanged : System.ComponentModel.Design.DesignerActionListsChangedEventHandler " Usage="member this.DesignerActionListsChanged : System.ComponentModel.Design.DesignerActionListsChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.DesignerActionListsChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn eine <see cref="T:System.ComponentModel.Design.DesignerActionList" /> für eine Komponente entfernt oder hinzugefügt wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die folgende Tabelle zeigt den Satz von spezialisierten Klassen im Zusammenhang mit der <xref:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged> Ereignis.  
  
|Spezialisierter Typ|Beschreibung |  
|----------------------|-----------------|  
|<xref:System.ComponentModel.Design.DesignerActionListsChangedEventArgs>|Verwaltung von Smarttag-hinzugefügt spezifische Informationen haben. Diese Klasse ist eine Spezialisierung von <xref:System.EventArgs>.|  
|<xref:System.ComponentModel.Design.DesignerActionListsChangedEventHandler>|Verbindet die <xref:System.ComponentModel.Design.DesignerActionListsChangedEventArgs> an seinen Handler.|  
|<xref:System.ComponentModel.Design.DesignerActionListsChangedType>|Gibt an, ob eine Liste hinzugefügt oder entfernt wurde.|  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [NIB: Nutzen von Ereignissen](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.DesignerActionListsChangedEventArgs" />
        <altmember cref="T:System.ComponentModel.Design.DesignerActionListsChangedType" />
        <altmember cref="T:System.ComponentModel.Design.DesignerActionListsChangedEventHandler" />
        <altmember cref="Overload:System.ComponentModel.Design.DesignerActionService.Add" />
        <altmember cref="Overload:System.ComponentModel.Design.DesignerActionService.Remove" />
        <altmember cref="M:System.ComponentModel.Design.DesignerActionService.Clear" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Gibt die von der <see cref="T:System.ComponentModel.Design.DesignerActionService" /> verwendeten Ressourcen frei.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignerActionService.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="designerActionService.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt alle von der <see cref="T:System.ComponentModel.Design.DesignerActionService" />-Klasse verwendeten Ressourcen frei.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.ComponentModel.Design.DesignerActionService.Dispose%2A> Methode ist die Implementierung der einzige Methode, durch die <xref:System.IDisposable> Schnittstelle. Rufen Sie diese Methode auf, wenn Sie das <xref:System.ComponentModel.Design.DesignerActionService>-Objekt nicht mehr benötigen. Es führt zwei Hauptaktionen aus:  
  
-   Entfernt den aktuellen Dienst aus der Liste der verfügbaren Dienste in der entwurfsumgebung durch einen Aufruf der <xref:System.ComponentModel.Design.IServiceContainer.RemoveService%2A> Methode.  
  
-   Kündigt das Abonnement zu Änderungsereignisse für die Komponente aus dem zugeordneten <xref:System.ComponentModel.Design.IComponentChangeService> Schnittstelle.  
  
 Rufen Sie <xref:System.ComponentModel.Design.DesignerActionService.Dispose%2A> auf, wenn Sie <xref:System.ComponentModel.Design.DesignerActionService> nicht mehr benötigen. Die <xref:System.ComponentModel.Design.DesignerActionService.Dispose%2A>-Methode bewirkt, dass <xref:System.ComponentModel.Design.DesignerActionService> nicht mehr verwendet werden kann. Nach dem Aufruf <xref:System.ComponentModel.Design.DesignerActionService.Dispose%2A>, Sie müssen alle Verweise auf Freigeben der <xref:System.ComponentModel.Design.DesignerActionService> , damit der Garbage Collector den Arbeitsspeicher freigeben kann, die die <xref:System.ComponentModel.Design.DesignerActionService> belegt wurde. Weitere Informationen finden Sie unter [Bereinigen von nicht verwalteten Ressourcen](~/docs/standard/garbage-collection/unmanaged.md) und [Implementieren einer Dispose-Methode](~/docs/standard/garbage-collection/implementing-dispose.md).  
  
> [!NOTE]
>  Rufen Sie immer <xref:System.ComponentModel.Design.DesignerActionService.Dispose%2A> auf, bevor Sie den letzten Verweis auf das <xref:System.ComponentModel.Design.DesignerActionService> freigeben. Andernfalls bleiben die verwendeten Ressourcen reserviert, bis die Garbage Collection die <xref:System.ComponentModel.Design.DesignerActionService>-Methode des `Finalize`-Objekts aufruft.  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.ComponentModel.Design.IServiceContainer.RemoveService" />
        <altmember cref="T:System.ComponentModel.Design.IComponentChangeService" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignerActionService.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="designerActionService.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <see langword="true" />, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben, <see langword="false" />, um ausschließlich nicht verwaltete Ressourcen freizugeben.</param>
        <summary>Gibt die von <see cref="T:System.ComponentModel.Design.DesignerActionService" /> verwendeten nicht verwalteten Ressourcen und optional die verwalteten Ressourcen frei.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.ComponentModel.Design.DesignerActionService.Dispose%2A> Methode ist die Implementierung der einzige Methode, durch die <xref:System.IDisposable> Schnittstelle. Rufen Sie diese Methode auf, wenn Sie das <xref:System.ComponentModel.Design.DesignerActionService>-Objekt nicht mehr benötigen. Es führt zwei Hauptaktionen aus:  
  
-   Entfernt den aktuellen Dienst aus der Liste der verfügbaren Dienste in der entwurfsumgebung durch einen Aufruf der <xref:System.ComponentModel.Design.IServiceContainer.RemoveService%2A> Methode.  
  
-   Kündigt das Abonnement zu Änderungsereignisse für die Komponente aus dem zugeordneten <xref:System.ComponentModel.Design.IComponentChangeService> Schnittstelle.  
  
 Diese Methode wird aufgerufen, von der öffentlichen `Dispose()` Methode und die <xref:System.Object.Finalize%2A> Methode. `Dispose()` Ruft die geschützte `Dispose(Boolean)` -Methode mit dem `disposing` Parametersatz zu `true`. <xref:System.Object.Finalize%2A> Ruft `Dispose` mit `disposing` festgelegt `false`.  
  
 Wenn der `disposing`-Parameter `true` ist, gibt diese Methode sämtliche Ressourcen frei, die für verwaltete Objekte reserviert sind, auf die dieser <xref:System.ComponentModel.Design.DesignerActionService> verweist. Diese Methode ruft die `Dispose()`-Methode aller Objekte auf, auf die verwiesen wird.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <see langword="Dispose" /> kann von anderen Objekten mehrmals aufgerufen werden. Beim Überschreiben von <see langword="Dispose(Boolean)" /> Achten Sie darauf, dass Sie nicht auf Objekte verweisen, die zuvor von einem früheren Aufruf freigegeben wurden <see langword="Dispose" />. Weitere Informationen zur Implementierung <see langword="Dispose(Boolean)" />, finden Sie unter [Implementieren einer Dispose-Methode](~/docs/standard/garbage-collection/implementing-dispose.md).  Weitere Informationen zu <see langword="Dispose" /> und <see cref="M:System.Object.Finalize" />, finden Sie unter [Bereinigen von nicht verwalteten Ressourcen](~/docs/standard/garbage-collection/unmanaged.md) und [Überschreiben der Finalize-Methode](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</para>
        </block>
        <altmember cref="Overload:System.ComponentModel.Design.IServiceContainer.RemoveService" />
        <altmember cref="T:System.ComponentModel.Design.IComponentChangeService" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetComponentActions">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Gibt die Auflistung von einer Komponente zugeordneten Smarttagelementlisten zurück.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetComponentActions">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Design.DesignerActionListCollection GetComponentActions (System.ComponentModel.IComponent component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.Design.DesignerActionListCollection GetComponentActions(class System.ComponentModel.IComponent component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignerActionService.GetComponentActions(System.ComponentModel.IComponent)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetComponentActions (component As IComponent) As DesignerActionListCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::Design::DesignerActionListCollection ^ GetComponentActions(System::ComponentModel::IComponent ^ component);" />
      <MemberSignature Language="F#" Value="member this.GetComponentActions : System.ComponentModel.IComponent -&gt; System.ComponentModel.Design.DesignerActionListCollection" Usage="designerActionService.GetComponentActions component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.DesignerActionListCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="component">Die Komponente, der die Smarttags zugeordnet sind.</param>
        <summary>Gibt die Auflistung von einer Komponente zugeordneten Smarttagelementlisten zurück.</summary>
        <returns>Die Auflistung von Smarttags für die angegebene Komponente.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.ComponentModel.Design.DesignerActionService.GetComponentActions%2A> Methode ist gleichwertig mit einem Aufruf der <xref:System.ComponentModel.Design.DesignerActionService.GetComponentActions%28System.ComponentModel.IComponent%2CSystem.ComponentModel.Design.ComponentActionsType%29> -Methode eine `type` Parameter der <xref:System.ComponentModel.Design.ComponentActionsType.All>. Aus diesem Grund enthält die zurückgegebene Sammlung die Push- und Pullvorgängen Listen von Smarttags.  
  
 Das zurückgegebene <xref:System.ComponentModel.Design.DesignerActionListCollection> ist die Vereinigung mit hinzugefügten Elementlisten der <xref:System.ComponentModel.Design.DesignerActionService.Add%2A> Methoden und den Listen entnommen der <xref:System.ComponentModel.Design.DesignerCommandSet> Instanz abgerufen wird, über die Site der Komponente.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="comp" /> ist <see langword="null" />.</exception>
        <altmember cref="M:System.ComponentModel.Design.DesignerActionService.GetComponentDesignerActions(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)" />
        <altmember cref="M:System.ComponentModel.Design.DesignerActionService.GetComponentServiceActions(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)" />
        <altmember cref="Overload:System.ComponentModel.Design.DesignerActionService.Add" />
        <altmember cref="T:System.ComponentModel.Design.DesignerCommandSet" />
      </Docs>
    </Member>
    <Member MemberName="GetComponentActions">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.Design.DesignerActionListCollection GetComponentActions (System.ComponentModel.IComponent component, System.ComponentModel.Design.ComponentActionsType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.Design.DesignerActionListCollection GetComponentActions(class System.ComponentModel.IComponent component, valuetype System.ComponentModel.Design.ComponentActionsType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignerActionService.GetComponentActions(System.ComponentModel.IComponent,System.ComponentModel.Design.ComponentActionsType)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetComponentActions (component As IComponent, type As ComponentActionsType) As DesignerActionListCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ComponentModel::Design::DesignerActionListCollection ^ GetComponentActions(System::ComponentModel::IComponent ^ component, System::ComponentModel::Design::ComponentActionsType type);" />
      <MemberSignature Language="F#" Value="abstract member GetComponentActions : System.ComponentModel.IComponent * System.ComponentModel.Design.ComponentActionsType -&gt; System.ComponentModel.Design.DesignerActionListCollection&#xA;override this.GetComponentActions : System.ComponentModel.IComponent * System.ComponentModel.Design.ComponentActionsType -&gt; System.ComponentModel.Design.DesignerActionListCollection" Usage="designerActionService.GetComponentActions (component, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.DesignerActionListCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
        <Parameter Name="type" Type="System.ComponentModel.Design.ComponentActionsType" />
      </Parameters>
      <Docs>
        <param name="component">Die Komponente, der die Smarttags zugeordnet sind.</param>
        <param name="type">Der <see cref="T:System.ComponentModel.Design.ComponentActionsType" />, mit dem die zugeordneten Smarttags gefiltert werden sollen.</param>
        <summary>Gibt die Auflistung von Smarttagelementlisten des angegebenen Typs zurück, der einer Komponente zugeordnet ist.</summary>
        <returns>Die Auflistung von Smarttags des angegebenen Typs für die angegebene Komponente.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Version der überladenen <xref:System.ComponentModel.Design.DesignerActionService.GetComponentActions%2A> -Methode filtert, auf die `type` -Parameter, der einen der folgenden Werte enthalten kann.  
  
|Wert|Beschreibung |  
|-----------|-----------------|  
|<xref:System.ComponentModel.Design.ComponentActionsType.All>|Alle zugeordneten Smarttags.|  
|<xref:System.ComponentModel.Design.ComponentActionsType.Component>|Pull-Modell nur Smarttags.|  
|<xref:System.ComponentModel.Design.ComponentActionsType.Service>|Push-Modell nur Smarttags.|  
  
 Wenn der zugeordnete Designer für eine Komponente keine Pull-Modell-Smarttag-Liste, übergibt die <xref:System.ComponentModel.Design.DesignerActionService.GetComponentActions%2A> Methode wird stattdessen verwendet der Designer Design-Time-Kontextmenüelemente aus der <xref:System.ComponentModel.Design.ComponentDesigner.Verbs%2A> Eigenschaft.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="comp" /> ist <see langword="null" />.</exception>
        <altmember cref="M:System.ComponentModel.Design.DesignerActionService.GetComponentDesignerActions(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)" />
        <altmember cref="M:System.ComponentModel.Design.DesignerActionService.GetComponentServiceActions(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)" />
        <altmember cref="T:System.ComponentModel.Design.DesignerActionListCollection" />
        <altmember cref="T:System.ComponentModel.Design.DesignerVerb" />
        <altmember cref="T:System.ComponentModel.Design.ComponentActionsType" />
      </Docs>
    </Member>
    <Member MemberName="GetComponentDesignerActions">
      <MemberSignature Language="C#" Value="protected virtual void GetComponentDesignerActions (System.ComponentModel.IComponent component, System.ComponentModel.Design.DesignerActionListCollection actionLists);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GetComponentDesignerActions(class System.ComponentModel.IComponent component, class System.ComponentModel.Design.DesignerActionListCollection actionLists) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignerActionService.GetComponentDesignerActions(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub GetComponentDesignerActions (component As IComponent, actionLists As DesignerActionListCollection)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void GetComponentDesignerActions(System::ComponentModel::IComponent ^ component, System::ComponentModel::Design::DesignerActionListCollection ^ actionLists);" />
      <MemberSignature Language="F#" Value="abstract member GetComponentDesignerActions : System.ComponentModel.IComponent * System.ComponentModel.Design.DesignerActionListCollection -&gt; unit&#xA;override this.GetComponentDesignerActions : System.ComponentModel.IComponent * System.ComponentModel.Design.DesignerActionListCollection -&gt; unit" Usage="designerActionService.GetComponentDesignerActions (component, actionLists)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
        <Parameter Name="actionLists" Type="System.ComponentModel.Design.DesignerActionListCollection" />
      </Parameters>
      <Docs>
        <param name="component">Die Komponente, der die Smarttags zugeordnet sind.</param>
        <param name="actionLists">Die Auflistung, der die zugeordneten Smarttags hinzugefügt werden sollen.</param>
        <summary>Ruft die einer Komponente zugeordneten Pullmodellsmarttags ab.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.ComponentModel.Design.DesignerActionService.GetComponentDesignerActions%2A> Methode ist eine Hilfsmethode für die <xref:System.ComponentModel.Design.DesignerActionService.GetComponentActions%2A> Methoden. <xref:System.ComponentModel.Design.DesignerActionService.GetComponentDesignerActions%2A> Sucht nach Pull-Modell Smarttags vom Typ <xref:System.ComponentModel.Design.ComponentActionsType.Component>, und fügt dann diese mit dem angegebenen `actionLists` Auflistung.  
  
 Der Entwickler der Komponente nicht explizit eine Auflistung von Smarttags über bereit die <xref:System.ComponentModel.Design.ComponentDesigner.ActionLists%2A> Eigenschaft den Designer, diese Methode wird wiederverwendet, die während der Entwurfszeit Kontextmenüeinträge, die über abgerufen werden die <xref:System.ComponentModel.Design.ComponentDesigner.Verbs%2A> Eigenschaft der Designer.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Ein oder beide Parameter sind <see langword="null" />.</exception>
        <altmember cref="Overload:System.ComponentModel.Design.DesignerActionService.GetComponentActions" />
        <altmember cref="M:System.ComponentModel.Design.DesignerActionService.GetComponentServiceActions(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)" />
        <altmember cref="P:System.ComponentModel.Design.ComponentDesigner.ActionLists" />
        <altmember cref="P:System.ComponentModel.Design.ComponentDesigner.Verbs" />
      </Docs>
    </Member>
    <Member MemberName="GetComponentServiceActions">
      <MemberSignature Language="C#" Value="protected virtual void GetComponentServiceActions (System.ComponentModel.IComponent component, System.ComponentModel.Design.DesignerActionListCollection actionLists);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GetComponentServiceActions(class System.ComponentModel.IComponent component, class System.ComponentModel.Design.DesignerActionListCollection actionLists) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignerActionService.GetComponentServiceActions(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub GetComponentServiceActions (component As IComponent, actionLists As DesignerActionListCollection)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void GetComponentServiceActions(System::ComponentModel::IComponent ^ component, System::ComponentModel::Design::DesignerActionListCollection ^ actionLists);" />
      <MemberSignature Language="F#" Value="abstract member GetComponentServiceActions : System.ComponentModel.IComponent * System.ComponentModel.Design.DesignerActionListCollection -&gt; unit&#xA;override this.GetComponentServiceActions : System.ComponentModel.IComponent * System.ComponentModel.Design.DesignerActionListCollection -&gt; unit" Usage="designerActionService.GetComponentServiceActions (component, actionLists)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
        <Parameter Name="actionLists" Type="System.ComponentModel.Design.DesignerActionListCollection" />
      </Parameters>
      <Docs>
        <param name="component">Die Komponente, der die Smarttags zugeordnet sind.</param>
        <param name="actionLists">Die Auflistung, der die zugeordneten Smarttags hinzugefügt werden sollen.</param>
        <summary>Ruft die einer Komponente zugeordneten Pushmodellsmarttags ab.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.ComponentModel.Design.DesignerActionService.GetComponentServiceActions%2A> Methode ist eine Hilfsmethode für die <xref:System.ComponentModel.Design.DesignerActionService.GetComponentActions%2A> Methoden. Push-Modell von Smarttags des Typs sucht <xref:System.ComponentModel.Design.ComponentActionsType.Service>, und fügt dann diese mit dem angegebenen `actionLists` Auflistung.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Ein oder beide Parameter sind <see langword="null" />.</exception>
        <altmember cref="Overload:System.ComponentModel.Design.DesignerActionService.GetComponentActions" />
        <altmember cref="M:System.ComponentModel.Design.DesignerActionService.GetComponentDesignerActions(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Remove">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Hebt die Zuordnung einer oder mehrerer Smarttaglisten zu einer oder mehreren Komponenten auf.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.ComponentModel.Design.DesignerActionList actionList);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.ComponentModel.Design.DesignerActionList actionList) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignerActionService.Remove(System.ComponentModel.Design.DesignerActionList)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (actionList As DesignerActionList)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::ComponentModel::Design::DesignerActionList ^ actionList);" />
      <MemberSignature Language="F#" Value="member this.Remove : System.ComponentModel.Design.DesignerActionList -&gt; unit" Usage="designerActionService.Remove actionList" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="actionList" Type="System.ComponentModel.Design.DesignerActionList" />
      </Parameters>
      <Docs>
        <param name="actionList">Die zu entfernende Liste mit Smarttags.</param>
        <summary>Entfernt die angegebene Smarttagliste aus allen vom aktuellen Dienst verwalteten Komponenten.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Version von der <xref:System.ComponentModel.Design.DesignerActionService.Remove%2A> Methode in der Regel von Entwicklern für Design-Tool verwendet wird, da Komponentenentwickler in der Regel nicht wissen, welche weiteren Komponenten vorhanden sind, im Bereich der aktuellen Design.  
  
 Wenn erfolgreich, diese Methode löst die <xref:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged> Ereignis.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="actionList" /> ist <see langword="null" />.</exception>
        <altmember cref="Overload:System.ComponentModel.Design.DesignerActionService.Add" />
        <altmember cref="M:System.ComponentModel.Design.DesignerActionUIService.HideUI(System.ComponentModel.IComponent)" />
        <altmember cref="M:System.ComponentModel.Design.DesignerActionService.Clear" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.ComponentModel.IComponent comp);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.ComponentModel.IComponent comp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignerActionService.Remove(System.ComponentModel.IComponent)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (comp As IComponent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::ComponentModel::IComponent ^ comp);" />
      <MemberSignature Language="F#" Value="member this.Remove : System.ComponentModel.IComponent -&gt; unit" Usage="designerActionService.Remove comp" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comp" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="comp">Die Komponente, deren Zuordnung zu den Smarttags aufgehoben werden soll.</param>
        <summary>Entfernt alle der angegebenen Komponente zugeordneten Smarttaglisten.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei erfolgreicher Ausführung der <xref:System.ComponentModel.Design.DesignerActionService.Remove%2A> -Methode löst die <xref:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged> Ereignis.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="comp" /> ist <see langword="null" />.</exception>
        <altmember cref="Overload:System.ComponentModel.Design.DesignerActionService.Add" />
        <altmember cref="M:System.ComponentModel.Design.DesignerActionUIService.HideUI(System.ComponentModel.IComponent)" />
        <altmember cref="M:System.ComponentModel.Design.DesignerActionService.Clear" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.ComponentModel.IComponent comp, System.ComponentModel.Design.DesignerActionList actionList);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.ComponentModel.IComponent comp, class System.ComponentModel.Design.DesignerActionList actionList) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignerActionService.Remove(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionList)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (comp As IComponent, actionList As DesignerActionList)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::ComponentModel::IComponent ^ comp, System::ComponentModel::Design::DesignerActionList ^ actionList);" />
      <MemberSignature Language="F#" Value="member this.Remove : System.ComponentModel.IComponent * System.ComponentModel.Design.DesignerActionList -&gt; unit" Usage="designerActionService.Remove (comp, actionList)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comp" Type="System.ComponentModel.IComponent" />
        <Parameter Name="actionList" Type="System.ComponentModel.Design.DesignerActionList" />
      </Parameters>
      <Docs>
        <param name="comp">Die Komponente, deren Zuordnung zu den Smarttags aufgehoben werden soll.</param>
        <param name="actionList">Die zu entfernende Smarttagliste.</param>
        <summary>Entfernt die angegebene Smarttagliste aus der angegebenen Komponente.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei erfolgreicher Ausführung der <xref:System.ComponentModel.Design.DesignerActionService.Remove%2A> -Methode löst die <xref:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged> Ereignis.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Ein oder beide Parameter sind <see langword="null" />.</exception>
        <altmember cref="Overload:System.ComponentModel.Design.DesignerActionService.Add" />
        <altmember cref="M:System.ComponentModel.Design.DesignerActionUIService.HideUI(System.ComponentModel.IComponent)" />
        <altmember cref="M:System.ComponentModel.Design.DesignerActionService.Clear" />
      </Docs>
    </Member>
  </Members>
</Type>