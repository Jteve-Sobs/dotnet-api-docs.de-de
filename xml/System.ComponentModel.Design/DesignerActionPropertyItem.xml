<Type Name="DesignerActionPropertyItem" FullName="System.ComponentModel.Design.DesignerActionPropertyItem">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="bced7eeeb77250a3c26c3c722614a32f76d24d7c" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36707272" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class DesignerActionPropertyItem : System.ComponentModel.Design.DesignerActionItem" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DesignerActionPropertyItem extends System.ComponentModel.Design.DesignerActionItem" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.DesignerActionPropertyItem" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DesignerActionPropertyItem&#xA;Inherits DesignerActionItem" />
  <TypeSignature Language="C++ CLI" Value="public ref class DesignerActionPropertyItem sealed : System::ComponentModel::Design::DesignerActionItem" />
  <TypeSignature Language="F#" Value="type DesignerActionPropertyItem = class&#xA;    inherit DesignerActionItem" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Design.DesignerActionItem</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt ein Bereichselement dar, das einer Eigenschaft in einer von <see cref="T:System.ComponentModel.Design.DesignerActionList" /> abgeleiteten Klasse zugeordnet wird. Diese Klasse kann nicht vererbt werden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.ComponentModel.Design.DesignerActionPropertyItem> Klasse stellt einzelne Elemente in einen Smarttagbereich dar. Jedes Element eine Eigenschaft in einer Klasse, die abgeleitet ist in der Regel zugeordnet ist die <xref:System.ComponentModel.Design.DesignerActionList> -Klasse und die vom Komponentenautor angegeben. Die Zuordnung wird durch den Namen der Eigenschaft, die in gespeicherten beibehalten der <xref:System.ComponentModel.Design.DesignerActionPropertyItem.MemberName%2A> Eigenschaft.  
  
 Einzelne Systemsteuerungselemente gehören zusammen, um einen Bereich durch einen Aufruf bilden die <xref:System.ComponentModel.Design.DesignerActionList.GetSortedActionItems%2A> Methode der <xref:System.ComponentModel.Design.DesignerActionList> Klasse.  
  
 Um den Wert der zugehörigen Eigenschaft anzuzeigen, müssen diese Eigenschaft eine `get` Accessor-Methode; bearbeitet, benötigen Sie die Eigenschaft eine `set` Accessor-Methode. Die in dem der Bereich ermöglicht direkte Bearbeitung von einem Eigenschaftenlisten-Element vom Benutzer richtet sich nach der unterstützende Typinformationen, die für den Datentyp der zugeordneten Eigenschaft vorhanden. Die folgende Tabelle zeigt die Wahrscheinlichkeit Schema.  
  
|Typ von Eigenschaftsinformationen|Eigenschaftenelement bearbeiten-Benutzeroberfläche (UI)|  
|-------------------------------|-------------------------------------------------|  
|Verfügt über einen zugeordneten Typ-Editor (<xref:System.Drawing.Design.UITypeEditor>)|Der zugrunde liegenden Eigenschaft zugeordnete Typ-Editor wird angezeigt, für den Wert der Eigenschaft zu bearbeiten.|  
|Verfügt über einen zugeordneten Typkonverter in einen bekannten Typ (<xref:System.ComponentModel.TypeConverter>)|Der Typ-Editor für den bekannten Typ wird angezeigt, für den Wert der Eigenschaft zu bearbeiten. Z. B. einen Typkonverter für <xref:System.String> wahrscheinlich zeigt eine <xref:System.Windows.Forms.TextBox>.|  
|Boolescher Wert|Das Element wird mit einer binären Benutzeroberfläche, z. B. ein Häkchen angezeigt.|  
|Keiner der oben genannten Kriterien.|Das Element wird angezeigt, wie eine nicht bearbeitbare Textzeichenfolge, die mit dem Datentyp <xref:System.Object.ToString%2A> Methode.|  
  
 Alle grundlegenden Typen, wie z. B. <xref:System.Boolean?displayProperty=nameWithType>, und allgemeine [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] -Datentypen, wie z. B. <xref:System.String?displayProperty=nameWithType>, geben Sie standard Typkonverter und Editoren. Weitere Informationen zu den Einsatz von Typkonvertern, finden Sie unter [Vorgehensweise: Implementieren eines Typkonverters](http://msdn.microsoft.com/library/90373a3f-d8c8-492d-841c-945d62393c56) oder [verallgemeinerte Typkonvertierung](http://msdn.microsoft.com/library/49253ae6-7657-4810-82ab-1176a6feeada). Weitere Informationen zu Typ-Editoren, finden Sie unter [wie: Implementieren einer UI-Typ-Editor](http://msdn.microsoft.com/library/ed961fb9-ee02-4666-b511-05f3204bb75c).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie zum Erstellen einer Sammlung von <xref:System.ComponentModel.Design.DesignerActionItem> Objekte. Ein vollständiges Beispiel Smarttags implementieren, finden Sie unter [wie: Anfügen von Smarttags auf eine Komponente in Windows Forms](http://msdn.microsoft.com/library/42cc4a0c-9ab3-47e1-93b8-03b6a6ccf233).  
  
 [!code-csharp[System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent/CS/smarttags.cs#7)]
 [!code-vb[System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent/VB/smarttags.vb#7)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.ComponentModel.Design.DesignerActionPropertyItem.MemberName" />
    <altmember cref="T:System.ComponentModel.Design.DesignerActionList" />
    <altmember cref="M:System.ComponentModel.Design.DesignerActionList.GetSortedActionItems" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.Design.DesignerActionPropertyItem" />-Klasse.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DesignerActionPropertyItem (string memberName, string displayName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string memberName, string displayName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignerActionPropertyItem.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (memberName As String, displayName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DesignerActionPropertyItem(System::String ^ memberName, System::String ^ displayName);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Design.DesignerActionPropertyItem : string * string -&gt; System.ComponentModel.Design.DesignerActionPropertyItem" Usage="new System.ComponentModel.Design.DesignerActionPropertyItem (memberName, displayName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="memberName" Type="System.String" />
        <Parameter Name="displayName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="memberName">Der Name (Groß- und Kleinschreibung beachten) der diesem Bereichselement zugeordneten Eigenschaft.</param>
        <param name="displayName">Der Bereichstext für dieses Element.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.Design.DesignerActionPropertyItem" />-Klasse mit der angegebenen Eigenschaft und den angegebenen Anzeigenamen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.ComponentModel.Design.DesignerActionPropertyItem.%23ctor%28System.String%2CSystem.String%29> Konstruktor legt die <xref:System.ComponentModel.Design.DesignerActionItem.Category%2A> und <xref:System.ComponentModel.Design.DesignerActionItem.Description%2A> Eigenschaften `null`.  
  
 Die `memberName` Parameter verweist auf den Namen der zugeordneten Eigenschaft, die ein Mitglied der Programmierer bereitgestellten Klasse abgeleitet ist die <xref:System.ComponentModel.Design.DesignerActionList> Klasse.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.DesignerActionList" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DesignerActionPropertyItem (string memberName, string displayName, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string memberName, string displayName, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignerActionPropertyItem.#ctor(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (memberName As String, displayName As String, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DesignerActionPropertyItem(System::String ^ memberName, System::String ^ displayName, System::String ^ category);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Design.DesignerActionPropertyItem : string * string * string -&gt; System.ComponentModel.Design.DesignerActionPropertyItem" Usage="new System.ComponentModel.Design.DesignerActionPropertyItem (memberName, displayName, category)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="memberName" Type="System.String" />
        <Parameter Name="displayName" Type="System.String" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="memberName">Der Name (Groß- und Kleinschreibung beachten) der diesem Bereichselement zugeordneten Eigenschaft.</param>
        <param name="displayName">Der Bereichstext für dieses Element.</param>
        <param name="category">Der <see cref="T:System.String" /> (Groß- und Kleinschreibung beachten) zum Gruppieren gleicher Elemente im Bereich.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.Design.DesignerActionPropertyItem" />-Klasse mit der angegebenen Eigenschaft, den angegebenen Kategorienamen und dem angegebenen Anzeigetext.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.ComponentModel.Design.DesignerActionPropertyItem.%23ctor%28System.String%2CSystem.String%2CSystem.String%29> Konstruktor legt die <xref:System.ComponentModel.Design.DesignerActionItem.Description%2A> Eigenschaft `null`.  
  
 Weitere Informationen darüber, wie die `category` Parameter dient zum Gruppieren von Elementen in einem Bereich finden Sie unter der <xref:System.ComponentModel.Design.DesignerActionList.GetSortedActionItems%2A> Methode.  
  
 Die `memberName` Parameter verweist auf den Namen der zugeordneten Eigenschaft, die ein Mitglied der Programmierer bereitgestellten Klasse abgeleitet ist <xref:System.ComponentModel.Design.DesignerActionList>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.DesignerActionList" />
        <altmember cref="M:System.ComponentModel.Design.DesignerActionList.GetSortedActionItems" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DesignerActionPropertyItem (string memberName, string displayName, string category, string description);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string memberName, string displayName, string category, string description) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignerActionPropertyItem.#ctor(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (memberName As String, displayName As String, category As String, description As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DesignerActionPropertyItem(System::String ^ memberName, System::String ^ displayName, System::String ^ category, System::String ^ description);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Design.DesignerActionPropertyItem : string * string * string * string -&gt; System.ComponentModel.Design.DesignerActionPropertyItem" Usage="new System.ComponentModel.Design.DesignerActionPropertyItem (memberName, displayName, category, description)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="memberName" Type="System.String" />
        <Parameter Name="displayName" Type="System.String" />
        <Parameter Name="category" Type="System.String" />
        <Parameter Name="description" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="memberName">Der Name (Groß- und Kleinschreibung beachten) der diesem Bereichselement zugeordneten Eigenschaft.</param>
        <param name="displayName">Der Bereichstext für dieses Element.</param>
        <param name="category">Der <see cref="T:System.String" /> (Groß- und Kleinschreibung beachten) zum Gruppieren gleicher Elemente im Bereich.</param>
        <param name="description">Ergänzender Text für dieses Element, der in QuickInfos oder der Statusleiste verwendet wird.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.Design.DesignerActionPropertyItem" />-Klasse mit der angegebenen Eigenschaft, den angegebenen Kategorienamen, dem angegebenen Anzeigetext sowie der angegebenen Beschreibung.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen darüber, wie die `category` Parameter dient zum Gruppieren von Elementen in einem Bereich finden Sie unter der <xref:System.ComponentModel.Design.DesignerActionList.GetSortedActionItems%2A> Methode.  
  
 Die `memberName` Parameter verweist auf den Namen der zugeordneten Eigenschaft, die ein Mitglied der Programmierer bereitgestellten Klasse abgeleitet ist die <xref:System.ComponentModel.Design.DesignerActionList> Klasse.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie zum Erstellen einer Sammlung von <xref:System.ComponentModel.Design.DesignerActionItem> Objekte. Ein vollständiges Beispiel Smarttags implementieren, finden Sie unter [wie: Anfügen von Smarttags auf eine Komponente in Windows Forms](http://msdn.microsoft.com/library/42cc4a0c-9ab3-47e1-93b8-03b6a6ccf233).  
  
 [!code-csharp[System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent/CS/smarttags.cs#7)]
 [!code-vb[System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent/VB/smarttags.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.DesignerActionList" />
        <altmember cref="M:System.ComponentModel.Design.DesignerActionList.GetSortedActionItems" />
      </Docs>
    </Member>
    <Member MemberName="MemberName">
      <MemberSignature Language="C#" Value="public string MemberName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MemberName" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.DesignerActionPropertyItem.MemberName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MemberName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MemberName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MemberName : string" Usage="System.ComponentModel.Design.DesignerActionPropertyItem.MemberName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen der Eigenschaft ab, der dieses Element zugeordnet ist.</summary>
        <value>Ein <see cref="T:System.String" />, der den Namen der zugeordneten Eigenschaft enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.ComponentModel.Design.DesignerActionPropertyItem.MemberName%2A> Eigenschaft gibt an, welche Eigenschaft – in der abgeleiteten Klasse die <xref:System.ComponentModel.Design.DesignerActionList> Klasse – das Element gebunden werden soll. Wenn der Programmierer mit der Systemsteuerungselement über die Benutzeroberfläche (UI) interagiert, wird diese zugeordnete Eigenschaft festgelegt werden.  
  
 <xref:System.ComponentModel.Design.DesignerActionPropertyItem.MemberName%2A> wird im Konstruktor festgelegt werden. Der Wert ist Groß-/Kleinschreibung beachtet.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.Design.DesignerActionPropertyItem.#ctor(System.String,System.String,System.String,System.String)" />
        <altmember cref="T:System.ComponentModel.Design.DesignerActionList" />
      </Docs>
    </Member>
    <Member MemberName="RelatedComponent">
      <MemberSignature Language="C#" Value="public System.ComponentModel.IComponent RelatedComponent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.IComponent RelatedComponent" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.DesignerActionPropertyItem.RelatedComponent" />
      <MemberSignature Language="VB.NET" Value="Public Property RelatedComponent As IComponent" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::IComponent ^ RelatedComponent { System::ComponentModel::IComponent ^ get(); void set(System::ComponentModel::IComponent ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RelatedComponent : System.ComponentModel.IComponent with get, set" Usage="System.ComponentModel.Design.DesignerActionPropertyItem.RelatedComponent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.IComponent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine Komponente ab, die ihre Elemente zum aktuellen Bereich beiträgt, oder legt diese fest.</summary>
        <value>Die beitragende Komponente, die über einen zugeordneten Designer verfügt, der <see cref="T:System.ComponentModel.Design.DesignerActionItem" />-Objekte angibt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mit der <xref:System.ComponentModel.Design.DesignerActionPropertyItem.RelatedComponent%2A> -Eigenschaft, eine andere Komponente kann der Pull-Modell Systemsteuerungselemente der aktuellen Liste verleihen. Ein Benutzersteuerelement könnte z. B. Zusammenfassen der <xref:System.ComponentModel.Design.DesignerActionItem> Objekte aus einer oder mehreren seiner Steuerelemente.  
  
 Diese Eigenschaft funktioniert in Verbindung mit der <xref:System.ComponentModel.Design.DesignerActionItem.AllowAssociate%2A?displayProperty=nameWithType> Eigenschaft.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.DesignerActionItem" />
        <altmember cref="P:System.ComponentModel.Design.DesignerActionItem.AllowAssociate" />
      </Docs>
    </Member>
  </Members>
</Type>