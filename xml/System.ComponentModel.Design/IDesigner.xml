<Type Name="IDesigner" FullName="System.ComponentModel.Design.IDesigner">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a1035b88664790e8591e2ced05d9876e3abce6c5" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37696442" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IDesigner : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDesigner implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.IDesigner" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDesigner&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDesigner : IDisposable" />
  <TypeSignature Language="F#" Value="type IDesigner = interface&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Stellt das grundlegende Framework für das Erstellen eines benutzerdefinierten Designers bereit.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.ComponentModel.Design.IDesigner> Schnittstelle stellt eine Schnittstelle, die über die Sie grundlegende Dienste für einen Designer implementieren können. Ein Designer können Sie das Verhalten einer Komponente zur Entwurfszeit ändern, und möglicherweise eigene Dienste und Verhalten. Ein Designer ist nur zur Entwurfszeit aktiv und muss einen Typ von Komponente zugeordnet werden eine <xref:System.ComponentModel.DesignerAttribute> um geladen werden, wenn eine Komponente des zugeordneten Typs zur Entwurfszeit erstellt wird.  
  
 Die <xref:System.ComponentModel.Design.IDesigner> -Schnittstelle stellt Methoden und Eigenschaften, die Sie implementieren können, um benutzerdefiniertes Verhalten zur Entwurfszeit zu bieten.  
  
 Implementieren der <xref:System.ComponentModel.Design.IDesigner.Initialize%2A> Methode eines Designers, um Aktionen durchzuführen, wenn eine Komponente erstellt wird. Dies kann nützlich sein, wenn eine Komponente zur Entwurfszeit eine spezielle Konfiguration muss oder die Konfiguration basierend auf Bedingungen geändert werden sollte, die der Designer bestimmen kann.  
  
 Ein Designer kann Befehle im Menü im Kontextmenü bereitstellen, die angezeigt wird, wenn ein Benutzer eine Komponente oder ein Steuerelement in der entwurfszeitumgebung mit der rechten Maustaste. Können Sie implementieren die <xref:System.ComponentModel.Design.IDesigner.Verbs%2A> Eigenschaft, um einen Get-Accessor zu definieren, die zurückgibt eine <xref:System.ComponentModel.Design.DesignerVerbCollection> , enthält die <xref:System.ComponentModel.Design.DesignerVerb> Objekte zum Generieren von Menübefehlen.  
  
 Ein Designer für eine Komponente, die in der Komponentenleiste angezeigt wird, kann eine Standardaktion auszuführen, wenn die Komponente doppelgeklickt wird. Implementieren der <xref:System.ComponentModel.Design.IDesigner.DoDefaultAction%2A> Methode zum Angeben des Verhaltens ausführen, wenn die Komponente doppelgeklickt wird.  
  
 Ein Designer können auch die verfügbaren Dienste für die Entwurfszeit-verwalten eine Vielzahl von Aufgaben, einschließlich der Befragung die aktuelle entwurfszeitumgebung für Komponenten und deren Eigenschaften, lesen und Festlegen der Werte der Eigenschaften, die von Komponenten, führen Sie die Toolbox, Verwalten von ausgewählten Komponenten oder Anzeigen einer Benutzeroberfläche, die Werte zu konfigurieren oder Anwenden der weiteren Verarbeitung verwendet werden kann.  
  
 Um einen Designer für ein Steuerelement, das positioniert werden soll, kann in einem Formular zu implementieren, können Sie von erben die <xref:System.Windows.Forms.Design.ControlDesigner> Klasse. Steuerelemente, deren zugeordneten Designer nicht von abgeleitet <xref:System.Windows.Forms.Design.ControlDesigner> werden in der Komponentenleiste angezeigt. Die <xref:System.ComponentModel.Design.ComponentDesigner> und <xref:System.Windows.Forms.Design.ControlDesigner> -Klassen implementieren die <xref:System.ComponentModel.Design.IDesigner> Schnittstelle, und geben Sie zusätzliche Unterstützung für während der Entwurfszeit von verwenden, um Autoren von Designern, die möglicherweise. Weitere Informationen finden Sie in der Referenzdokumentation für diese Klassen.  
  
 Eine Übersicht über das Entwerfen von Komponenten erstellen, finden Sie unter [Extending Design-Time Support](http://msdn.microsoft.com/library/d6ac8a6a-42fd-4bc8-bf33-b212811297e2).  
  
   
  
## Examples  
 Dieses Beispiel zeigt eine <xref:System.ComponentModel.Design.IDesigner> -Implementierung, die einen lokalen Verweis auf die Komponente speichert eine Standardaktion ausführt, wenn die Komponente doppelgeklickt wird, und einen Menübefehl DesignerVerb bereitstellt.  
  
 [!code-cpp[IDesignerExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/IDesignerExample/CPP/testcontrol.cpp#1)]
 [!code-csharp[IDesignerExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/IDesignerExample/CS/testcontrol.cs#1)]
 [!code-vb[IDesignerExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/IDesignerExample/VB/testcontrol.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.Design.IRootDesigner" />
    <altmember cref="T:System.ComponentModel.Design.IDesignerHost" />
    <altmember cref="T:System.ComponentModel.Design.DesignerVerb" />
  </Docs>
  <Members>
    <Member MemberName="Component">
      <MemberSignature Language="C#" Value="public System.ComponentModel.IComponent Component { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.IComponent Component" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.IDesigner.Component" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Component As IComponent" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::IComponent ^ Component { System::ComponentModel::IComponent ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Component : System.ComponentModel.IComponent" Usage="System.ComponentModel.Design.IDesigner.Component" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.IComponent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die von diesem Designer entworfene Basiskomponente ab.</summary>
        <value>Eine <see cref="T:System.ComponentModel.IComponent" />, die die von diesem Designer entworfene Basiskomponente angibt.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DoDefaultAction">
      <MemberSignature Language="C#" Value="public void DoDefaultAction ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DoDefaultAction() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesigner.DoDefaultAction" />
      <MemberSignature Language="VB.NET" Value="Public Sub DoDefaultAction ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DoDefaultAction();" />
      <MemberSignature Language="F#" Value="abstract member DoDefaultAction : unit -&gt; unit" Usage="iDesigner.DoDefaultAction " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Führt die Standardaktion für diesen Designer durch.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird aufgerufen, wenn ein Benutzer die Darstellung einer Komponente in der Komponentenleiste doppelklickt.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public void Initialize (System.ComponentModel.IComponent component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Initialize(class System.ComponentModel.IComponent component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesigner.Initialize(System.ComponentModel.IComponent)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Initialize (component As IComponent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Initialize(System::ComponentModel::IComponent ^ component);" />
      <MemberSignature Language="F#" Value="abstract member Initialize : System.ComponentModel.IComponent -&gt; unit" Usage="iDesigner.Initialize component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="component">Die Komponente, die diesem Designer zugeordnet werden soll.</param>
        <summary>Initialisiert den Designer mit der angegebenen Komponente.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Verbs">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Design.DesignerVerbCollection Verbs { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Design.DesignerVerbCollection Verbs" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.IDesigner.Verbs" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Verbs As DesignerVerbCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::Design::DesignerVerbCollection ^ Verbs { System::ComponentModel::Design::DesignerVerbCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Verbs : System.ComponentModel.Design.DesignerVerbCollection" Usage="System.ComponentModel.Design.IDesigner.Verbs" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.DesignerVerbCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine Auflistung der Entwurfszeitverben ab, die vom Designer unterstützt werden.</summary>
        <value>Eine <see cref="T:System.ComponentModel.Design.DesignerVerbCollection" /> mit den Verben, die vom Designer unterstützt werden, oder <see langword="null" />, wenn die Komponente keine Verben besitzt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gibt zurück, das Design Time-Verben, die von der dem Designer zugeordneten Komponente unterstützt. Die Verben, die von dieser Methode zurückgegebene werden von der Umgebung zur Entwurfszeit in einem Menü mit der rechten Maustaste in der Regel angezeigt. Wenn ein Benutzer wählt eines der Verben, die Ereignishandler des entsprechenden <xref:System.ComponentModel.Design.DesignerVerb> aufgerufen wird.  
  
> [!NOTE]
>  Eine Entwurfszeit-Umgebung bereitstellt, in der Regel eine **Eigenschaften... ** Eintrag einer Komponente mit der rechten Maustaste im Menü auf. Zur Vermeidung von doppelter Titeln für Menüeinträge kein Verb mit dem Titel "..." Eigenschaften"in enthalten sein sollen eine <xref:System.ComponentModel.Design.DesignerVerbCollection>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.DesignerVerb" />
        <altmember cref="T:System.ComponentModel.Design.DesignerVerbCollection" />
      </Docs>
    </Member>
  </Members>
</Type>