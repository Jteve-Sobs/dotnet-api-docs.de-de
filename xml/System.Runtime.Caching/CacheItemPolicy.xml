<Type Name="CacheItemPolicy" FullName="System.Runtime.Caching.CacheItemPolicy">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d8cb49ee887846f400d170c15be3782ba78c8f51" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39777620" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class CacheItemPolicy" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CacheItemPolicy extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Caching.CacheItemPolicy" />
  <TypeSignature Language="VB.NET" Value="Public Class CacheItemPolicy" />
  <TypeSignature Language="C++ CLI" Value="public ref class CacheItemPolicy" />
  <TypeSignature Language="F#" Value="type CacheItemPolicy = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Caching</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt einen Satz von Lösch- und Ablaufdetails für einen bestimmten Cacheeintrag dar.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein <xref:System.Runtime.Caching.CacheItemPolicy> Instanz enthält Informationen, die von einem Cacheeintrag zugeordnet werden kann. Wenn z. B., ein Eintrag im Cache wird aus dem Cache entfernt werden soll eine <xref:System.Runtime.Caching.CacheEntryUpdateArguments> Objekt wird an eine Rückrufmethode übergeben. Die <xref:System.Runtime.Caching.CacheEntryUpdateArguments.UpdatedCacheItemPolicy%2A> Eigenschaft der <xref:System.Runtime.Caching.CacheEntryUpdateArguments> Objekt kann übergeben einen Verweis auf eine <xref:System.Runtime.Caching.CacheItemPolicy> -Instanz, die entfernungs- und Ablaufrichtlinien Details des Eintrags im Cache enthalten kann.  
  
 Einige Methoden in der <xref:System.Runtime.Caching.MemoryCache> und <xref:System.Runtime.Caching.ObjectCache> Klassen akzeptieren einen <xref:System.Runtime.Caching.CacheItemPolicy> Instanz Cachelöschungs-oder Ablaufrichtlinie beschreiben.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt, wie Sie ein in-Memory-Cache-Element zu erstellen, die den Pfad für eine Textdatei überwacht wird. Erstellt der Zwischenspeicher eine <xref:System.Runtime.Caching.CacheItemPolicy> -Objekt und legt die <xref:System.Runtime.Caching.CacheItemPolicy.AbsoluteExpiration%2A> Eigenschaft so entfernen Sie den Cache nach 60 Sekunden.  
  
```vb  
Protected Sub Button1_Click(ByVal sender As Object, _  
            ByVal e As System.EventArgs) Handles Button1.Click  
    Dim cache As ObjectCache = MemoryCache.Default  
    Dim fileContents As String = TryCast(cache("filecontents"), _  
            String)  
    If fileContents Is Nothing Then  
        Dim policy As New CacheItemPolicy()  
        policy.AbsoluteExpiration = _  
            DateTimeOffset.Now.AddSeconds(60.0)  
        Dim filePaths As New List(Of String)()  
     Dim cachedFilePath As String = Server.MapPath("~") & _  
         "\cacheText.txt"  
        filePaths.Add(cachedFilePath)  
        policy.ChangeMonitors.Add(New _  
            HostFileChangeMonitor(filePaths))  
  
        ' Fetch the file contents.  
        fileContents = File.ReadAllText(cachedFilePath)  
        cache.Set("filecontents", fileContents, policy)  
    End If  
    Label1.Text = fileContents  
End Sub  
```  
  
```csharp  
protected void Button1_Click(object sender, EventArgs e)  
    {  
        ObjectCache cache = MemoryCache.Default;  
            string fileContents = cache["filecontents"] as string;  
            if (fileContents == null)  
            {  
                CacheItemPolicy policy = new CacheItemPolicy();  
                policy.AbsoluteExpiration =   
                    DateTimeOffset.Now.AddSeconds(60.0);  
  
                List<string> filePaths = new List<string>();  
             string cachedFilePath = Server.MapPath("~") +   
                 "\\cacheText.txt";  
             filePaths.Add(cachedFilePath);  
  
                policy.ChangeMonitors.Add(new   
                    HostFileChangeMonitor(filePaths));  
  
                // Fetch the file contents.  
                fileContents = File.ReadAllText(cachedFilePath);  
  
                cache.Set("filecontents", fileContents, policy);  
  
            }  
  
            Label1.Text = fileContents;  
        }  
```  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>Die <see cref="T:System.Runtime.Caching.CacheItemPolicy" /> Typ ist unversiegelt, damit es von benutzerdefinierten Cache-Entwicklern erweitert werden kann.</para>
    </block>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CacheItemPolicy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.CacheItemPolicy.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CacheItemPolicy();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Runtime.Caching.CacheItemPolicy" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AbsoluteExpiration">
      <MemberSignature Language="C#" Value="public DateTimeOffset AbsoluteExpiration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTimeOffset AbsoluteExpiration" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Caching.CacheItemPolicy.AbsoluteExpiration" />
      <MemberSignature Language="VB.NET" Value="Public Property AbsoluteExpiration As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTimeOffset AbsoluteExpiration { DateTimeOffset get(); void set(DateTimeOffset value); };" />
      <MemberSignature Language="F#" Value="member this.AbsoluteExpiration : DateTimeOffset with get, set" Usage="System.Runtime.Caching.CacheItemPolicy.AbsoluteExpiration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob ein Cacheeintrag zu einem bestimmten Zeitpunkt entfernt werden soll, oder legt diesen fest.</summary>
        <value>Zeitpunkt der Erstellung, an dem ein Cacheeintrag entfernt wird. Der Standardwert lautet <see cref="F:System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration" />, d. h. der Eintrag läuft nicht ab.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangeMonitors">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.Runtime.Caching.ChangeMonitor&gt; ChangeMonitors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class System.Runtime.Caching.ChangeMonitor&gt; ChangeMonitors" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Caching.CacheItemPolicy.ChangeMonitors" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChangeMonitors As Collection(Of ChangeMonitor)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::Runtime::Caching::ChangeMonitor ^&gt; ^ ChangeMonitors { System::Collections::ObjectModel::Collection&lt;System::Runtime::Caching::ChangeMonitor ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ChangeMonitors : System.Collections.ObjectModel.Collection&lt;System.Runtime.Caching.ChangeMonitor&gt;" Usage="System.Runtime.Caching.CacheItemPolicy.ChangeMonitors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.Runtime.Caching.ChangeMonitor&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine Auflistung von <see cref="T:System.Runtime.Caching.ChangeMonitor" />-Objekten ab, die einem Cacheeintrag zugeordnet sind.</summary>
        <value>Eine Auflistung von Änderungsüberwachungen. Der Standard ist eine leere Auflistung.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können zum Hinzufügen oder Entfernen von änderungsüberwachungen, die von einem Cacheeintrag zugeordnet sind. Allerdings der Satz von änderungsüberwachungen muss abgeschlossen sein, bevor Sie übergeben eine <xref:System.Runtime.Caching.CacheItemPolicy> -Instanz, auf eine <xref:System.Runtime.Caching.ObjectCache> Implementierung. Wenn Sie den Satz von änderungsüberwachungen auf eine <xref:System.Runtime.Caching.CacheItemPolicy> Objekts, nachdem die <xref:System.Runtime.Caching.CacheItemPolicy> -Objekt übergeben wurde ein <xref:System.Runtime.Caching.ObjectCache> -Implementierung die Änderungen wirken sich nicht.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Priority">
      <MemberSignature Language="C#" Value="public System.Runtime.Caching.CacheItemPriority Priority { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Runtime.Caching.CacheItemPriority Priority" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Caching.CacheItemPolicy.Priority" />
      <MemberSignature Language="VB.NET" Value="Public Property Priority As CacheItemPriority" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::Caching::CacheItemPriority Priority { System::Runtime::Caching::CacheItemPriority get(); void set(System::Runtime::Caching::CacheItemPriority value); };" />
      <MemberSignature Language="F#" Value="member this.Priority : System.Runtime.Caching.CacheItemPriority with get, set" Usage="System.Runtime.Caching.CacheItemPolicy.Priority" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Caching.CacheItemPriority</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine Prioritätseinstellung ab, mit deren Hilfe bestimmt wird, ob ein Cacheeintrag entfernt wird, oder legt diese fest.</summary>
        <value>Einer der Enumerationswerte, die die Priorität für die Entfernung angeben. Der Standardprioritätswert ist <see cref="F:System.Runtime.Caching.CacheItemPriority.Default" />, d. h. keine Priorität.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In ASP.NET die Prioritätsenumeration hat nur zwei mögliche Prioritäten: <xref:System.Runtime.Caching.CacheItemPriority.Default> (d. h. keine Priorität), und <xref:System.Runtime.Caching.CacheItemPriority.NotRemovable> (was bedeutet, dass den Eintrag kann nicht entfernt werden). Daher ist die einzige Priorität, die festgelegt werden kann, ob immer ein Cacheeintrag im Cache verbleiben sollen.  
  
> [!IMPORTANT]
>  Hinzufügen eines Eintrags in den Cache mit einer Prioritätsstufe von <xref:System.Runtime.Caching.CacheItemPriority.NotRemovable> kann den Cache mit Einträgen, die niemals entfernt werden können, einen Überlauf verursachen. Cache-Implementierungen sollten Festlegen der <xref:System.Runtime.Caching.CacheItemPriority.NotRemovable> Priorität für einen Cacheeintrag nur dann, wenn die Cacheimplementierung Verfahren, um die Einträge aus dem Cache zu entfernen und zum Verwalten der Anzahl der Einträge im Cache bietet.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovedCallback">
      <MemberSignature Language="C#" Value="public System.Runtime.Caching.CacheEntryRemovedCallback RemovedCallback { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.Caching.CacheEntryRemovedCallback RemovedCallback" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Caching.CacheItemPolicy.RemovedCallback" />
      <MemberSignature Language="VB.NET" Value="Public Property RemovedCallback As CacheEntryRemovedCallback" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::Caching::CacheEntryRemovedCallback ^ RemovedCallback { System::Runtime::Caching::CacheEntryRemovedCallback ^ get(); void set(System::Runtime::Caching::CacheEntryRemovedCallback ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RemovedCallback : System.Runtime.Caching.CacheEntryRemovedCallback with get, set" Usage="System.Runtime.Caching.CacheItemPolicy.RemovedCallback" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Caching.CacheEntryRemovedCallback</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Verweis auf einen <see cref="T:System.Runtime.Caching.CacheEntryRemovedCallback" />-Delegaten ab, der nach dem Entfernen eines Eintrags aus dem Cache aufgerufen wird, oder legt diesen fest.</summary>
        <value>Ein Verweis auf einen Delegaten, der von einer Cacheimplementierung aufgerufen wird.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nachdem ein Cacheeintrag aus dem Cache entfernt wurde, ruft der Cache die Callback-Objekt, das vom verwiesen wird die <xref:System.Runtime.Caching.CacheItemPolicy.RemovedCallback%2A> Eigenschaft. Eine Cacheimplementierung kann dieser Rückruf verwenden, um der aufrufenden Methode zu benachrichtigen, dass ein Cacheeintrag entfernt wurde.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SlidingExpiration">
      <MemberSignature Language="C#" Value="public TimeSpan SlidingExpiration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan SlidingExpiration" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Caching.CacheItemPolicy.SlidingExpiration" />
      <MemberSignature Language="VB.NET" Value="Public Property SlidingExpiration As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan SlidingExpiration { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.SlidingExpiration : TimeSpan with get, set" Usage="System.Runtime.Caching.CacheItemPolicy.SlidingExpiration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob ein Cacheeintrag entfernt werden soll, wenn über einen angegebenen Zeitraum nicht auf ihn zugegriffen wurde, oder legt diesen fest.</summary>
        <value>Ein Zeitraum, in dem auf einen Cacheeintrag zugegriffen werden muss, bevor er aus dem Cache entfernt wird. Der Standard ist <see cref="F:System.Runtime.Caching.ObjectCache.NoSlidingExpiration" />, d. h., das Element sollte auf Grundlage einer Zeitspanne nicht abgelaufen sein.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateCallback">
      <MemberSignature Language="C#" Value="public System.Runtime.Caching.CacheEntryUpdateCallback UpdateCallback { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.Caching.CacheEntryUpdateCallback UpdateCallback" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Caching.CacheItemPolicy.UpdateCallback" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateCallback As CacheEntryUpdateCallback" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::Caching::CacheEntryUpdateCallback ^ UpdateCallback { System::Runtime::Caching::CacheEntryUpdateCallback ^ get(); void set(System::Runtime::Caching::CacheEntryUpdateCallback ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UpdateCallback : System.Runtime.Caching.CacheEntryUpdateCallback with get, set" Usage="System.Runtime.Caching.CacheItemPolicy.UpdateCallback" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Caching.CacheEntryUpdateCallback</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Verweis auf einen <see cref="T:System.Runtime.Caching.CacheEntryUpdateCallback" />-Delegaten ab, der vor dem Entfernen eines Eintrags aus dem Cache aufgerufen wird, oder legt diesen fest.</summary>
        <value>Ein Verweis auf einen Delegaten, der von einer Cacheimplementierung aufgerufen wird.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>