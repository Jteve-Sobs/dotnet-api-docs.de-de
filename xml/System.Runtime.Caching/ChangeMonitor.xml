<Type Name="ChangeMonitor" FullName="System.Runtime.Caching.ChangeMonitor">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ed10988d07dceeceb8c3790eaec2ec2b9b04d9fa" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70577741" /></Metadata><TypeSignature Language="C#" Value="public abstract class ChangeMonitor : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ChangeMonitor extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Caching.ChangeMonitor" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ChangeMonitor&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class ChangeMonitor abstract : IDisposable" />
  <TypeSignature Language="F#" Value="type ChangeMonitor = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Caching</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="3a523-101">Stellt eine Basisklasse für einen abgeleiteten benutzerdefinierten Typ bereit, der Wechsel in den Zustand der Daten überwacht, auf den ein Cacheelement angewiesen ist.</span><span class="sxs-lookup"><span data-stu-id="3a523-101">Provides a base class for a derived custom type that monitors changes in the state of the data which a cache item depends on.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a523-102">Die <xref:System.Runtime.Caching.ChangeMonitor> -Klasse wird als Basisklasse für abgeleitete Monitor Klassen verwendet, die auf bestimmte Cache Implementierungen spezialisiert sind.</span><span class="sxs-lookup"><span data-stu-id="3a523-102">The <xref:System.Runtime.Caching.ChangeMonitor> class is used as the base class for derived monitor classes that are specialized for particular cache implementations.</span></span> <span data-ttu-id="3a523-103">Eine <xref:System.Runtime.Caching.ChangeMonitor> -Instanz überwacht Änderungen im Zustand der Daten, von denen ein Cache Element abhängt.</span><span class="sxs-lookup"><span data-stu-id="3a523-103">A <xref:System.Runtime.Caching.ChangeMonitor> instance monitors changes in the state of data which a cache item depends on.</span></span> <span data-ttu-id="3a523-104">Beispielsweise kann es sich bei dem Element um eine Datei oder eine Daten Entität handeln, deren Inhalt zwischengespeichert wird.</span><span class="sxs-lookup"><span data-stu-id="3a523-104">For example, the item can be a file or data entity whose contents are cached.</span></span> <span data-ttu-id="3a523-105">Wenn die Datei oder die Daten Entität aktualisiert wird, muss auch der zugehörige Cache Eintrag geändert werden.</span><span class="sxs-lookup"><span data-stu-id="3a523-105">If the file or data entity is updated, the associated cache entry must be changed also.</span></span> <span data-ttu-id="3a523-106">Zu den allgemeinen Elementen, die überwacht werden können, gehören Daten Entitäten (z. b. Datenbankfelder, Werte, Zeilen oder Tabellen), ein weiterer Cache Eintrag und Dateien und Dateiattribute.</span><span class="sxs-lookup"><span data-stu-id="3a523-106">Common items that can be monitored include data entities (such as database fields, values, rows, or tables), another cache entry, and files and file attributes.</span></span>  
  
 <span data-ttu-id="3a523-107">Eine Abhängigkeits Änderung ist eine Änderung des Zustands einer Abhängigkeit.</span><span class="sxs-lookup"><span data-stu-id="3a523-107">A dependency change is a change in the state of a dependency.</span></span> <span data-ttu-id="3a523-108">Wenn eine- <xref:System.Runtime.Caching.ChangeMonitor> Instanz in einer typischen Cache Implementierung den Cache darüber benachrichtigt, dass sich eine Abhängigkeit geändert hat, führt der Cache die erforderliche Aktion aus, z. b. den eingefügten Cache Eintrag für ungültig zu erklären.</span><span class="sxs-lookup"><span data-stu-id="3a523-108">In a typical cache implementation, after a <xref:System.Runtime.Caching.ChangeMonitor> instance notifies the cache that a dependency has changed, the cache performs the required action, such as invalidating the inserted cache entry.</span></span>  
  
 <span data-ttu-id="3a523-109">Abgeleitete <xref:System.Runtime.Caching.ChangeMonitor> Klassen können angepasst werden, um Abhängigkeitsänderungen für bestimmte unterschiedliche Datenspeicher zu überwachen.</span><span class="sxs-lookup"><span data-stu-id="3a523-109">Derived <xref:System.Runtime.Caching.ChangeMonitor> classes can be customized to monitor dependency changes for specific different data stores.</span></span> <span data-ttu-id="3a523-110">Beispielsweise gibt es Cache Implementierungen für ein Dateisystem, physischen Arbeitsspeicher oder eine Datenbank.</span><span class="sxs-lookup"><span data-stu-id="3a523-110">For example, there are cache implementations for a file system, physical memory, or a database.</span></span> <span data-ttu-id="3a523-111">Die <xref:System.Runtime.Caching.ChangeMonitor> -Klasse untersucht Änderungen, die außerhalb des Caches erfolgen, und benachrichtigt dann den Cache, dass Änderungen aufgetreten sind.</span><span class="sxs-lookup"><span data-stu-id="3a523-111">The <xref:System.Runtime.Caching.ChangeMonitor> class examines changes that occur outside the cache, and then alerts the cache that changes have occurred.</span></span>  
  
 <span data-ttu-id="3a523-112">Enthält die folgenden Klassen, die von <xref:System.Runtime.Caching.ChangeMonitor> der-Klasse abgeleitet sind: [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</span><span class="sxs-lookup"><span data-stu-id="3a523-112">The [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] includes the following classes that derive from <xref:System.Runtime.Caching.ChangeMonitor> class:</span></span>  
  
-   <xref:System.Runtime.Caching.CacheEntryChangeMonitor>  
  
-   <xref:System.Runtime.Caching.FileChangeMonitor>  
  
-   <xref:System.Runtime.Caching.HostFileChangeMonitor>  
  
-   <xref:System.Runtime.Caching.SqlChangeMonitor>  
  
 <span data-ttu-id="3a523-113">Jede dieser Klassen funktioniert mit unterschiedlichen Abhängigkeits Typen.</span><span class="sxs-lookup"><span data-stu-id="3a523-113">Each of these classes works with different types of dependencies.</span></span> <span data-ttu-id="3a523-114">Beispielsweise werden von der <xref:System.Runtime.Caching.FileChangeMonitor> abgeleiteten Klasse Änderungen an einem Cache für Dateisystem Daten (Dateien und Ordner) überwacht, von denen das Cache Element abhängig ist.</span><span class="sxs-lookup"><span data-stu-id="3a523-114">For example, the derived <xref:System.Runtime.Caching.FileChangeMonitor> class monitors changes to a cache for file system data (files and folders) that the cache item depends on.</span></span>  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="3a523-115">Dieser Typ ist threadsicher.</span><span class="sxs-lookup"><span data-stu-id="3a523-115">This type is thread safe.</span></span></threadsafe>
    <block subset="none" type="overrides"><para><span data-ttu-id="3a523-116">Wenn Sie eine benutzerdefinierte Cache Implementierung oder einen abgeleiteten Änderungs Monitortyp erstellen, müssen Sie bestimmte Richtlinien befolgen.</span><span class="sxs-lookup"><span data-stu-id="3a523-116">If you create a custom cache implementation or a derived change monitor type, you must follow certain guidelines.</span></span> <span data-ttu-id="3a523-117">In der folgenden Liste sind diese Richtlinien zusammengefasst.</span><span class="sxs-lookup"><span data-stu-id="3a523-117">The following list summarizes these guidelines.</span></span> <span data-ttu-id="3a523-118">Weitere Informationen finden Sie in der Dokumentation zu einzelnen Methoden oder Eigenschaften.</span><span class="sxs-lookup"><span data-stu-id="3a523-118">For more information, see the documentation for individual methods or properties.</span></span>  
  
<span data-ttu-id="3a523-119">-Der Konstruktor einer abgeleiteten Klasse muss die <see cref="P:System.Runtime.Caching.ChangeMonitor.UniqueId" /> -Eigenschaft, die BEGIN Monitoring-Methode und die-Methode des Aufrufes <see cref="M:System.Runtime.Caching.ChangeMonitor.InitializationComplete" /> vor der Rückgabe der Methode festlegen.</span><span class="sxs-lookup"><span data-stu-id="3a523-119">-   The constructor of a derived class must set the <see cref="P:System.Runtime.Caching.ChangeMonitor.UniqueId" /> property, begin monitoring, and call <see cref="M:System.Runtime.Caching.ChangeMonitor.InitializationComplete" /> method before the method returns.</span></span> <span data-ttu-id="3a523-120">Wenn ein Konstruktor <see cref="Overload:System.Runtime.Caching.ChangeMonitor.Dispose" /> während der <see cref="M:System.Runtime.Caching.ChangeMonitor.InitializationComplete" /> Konstruktion einen Fehler feststellt und Ressourcen verwerfen muss, kann der Konstruktor die-Überladung nur aufrufen, nachdem die-Methode aufgerufen <see cref="Overload:System.Runtime.Caching.ChangeMonitor.Dispose" /> wurde, da die <see cref="T:System.InvalidOperationException" /> Überladung einen Ausnahme, wenn die Initialisierung nicht abgeschlossen ist.</span><span class="sxs-lookup"><span data-stu-id="3a523-120">If a constructor encounters an error during constructions and must have to dispose of resources, the constructor can only call the <see cref="Overload:System.Runtime.Caching.ChangeMonitor.Dispose" /> overload after the <see cref="M:System.Runtime.Caching.ChangeMonitor.InitializationComplete" /> method is called because the <see cref="Overload:System.Runtime.Caching.ChangeMonitor.Dispose" /> overload will throw an <see cref="T:System.InvalidOperationException" /> exception if initialization is not completed.</span></span>  
  
<span data-ttu-id="3a523-121">-Wenn in den Daten, die überwacht werden, Änderungen auftreten, bevor die Initialisierung beendet ist, muss der Konstruktor die <see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" /> -Methode aufrufen, bevor die <see cref="M:System.Runtime.Caching.ChangeMonitor.InitializationComplete" /> -Methode aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="3a523-121">-   If changes occur in the data that is being monitored before initialization is complete, the constructor must call the <see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" /> method before calling the <see cref="M:System.Runtime.Caching.ChangeMonitor.InitializationComplete" /> method.</span></span>  
  
<span data-ttu-id="3a523-122">-Nachdem ein abgeleiteter <see cref="T:System.Runtime.Caching.ChangeMonitor" /> Typ instanziiert wurde, müssen Sie den Monitor in eine benutzerdefinierte <see cref="T:System.Runtime.Caching.ObjectCache" /> Implementierung einfügen.</span><span class="sxs-lookup"><span data-stu-id="3a523-122">-   After a derived <see cref="T:System.Runtime.Caching.ChangeMonitor" /> type is instantiated, you must insert the monitor into a custom <see cref="T:System.Runtime.Caching.ObjectCache" /> implementation.</span></span> <span data-ttu-id="3a523-123">Wenn Sie den Änderungs Monitor nicht mehr benötigen, können Sie die <see cref="Overload:System.Runtime.Caching.ChangeMonitor.Dispose" /> -Methode verwenden.</span><span class="sxs-lookup"><span data-stu-id="3a523-123">Or if you are finished using the change monitor, call the <see cref="Overload:System.Runtime.Caching.ChangeMonitor.Dispose" /> method.</span></span>  
  
<span data-ttu-id="3a523-124">-Nachdem eine <see cref="T:System.Runtime.Caching.ChangeMonitor" /> -Instanz in eine <see cref="T:System.Runtime.Caching.ObjectCache" /> -Implementierung eingefügt wurde <see cref="T:System.Runtime.Caching.ObjectCache" /> , muss die-Instanz den Änderungs Monitor verwerfen.</span><span class="sxs-lookup"><span data-stu-id="3a523-124">-   After a <see cref="T:System.Runtime.Caching.ChangeMonitor" /> instance is inserted into a <see cref="T:System.Runtime.Caching.ObjectCache" /> implementation, the <see cref="T:System.Runtime.Caching.ObjectCache" /> instance require that the change monitor is disposed.</span></span> <span data-ttu-id="3a523-125">Auch wenn die Einfügung ungültig ist und eine Ausnahme verursacht, <see cref="T:System.Runtime.Caching.ObjectCache" /> muss die-Implementierung <see cref="Overload:System.Runtime.Caching.ChangeMonitor.Dispose" /> die-Überladung aufrufen.</span><span class="sxs-lookup"><span data-stu-id="3a523-125">Even if the insertion is invalid and causes an exception, the <see cref="T:System.Runtime.Caching.ObjectCache" /> implementation must call the <see cref="Overload:System.Runtime.Caching.ChangeMonitor.Dispose" /> overload.</span></span>  
  
<span data-ttu-id="3a523-126">-Nachdem ein abgeleiteter Änderungs Monitor in einen Cache eingefügt wurde <see cref="T:System.Runtime.Caching.ObjectCache" /> , muss die <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" />Implementierung aufrufen, indem <see cref="T:System.Runtime.Caching.OnChangedCallback" /> ein-Objekt übergeben wird.</span><span class="sxs-lookup"><span data-stu-id="3a523-126">-   After a derived change monitor is inserted into a cache, the <see cref="T:System.Runtime.Caching.ObjectCache" /> implementation must call <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" />, by passing a <see cref="T:System.Runtime.Caching.OnChangedCallback" /> object.</span></span> <span data-ttu-id="3a523-127">Die <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" /> -Methode kann nur einmal aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="3a523-127">The <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" /> method can be called only one time.</span></span> <span data-ttu-id="3a523-128">Wenn bereits eine Abhängigkeits Änderung aufgetreten ist, <see cref="T:System.Runtime.Caching.OnChangedCallback" /> wird die Instanz sofort aufgerufen, <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" /> wenn aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="3a523-128">If a dependency change has already occurred, the <see cref="T:System.Runtime.Caching.OnChangedCallback" /> instance will be called immediately when <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" /> is called.</span></span> <span data-ttu-id="3a523-129">Andernfalls wird die <see cref="T:System.Runtime.Caching.OnChangedCallback" /> Instanz nur einmal aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="3a523-129">Otherwise, the <see cref="T:System.Runtime.Caching.OnChangedCallback" /> instance will be called only one time.</span></span> <span data-ttu-id="3a523-130">Dieser einmalige Aufruf tritt auf, wenn die <see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" /> -Methode aufgerufen wird, <see cref="T:System.Runtime.Caching.ChangeMonitor" /> da die-Instanz eine Änderung erkannt hat <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" /> oder wenn die-Methode <see cref="T:System.Runtime.Caching.ChangeMonitor" />für den aufgerufen wird, je nachdem, welcher Wert zuerst auftritt.</span><span class="sxs-lookup"><span data-stu-id="3a523-130">This one time call occurs either when the <see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" /> method is called because the <see cref="T:System.Runtime.Caching.ChangeMonitor" /> instance detected a change, or when the <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" /> method is called on the <see cref="T:System.Runtime.Caching.ChangeMonitor" />, whichever occurs first.</span></span>  
  
<span data-ttu-id="3a523-131">-Die <see cref="T:System.Runtime.Caching.OnChangedCallback" /> -Instanz, die von einer <see cref="T:System.Runtime.Caching.ObjectCache" /> -Implementierung bereitgestellt wird, sollte den zugehörigen Cache Eintrag entfernen und einen <see cref="F:System.Web.Caching.CacheItemRemovedReason.DependencyChanged" /> Grund angeben, indem die-Enumeration verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="3a523-131">-   The <see cref="T:System.Runtime.Caching.OnChangedCallback" /> instance that is provided by an <see cref="T:System.Runtime.Caching.ObjectCache" /> implementation should remove the associated cache entry and specify a reason by using the <see cref="F:System.Web.Caching.CacheItemRemovedReason.DependencyChanged" /> enumeration.</span></span>  
  
<span data-ttu-id="3a523-132">-Eine <see cref="T:System.Runtime.Caching.ChangeMonitor" /> -Instanz kann die <see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" /> -Methode aufrufen, bevor eine Cache Implementierung <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" /> die-Methode oder die-Methode aufgerufen hat.</span><span class="sxs-lookup"><span data-stu-id="3a523-132">-   A <see cref="T:System.Runtime.Caching.ChangeMonitor" /> instance can call the <see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" /> method either before a cache implementation has called <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" /> method or after.</span></span> <span data-ttu-id="3a523-133">Wenn die <see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" /> -Methode aufgerufen wird <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" /> , bevor aufgerufen wird, <see cref="T:System.Runtime.Caching.ChangeMonitor" /> benachrichtigt die Basis Implementierung den Cache, dass diese aufgetreten ist, und löst den Rückruf <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" /> aus, wenn <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" /> aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="3a523-133">If the <see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" /> method is called before <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" /> is called, the base <see cref="T:System.Runtime.Caching.ChangeMonitor" /> implementation will notify the cache that this has occurred and will trigger the callback to be passed to <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" /> immediately when <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" /> is invoked.</span></span> <span data-ttu-id="3a523-134">Alle Zustandsdaten, die an die <see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" /> -Methode übermittelt werden, werden vom Änderungs Monitor gespeichert und anschließend an die <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" /> - <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" /> Methode übermittelt, wenn die-Methode aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="3a523-134">Any state data that is passed to the <see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" /> method is saved by the change monitor and subsequently passed to the <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" /> method when the <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" /> method is invoked.</span></span>  
  
<span data-ttu-id="3a523-135">: Ein Änderungs Monitor muss die <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose(System.Boolean)" /> -Methode implementieren.</span><span class="sxs-lookup"><span data-stu-id="3a523-135">-   A change monitor must implement the <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose(System.Boolean)" /> method.</span></span> <span data-ttu-id="3a523-136">Weitere Informationen finden Sie in der Dokumentation zur <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose(System.Boolean)" />-Methode.</span><span class="sxs-lookup"><span data-stu-id="3a523-136">For more information, see the <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose(System.Boolean)" /> method documentation.</span></span>  
  
<span data-ttu-id="3a523-137">-Die <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" /> -Methoden Überladung muss aufgerufen werden, um <see cref="T:System.Runtime.Caching.ChangeMonitor" /> die-Instanz zu verwerfen.</span><span class="sxs-lookup"><span data-stu-id="3a523-137">-   The <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" /> method overload must be called to dispose of the <see cref="T:System.Runtime.Caching.ChangeMonitor" /> instance.</span></span> <span data-ttu-id="3a523-138">Die Regeln zum Aufrufen von "verwerfen" lauten wie folgt:</span><span class="sxs-lookup"><span data-stu-id="3a523-138">The rules for calling Dispose are as follows:</span></span> 
<span data-ttu-id="3a523-139">-Bevor ein Element in den Cache eingefügt wird, liegt es in der Verantwortung des Aufrufers, <see cref="T:System.Runtime.Caching.ChangeMonitor" /> eine-Instanz zu verwerfen.</span><span class="sxs-lookup"><span data-stu-id="3a523-139">-   Before an item is inserted into the cache, it is the responsibility of caller to dispose of a <see cref="T:System.Runtime.Caching.ChangeMonitor" /> instance.</span></span>  
  
<span data-ttu-id="3a523-140">-Sobald das Cache Element und <see cref="T:System.Runtime.Caching.ChangeMonitor" /> die ihm zugeordneten Instanzen an einen Cache übermittelt werden, muss der cacheimplementierer sicherstellen <see cref="Overload:System.Runtime.Caching.ChangeMonitor.Dispose" /> , dass die Methode aufgerufen wird, auch wenn die Einfügung fehlschlägt.</span><span class="sxs-lookup"><span data-stu-id="3a523-140">-   Once cache item and the <see cref="T:System.Runtime.Caching.ChangeMonitor" /> instances that are associated with it are passed to a cache, the cache implementer must make sure that the <see cref="Overload:System.Runtime.Caching.ChangeMonitor.Dispose" /> method is called, even if the insert fails.</span></span>  
  
<span data-ttu-id="3a523-141">-Nachdem ein Element und die zugehörigen <see cref="T:System.Runtime.Caching.ChangeMonitor" /> Instanzen an einen Cache übergeben wurden, darf der Aufrufer die Abhängigkeit nicht verwerfen, <see cref="Overload:System.Runtime.Caching.ChangeMonitor.Dispose" /> da der Aufruf beim Aufrufen der Methode so behandelt wird, als ob sich die Abhängigkeit geändert hat.</span><span class="sxs-lookup"><span data-stu-id="3a523-141">-   After an item and its associated <see cref="T:System.Runtime.Caching.ChangeMonitor" /> instances are passed to a cache, the caller must not dispose the dependency because when the <see cref="Overload:System.Runtime.Caching.ChangeMonitor.Dispose" /> method is called, the call is treated as if the dependency has changed.</span></span> <span data-ttu-id="3a523-142">Folglich wird die <see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" /> Methode automatisch aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="3a523-142">As a result, the <see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" /> method is automatically invoked.</span></span>  
  
<span data-ttu-id="3a523-143">Wenn diese Regeln berücksichtigt werden, muss die <see cref="Overload:System.Runtime.Caching.ChangeMonitor.Dispose" /> -Methode auf eine der folgenden Weisen aufgerufen werden:</span><span class="sxs-lookup"><span data-stu-id="3a523-143">-   Taking these rules into consideration, the <see cref="Overload:System.Runtime.Caching.ChangeMonitor.Dispose" /> method must be called in one of the following ways:</span></span> 
<span data-ttu-id="3a523-144">-Benutzer müssen die <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" /> -Methoden Überladung aufrufen, wenn Sie festlegen, dass die abgeleitete Change-Monitor-Instanz nicht in einen Cache eingefügt werden soll.</span><span class="sxs-lookup"><span data-stu-id="3a523-144">-   Users must call the <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" /> method overload if they decide not to insert the derived change-monitor instance into a cache.</span></span>  
  
<span data-ttu-id="3a523-145">Wenn die Implementierung versucht, die Change-Monitor-Instanz in einen Objekt Cache einzufügen, die Einfügung jedoch fehlschlägt, ist die Cache Implementierung für <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" /> das Aufrufen der Überladung verantwortlich.</span><span class="sxs-lookup"><span data-stu-id="3a523-145">-   If the implementation tries to insert the change-monitor instance into an object cache but the insertion fails, the cache implementation is responsible for calling the <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" /> overload.</span></span> <span data-ttu-id="3a523-146">Wenn beim Einfügeversuch eine Ausnahme ausgelöst wird, muss die Cache Implementierung alle zugeordneten Abhängigkeiten verwerfen.</span><span class="sxs-lookup"><span data-stu-id="3a523-146">When the insertion attempt causes an exception, the cache implementation must dispose of any associated dependencies.</span></span>  
  
<span data-ttu-id="3a523-147">-Wenn der Cache Eintrag entfernt wird, muss die Cache Implementierung auch die Abhängigkeit verwerfen.</span><span class="sxs-lookup"><span data-stu-id="3a523-147">-   If the cache entry is removed, the cache implementation must also dispose of the dependency.</span></span>  
  
<span data-ttu-id="3a523-148">-Die interne Implementierung der- <see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" /> Methode ruft die <see cref="Overload:System.Runtime.Caching.ChangeMonitor.Dispose" /> -Methode automatisch auf, nachdem Sie einen Rückruf aufgerufen hat <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" />, der über registriert wird.</span><span class="sxs-lookup"><span data-stu-id="3a523-148">-   The internal implementation of the <see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" /> method automatically calls the <see cref="Overload:System.Runtime.Caching.ChangeMonitor.Dispose" /> method after it calls a callback that is registered through <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" />.</span></span>  
  
 <block subset="none" type="note"><para>  
 <span data-ttu-id="3a523-149">Dieser automatische Rückruf der verwerfen-Methode während des auslösenden Ereignisses tritt nur auf, wenn die <see cref="T:System.Runtime.Caching.ChangeMonitor" /> Initialisierung der Instanz zuvor abgeschlossen wurde.</span><span class="sxs-lookup"><span data-stu-id="3a523-149">This automatic call to the dispose method during the event firing only occurs if the initialization of the <see cref="T:System.Runtime.Caching.ChangeMonitor" /> instance was previously completed.</span></span>  
  
</para></block>  
  
 <span data-ttu-id="3a523-150">Wenn der Konstruktor eines abgeleiteten Änderungs Monitors die <see cref="M:System.Runtime.Caching.ChangeMonitor.InitializationComplete" /> -Methode aufruft und sich der Status des Änderungs Monitors bereits geändert hat (d. h., der Status, der überwacht wird, wenn der Konstruktor noch aktiv war <see cref="M:System.Runtime.Caching.ChangeMonitor.InitializationComplete" /> ), wird die Methode der Änderungs Monitor wird automatisch verworfen.</span><span class="sxs-lookup"><span data-stu-id="3a523-150">When a derived change monitor's constructor calls the <see cref="M:System.Runtime.Caching.ChangeMonitor.InitializationComplete" /> method, if the state of the change monitor has already changed (that is, the state that is monitored already changed when the constructor was still active) then the <see cref="M:System.Runtime.Caching.ChangeMonitor.InitializationComplete" /> method will automatically dispose of the change monitor.</span></span>  
  
<span data-ttu-id="3a523-151">-Die <see cref="P:System.Runtime.Caching.ChangeMonitor.HasChanged" /> -Eigenschaft wird auf <see langword="true" /> festgelegt <see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" /> , nachdem die-Methode von der abgeleiteten Change-Monitor-Instanz aufgerufen <see cref="T:System.Runtime.Caching.OnChangedCallback" /> wurde, unabhängig davon, ob ein-Objekt <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" /> durch einen Aufruf der-Methode festgelegt wurde oder nicht.</span><span class="sxs-lookup"><span data-stu-id="3a523-151">-   The <see cref="P:System.Runtime.Caching.ChangeMonitor.HasChanged" /> property is set to <see langword="true" /> after the <see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" /> method is called by the derived change-monitor instance, regardless of whether a <see cref="T:System.Runtime.Caching.OnChangedCallback" /> object has been set by a call to the <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" /> method or not.</span></span></para></block>
    <altmember cref="N:System.Web.Caching" />
    <altmember cref="T:System.Runtime.Caching.ObjectCache" />
    <related type="Article" href="https://msdn.microsoft.com/library/ac11c8ea-df5d-4de8-b315-9ccf1048b0ce"><span data-ttu-id="3a523-152">ASP.NET Caching</span><span class="sxs-lookup"><span data-stu-id="3a523-152">ASP.NET Caching</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ChangeMonitor ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ChangeMonitor.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ChangeMonitor();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3a523-153">Initialisiert eine neue Instanz der <see cref="T:System.Runtime.Caching.ChangeMonitor" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="3a523-153">Initializes a new instance of the <see cref="T:System.Runtime.Caching.ChangeMonitor" /> class.</span></span> <span data-ttu-id="3a523-154">Dieser Konstruktor wird von Konstruktoren in abgeleiteten Klassen aufgerufen, um die Basisklasse zu initialisieren.</span><span class="sxs-lookup"><span data-stu-id="3a523-154">This constructor is called from constructors in derived classes to initialize the base class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a523-155">Die <xref:System.Runtime.Caching.ChangeMonitor> -Klasse verfügt über einen Parameter losen Konstruktor.</span><span class="sxs-lookup"><span data-stu-id="3a523-155">The <xref:System.Runtime.Caching.ChangeMonitor> class has a parameterless constructor.</span></span> <span data-ttu-id="3a523-156">Allerdings müssen Klassen, die von der <xref:System.Runtime.Caching.ChangeMonitor> Basisklasse erben und das benutzerdefinierte Verhalten der Änderungs Überwachung definieren, im Konstruktor eine Initialisierung ausführen.</span><span class="sxs-lookup"><span data-stu-id="3a523-156">However, classes that inherit from the base <xref:System.Runtime.Caching.ChangeMonitor> class and define custom change-monitoring behavior must perform initialization in the constructor.</span></span> <span data-ttu-id="3a523-157">Weitere Informationen finden Sie im Abschnitt Hinweise für Vererbung.</span><span class="sxs-lookup"><span data-stu-id="3a523-157">For more information, see the Notes for Inheritors section.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="3a523-158">Der Konstruktor einer abgeleiteten Klasse muss die <see cref="P:System.Runtime.Caching.ChangeMonitor.UniqueId" /> -Eigenschaft festlegen, die Überwachung starten und die-Klasse vor der <see cref="M:System.Runtime.Caching.ChangeMonitor.InitializationComplete" /> Rückgabe aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="3a523-158">The constructor of a derived class must set the <see cref="P:System.Runtime.Caching.ChangeMonitor.UniqueId" /> property, begin monitoring, and call the <see cref="M:System.Runtime.Caching.ChangeMonitor.InitializationComplete" /> class before it returns.</span></span> <span data-ttu-id="3a523-159">Wenn sich eine Abhängigkeit ändert, bevor die Initialisierung beendet ist (z. b. Wenn ein abhängiger Cache Schlüssel nicht im Cache gefunden wurde), muss der <see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" /> Konstruktor die-Methode <see cref="M:System.Runtime.Caching.ChangeMonitor.InitializationComplete" /> aufrufen, bevor die-Methode aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="3a523-159">If a dependency changes before initialization is complete (for example, if a dependent cache key is not found in the cache), the constructor must call the <see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" /> method before it calls the <see cref="M:System.Runtime.Caching.ChangeMonitor.InitializationComplete" /> method.</span></span> <span data-ttu-id="3a523-160">In diesem Fall kann der Konstruktor die <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" /> -Methode erst aufrufen, nachdem die <see cref="M:System.Runtime.Caching.ChangeMonitor.InitializationComplete" /> -Methode aufgerufen wurde <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" /> , da die-Methode eine Ausnahme auslöst, wenn die Initialisierung nicht abgeschlossen ist.</span><span class="sxs-lookup"><span data-stu-id="3a523-160">In this case, constructor can call the <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" /> method only after the <see cref="M:System.Runtime.Caching.ChangeMonitor.InitializationComplete" /> method is called, because the <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" /> method throws an exception if initialization is not completed.</span></span></para></block>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3a523-161">Gibt alle von der aktuellen Instanz der <see cref="T:System.Runtime.Caching.ChangeMonitor" />-Klasse verwendeten Ressourcen frei.</span><span class="sxs-lookup"><span data-stu-id="3a523-161">Releases all resources used by the current instance of the <see cref="T:System.Runtime.Caching.ChangeMonitor" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a523-162">Die <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> -Methode wird verwendet, um <xref:System.Runtime.Caching.ChangeMonitor> die Instanz und zugehörige Ressourcen freizugeben.</span><span class="sxs-lookup"><span data-stu-id="3a523-162">The <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> method is used to release the <xref:System.Runtime.Caching.ChangeMonitor> instance and related resources.</span></span> <span data-ttu-id="3a523-163">Die öffentliche <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> -Methode wird aufgerufen, um den Entsorgungsprozess mit Schlüssel Lebenszyklus-Ereignissen abgeleiteter Änderungs Monitor Klassen (z. b. der Initialisierung) zu <xref:System.Runtime.Caching.ChangeMonitor> koordinieren und die Instanz freizugeben, damit die Instanz in die Garbage Collection aufgenommen werden kann.</span><span class="sxs-lookup"><span data-stu-id="3a523-163">The public <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> method is invoked to coordinate the disposal process with key life-cycle events of derived change-monitor classes (such as initialization), and to release the <xref:System.Runtime.Caching.ChangeMonitor> instance so that the instance can be garbage collected.</span></span> <span data-ttu-id="3a523-164">Die <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> -Methode wird von abgeleiteten Change-Monitor-Klassen implementiert, um deren verwaltete und nicht verwaltete Ressourcen freizugeben.</span><span class="sxs-lookup"><span data-stu-id="3a523-164">The <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> method is implemented by derived change-monitor classes to dispose of their managed and unmanaged resources.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ChangeMonitor.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="changeMonitor.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3a523-165">Gibt alle von der aktuellen Instanz der <see cref="T:System.Runtime.Caching.ChangeMonitor" />-Klasse verwendeten Ressourcen frei.</span><span class="sxs-lookup"><span data-stu-id="3a523-165">Releases all resources that are used by the current instance of the <see cref="T:System.Runtime.Caching.ChangeMonitor" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a523-166"><xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> Die- <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> Methode ruft die-Methode der abgeleiteten Klassen nur einmal auf, wenn Sie zum ersten Mal aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="3a523-166">The <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> method invokes the <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> method of derived classes only one time, the first time it is called.</span></span> <span data-ttu-id="3a523-167">Nachfolgende Aufrufe der <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> -Methode haben keine Auswirkung.</span><span class="sxs-lookup"><span data-stu-id="3a523-167">Subsequent calls to the <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> method have no effect.</span></span> <span data-ttu-id="3a523-168">Nachdem die-Methode aufgerufen wurde, wird <xref:System.Runtime.Caching.ChangeMonitor.IsDisposed%2A> die-Eigenschaft auf `true`festgelegt.</span><span class="sxs-lookup"><span data-stu-id="3a523-168">After the method has been called, the <xref:System.Runtime.Caching.ChangeMonitor.IsDisposed%2A> property is set to `true`.</span></span>  
  
 <span data-ttu-id="3a523-169">Die <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> -Überladung muss aufgerufen werden, um <xref:System.Runtime.Caching.ChangeMonitor> eine-Instanz zu verwerfen.</span><span class="sxs-lookup"><span data-stu-id="3a523-169">The <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> overload must be called to dispose of a <xref:System.Runtime.Caching.ChangeMonitor> instance.</span></span> <span data-ttu-id="3a523-170">Im folgenden sind die Regeln zum Aufrufen der verwerfen-Methode aufgeführt:</span><span class="sxs-lookup"><span data-stu-id="3a523-170">The following are the rules for calling the dispose method:</span></span>  
  
-   <span data-ttu-id="3a523-171">Bevor ein Element in den Cache eingefügt wird, liegt es in der Verantwortung des Aufrufers, <xref:System.Runtime.Caching.ChangeMonitor> eine-Instanz zu verwerfen.</span><span class="sxs-lookup"><span data-stu-id="3a523-171">Before an item is inserted into the cache, it is the caller's responsibility to dispose of a <xref:System.Runtime.Caching.ChangeMonitor> instance.</span></span>  
  
-   <span data-ttu-id="3a523-172">Nachdem das Cache Element und <xref:System.Runtime.Caching.ChangeMonitor> die zugeordneten Instanzen an einen Cache weitergegeben wurden, muss der cacheimplementierer <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> sicherstellen, dass aufgerufen wird, auch wenn die Einfügung fehlschlägt.</span><span class="sxs-lookup"><span data-stu-id="3a523-172">Once cache item and the <xref:System.Runtime.Caching.ChangeMonitor> instances that are associated with it are passed to a cache, the cache implementer that must make sure that <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> is called, even if the insert fails.</span></span>  
  
-   <span data-ttu-id="3a523-173">Nachdem ein Element und die zugehörigen <xref:System.Runtime.Caching.ChangeMonitor> Instanzen an einen Cache übergeben wurden, darf der Aufrufer die Abhängigkeit nicht verwerfen, <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> da der Aufruf beim Aufruf der-Methode behandelt wird, als ob sich die Abhängigkeit geändert hat.</span><span class="sxs-lookup"><span data-stu-id="3a523-173">After an item and its associated <xref:System.Runtime.Caching.ChangeMonitor> instances are passed to a cache, the caller must not dispose the dependency because when the <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> method is called, the call is treated as if the dependency has changed.</span></span> <span data-ttu-id="3a523-174">Folglich wird die <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> Methode automatisch aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="3a523-174">As a result, the <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> method is automatically invoked.</span></span>  
  
-   <span data-ttu-id="3a523-175">Wenn diese Regeln berücksichtigt werden, muss <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> die-Methode auf eine der folgenden Weisen aufgerufen werden:</span><span class="sxs-lookup"><span data-stu-id="3a523-175">Taking these rules into consideration, the <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> method must be called in one of the following ways:</span></span>  
  
    -   <span data-ttu-id="3a523-176">Benutzer müssen die <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> -Methoden Überladung aufrufen, wenn Sie sich entschließen, die abgeleitete Change-Monitor-Instanz nicht in einen Cache einzufügen.</span><span class="sxs-lookup"><span data-stu-id="3a523-176">Users must call the <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> method overload if they decide not to insert the derived change-monitor instance into a cache.</span></span>  
  
    -   <span data-ttu-id="3a523-177">Die Cache Implementierung ist für das Aufrufen der <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> -Überladung zuständig, wenn die Implementierung versucht, die Change-Monitor-Instanz in einen Objekt Cache einzufügen, aber die Einfügung schlägt fehl.</span><span class="sxs-lookup"><span data-stu-id="3a523-177">The cache implementation is responsible for calling the <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> overload if the implementation tries to insert the change-monitor instance into an object cache but the insertion fails.</span></span> <span data-ttu-id="3a523-178">Wenn der Einfügeversuch eine Ausnahme verursacht, muss die Cache Implementierung alle zugeordneten Abhängigkeiten verwerfen.</span><span class="sxs-lookup"><span data-stu-id="3a523-178">When the insertion attempt causes an exception, the cache implementation must dispose any associated dependencies.</span></span>  
  
    -   <span data-ttu-id="3a523-179">Wenn der Cache Eintrag entfernt wird, muss die Cache Implementierung auch die Abhängigkeit verwerfen.</span><span class="sxs-lookup"><span data-stu-id="3a523-179">If the cache entry is removed, the cache implementation must also dispose the dependency.</span></span>  
  
 <span data-ttu-id="3a523-180">Die interne Implementierung der- <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> Methode ruft die <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> -Methode automatisch auf, nachdem Sie einen Rückruf aufgerufen hat, <xref:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged%2A> der über die-Methode registriert wird.</span><span class="sxs-lookup"><span data-stu-id="3a523-180">The internal implementation of the <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> method automatically calls the <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> method after it calls a callback that is registered through the <xref:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3a523-181">Diese automatische Löschung während des auslösenden Ereignisses tritt nur auf, wenn die <xref:System.Runtime.Caching.ChangeMonitor> Initialisierung der-Instanz zuvor abgeschlossen wurde.</span><span class="sxs-lookup"><span data-stu-id="3a523-181">This automatic dispose during the event firing only occurs if the initialization of the <xref:System.Runtime.Caching.ChangeMonitor> instance previously completed.</span></span>  
  
 <span data-ttu-id="3a523-182">Wenn der Konstruktor eines abgeleiteten Änderungs Monitors die <xref:System.Runtime.Caching.ChangeMonitor.InitializationComplete%2A> -Methode aufruft und sich der Status des Änderungs Monitors bereits geändert hat (d. h., der Status, der überwacht wird, wenn der Konstruktor noch aktiv war <xref:System.Runtime.Caching.ChangeMonitor.InitializationComplete%2A> ), wird die Methode Löschen Sie den Änderungs Monitor automatisch.</span><span class="sxs-lookup"><span data-stu-id="3a523-182">When a derived change monitor's constructor calls the <xref:System.Runtime.Caching.ChangeMonitor.InitializationComplete%2A> method, if the state of the change monitor has already changed (that is, the state that is monitored has already changed when the constructor was still active) then <xref:System.Runtime.Caching.ChangeMonitor.InitializationComplete%2A> method will automatically dispose the change monitor.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3a523-183">Benutzer sollten die <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> -Methode nicht aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="3a523-183">Users should not call the <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> method.</span></span> <span data-ttu-id="3a523-184">Sie können jedoch nicht verhindern, dass Benutzer die-Methode aufrufen.</span><span class="sxs-lookup"><span data-stu-id="3a523-184">However, you cannot prevent users from calling the method.</span></span> <span data-ttu-id="3a523-185">Wenn dies der Fall ist, wird <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> die-Methode aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="3a523-185">Therefore, if they do, the <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> method is invoked.</span></span> <span data-ttu-id="3a523-186">In diesem Fall wird der Cache Eintrag benachrichtigt, als ob sich die Abhängigkeit geändert hat.</span><span class="sxs-lookup"><span data-stu-id="3a523-186">In that case, the cache entry is notified as if the dependency has changed.</span></span>  
  
 <span data-ttu-id="3a523-187">Um zu verhindern, dass abgeleitete Klassen <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> die-Methode überschreiben, ist die-Methode keine explizite Schnittstellen Implementierung.</span><span class="sxs-lookup"><span data-stu-id="3a523-187">To prevent derived classes from overriding <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> method, the method is not an explicit interface implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3a523-188">Die Initialisierung ist in der abgeleiteten Änderungsüberwachungsklasse nicht vollständig, die die <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" />-Basismethode aufrief.</span><span class="sxs-lookup"><span data-stu-id="3a523-188">Initialization is not complete in the derived change-monitor class that called the base <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" /> method.</span></span></exception>
        <altmember cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected abstract void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ChangeMonitor.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit" Usage="changeMonitor.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="3a523-189"><see langword="true" />, um verwaltete und nicht verwaltete Ressourcen sowie Verweise auf eine <see cref="T:System.Runtime.Caching.ChangeMonitor" />-Instanz freizugeben, <see langword="false" />, um nur nicht verwaltete Ressourcen freizugeben.</span><span class="sxs-lookup"><span data-stu-id="3a523-189"><see langword="true" /> to release managed and unmanaged resources and any references to a <see cref="T:System.Runtime.Caching.ChangeMonitor" /> instance; <see langword="false" /> to release only unmanaged resources.</span></span> <span data-ttu-id="3a523-190">Wenn <see langword="false" /> übergeben wird, wird die <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose(System.Boolean)" />-Methode von einem <see langword="finalizer" />-Thread aufgerufen, und alle externen verwalteten Verweise sind wahrscheinlich nicht mehr gültig, da sie bereits von der Garbage Collection freigegeben wurden.</span><span class="sxs-lookup"><span data-stu-id="3a523-190">When <see langword="false" /> is passed, the <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose(System.Boolean)" /> method is called by a <see langword="finalizer" /> thread and any external managed references are likely no longer valid because they have already been garbage collected.</span></span></param>
        <summary><span data-ttu-id="3a523-191">Gibt alle verwalteten und nicht verwalteten Ressourcen und alle Verweise auf die <see cref="T:System.Runtime.Caching.ChangeMonitor" />-Instanz frei.</span><span class="sxs-lookup"><span data-stu-id="3a523-191">Releases all managed and unmanaged resources and any references to the <see cref="T:System.Runtime.Caching.ChangeMonitor" /> instance.</span></span> <span data-ttu-id="3a523-192">Diese Überladung muss von abgeleiteten Änderungsüberwachungsklassen implementiert werden.</span><span class="sxs-lookup"><span data-stu-id="3a523-192">This overload must be implemented by derived change-monitor classes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a523-193">Wenn der Wert von `disposing` Value lautet `true`, werden alle verwalteten und nicht verwalteten Ressourcen verworfen, und alle Verweise auf dieses Objekt werden freigegeben, sodass die abgeleitete Change-Monitor-Instanz in die Garbage Collection aufgenommen werden kann.</span><span class="sxs-lookup"><span data-stu-id="3a523-193">When the value of `disposing` value is `true`, all managed and unmanaged resources are disposed and any references to this object are released so that the derived change-monitor instance can be garbage collected.</span></span> <span data-ttu-id="3a523-194">Es ist sichergestellt, dass <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> die Basis Methode die implementierte <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> Methode nur einmal aufruft.</span><span class="sxs-lookup"><span data-stu-id="3a523-194">It is guaranteed that the base <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> method will invoke the implemented <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> method only one time.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="3a523-195">Ein Änderungs Monitor muss die <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose(System.Boolean)" /> -Überladung implementieren, um alle verwalteten und nicht verwalteten Ressourcen freizugeben, wenn der Wert von <paramref name="disposing" /> ist <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="3a523-195">A change monitor must implement the <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose(System.Boolean)" /> overload to release all managed and unmanaged resources when the value of <paramref name="disposing" /> is <see langword="true" />.</span></span> <span data-ttu-id="3a523-196">Die <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose(System.Boolean)" /> -Methoden Überladung, <paramref name="disposing" /> die den <see langword="true" /> Wert hat, wird nur einmal aufgerufen, d. h., wenn die Instanz zum ersten Mal verworfen wird.</span><span class="sxs-lookup"><span data-stu-id="3a523-196">The <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose(System.Boolean)" /> method overload that has a <paramref name="disposing" /> value of <see langword="true" /> is called only one time, namely, when the instance is disposed for the first time.</span></span> <span data-ttu-id="3a523-197">Ein Änderungs Monitor darf die <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose(System.Boolean)" /> -Überladung nicht direkt aufrufen.</span><span class="sxs-lookup"><span data-stu-id="3a523-197">A change monitor must not call the <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose(System.Boolean)" /> overload directly.</span></span> <span data-ttu-id="3a523-198">Ein abgeleiteter Änderungs Monitor kann die Methode "Public <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" /> " ohne Parameter für <see cref="T:System.Runtime.Caching.ChangeMonitor" /> die Basisklasse aufrufen.</span><span class="sxs-lookup"><span data-stu-id="3a523-198">A derived change monitor can call the public parameter-less <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" /> method on the base <see cref="T:System.Runtime.Caching.ChangeMonitor" /> class.</span></span>  
  
<span data-ttu-id="3a523-199">Alternativ kann ein Änderungs Monitor eine Finalizer-Methode implementieren.</span><span class="sxs-lookup"><span data-stu-id="3a523-199">Alternatively, a change monitor can implement a finalizer method.</span></span> <span data-ttu-id="3a523-200">In diesem Fall kann der Finalizer die Methode aufrufen <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose(System.Boolean)" /> und <paramref name="disposing" /> ihm den Wert <see langword="false" />übergeben.</span><span class="sxs-lookup"><span data-stu-id="3a523-200">In that case, the finalizer can invoke the <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose(System.Boolean)" /> method and pass it a <paramref name="disposing" /> value of <see langword="false" />.</span></span> <span data-ttu-id="3a523-201">Dies ist jedoch in der Regel unnötig.</span><span class="sxs-lookup"><span data-stu-id="3a523-201">However, this is usually unnecessary.</span></span> <span data-ttu-id="3a523-202">Die Überwachung von Abhängigkeitsänderungen erfolgt in der Regel von einem Dienst, der einen Verweis auf die Change-Monitor-Instanz verwaltet.</span><span class="sxs-lookup"><span data-stu-id="3a523-202">Monitoring for dependency changes is typically performed by a service that maintains a reference to the change-monitor instance.</span></span> <span data-ttu-id="3a523-203">Durch den Verweis wird verhindert, dass die Instanz in die Garbage Collection aufgenommen wird. Daher ist eine Finalizer-Methode unnötig.</span><span class="sxs-lookup"><span data-stu-id="3a523-203">The reference prevents the instance from being garbage collected, and therefore makes a finalizer method unnecessary.</span></span> <span data-ttu-id="3a523-204">Um Speicher Verluste zu vermeiden, gibt die-Methode die <see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" /> Change-Monitor-Instanz frei, wenn eine Abhängigkeit geändert wird (es sei denn, die Initialisierung wurde nicht abgeschlossen).</span><span class="sxs-lookup"><span data-stu-id="3a523-204">To avoid memory leaks, when a dependency changes, the <see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" /> method disposes the change-monitor instance (unless initialization has not finished).</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="HasChanged">
      <MemberSignature Language="C#" Value="public bool HasChanged { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasChanged" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Caching.ChangeMonitor.HasChanged" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasChanged As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasChanged { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasChanged : bool" Usage="System.Runtime.Caching.ChangeMonitor.HasChanged" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3a523-205">Ruft einen Wert ab, der angibt, dass der von der <see cref="T:System.Runtime.Caching.ChangeMonitor" />-Klasse überwachte Zustand geändert wurde.</span><span class="sxs-lookup"><span data-stu-id="3a523-205">Gets a value that indicates that the state that is monitored by the <see cref="T:System.Runtime.Caching.ChangeMonitor" /> class has changed.</span></span></summary>
        <value><span data-ttu-id="3a523-206"><see langword="true" />, wenn der von der <see cref="T:System.Runtime.Caching.ChangeMonitor" />-Instanz überwachte Zustand geändert wurde, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="3a523-206"><see langword="true" /> if the state that is monitored by the <see cref="T:System.Runtime.Caching.ChangeMonitor" /> instance has changed; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a523-207">Sie können den Wert dieser Eigenschaft in einer abgeleiteten <xref:System.Runtime.Caching.ChangeMonitor> Klasse überprüfen, um festzustellen, ob sich eine Abhängigkeit geändert hat.</span><span class="sxs-lookup"><span data-stu-id="3a523-207">You can check the value of this property in a derived <xref:System.Runtime.Caching.ChangeMonitor> class to see whether a dependency has changed.</span></span>  
  
 <span data-ttu-id="3a523-208">Der Wert wird auf `true` festgelegt, wenn eine Abhängigkeits Änderung auftritt (d. h., wenn die <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> -Methode aufgerufen wird).</span><span class="sxs-lookup"><span data-stu-id="3a523-208">The value is set to `true` when a dependency change occurs (that is, when the <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> method is called).</span></span> <span data-ttu-id="3a523-209">Nachdem die <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> -Methode von der abgeleiteten Klasse aufgerufen wurde, ist der <xref:System.Runtime.Caching.ChangeMonitor.HasChanged%2A> Wert der- `true`Eigenschaft, unabhängig davon, <xref:System.Runtime.Caching.OnChangedCallback> ob eine-Instanz durch einen Aufruf der <xref:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged%2A> -Methode benachrichtigt wurde.</span><span class="sxs-lookup"><span data-stu-id="3a523-209">After the <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> method is called by the derived class, the value of the <xref:System.Runtime.Caching.ChangeMonitor.HasChanged%2A> property will be `true`, regardless of whether a <xref:System.Runtime.Caching.OnChangedCallback> instance has been notified by a call to the <xref:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3a523-210">Aufrufer können <xref:System.Runtime.Caching.ChangeMonitor.HasChanged%2A> die Eigenschaft überprüfen, um festzustellen, ob sich eine Abhängigkeit geändert hat</span><span class="sxs-lookup"><span data-stu-id="3a523-210">Callers can check the <xref:System.Runtime.Caching.ChangeMonitor.HasChanged%2A> property to see whether a dependency has changed.</span></span> <span data-ttu-id="3a523-211">In einer Multithread-Umgebung ist es jedoch einfacher und besser verwaltbar, Daten in eine Cache Implementierung einzufügen, ohne die <xref:System.Runtime.Caching.ChangeMonitor.HasChanged%2A> -Eigenschaft zu überprüfen.</span><span class="sxs-lookup"><span data-stu-id="3a523-211">However, in a multi-threaded environment, a simpler and more maintainable approach is to insert data into a cache implementation without checking the <xref:System.Runtime.Caching.ChangeMonitor.HasChanged%2A> property.</span></span> <span data-ttu-id="3a523-212">Cache Implementierungen müssen die <xref:System.Runtime.Caching.ChangeMonitor.HasChanged%2A> -Eigenschaft für Sie überprüfen und dürfen keinen INSERT-oder Set-Vorgang ausführen, wenn mindestens eine zugeordnete Abhängigkeit bereits geändert wurde.</span><span class="sxs-lookup"><span data-stu-id="3a523-212">Cache implementations must check the <xref:System.Runtime.Caching.ChangeMonitor.HasChanged%2A> property for you and must not perform an insert or set operation if one or more associated dependencies have already changed.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" />
        <altmember cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="InitializationComplete">
      <MemberSignature Language="C#" Value="protected void InitializationComplete ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void InitializationComplete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ChangeMonitor.InitializationComplete" />
      <MemberSignature Language="VB.NET" Value="Protected Sub InitializationComplete ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void InitializationComplete();" />
      <MemberSignature Language="F#" Value="member this.InitializationComplete : unit -&gt; unit" Usage="changeMonitor.InitializationComplete " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3a523-213">Wird vom Konstruktor abgeleiteter Klassen aufgerufen, um anzugeben, dass die Initialisierung abgeschlossen ist.</span><span class="sxs-lookup"><span data-stu-id="3a523-213">Called from the constructor of derived classes to indicate that initialization is finished.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a523-214">Wenn eine Abhängigkeit geändert wird, bevor die Initialisierung in einer abgeleiteten Klasse ausgeführt wird, muss der Konstruktor der abgeleiteten Klasse die <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> Methode aufrufen.</span><span class="sxs-lookup"><span data-stu-id="3a523-214">If a dependency changes before initialization is complete in a derived class, the constructor of the derived class must invoke the <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> method.</span></span>  
  
 <span data-ttu-id="3a523-215">Wenn die <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> -Methode aufgerufen wird, <xref:System.Runtime.Caching.ChangeMonitor.HasChanged%2A> wird die-Eigenschaft automatisch `true` vom Änderungs Monitor auf festgelegt.</span><span class="sxs-lookup"><span data-stu-id="3a523-215">When the <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> method is invoked, the <xref:System.Runtime.Caching.ChangeMonitor.HasChanged%2A> property is automatically set to `true` by the change monitor.</span></span> <span data-ttu-id="3a523-216">Wenn der Konstruktor des Änderungs Monitors die <xref:System.Runtime.Caching.ChangeMonitor.InitializationComplete%2A> -Methode aufruft, wird die- <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> Methode von der-Basisklasse automatisch aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="3a523-216">As a result, when the change monitor's constructor calls the <xref:System.Runtime.Caching.ChangeMonitor.InitializationComplete%2A> method, the base class will automatically call the <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> method.</span></span> <span data-ttu-id="3a523-217">Wenn die Initialisierung beendet ist, <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> gibt die Methode automatisch die abgeleitete Change-Monitor-Instanz frei.</span><span class="sxs-lookup"><span data-stu-id="3a523-217">If initialization is complete, the <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> method automatically disposes the derived change-monitor instance.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="3a523-218">Der Konstruktor einer abgeleiteten Klasse muss die Basis <see cref="M:System.Runtime.Caching.ChangeMonitor.InitializationComplete" /> Methode vor der Rückgabe des Konstruktors aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="3a523-218">The constructor of a derived class must call the base <see cref="M:System.Runtime.Caching.ChangeMonitor.InitializationComplete" /> method before the constructor returns.</span></span> <span data-ttu-id="3a523-219">Der Konstruktor einer abgeleiteten Klasse kann die <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" /> -Methode erst aufrufen, nachdem <see cref="M:System.Runtime.Caching.ChangeMonitor.InitializationComplete" /> aufgerufen wurde, <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" /> da die-Methode eine Ausnahme auslöst, wenn die Initialisierung nicht abgeschlossen ist.</span><span class="sxs-lookup"><span data-stu-id="3a523-219">The constructor of a derived class can call the <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" /> method only after <see cref="M:System.Runtime.Caching.ChangeMonitor.InitializationComplete" /> is called, because the <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" /> method throws an exception if initialization is not completed.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="IsDisposed">
      <MemberSignature Language="C#" Value="public bool IsDisposed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDisposed" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Caching.ChangeMonitor.IsDisposed" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDisposed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDisposed { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDisposed : bool" Usage="System.Runtime.Caching.ChangeMonitor.IsDisposed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3a523-220">Ruft einen Wert ab, der angibt, dass die abgeleitete Instanz einer <see cref="T:System.Runtime.Caching.ChangeMonitor" />-Klasse freigegeben wird.</span><span class="sxs-lookup"><span data-stu-id="3a523-220">Gets a value that indicates that the derived instance of a <see cref="T:System.Runtime.Caching.ChangeMonitor" /> class is disposed.</span></span></summary>
        <value><span data-ttu-id="3a523-221"><see langword="true" />, wenn die Instanz freigegeben wird, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="3a523-221"><see langword="true" /> if the instance is disposed; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a523-222">Die-Eigenschaft wird auf `true` festgelegt, <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> nachdem die Basis <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> Methode die-Methode in einer abgeleiteten Klasse aufgerufen hat, um die Instanz zu verwerfen.</span><span class="sxs-lookup"><span data-stu-id="3a523-222">The property is set to `true` after the base <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> method calls the <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> method in a derived class to dispose of the instance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NotifyOnChanged">
      <MemberSignature Language="C#" Value="public void NotifyOnChanged (System.Runtime.Caching.OnChangedCallback onChangedCallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void NotifyOnChanged(class System.Runtime.Caching.OnChangedCallback onChangedCallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void NotifyOnChanged(System::Runtime::Caching::OnChangedCallback ^ onChangedCallback);" />
      <MemberSignature Language="F#" Value="member this.NotifyOnChanged : System.Runtime.Caching.OnChangedCallback -&gt; unit" Usage="changeMonitor.NotifyOnChanged onChangedCallback" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="onChangedCallback" Type="System.Runtime.Caching.OnChangedCallback" />
      </Parameters>
      <Docs>
        <param name="onChangedCallback"><span data-ttu-id="3a523-223">Ein Verweis auf eine Methode, die aufgerufen wird, wenn eine Abhängigkeit geändert wurde.</span><span class="sxs-lookup"><span data-stu-id="3a523-223">A reference to a method that is invoked when a dependency has changed.</span></span></param>
        <summary><span data-ttu-id="3a523-224">Wird von Cacheimplementierungen aufgerufen, um einen Rückruf zu registrieren und über den <see cref="T:System.Runtime.Caching.ObjectCache" />-Delegaten eine <see cref="T:System.Runtime.Caching.OnChangedCallback" />-Instanz zu benachrichtigen, wenn sich eine Abhängigkeit geändert hat.</span><span class="sxs-lookup"><span data-stu-id="3a523-224">Called by Cache implementers to register a callback and notify an <see cref="T:System.Runtime.Caching.ObjectCache" /> instance through the <see cref="T:System.Runtime.Caching.OnChangedCallback" /> delegate when a dependency has changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a523-225">Cacheimplementierer verwenden diese Methode, um sich mit einem Änderungs Monitor zu verknüpfen.</span><span class="sxs-lookup"><span data-stu-id="3a523-225">Cache implementers use this method to wire themselves up to a change monitor.</span></span> <span data-ttu-id="3a523-226">Wenn Sie dem Cache Element mindestens einen Änderungs Monitor zuordnen, übergeben Sie eine <xref:System.Runtime.Caching.CacheItemPolicy> -Instanz mit einer aufgefüllten Change Monitors-Eigenschaft an das Cache Element.</span><span class="sxs-lookup"><span data-stu-id="3a523-226">If you associate one or more change monitors with the cache item, you pass a <xref:System.Runtime.Caching.CacheItemPolicy> instance with a populated change monitors property to the cache item.</span></span> <span data-ttu-id="3a523-227">Ein cacheimplementierer, der Änderungs Monitore unterstützt, ist dafür <xref:System.Runtime.Caching.CacheItemPolicy.ChangeMonitors%2A> verantwortlich, die Eigenschaft <xref:System.Runtime.Caching.OnChangedCallback> zu durchlaufen und die Delegaten bei jedem gefundenen Änderungs Monitor zu registrieren.</span><span class="sxs-lookup"><span data-stu-id="3a523-227">A cache implementer that supports change monitors is responsible for iterating over the <xref:System.Runtime.Caching.CacheItemPolicy.ChangeMonitors%2A> property and register the <xref:System.Runtime.Caching.OnChangedCallback> delegates with each change monitor that it finds.</span></span>  
  
 <span data-ttu-id="3a523-228">Da der <xref:System.Runtime.Caching.OnChangedCallback> Delegat einen optionalen State-Parameter enthält, kann eine konkrete Änderungs Monitor Implementierung optionale Zustandsinformationen übergeben.</span><span class="sxs-lookup"><span data-stu-id="3a523-228">Because the <xref:System.Runtime.Caching.OnChangedCallback> delegate includes an optional state parameter, a concrete change monitor implementation can pass optional state information.</span></span> <span data-ttu-id="3a523-229">Der cacheimplementierer bestimmt, ob eine explizite Abhängigkeit vom Typ des Zustands, den ein benutzerdefinierter Änderungs Monitor als Teil des Rückrufs übergibt, angenommen werden kann.</span><span class="sxs-lookup"><span data-stu-id="3a523-229">The cache implementer determines whether an explicit dependency on the type of state that a custom change monitor passes as part of the callback can be taken.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3a523-230">Die Basis Cache-Erweiterbarkeits-API erfordert keine explizite Abhängigkeit vom Typ des Zustands.</span><span class="sxs-lookup"><span data-stu-id="3a523-230">The base cache extensibility API has no requirement for explicit dependency on the type of state.</span></span>  
  
 <span data-ttu-id="3a523-231">Die Implementierung <xref:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged%2A> der-Methode bestimmt automatisch, ob sich der Status des Monitors bereits geändert hat, wenn <xref:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged%2A> die Methode aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="3a523-231">The implementation of the <xref:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged%2A> method automatically determines whether the state of the monitor has already changed at the time <xref:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged%2A> method is called.</span></span> <span data-ttu-id="3a523-232">Wenn die <xref:System.Runtime.Caching.ChangeMonitor.HasChanged%2A> -Eigenschaft `true`ist, ruft die-Methode automatisch <xref:System.Runtime.Caching.OnChangedCallback> den Ereignishandler auf, der über die <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> -Methode registriert wurde.</span><span class="sxs-lookup"><span data-stu-id="3a523-232">If the <xref:System.Runtime.Caching.ChangeMonitor.HasChanged%2A> property is `true`, then the method automatically calls the <xref:System.Runtime.Caching.OnChangedCallback> event handler, that was registered, through the <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> method.</span></span> <span data-ttu-id="3a523-233">Dies liegt daran, dass es möglich ist, dass ab dem Zeitpunkt, zu dem eine Cache Implementierung einen Änderungs Monitor erstellt, bis zu dem Zeitpunkt, zu dem eine Cache Implementierung den Monitor abruft und sich damit verbindet, der zugrunde liegende überwachte Zustand geändert wurde.</span><span class="sxs-lookup"><span data-stu-id="3a523-233">This occurs because it is possible that from the time a cache implementation creates a change monitor, to the time a cache implementation gets the monitor and wires itself up to it, the underlying monitored state has changed.</span></span> <span data-ttu-id="3a523-234">Wenn sich der Zustand bereits geändert hat, ist <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> `null`das Objekt, das an die-Methode weitergegeben wird,.</span><span class="sxs-lookup"><span data-stu-id="3a523-234">If the state has already changed then the object that is passed to the <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> method is `null`.</span></span>  
  
 <span data-ttu-id="3a523-235">Die <xref:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged%2A> -Methode kann nur einmal aufgerufen werden und löst bei nachfolgenden Aufrufen eine Ausnahme aus.</span><span class="sxs-lookup"><span data-stu-id="3a523-235">The <xref:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged%2A> method can be invoked only one time, and will throw an exception on subsequent calls.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3a523-236">Die Rückrufmethode wurde bereits aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="3a523-236">The callback method has already been invoked.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3a523-237"><paramref name="onChangedCallback" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="3a523-237"><paramref name="onChangedCallback" /> is <see langword="null" />.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="3a523-238">1. Sie müssen die <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" /> -Methode aufzurufen, um über Änderungen an Abhängigkeiten benachrichtigt zu werden.</span><span class="sxs-lookup"><span data-stu-id="3a523-238">1.  You must call the <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" /> method to be notified of any dependency changes.</span></span> <span data-ttu-id="3a523-239">Wenn bereits eine Abhängigkeits Änderung aufgetreten ist, <see cref="T:System.Runtime.Caching.OnChangedCallback" /> wird die-Instanz aufgerufen <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" /> , wenn aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="3a523-239">If a dependency change has already occurred, the <see cref="T:System.Runtime.Caching.OnChangedCallback" /> instance will be called when <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" /> is called.</span></span> <span data-ttu-id="3a523-240">Andernfalls wird die <see cref="T:System.Runtime.Caching.OnChangedCallback" /> Instanz einmal aufgerufen, entweder wenn die <see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" /> -Methode aufgerufen wird oder wenn die <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" /> -Methode aufgerufen wird, je nachdem, welcher Vorgang zuerst ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="3a523-240">Otherwise, the <see cref="T:System.Runtime.Caching.OnChangedCallback" /> instance will be called one time, either when the <see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" /> method is called or when the <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" /> method is called, whichever occurs first.</span></span> <span data-ttu-id="3a523-241">Die <see cref="T:System.Runtime.Caching.OnChangedCallback" /> von der Cache Implementierung bereitgestellte Instanz sollte den Cache Eintrag entfernen. Wenn Sie vom Cache Aufrufer angefordert wird, müssen Sie das erforderliche Änderungs-oder Update Ereignis zurück an den ursprünglichen Cache Aufrufer machen.</span><span class="sxs-lookup"><span data-stu-id="3a523-241">The <see cref="T:System.Runtime.Caching.OnChangedCallback" /> instance provided by the cache implementation should remove the cache entry and if it is requested by the cache caller, raise the necessary change or update event back to the original cache caller.</span></span>  
  
<span data-ttu-id="3a523-242">2.</span><span class="sxs-lookup"><span data-stu-id="3a523-242">2.</span></span>  <span data-ttu-id="3a523-243">Die Objekt Cache Implementierung muss den Cache Eintrag entfernen, der einer Abhängigkeits Änderung zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="3a523-243">The object cache implementation must remove the cache entry that is associated with a dependency change.</span></span></para></block>
        <altmember cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="OnChanged">
      <MemberSignature Language="C#" Value="protected void OnChanged (object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void OnChanged(object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub OnChanged (state As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void OnChanged(System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.OnChanged : obj -&gt; unit" Usage="changeMonitor.OnChanged state" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="state"><span data-ttu-id="3a523-244">Die Daten für das Change-Ereignis.</span><span class="sxs-lookup"><span data-stu-id="3a523-244">The data for the change event.</span></span> <span data-ttu-id="3a523-245">Dieser Wert kann <see langword="null" /> sein.</span><span class="sxs-lookup"><span data-stu-id="3a523-245">This value can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="3a523-246">Wird von abgeleiteten Klassen aufgerufen, um das Ereignis auszulösen, wenn sich eine Abhängigkeit ändert.</span><span class="sxs-lookup"><span data-stu-id="3a523-246">Called by derived classes to raise the event when a dependency changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a523-247">In der Regel <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> wird die-Methode aufgerufen, wenn Abhängigkeitsänderungen auftreten.</span><span class="sxs-lookup"><span data-stu-id="3a523-247">Typically, the <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> method is called when dependency changes occur.</span></span> <span data-ttu-id="3a523-248">Die <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> -Methode wird auch aufgerufen, wenn eine Change-Monitor-Instanz verworfen wird, die Entsorgung aber nur dann erfolgt, wenn der Rückruf nicht bereits aufgerufen wurde.</span><span class="sxs-lookup"><span data-stu-id="3a523-248">The <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> method is also invoked when a change-monitor instance is disposed but the disposal occurs only if the callback has not already been invoked.</span></span>  
  
 <span data-ttu-id="3a523-249">Wenn die <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> -Methode aufgerufen wird, <xref:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged%2A> bevor die-Methode aufgerufen wird, werden die Zustandsdaten des <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> Aufrufs der-Methode von der Cache Implementierung gespeichert.</span><span class="sxs-lookup"><span data-stu-id="3a523-249">If the <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> method is called before the <xref:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged%2A> method is called, the state data from the call to the <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> method is saved by the cache implementation.</span></span> <span data-ttu-id="3a523-250">Außerdem wird der Rückruf für die <xref:System.Runtime.Caching.OnChangedCallback> -Methode sofort aufgerufen, wenn <xref:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged%2A> die-Methode aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="3a523-250">Also, the callback to the <xref:System.Runtime.Caching.OnChangedCallback> method is invoked immediately when the <xref:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged%2A> method is invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Runtime.Caching.ChangeMonitor.Dispose" />
        <altmember cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" />
        <altmember cref="P:System.Runtime.Caching.ChangeMonitor.HasChanged" />
      </Docs>
    </Member>
    <Member MemberName="UniqueId">
      <MemberSignature Language="C#" Value="public abstract string UniqueId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UniqueId" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Caching.ChangeMonitor.UniqueId" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property UniqueId As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ UniqueId { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UniqueId : string" Usage="System.Runtime.Caching.ChangeMonitor.UniqueId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3a523-251">Ruft einen Wert ab, der die <see cref="T:System.Runtime.Caching.ChangeMonitor" />-Klasseninstanz darstellt.</span><span class="sxs-lookup"><span data-stu-id="3a523-251">Gets a value that represents the <see cref="T:System.Runtime.Caching.ChangeMonitor" /> class instance.</span></span></summary>
        <value><span data-ttu-id="3a523-252">Der Bezeichner für eine Änderungsüberwachungsinstanz.</span><span class="sxs-lookup"><span data-stu-id="3a523-252">The identifier for a change-monitor instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a523-253">Der <xref:System.Runtime.Caching.ChangeMonitor.UniqueId%2A> Eigenschafts Wert besteht in der Regel aus Abhängigkeits Namen kombinierte Zeichen folgen Daten, die die von einer <xref:System.Runtime.Caching.ChangeMonitor> -Instanz überwachten Daten eindeutig Bezeichner.</span><span class="sxs-lookup"><span data-stu-id="3a523-253">The <xref:System.Runtime.Caching.ChangeMonitor.UniqueId%2A> property value typically consists of dependency names combined string data that uniquely identifiers the data that is being monitored by a <xref:System.Runtime.Caching.ChangeMonitor> instance.</span></span> <span data-ttu-id="3a523-254">Der Wert <xref:System.Runtime.Caching.ChangeMonitor.UniqueId%2A> der Eigenschaft ist eine Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="3a523-254">The value of the <xref:System.Runtime.Caching.ChangeMonitor.UniqueId%2A> property is a string.</span></span> <span data-ttu-id="3a523-255">Der Wert der Zeichenfolge wird verwendet, um die eindeutige ID <xref:System.Runtime.Caching.ChangeMonitor> der Instanz zuzuweisen.</span><span class="sxs-lookup"><span data-stu-id="3a523-255">The value of the string is used to assign the unique ID of the <xref:System.Runtime.Caching.ChangeMonitor> instance.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="3a523-256">Wenn Sie die-Eigenschaft überschreiben, können Sie eine benutzerdefinierte-Implementierung für den Zeichen folgen Wert der-Eigenschaft definieren, um ihr eine eindeutige ID zuzuweisen.</span><span class="sxs-lookup"><span data-stu-id="3a523-256">By overriding the property, you can define a custom implementation for the string value of the property in order to assign it a unique ID.</span></span></para></block>
        <block subset="none" type="overrides"><para><span data-ttu-id="3a523-257">In abgeleiteten Klassen müssen Sie den Wert der-Eigenschaft im Konstruktor festlegen.</span><span class="sxs-lookup"><span data-stu-id="3a523-257">In derived classes, you must set the value of the property in the constructor.</span></span></para></block>
      </Docs>
    </Member>
  </Members>
</Type>
