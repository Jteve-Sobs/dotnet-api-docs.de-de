<Type Name="ChangeMonitor" FullName="System.Runtime.Caching.ChangeMonitor">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ef439688d7b98a238cf8640eb07e63804432a3ba" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30480494" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class ChangeMonitor : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ChangeMonitor extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Caching.ChangeMonitor" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ChangeMonitor&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class ChangeMonitor abstract : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Caching</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="d4451-101">Stellt eine Basisklasse für einen abgeleiteten benutzerdefinierten Typ bereit, der Wechsel in den Zustand der Daten überwacht, auf den ein Cacheelement angewiesen ist.</span>
      <span class="sxs-lookup">
        <span data-stu-id="d4451-101">Provides a base class for a derived custom type that monitors changes in the state of the data which a cache item depends on.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4451-102">Die <xref:System.Runtime.Caching.ChangeMonitor> Klasse dient als Basisklasse für Klassen abgeleiteten überwachen, die für bestimmte Cache-Implementierungen angegeben werden.</span><span class="sxs-lookup"><span data-stu-id="d4451-102">The <xref:System.Runtime.Caching.ChangeMonitor> class is used as the base class for derived monitor classes that are specialized for particular cache implementations.</span></span> <span data-ttu-id="d4451-103">Ein <xref:System.Runtime.Caching.ChangeMonitor> Instanz überwacht Änderungen in den Zustand der Daten an ein Element im Cache abhängig.</span><span class="sxs-lookup"><span data-stu-id="d4451-103">A <xref:System.Runtime.Caching.ChangeMonitor> instance monitors changes in the state of data which a cache item depends on.</span></span> <span data-ttu-id="d4451-104">Beispielsweise kann für das Element eine Datei oder eine Entität sein, deren Inhalt zwischengespeichert werden.</span><span class="sxs-lookup"><span data-stu-id="d4451-104">For example, the item can be a file or data entity whose contents are cached.</span></span> <span data-ttu-id="d4451-105">Wenn die Datei oder eine Entität aktualisiert wird, muss der zugeordnete Cacheeintrag auch geändert werden.</span><span class="sxs-lookup"><span data-stu-id="d4451-105">If the file or data entity is updated, the associated cache entry must be changed also.</span></span> <span data-ttu-id="d4451-106">Allgemeine Elemente, die überwacht werden können enthalten Datenentitäten (z. B. Datenbankfelder, Werte, Zeilen oder Tabellen), einen weiteren Cacheeintrag und Dateien und Dateiattribute.</span><span class="sxs-lookup"><span data-stu-id="d4451-106">Common items that can be monitored include data entities (such as database fields, values, rows, or tables), another cache entry, and files and file attributes.</span></span>  
  
 <span data-ttu-id="d4451-107">Eine Änderung der Abhängigkeit ist eine Änderung in den Zustand einer Abhängigkeit.</span><span class="sxs-lookup"><span data-stu-id="d4451-107">A dependency change is a change in the state of a dependency.</span></span> <span data-ttu-id="d4451-108">In einem typischen Cacheimplementierung nach einem <xref:System.Runtime.Caching.ChangeMonitor> Instanz benachrichtigt den Cache, die eine Abhängigkeit geändert wurden, die vom Cache durchgeführt, die erforderliche Aktion, z. B. inserted Cacheeintrags.</span><span class="sxs-lookup"><span data-stu-id="d4451-108">In a typical cache implementation, after a <xref:System.Runtime.Caching.ChangeMonitor> instance notifies the cache that a dependency has changed, the cache performs the required action, such as invalidating the inserted cache entry.</span></span>  
  
 <span data-ttu-id="d4451-109">Abgeleitete <xref:System.Runtime.Caching.ChangeMonitor> Klassen zum Überwachen von Abhängigkeit Änderungen für bestimmte verschiedene Datenbereiche angepasst werden.</span><span class="sxs-lookup"><span data-stu-id="d4451-109">Derived <xref:System.Runtime.Caching.ChangeMonitor> classes can be customized to monitor dependency changes for specific different data stores.</span></span> <span data-ttu-id="d4451-110">Es gibt z. B. Cache-Implementierungen für ein Dateisystem, physischen Speicher oder einer Datenbank.</span><span class="sxs-lookup"><span data-stu-id="d4451-110">For example, there are cache implementations for a file system, physical memory, or a database.</span></span> <span data-ttu-id="d4451-111">Die <xref:System.Runtime.Caching.ChangeMonitor> Klasse außerhalb der Cache auftretende Änderungen überprüft und Warnungen klicken Sie dann den Cache, die Änderungen vorgenommen wurden.</span><span class="sxs-lookup"><span data-stu-id="d4451-111">The <xref:System.Runtime.Caching.ChangeMonitor> class examines changes that occur outside the cache, and then alerts the cache that changes have occurred.</span></span>  
  
 <span data-ttu-id="d4451-112">Die [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] umfasst die folgenden Klassen, die davon Herleiten <xref:System.Runtime.Caching.ChangeMonitor> Klasse:</span><span class="sxs-lookup"><span data-stu-id="d4451-112">The [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] includes the following classes that derive from <xref:System.Runtime.Caching.ChangeMonitor> class:</span></span>  
  
-   <xref:System.Runtime.Caching.CacheEntryChangeMonitor>  
  
-   <xref:System.Runtime.Caching.FileChangeMonitor>  
  
-   <xref:System.Runtime.Caching.HostFileChangeMonitor>  
  
-   <xref:System.Runtime.Caching.SqlChangeMonitor>  
  
 <span data-ttu-id="d4451-113">Jede dieser Klassen funktioniert mit verschiedenen Typen von Abhängigkeiten.</span><span class="sxs-lookup"><span data-stu-id="d4451-113">Each of these classes works with different types of dependencies.</span></span> <span data-ttu-id="d4451-114">Beispielsweise ist das abgeleitete <xref:System.Runtime.Caching.FileChangeMonitor> Klasse überwacht Änderungen an einen Cache für die Dateisystemdaten (Dateien und Ordner), von denen das Element im Cache abhängig.</span><span class="sxs-lookup"><span data-stu-id="d4451-114">For example, the derived <xref:System.Runtime.Caching.FileChangeMonitor> class monitors changes to a cache for file system data (files and folders) that the cache item depends on.</span></span>  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="d4451-115">Dieser Typ ist threadsicher.</span>
      <span class="sxs-lookup">
        <span data-stu-id="d4451-115">This type is thread safe.</span>
      </span>
    </threadsafe>
    <block subset="none" type="overrides">
      <para>
        <span data-ttu-id="d4451-116">Wenn Sie beim Erstellen eines benutzerdefinierten Cacheimplementierung oder abgeleiteten Typs überwachen Änderung müssen bestimmte Richtlinien beachtet.</span>
        <span class="sxs-lookup">
          <span data-stu-id="d4451-116">If you create a custom cache implementation or a derived change monitor type, you must follow certain guidelines.</span>
        </span>
        <span data-ttu-id="d4451-117">Die folgende Liste fasst diese Richtlinien.</span>
        <span class="sxs-lookup">
          <span data-stu-id="d4451-117">The following list summarizes these guidelines.</span>
        </span>
        <span data-ttu-id="d4451-118">Weitere Informationen finden Sie in der Dokumentation für die einzelnen Methoden oder Eigenschaften.</span>
        <span class="sxs-lookup">
          <span data-stu-id="d4451-118">For more information, see the documentation for individual methods or properties.</span>
        </span>  
  
-   <span data-ttu-id="d4451-119">Legen Sie der Konstruktor einer abgeleiteten Klasse muss die <see cref="P:System.Runtime.Caching.ChangeMonitor.UniqueId" /> -Eigenschaft, mit der Überwachung beginnen, und rufen <see cref="M:System.Runtime.Caching.ChangeMonitor.InitializationComplete" /> -Methode auf, bevor die Methode gibt.</span><span class="sxs-lookup"><span data-stu-id="d4451-119">The constructor of a derived class must set the <see cref="P:System.Runtime.Caching.ChangeMonitor.UniqueId" /> property, begin monitoring, and call <see cref="M:System.Runtime.Caching.ChangeMonitor.InitializationComplete" /> method before the method returns.</span></span><span data-ttu-id="d4451-120">Wenn ein Konstruktor ein Fehler, während der Konstruktionen auftritt und aufweisen muss, um Ressourcen freizugeben, wird der Konstruktor kann nur Aufrufen der <see cref="Overload:System.Runtime.Caching.ChangeMonitor.Dispose" /> nach der Überladung der <see cref="M:System.Runtime.Caching.ChangeMonitor.InitializationComplete" /> Methode wird aufgerufen, da die <see cref="Overload:System.Runtime.Caching.ChangeMonitor.Dispose" /> Überladung löst ein <see cref="T:System.InvalidOperationException" /> Ausnahme, wenn die Initialisierung nicht abgeschlossen wird.</span><span class="sxs-lookup"><span data-stu-id="d4451-120">If a constructor encounters an error during constructions and must have to dispose of resources, the constructor can only call the <see cref="Overload:System.Runtime.Caching.ChangeMonitor.Dispose" /> overload after the <see cref="M:System.Runtime.Caching.ChangeMonitor.InitializationComplete" /> method is called because the <see cref="Overload:System.Runtime.Caching.ChangeMonitor.Dispose" /> overload will throw an <see cref="T:System.InvalidOperationException" /> exception if initialization is not completed.</span></span>  
  
-   <span data-ttu-id="d4451-121">Wenn Auftreten von Änderungen in die Daten, die überwacht werden, bevor die Initialisierung abgeschlossen ist, muss es sich um eine Aufruf des Konstruktors der <see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" /> Methode vor dem Aufruf der <see cref="M:System.Runtime.Caching.ChangeMonitor.InitializationComplete" /> Methode.</span><span class="sxs-lookup"><span data-stu-id="d4451-121">If changes occur in the data that is being monitored before initialization is complete, the constructor must call the <see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" /> method before calling the <see cref="M:System.Runtime.Caching.ChangeMonitor.InitializationComplete" /> method.</span></span>  
  
-   <span data-ttu-id="d4451-122">Nachdem ein abgeleiteter <see cref="T:System.Runtime.Caching.ChangeMonitor" /> Typ instanziiert wird, müssen Sie den Monitor einfügen, in ein benutzerdefiniertes <see cref="T:System.Runtime.Caching.ObjectCache" /> Implementierung.</span><span class="sxs-lookup"><span data-stu-id="d4451-122">After a derived <see cref="T:System.Runtime.Caching.ChangeMonitor" /> type is instantiated, you must insert the monitor into a custom <see cref="T:System.Runtime.Caching.ObjectCache" /> implementation.</span></span><span data-ttu-id="d4451-123">Oder wenn Sie mit dem Monitor für die Änderung abgeschlossen haben, rufen Sie die <see cref="Overload:System.Runtime.Caching.ChangeMonitor.Dispose" /> Methode.</span><span class="sxs-lookup"><span data-stu-id="d4451-123">Or if you are finished using the change monitor, call the <see cref="Overload:System.Runtime.Caching.ChangeMonitor.Dispose" /> method.</span></span>  
  
-   <span data-ttu-id="d4451-124">Nach einem <see cref="T:System.Runtime.Caching.ChangeMonitor" /> Instanz eingefügt wird eine <see cref="T:System.Runtime.Caching.ObjectCache" /> Implementierung, die <see cref="T:System.Runtime.Caching.ObjectCache" /> Instanz erforderlich, dass der Monitor Änderung verworfen wird.</span><span class="sxs-lookup"><span data-stu-id="d4451-124">After a <see cref="T:System.Runtime.Caching.ChangeMonitor" /> instance is inserted into a <see cref="T:System.Runtime.Caching.ObjectCache" /> implementation, the <see cref="T:System.Runtime.Caching.ObjectCache" /> instance require that the change monitor is disposed.</span></span><span data-ttu-id="d4451-125">Selbst wenn die Einfügemarke ungültig ist und bewirkt, eine Ausnahme dass der <see cref="T:System.Runtime.Caching.ObjectCache" /> Implementierung aufrufen, muss die <see cref="Overload:System.Runtime.Caching.ChangeMonitor.Dispose" /> überladen.</span><span class="sxs-lookup"><span data-stu-id="d4451-125">Even if the insertion is invalid and causes an exception, the <see cref="T:System.Runtime.Caching.ObjectCache" /> implementation must call the <see cref="Overload:System.Runtime.Caching.ChangeMonitor.Dispose" /> overload.</span></span>  
  
-   <span data-ttu-id="d4451-126">Nach dem Einfügen eines abgeleiteten Change Monitors in den Cache der <see cref="T:System.Runtime.Caching.ObjectCache" /> Implementierung muss Aufrufen <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" />, durch Übergeben einer <see cref="T:System.Runtime.Caching.OnChangedCallback" /> Objekt.</span><span class="sxs-lookup"><span data-stu-id="d4451-126">After a derived change monitor is inserted into a cache, the <see cref="T:System.Runtime.Caching.ObjectCache" /> implementation must call <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" />, by passing a <see cref="T:System.Runtime.Caching.OnChangedCallback" /> object.</span></span><span data-ttu-id="d4451-127">Die <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" /> Methode kann nur einmal aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="d4451-127">The <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" /> method can be called only one time.</span></span><span data-ttu-id="d4451-128">Wenn eine Änderung der Abhängigkeit bereits eingetreten sein, die <see cref="T:System.Runtime.Caching.OnChangedCallback" /> Instanz wird sofort aufgerufen, wenn <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" /> aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="d4451-128">If a dependency change has already occurred, the <see cref="T:System.Runtime.Caching.OnChangedCallback" /> instance will be called immediately when <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" /> is called.</span></span><span data-ttu-id="d4451-129">Andernfalls die <see cref="T:System.Runtime.Caching.OnChangedCallback" /> Instanz wird nur einmal aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="d4451-129">Otherwise, the <see cref="T:System.Runtime.Caching.OnChangedCallback" /> instance will be called only one time.</span></span><span data-ttu-id="d4451-130">Diesmal ein Aufruf wird entweder bei der <see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" /> Methode wird aufgerufen, da die <see cref="T:System.Runtime.Caching.ChangeMonitor" /> eine Änderung erkannt oder wenn die <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" /> Methode aufgerufen wird die <see cref="T:System.Runtime.Caching.ChangeMonitor" />, welcher Vorgang zuerst ausgeführt.</span><span class="sxs-lookup"><span data-stu-id="d4451-130">This one time call occurs either when the <see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" /> method is called because the <see cref="T:System.Runtime.Caching.ChangeMonitor" /> instance detected a change, or when the <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" /> method is called on the <see cref="T:System.Runtime.Caching.ChangeMonitor" />, whichever occurs first.</span></span>  
  
-   <span data-ttu-id="d4451-131">Die <see cref="T:System.Runtime.Caching.OnChangedCallback" /> -Instanz, die von bereitgestellte ein <see cref="T:System.Runtime.Caching.ObjectCache" /> Implementierung sollten die zugeordneten Cacheeintrag entfernen und einen Grund angeben, mit der <see cref="F:System.Web.Caching.CacheItemRemovedReason.DependencyChanged" /> Enumeration.</span><span class="sxs-lookup"><span data-stu-id="d4451-131">The <see cref="T:System.Runtime.Caching.OnChangedCallback" /> instance that is provided by an <see cref="T:System.Runtime.Caching.ObjectCache" /> implementation should remove the associated cache entry and specify a reason by using the <see cref="F:System.Web.Caching.CacheItemRemovedReason.DependencyChanged" /> enumeration.</span></span>  
  
-   <span data-ttu-id="d4451-132">Ein <see cref="T:System.Runtime.Caching.ChangeMonitor" /> Instanz Aufrufen der <see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" /> Methode entweder vor dem Aufruf einer Cacheimplementierung hat <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" /> Methode oder nach.</span><span class="sxs-lookup"><span data-stu-id="d4451-132">A <see cref="T:System.Runtime.Caching.ChangeMonitor" /> instance can call the <see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" /> method either before a cache implementation has called <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" /> method or after.</span></span><span data-ttu-id="d4451-133">Wenn die <see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" /> Methode wird aufgerufen, bevor <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" /> aufgerufen wird, wird die Basis <see cref="T:System.Runtime.Caching.ChangeMonitor" /> Implementierung benachrichtigt, dass den Cache, der dies der Fall und löst den Rückruf zu übergebenden <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" /> sofort beim Auftreten <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" /> aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="d4451-133">If the <see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" /> method is called before <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" /> is called, the base <see cref="T:System.Runtime.Caching.ChangeMonitor" /> implementation will notify the cache that this has occurred and will trigger the callback to be passed to <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" /> immediately when <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" /> is invoked.</span></span><span data-ttu-id="d4451-134">Beliebige Zustandsdaten, die übergeben werden die <see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" /> Methode Einsparung/des Monitors ändern und anschließend übergeben der <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" /> Methode beim der <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" /> Methode wird aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="d4451-134">Any state data that is passed to the <see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" /> method is saved by the change monitor and subsequently passed to the <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" /> method when the <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" /> method is invoked.</span></span>  
  
-   <span data-ttu-id="d4451-135">Eine änderungsüberwachung implementieren muss die <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose(System.Boolean)" /> Methode.</span><span class="sxs-lookup"><span data-stu-id="d4451-135">A change monitor must implement the <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose(System.Boolean)" /> method.</span></span><span data-ttu-id="d4451-136">Weitere Informationen finden Sie in der Dokumentation zur <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose(System.Boolean)" />-Methode.</span><span class="sxs-lookup"><span data-stu-id="d4451-136">For more information, see the <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose(System.Boolean)" /> method documentation.</span></span>  
  
-   <span data-ttu-id="d4451-137">Die <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" /> methodenüberladung aufgerufen werden, um das Verwerfen der <see cref="T:System.Runtime.Caching.ChangeMonitor" /> Instanz.</span><span class="sxs-lookup"><span data-stu-id="d4451-137">The <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" /> method overload must be called to dispose of the <see cref="T:System.Runtime.Caching.ChangeMonitor" /> instance.</span></span><span data-ttu-id="d4451-138">Die Regeln zum Aufrufen der Dispose sind wie folgt aus:</span><span class="sxs-lookup"><span data-stu-id="d4451-138">The rules for calling Dispose are as follows:</span></span>  
  
    -   <span data-ttu-id="d4451-139">Bevor ein Element in den Cache eingefügt wird, ist es die Verantwortung des Aufrufers Löschen einer <see cref="T:System.Runtime.Caching.ChangeMonitor" /> Instanz.</span><span class="sxs-lookup"><span data-stu-id="d4451-139">Before an item is inserted into the cache, it is the responsibility of caller to dispose of a <see cref="T:System.Runtime.Caching.ChangeMonitor" /> instance.</span></span>  
  
    -   <span data-ttu-id="d4451-140">Einmal Cacheelement und <see cref="T:System.Runtime.Caching.ChangeMonitor" /> Instanzen, die mit ihr verbunden sind, werden auf einen Cache übergeben, Ausführender der Cache muss sicherstellen, dass, die die <see cref="Overload:System.Runtime.Caching.ChangeMonitor.Dispose" /> -Methode aufgerufen wird, auch wenn der Vorgang schlägt fehl.</span><span class="sxs-lookup"><span data-stu-id="d4451-140">Once cache item and the <see cref="T:System.Runtime.Caching.ChangeMonitor" /> instances that are associated with it are passed to a cache, the cache implementer must make sure that that the <see cref="Overload:System.Runtime.Caching.ChangeMonitor.Dispose" /> method is called, even if the insert fails.</span></span>  
  
    -   <span data-ttu-id="d4451-141">Nach einem Element und die zugehörigen <see cref="T:System.Runtime.Caching.ChangeMonitor" /> Instanzen auf einen Cache übergeben werden, die der Aufrufer muss die Abhängigkeit nicht freigeben, da bei der <see cref="Overload:System.Runtime.Caching.ChangeMonitor.Dispose" /> -Methode aufgerufen wird, der Aufruf wird behandelt, als ob die Abhängigkeit geändert hat.</span><span class="sxs-lookup"><span data-stu-id="d4451-141">After an item and its associated <see cref="T:System.Runtime.Caching.ChangeMonitor" /> instances are passed to a cache, the caller must not dispose the dependency because when the <see cref="Overload:System.Runtime.Caching.ChangeMonitor.Dispose" /> method is called, the call is treated as if the dependency has changed.</span></span><span data-ttu-id="d4451-142">Daher die <see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" /> Methode wird automatisch aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="d4451-142">As a result, the <see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" /> method is automatically invoked.</span></span>  
  
-   <span data-ttu-id="d4451-143">Unter Berücksichtigung dieser Regeln, die <see cref="Overload:System.Runtime.Caching.ChangeMonitor.Dispose" /> muss in einem der folgenden Methoden aufgerufen werden:</span><span class="sxs-lookup"><span data-stu-id="d4451-143">Taking these rules into consideration, the <see cref="Overload:System.Runtime.Caching.ChangeMonitor.Dispose" /> method must be called in one of the following ways:</span></span>  
  
    -   <span data-ttu-id="d4451-144">Benutzer müssen Aufrufen der <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" /> -methodenüberladung, wenn sie nicht die abgeleiteten änderungsüberwachung-Instanz in einen Cache einfügen möchten.</span><span class="sxs-lookup"><span data-stu-id="d4451-144">Users must call the <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" /> method overload if they decide not to insert the derived change-monitor instance into a cache.</span></span>  
  
    -   <span data-ttu-id="d4451-145">Wenn versucht wird, dass die Implementierung die änderungsüberwachung Instanz in den Objektcache ein einfügen, aber die Einfügung einen Fehler, der Cacheimplementierung ist verantwortlich für das Aufrufen der <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" /> überladen.</span><span class="sxs-lookup"><span data-stu-id="d4451-145">If the implementation tries to insert the change-monitor instance into an object cache but the insertion fails, the cache implementation is responsible for calling the <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" /> overload.</span></span><span data-ttu-id="d4451-146">Wenn der Versuch der Einfügung eine Ausnahme auslöst, muss der Cacheimplementierung alle zugehörigen Abhängigkeiten freizugeben.</span><span class="sxs-lookup"><span data-stu-id="d4451-146">When the insertion attempt causes an exception, the cache implementation must dispose of any associated dependencies.</span></span>  
  
    -   <span data-ttu-id="d4451-147">Der Cacheeintrag entfernt wird, muss auch der Abhängigkeit der Cacheimplementierung dispose.</span><span class="sxs-lookup"><span data-stu-id="d4451-147">If the cache entry is removed, the cache implementation must also dispose of the dependency.</span></span>  
  
    -   <span data-ttu-id="d4451-148">Die interne Implementierung der <see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" /> Methodenaufrufe automatisch die <see cref="Overload:System.Runtime.Caching.ChangeMonitor.Dispose" /> mithilfe der Methode nach dem Aufruf eines Rückrufs, der registriert wird <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" />.</span><span class="sxs-lookup"><span data-stu-id="d4451-148">The internal implementation of the <see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" /> method automatically calls the <see cref="Overload:System.Runtime.Caching.ChangeMonitor.Dispose" /> method after it calls a callback that is registered through <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" />.</span></span><block subset="none" type="note"><para><span data-ttu-id="d4451-149">Diese automatischen Aufruf der Dispose-Methode bei den Auslösen von Ereignissen tritt nur auf, wenn die Initialisierung der <see cref="T:System.Runtime.Caching.ChangeMonitor" /> Instanz wurde bereits abgeschlossen.</span><span class="sxs-lookup"><span data-stu-id="d4451-149">This automatic call to the dispose method during the event firing only occurs if the initialization of the <see cref="T:System.Runtime.Caching.ChangeMonitor" /> instance was previously completed.</span></span></para></block><span data-ttu-id="d4451-150">Wenn eine abgeleitete änderungsüberwachung Konstruktor ruft die <see cref="M:System.Runtime.Caching.ChangeMonitor.InitializationComplete" /> -Methode, wenn der Status des Monitors ändern bereits geändert wurde (d. h. den Zustand, der bereits geänderten überwacht wird, wenn der Konstruktor noch aktiv war) und dann die <see cref="M:System.Runtime.Caching.ChangeMonitor.InitializationComplete" /> Methode wird Löschen Sie automatisch des Monitors ändern.</span><span class="sxs-lookup"><span data-stu-id="d4451-150">When a derived change monitor's constructor calls the <see cref="M:System.Runtime.Caching.ChangeMonitor.InitializationComplete" /> method, if the state of the change monitor has already changed (that is, the state that is monitored already changed when the constructor was still active) then the <see cref="M:System.Runtime.Caching.ChangeMonitor.InitializationComplete" /> method will automatically dispose of the change monitor.</span></span>  
  
-   <span data-ttu-id="d4451-151">Die <see cref="P:System.Runtime.Caching.ChangeMonitor.HasChanged" /> -Eigenschaftensatz auf <see langword="true" /> nach der <see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" /> Methode wird aufgerufen, von der abgeleiteten änderungsüberwachung-Instanz, unabhängig davon, ob eine <see cref="T:System.Runtime.Caching.OnChangedCallback" /> Objekt durch einen Aufruf von festgelegt wurde die <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" /> Methode oder nicht.</span><span class="sxs-lookup"><span data-stu-id="d4451-151">The <see cref="P:System.Runtime.Caching.ChangeMonitor.HasChanged" /> property is set to <see langword="true" /> after the <see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" /> method is called by the derived change-monitor instance, regardless of whether a <see cref="T:System.Runtime.Caching.OnChangedCallback" /> object has been set by a call to the <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" /> method or not.</span></span></para>
    </block>
    <altmember cref="N:System.Web.Caching" />
    <altmember cref="T:System.Runtime.Caching.ObjectCache" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ChangeMonitor ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ChangeMonitor.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ChangeMonitor();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d4451-152">Initialisiert eine neue Instanz der <see cref="T:System.Runtime.Caching.ChangeMonitor" />-Klasse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4451-152">Initializes a new instance of the <see cref="T:System.Runtime.Caching.ChangeMonitor" /> class.</span>
          </span>
          <span data-ttu-id="d4451-153">Dieser Konstruktor wird von Konstruktoren in abgeleiteten Klassen aufgerufen, um die Basisklasse zu initialisieren.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4451-153">This constructor is called from constructors in derived classes to initialize the base class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4451-154">Die <xref:System.Runtime.Caching.ChangeMonitor> -Klasse verfügt über einen Standardkonstruktor.</span><span class="sxs-lookup"><span data-stu-id="d4451-154">The <xref:System.Runtime.Caching.ChangeMonitor> class has a default constructor.</span></span> <span data-ttu-id="d4451-155">Allerdings Klassen, die von der Basisklasse erben <xref:System.Runtime.Caching.ChangeMonitor> Klasse, und definieren Sie benutzerdefinierte Change-Überwachung Verhalten muss in den Konstruktor Initialisierung ausführen.</span><span class="sxs-lookup"><span data-stu-id="d4451-155">However, classes that inherit from the base <xref:System.Runtime.Caching.ChangeMonitor> class and define custom change-monitoring behavior must perform initialization in the constructor.</span></span> <span data-ttu-id="d4451-156">Weitere Informationen finden Sie die Hinweise für Vererber-Abschnitt.</span><span class="sxs-lookup"><span data-stu-id="d4451-156">For more information, see the Notes for Inheritors section.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="d4451-157">Der Konstruktor einer abgeleiteten Klasse muss festlegen, die <see cref="P:System.Runtime.Caching.ChangeMonitor.UniqueId" /> -Eigenschaft, mit der Überwachung beginnen, und rufen die <see cref="M:System.Runtime.Caching.ChangeMonitor.InitializationComplete" /> -Klasse vor dem zurückgeben.</span>
            <span class="sxs-lookup">
              <span data-stu-id="d4451-157">The constructor of a derived class must set the <see cref="P:System.Runtime.Caching.ChangeMonitor.UniqueId" /> property, begin monitoring, and call the <see cref="M:System.Runtime.Caching.ChangeMonitor.InitializationComplete" /> class before it returns.</span>
            </span>
            <span data-ttu-id="d4451-158">Wenn eine Abhängigkeit Änderungen vor der Initialisierung abgeschlossen (z. B., wenn ein abhängiger Cacheschlüssel nicht im Cache gefunden wird), muss der Konstruktor aufrufen der <see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" /> Methode vor dem Aufrufen der <see cref="M:System.Runtime.Caching.ChangeMonitor.InitializationComplete" /> Methode.</span>
            <span class="sxs-lookup">
              <span data-stu-id="d4451-158">If a dependency changes before initialization is complete (for example, if a dependent cache key is not found in the cache), the constructor must call the <see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" /> method before it calls the <see cref="M:System.Runtime.Caching.ChangeMonitor.InitializationComplete" /> method.</span>
            </span>
            <span data-ttu-id="d4451-159">In diesem Fall kann Konstruktor aufrufen der <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" /> Methode erst nach der <see cref="M:System.Runtime.Caching.ChangeMonitor.InitializationComplete" /> -Methode aufgerufen wird, da die <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" /> Methode löst eine Ausnahme aus, wenn die Initialisierung nicht abgeschlossen wird.</span>
            <span class="sxs-lookup">
              <span data-stu-id="d4451-159">In this case, constructor can call the <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" /> method only after the <see cref="M:System.Runtime.Caching.ChangeMonitor.InitializationComplete" /> method is called, because the <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" /> method throws an exception if initialization is not completed.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d4451-160">Gibt alle von der aktuellen Instanz der <see cref="T:System.Runtime.Caching.ChangeMonitor" />-Klasse verwendeten Ressourcen frei.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4451-160">Releases all resources used by the current instance of the <see cref="T:System.Runtime.Caching.ChangeMonitor" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4451-161">Die <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> Methode wird verwendet, um die Version der <xref:System.Runtime.Caching.ChangeMonitor> Instanz und die zugehörigen Ressourcen.</span><span class="sxs-lookup"><span data-stu-id="d4451-161">The <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> method is used to release the <xref:System.Runtime.Caching.ChangeMonitor> instance and related resources.</span></span> <span data-ttu-id="d4451-162">Die öffentliche <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> Methode wird aufgerufen, um den Verkauf-Prozess mit Schlüssel Lebenszyklusereignisse abgeleiteten änderungsüberwachung-Klassen (z. B. Initialisierung) zu koordinieren und Freigeben der <xref:System.Runtime.Caching.ChangeMonitor> Instanz fest, damit die Instanz die Garbage Collection bereinigt werden kann.</span><span class="sxs-lookup"><span data-stu-id="d4451-162">The public <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> method is invoked to coordinate the disposal process with key life-cycle events of derived change-monitor classes (such as initialization), and to release the <xref:System.Runtime.Caching.ChangeMonitor> instance so that the instance can be garbage collected.</span></span> <span data-ttu-id="d4451-163">Die <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> Methode wird von abgeleiteten änderungsüberwachung Klassen implementiert ihre verwalteten und nicht verwalteten Ressourcen freizugeben.</span><span class="sxs-lookup"><span data-stu-id="d4451-163">The <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> method is implemented by derived change-monitor classes to dispose of their managed and unmanaged resources.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ChangeMonitor.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d4451-164">Gibt alle von der aktuellen Instanz der <see cref="T:System.Runtime.Caching.ChangeMonitor" />-Klasse verwendeten Ressourcen frei.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4451-164">Releases all resources that are used by the current instance of the <see cref="T:System.Runtime.Caching.ChangeMonitor" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4451-165">Die <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> Methode ruft die <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> Methode der abgeleiteten Klassen nur einmal, das erste Mal aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="d4451-165">The <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> method invokes the <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> method of derived classes only one time, the first time it is called.</span></span> <span data-ttu-id="d4451-166">Nachfolgende Aufrufe der <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> Methode haben keine Auswirkungen.</span><span class="sxs-lookup"><span data-stu-id="d4451-166">Subsequent calls to the <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> method have no effect.</span></span> <span data-ttu-id="d4451-167">Nach dem Aufruf der Methode der <xref:System.Runtime.Caching.ChangeMonitor.IsDisposed%2A> -Eigenschaftensatz auf `true`.</span><span class="sxs-lookup"><span data-stu-id="d4451-167">After the method has been called, the <xref:System.Runtime.Caching.ChangeMonitor.IsDisposed%2A> property is set to `true`.</span></span>  
  
 <span data-ttu-id="d4451-168">Die <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> Überladung aufgerufen werden, um das Verwerfen einer <xref:System.Runtime.Caching.ChangeMonitor> Instanz.</span><span class="sxs-lookup"><span data-stu-id="d4451-168">The <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> overload must be called to dispose of a <xref:System.Runtime.Caching.ChangeMonitor> instance.</span></span> <span data-ttu-id="d4451-169">Es folgen die Regeln zum Aufrufen der Dispose-Methode:</span><span class="sxs-lookup"><span data-stu-id="d4451-169">The following are the rules for calling the dispose method:</span></span>  
  
-   <span data-ttu-id="d4451-170">Bevor ein Element in den Cache eingefügt wird, ist es der Verantwortung des Aufrufers Löschen einer <xref:System.Runtime.Caching.ChangeMonitor> Instanz.</span><span class="sxs-lookup"><span data-stu-id="d4451-170">Before an item is inserted into the cache, it is the caller's responsibility to dispose of a <xref:System.Runtime.Caching.ChangeMonitor> instance.</span></span>  
  
-   <span data-ttu-id="d4451-171">Einmal Cacheelement und <xref:System.Runtime.Caching.ChangeMonitor> Instanzen, die mit ihr verbunden sind, werden auf einen Cache, der Cache-Implementierer, die sicherstellen muss, dass übergeben <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> aufgerufen wird, auch wenn der Vorgang schlägt fehl.</span><span class="sxs-lookup"><span data-stu-id="d4451-171">Once cache item and the <xref:System.Runtime.Caching.ChangeMonitor> instances that are associated with it are passed to a cache, the cache implementer that must make sure that <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> is called, even if the insert fails.</span></span>  
  
-   <span data-ttu-id="d4451-172">Nach einem Element und die zugehörigen <xref:System.Runtime.Caching.ChangeMonitor> Instanzen auf einen Cache übergeben werden, die der Aufrufer muss die Abhängigkeit nicht freigeben, da bei der <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> -Methode aufgerufen wird, der Aufruf wird behandelt, als ob die Abhängigkeit geändert hat.</span><span class="sxs-lookup"><span data-stu-id="d4451-172">After an item and its associated <xref:System.Runtime.Caching.ChangeMonitor> instances are passed to a cache, the caller must not dispose the dependency because when the <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> method is called, the call is treated as if the dependency has changed.</span></span> <span data-ttu-id="d4451-173">Daher die <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> Methode wird automatisch aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="d4451-173">As a result, the <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> method is automatically invoked.</span></span>  
  
-   <span data-ttu-id="d4451-174">Unter Berücksichtigung dieser Regeln, die <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> muss in einem der folgenden Methoden aufgerufen werden:</span><span class="sxs-lookup"><span data-stu-id="d4451-174">Taking these rules into consideration, the <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> method must be called in one of the following ways:</span></span>  
  
    -   <span data-ttu-id="d4451-175">Benutzer müssen Aufrufen der <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> -methodenüberladung, wenn sie nicht die abgeleiteten änderungsüberwachung-Instanz in einen Cache einfügen möchten.</span><span class="sxs-lookup"><span data-stu-id="d4451-175">Users must call the <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> method overload if they decide not to insert the derived change-monitor instance into a cache.</span></span>  
  
    -   <span data-ttu-id="d4451-176">Die Cacheimplementierung ist verantwortlich für das Aufrufen der <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> überladen werden, wenn versucht wird, dass die Implementierung die änderungsüberwachung Instanz in den Objektcache ein einfügen, aber die Einfügung einen Fehler.</span><span class="sxs-lookup"><span data-stu-id="d4451-176">The cache implementation is responsible for calling the <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> overload if the implementation tries to insert the change-monitor instance into an object cache but the insertion fails.</span></span> <span data-ttu-id="d4451-177">Wenn der Versuch der Einfügung eine Ausnahme auslöst, muss der Cacheimplementierung alle zugehörigen Abhängigkeiten freigeben.</span><span class="sxs-lookup"><span data-stu-id="d4451-177">When the insertion attempt causes an exception, the cache implementation must dispose any associated dependencies.</span></span>  
  
    -   <span data-ttu-id="d4451-178">Der Cacheeintrag entfernt wird, muss die Abhängigkeit der Cacheimplementierung auch dispose.</span><span class="sxs-lookup"><span data-stu-id="d4451-178">If the cache entry is removed, the cache implementation must also dispose the dependency.</span></span>  
  
 <span data-ttu-id="d4451-179">Die interne Implementierung der der <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> Methodenaufrufe automatisch die <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> mithilfe der Methode nach dem Aufruf eines Rückrufs, der registriert wird die <xref:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="d4451-179">The internal implementation of the <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> method automatically calls the <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> method after it calls a callback that is registered through the <xref:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d4451-180">Diese automatische Dispose während den Auslösen von Ereignissen tritt nur auf, wenn die Initialisierung der <xref:System.Runtime.Caching.ChangeMonitor> Instanz bereits abgeschlossen.</span><span class="sxs-lookup"><span data-stu-id="d4451-180">This automatic dispose during the event firing only occurs if the initialization of the <xref:System.Runtime.Caching.ChangeMonitor> instance previously completed.</span></span>  
  
 <span data-ttu-id="d4451-181">Wenn eine abgeleitete änderungsüberwachung Konstruktor ruft die <xref:System.Runtime.Caching.ChangeMonitor.InitializationComplete%2A> -Methode, wenn der Status des Monitors ändern bereits geändert wurde (d. h. der Zustand, der überwacht wird wurde bereits geändert, wenn der Konstruktor noch aktiv ist) dann <xref:System.Runtime.Caching.ChangeMonitor.InitializationComplete%2A> Methode wird Löschen Sie automatisch die änderungsüberwachung.</span><span class="sxs-lookup"><span data-stu-id="d4451-181">When a derived change monitor's constructor calls the <xref:System.Runtime.Caching.ChangeMonitor.InitializationComplete%2A> method, if the state of the change monitor has already changed (that is, the state that is monitored has already changed when the constructor was still active) then <xref:System.Runtime.Caching.ChangeMonitor.InitializationComplete%2A> method will automatically dispose the change monitor.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d4451-182">Benutzer sollten nicht aufrufen, die <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="d4451-182">Users should not call the <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> method.</span></span> <span data-ttu-id="d4451-183">Sie können keine jedoch verhindern, dass Benutzer Aufrufen der Methode.</span><span class="sxs-lookup"><span data-stu-id="d4451-183">However, you cannot prevent users from calling the method.</span></span> <span data-ttu-id="d4451-184">Aus diesem Grund, stimmen die Namen der <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> Methode aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="d4451-184">Therefore, if they do, the <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> method is invoked.</span></span> <span data-ttu-id="d4451-185">In diesem Fall wird der Cacheeintrag benachrichtigt, als ob die Abhängigkeit geändert hat.</span><span class="sxs-lookup"><span data-stu-id="d4451-185">In that case, the cache entry is notified as if the dependency has changed.</span></span>  
  
 <span data-ttu-id="d4451-186">Um zu verhindern, dass abgeleitete Klassen überschreiben <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> Methode, die Methode ist nicht um eine explizite Implementierung.</span><span class="sxs-lookup"><span data-stu-id="d4451-186">To prevent derived classes from overriding <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> method, the method is not an explicit interface implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="d4451-187">Die Initialisierung ist in der abgeleiteten Änderungsüberwachungsklasse nicht vollständig, die die <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" />-Basismethode aufrief.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4451-187">Initialization is not complete in the derived change-monitor class that called the base <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" /> method.</span>
          </span>
        </exception>
        <altmember cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected abstract void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ChangeMonitor.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="d4451-188">
            <see langword="true" />, um verwaltete und nicht verwaltete Ressourcen sowie Verweise auf eine <see cref="T:System.Runtime.Caching.ChangeMonitor" />-Instanz freizugeben, <see langword="false" />, um nur nicht verwaltete Ressourcen freizugeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4451-188">
              <see langword="true" /> to release managed and unmanaged resources and any references to a <see cref="T:System.Runtime.Caching.ChangeMonitor" /> instance; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
          <span data-ttu-id="d4451-189">Wenn <see langword="false" /> übergeben wird, wird die <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose(System.Boolean)" />-Methode von einem <see langword="finalizer" />-Thread aufgerufen, und alle externen verwalteten Verweise sind wahrscheinlich nicht mehr gültig, da sie bereits von der Garbage Collection freigegeben wurden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4451-189">When <see langword="false" /> is passed, the <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose(System.Boolean)" /> method is called by a <see langword="finalizer" /> thread and any external managed references are likely no longer valid because they have already been garbage collected.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d4451-190">Gibt alle verwalteten und nicht verwalteten Ressourcen und alle Verweise auf die <see cref="T:System.Runtime.Caching.ChangeMonitor" />-Instanz frei.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4451-190">Releases all managed and unmanaged resources and any references to the <see cref="T:System.Runtime.Caching.ChangeMonitor" /> instance.</span>
          </span>
          <span data-ttu-id="d4451-191">Diese Überladung muss von abgeleiteten Änderungsüberwachungsklassen implementiert werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4451-191">This overload must be implemented by derived change-monitor classes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4451-192">Wenn der Wert der `disposing` Wert ist `true`, alle verwaltete und nicht verwaltete Ressourcen freigegeben, und alle Verweise auf dieses Objekt werden freigegeben, damit die Instanz der abgeleiteten änderungsüberwachung Garbage Collection ausgeführt werden kann.</span><span class="sxs-lookup"><span data-stu-id="d4451-192">When the value of `disposing` value is `true`, all managed and unmanaged resources are disposed and any references to this object are released so that the derived change-monitor instance can be garbage collected.</span></span> <span data-ttu-id="d4451-193">Es ist sichergestellt, dass die Basis <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> Methode wird das implementierte Aufrufen <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> Methode nur einmal.</span><span class="sxs-lookup"><span data-stu-id="d4451-193">It is guaranteed that the base <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> method will invoke the implemented <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> method only one time.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="d4451-194">Eine änderungsüberwachung implementieren muss die <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose(System.Boolean)" /> auf alle release verwaltete und nicht verwaltete Ressourcen bei der Wert der <paramref name="disposing" /> ist <see langword="true" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="d4451-194">A change monitor must implement the <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose(System.Boolean)" /> overload to release all managed and unmanaged resources when the value of <paramref name="disposing" /> is <see langword="true" />.</span>
            </span>
            <span data-ttu-id="d4451-195">Die <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose(System.Boolean)" /> methodenüberladung mit einem <paramref name="disposing" /> Wert <see langword="true" /> wird aufgerufen, nur ein Mal, wenn die Instanz zum ersten Mal freigegeben wird.</span>
            <span class="sxs-lookup">
              <span data-stu-id="d4451-195">The <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose(System.Boolean)" /> method overload that has a <paramref name="disposing" /> value of <see langword="true" /> is called only one time, namely, when the instance is disposed for the first time.</span>
            </span>
            <span data-ttu-id="d4451-196">Eine änderungsüberwachung muss nicht aufrufen, die <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose(System.Boolean)" /> direkt überladen.</span>
            <span class="sxs-lookup">
              <span data-stu-id="d4451-196">A change monitor must not call the <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose(System.Boolean)" /> overload directly.</span>
            </span>
            <span data-ttu-id="d4451-197">Eine abgeleitete änderungsüberwachung Erreichen des öffentlichen parameterlosen <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" /> Methode auf der Basis <see cref="T:System.Runtime.Caching.ChangeMonitor" /> Klasse.</span>
            <span class="sxs-lookup">
              <span data-stu-id="d4451-197">A derived change monitor can call the public parameter-less <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" /> method on the base <see cref="T:System.Runtime.Caching.ChangeMonitor" /> class.</span>
            </span>
            <span data-ttu-id="d4451-198">Alternativ kann eine änderungsüberwachung eine Finalizer-Methode implementieren.</span>
            <span class="sxs-lookup">
              <span data-stu-id="d4451-198">Alternatively, a change monitor can implement a finalizer method.</span>
            </span>
            <span data-ttu-id="d4451-199">In diesem Fall kann die Finalizer Aufrufen der <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose(System.Boolean)" /> Methode und übergibt ihn dann ein <paramref name="disposing" /> Wert <see langword="false" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="d4451-199">In that case, the finalizer can invoke the <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose(System.Boolean)" /> method and pass it a <paramref name="disposing" /> value of <see langword="false" />.</span>
            </span>
            <span data-ttu-id="d4451-200">Dies ist jedoch in der Regel nicht erforderlich.</span>
            <span class="sxs-lookup">
              <span data-stu-id="d4451-200">However, this is usually unnecessary.</span>
            </span>
            <span data-ttu-id="d4451-201">Überwachung für Abhängigkeit Änderungen erfolgt in der Regel von einem Dienst, der einen Verweis auf die Instanz ändern-Monitor verwaltet.</span>
            <span class="sxs-lookup">
              <span data-stu-id="d4451-201">Monitoring for dependency changes is typically performed by a service that maintains a reference to the change-monitor instance.</span>
            </span>
            <span data-ttu-id="d4451-202">Der Verweis verhindert, dass die Instanz Garbage Collection und aus diesem Grund wird eine Finalizermethode nicht erforderlich.</span>
            <span class="sxs-lookup">
              <span data-stu-id="d4451-202">The reference prevents the instance from being garbage collected, and therefore makes a finalizer method unnecessary.</span>
            </span>
            <span data-ttu-id="d4451-203">Um Speicherverluste zu vermeiden, wenn eine Abhängigkeit ändert, die <see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" /> Methode entfernt die änderungsüberwachung Instanz (es sei denn, die Initialisierung nicht beendet wurde).</span>
            <span class="sxs-lookup">
              <span data-stu-id="d4451-203">To avoid memory leaks, when a dependency changes, the <see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" /> method disposes the change-monitor instance (unless initialization has not finished).</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="HasChanged">
      <MemberSignature Language="C#" Value="public bool HasChanged { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasChanged" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Caching.ChangeMonitor.HasChanged" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasChanged As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasChanged { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d4451-204">Ruft einen Wert ab, der angibt, dass der von der <see cref="T:System.Runtime.Caching.ChangeMonitor" />-Klasse überwachte Zustand geändert wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4451-204">Gets a value that indicates that the state that is monitored by the <see cref="T:System.Runtime.Caching.ChangeMonitor" /> class has changed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d4451-205">
            <see langword="true" />, wenn der von der <see cref="T:System.Runtime.Caching.ChangeMonitor" />-Instanz überwachte Zustand geändert wurde, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4451-205">
              <see langword="true" /> if the state that is monitored by the <see cref="T:System.Runtime.Caching.ChangeMonitor" /> instance has changed; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4451-206">Sehen Sie sich den Wert dieser Eigenschaft in einer abgeleiteten <xref:System.Runtime.Caching.ChangeMonitor> Klasse, um festzustellen, ob eine Abhängigkeit geändert hat.</span><span class="sxs-lookup"><span data-stu-id="d4451-206">You can check the value of this property in a derived <xref:System.Runtime.Caching.ChangeMonitor> class to see whether a dependency has changed.</span></span>  
  
 <span data-ttu-id="d4451-207">Der Wert wird festgelegt, um `true` tritt eine Änderung der Abhängigkeit (das heißt, wenn die <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> -Methode aufgerufen wird).</span><span class="sxs-lookup"><span data-stu-id="d4451-207">The value is set to `true` when a dependency change occurs (that is, when the <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> method is called).</span></span> <span data-ttu-id="d4451-208">Nach der <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> Methode wird aufgerufen, von der abgeleiteten Klasse, die den Wert von der <xref:System.Runtime.Caching.ChangeMonitor.HasChanged%2A> -Eigenschaft `true`, unabhängig davon, ob eine <xref:System.Runtime.Caching.OnChangedCallback> Instanz wurde durch einen Aufruf von benachrichtigt die <xref:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="d4451-208">After the <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> method is called by the derived class, the value of the <xref:System.Runtime.Caching.ChangeMonitor.HasChanged%2A> property will be `true`, regardless of whether a <xref:System.Runtime.Caching.OnChangedCallback> instance has been notified by a call to the <xref:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d4451-209">Aufrufer überprüfen, können die <xref:System.Runtime.Caching.ChangeMonitor.HasChanged%2A> Eigenschaft, um festzustellen, ob eine Abhängigkeit geändert hat.</span><span class="sxs-lookup"><span data-stu-id="d4451-209">Callers can check the <xref:System.Runtime.Caching.ChangeMonitor.HasChanged%2A> property to see whether a dependency has changed.</span></span> <span data-ttu-id="d4451-210">In einer Umgebung mit mehreren Threads ein einfacherer und sind besser verwaltbar Ansatz ist jedoch zum Einfügen von Daten in einem Cacheimplementierung ohne Überprüfung der <xref:System.Runtime.Caching.ChangeMonitor.HasChanged%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="d4451-210">However, in a multi-threaded environment, a simpler and more maintainable approach is to insert data into a cache implementation without checking the <xref:System.Runtime.Caching.ChangeMonitor.HasChanged%2A> property.</span></span> <span data-ttu-id="d4451-211">Cache-Implementierungen müssen überprüfen, die <xref:System.Runtime.Caching.ChangeMonitor.HasChanged%2A> -Eigenschaft für Sie und müssen nicht einfügen oder Vorgang festgelegt, wenn eine oder mehrere zugeordnete Abhängigkeiten bereits geändert haben.</span><span class="sxs-lookup"><span data-stu-id="d4451-211">Cache implementations must check the <xref:System.Runtime.Caching.ChangeMonitor.HasChanged%2A> property for you and must not perform an insert or set operation if one or more associated dependencies have already changed.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" />
        <altmember cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="InitializationComplete">
      <MemberSignature Language="C#" Value="protected void InitializationComplete ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void InitializationComplete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ChangeMonitor.InitializationComplete" />
      <MemberSignature Language="VB.NET" Value="Protected Sub InitializationComplete ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void InitializationComplete();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d4451-212">Wird vom Konstruktor abgeleiteter Klassen aufgerufen, um anzugeben, dass die Initialisierung abgeschlossen ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4451-212">Called from the constructor of derived classes to indicate that initialization is finished.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4451-213">Wenn eine Abhängigkeit ändert, bevor die Initialisierung in einer abgeleiteten Klasse abgeschlossen ist, muss der Konstruktor der abgeleiteten Klasse Aufrufen der <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="d4451-213">If a dependency changes before initialization is complete in a derived class, the constructor of the derived class must invoke the <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> method.</span></span>  
  
 <span data-ttu-id="d4451-214">Wenn der <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> Methode wird aufgerufen, der <xref:System.Runtime.Caching.ChangeMonitor.HasChanged%2A> -Eigenschaftensatz wird automatisch auf `true` vom Monitor ändern.</span><span class="sxs-lookup"><span data-stu-id="d4451-214">When the <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> method is invoked, the <xref:System.Runtime.Caching.ChangeMonitor.HasChanged%2A> property is automatically set to `true` by the change monitor.</span></span> <span data-ttu-id="d4451-215">Daher bei der Änderung des Monitors Konstruktor ruft die <xref:System.Runtime.Caching.ChangeMonitor.InitializationComplete%2A> -Methode der Basisklasse wird automatisch aufgerufen. die <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="d4451-215">As a result, when the change monitor's constructor calls the <xref:System.Runtime.Caching.ChangeMonitor.InitializationComplete%2A> method, the base class will automatically call the <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> method.</span></span> <span data-ttu-id="d4451-216">Wenn die Initialisierung abgeschlossen ist, ist die <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> Methode verwirft automatisch die abgeleiteten änderungsüberwachung-Instanz.</span><span class="sxs-lookup"><span data-stu-id="d4451-216">If initialization is complete, the <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> method automatically disposes the derived change-monitor instance.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="d4451-217">Der Konstruktor einer abgeleiteten Klasse die Basisklasse aufrufen muss <see cref="M:System.Runtime.Caching.ChangeMonitor.InitializationComplete" /> -Methode auf, bevor Sie den Konstruktor zurück.</span>
            <span class="sxs-lookup">
              <span data-stu-id="d4451-217">The constructor of a derived class must call the base <see cref="M:System.Runtime.Caching.ChangeMonitor.InitializationComplete" /> method before the constructor returns.</span>
            </span>
            <span data-ttu-id="d4451-218">Der Konstruktor einer abgeleiteten Klasse aufrufen kann die <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" /> Methode erst nach <see cref="M:System.Runtime.Caching.ChangeMonitor.InitializationComplete" /> aufgerufen wird, da die <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" /> Methode löst eine Ausnahme aus, wenn die Initialisierung abgeschlossen ist, nicht.</span>
            <span class="sxs-lookup">
              <span data-stu-id="d4451-218">The constructor of a derived class can call the <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" /> method only after <see cref="M:System.Runtime.Caching.ChangeMonitor.InitializationComplete" /> is called, because the <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" /> method throws an exception if initialization is not completed.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="IsDisposed">
      <MemberSignature Language="C#" Value="public bool IsDisposed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDisposed" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Caching.ChangeMonitor.IsDisposed" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDisposed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDisposed { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d4451-219">Ruft einen Wert ab, der angibt, dass die abgeleitete Instanz einer <see cref="T:System.Runtime.Caching.ChangeMonitor" />-Klasse freigegeben wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4451-219">Gets a value that indicates that the derived instance of a <see cref="T:System.Runtime.Caching.ChangeMonitor" /> class is disposed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d4451-220">
            <see langword="true" />, wenn die Instanz freigegeben wird, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4451-220">
              <see langword="true" /> if the instance is disposed; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4451-221">Die Eigenschaft wird festgelegt, um `true` nach der Basis <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> Methodenaufrufe der <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> Methode in einer abgeleiteten Klasse, die Instanz zu verwerfen.</span><span class="sxs-lookup"><span data-stu-id="d4451-221">The property is set to `true` after the base <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> method calls the <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> method in a derived class to dispose of the instance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NotifyOnChanged">
      <MemberSignature Language="C#" Value="public void NotifyOnChanged (System.Runtime.Caching.OnChangedCallback onChangedCallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void NotifyOnChanged(class System.Runtime.Caching.OnChangedCallback onChangedCallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void NotifyOnChanged(System::Runtime::Caching::OnChangedCallback ^ onChangedCallback);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="onChangedCallback" Type="System.Runtime.Caching.OnChangedCallback" />
      </Parameters>
      <Docs>
        <param name="onChangedCallback">
          <span data-ttu-id="d4451-222">Ein Verweis auf eine Methode, die aufgerufen wird, wenn eine Abhängigkeit geändert wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4451-222">A reference to a method that is invoked when a dependency has changed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d4451-223">Wird von Cacheimplementierungen aufgerufen, um einen Rückruf zu registrieren und über den <see cref="T:System.Runtime.Caching.ObjectCache" />-Delegaten eine <see cref="T:System.Runtime.Caching.OnChangedCallback" />-Instanz zu benachrichtigen, wenn sich eine Abhängigkeit geändert hat.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4451-223">Called by Cache implementers to register a callback and notify an <see cref="T:System.Runtime.Caching.ObjectCache" /> instance through the <see cref="T:System.Runtime.Caching.OnChangedCallback" /> delegate when a dependency has changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4451-224">Cache-Implementierung mit dieser Methode können selbst bis zu eine änderungsüberwachung von Netzwerkdaten.</span><span class="sxs-lookup"><span data-stu-id="d4451-224">Cache implementers use this method to wire themselves up to a change monitor.</span></span> <span data-ttu-id="d4451-225">Wenn Sie ordnen Sie eine oder mehrere Monitore mit dem Cacheelement, das ändern möchten, übergeben Sie eine <xref:System.Runtime.Caching.CacheItemPolicy> Instanz mit der Eigenschaft Monitore ausgefüllter Änderung auf das Element im Cache.</span><span class="sxs-lookup"><span data-stu-id="d4451-225">If you associate one or more change monitors with the cache item, you pass a <xref:System.Runtime.Caching.CacheItemPolicy> instance with a populated change monitors property to the cache item.</span></span> <span data-ttu-id="d4451-226">Eine Cache-Implementierer, unterstützt Monitore ändern ist verantwortlich für das Durchlaufen der <xref:System.Runtime.Caching.CacheItemPolicy.ChangeMonitors%2A> Eigenschaft und Registrieren der <xref:System.Runtime.Caching.OnChangedCallback> Delegaten mit jedem geändert Monitor, die es findet.</span><span class="sxs-lookup"><span data-stu-id="d4451-226">A cache implementer that supports change monitors is responsible for iterating over the <xref:System.Runtime.Caching.CacheItemPolicy.ChangeMonitors%2A> property and register the <xref:System.Runtime.Caching.OnChangedCallback> delegates with each change monitor that it finds.</span></span>  
  
 <span data-ttu-id="d4451-227">Da die <xref:System.Runtime.Caching.OnChangedCallback> Delegaten enthält eine optionale Statusparameter, eine konkrete Implementierung Monitor kann optionale Zustandsinformationen übergeben.</span><span class="sxs-lookup"><span data-stu-id="d4451-227">Because the <xref:System.Runtime.Caching.OnChangedCallback> delegate includes an optional state parameter, a concrete change monitor implementation can pass optional state information.</span></span> <span data-ttu-id="d4451-228">Ausführender der Cache bestimmt, ob explizite Abhängigkeit für den Typ des Zustands, der eine benutzerdefinierte änderungsüberwachung im Rahmen des Rückrufs übergibt ausgeführt werden kann.</span><span class="sxs-lookup"><span data-stu-id="d4451-228">The cache implementer determines whether an explicit dependency on the type of state that a custom change monitor passes as part of the callback can be taken.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d4451-229">Die Basis-Cache-Erweiterbarkeits-API hat keine Anforderung für die explizite Abhängigkeit für den Typ des Zustands.</span><span class="sxs-lookup"><span data-stu-id="d4451-229">The base cache extensibility API has no requirement for explicit dependency on the type of state.</span></span>  
  
 <span data-ttu-id="d4451-230">Die Implementierung von der <xref:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged%2A> Methode bestimmt, ob der Zustand des Monitors bereits zum Zeitpunkt geändert hat automatisch <xref:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged%2A> Methode wird aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="d4451-230">The implementation of the <xref:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged%2A> method automatically determines whether the state of the monitor has already changed at the time <xref:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged%2A> method is called.</span></span> <span data-ttu-id="d4451-231">Wenn die <xref:System.Runtime.Caching.ChangeMonitor.HasChanged%2A> Eigenschaft ist `true`, und dann die Methode automatisch Ruft die <xref:System.Runtime.Caching.OnChangedCallback> -Ereignishandler registriert wurde die <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="d4451-231">If the <xref:System.Runtime.Caching.ChangeMonitor.HasChanged%2A> property is `true`, then the method automatically calls the <xref:System.Runtime.Caching.OnChangedCallback> event handler, that was registered, through the <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> method.</span></span> <span data-ttu-id="d4451-232">Dies tritt auf, da es möglich ist, dass von der Zeit, die eine Cacheimplementierung eine änderungsüberwachung, mit der Zeit erstellt, eine Cacheimplementierung den Monitor ruft und verbindet sich bis zu, der zugrunde liegenden überwachte Zustand geändert hat.</span><span class="sxs-lookup"><span data-stu-id="d4451-232">This occurs because it is possible that from the time a cache implementation creates a change monitor, to the time a cache implementation gets the monitor and wires itself up to it, the underlying monitored state has changed.</span></span> <span data-ttu-id="d4451-233">Wenn der Zustand bereits klicken Sie dann das Objekt geändert hat, die an die <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> Methode ist `null`.</span><span class="sxs-lookup"><span data-stu-id="d4451-233">If the state has already changed then the object that is passed to the <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> method is `null`.</span></span>  
  
 <span data-ttu-id="d4451-234">Die <xref:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged%2A> Methode kann nur einmal aufgerufen werden, und löst eine Ausnahme bei nachfolgenden Aufrufen.</span><span class="sxs-lookup"><span data-stu-id="d4451-234">The <xref:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged%2A> method can be invoked only one time, and will throw an exception on subsequent calls.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="d4451-235">Die Rückrufmethode wurde bereits aufgerufen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4451-235">The callback method has already been invoked.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d4451-236">
            <paramref name="onChangedCallback" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4451-236">
              <paramref name="onChangedCallback" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>1.  <span data-ttu-id="d4451-237">Rufen Sie die <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" /> Methode Abhängigkeit Änderungen benachrichtigt zu werden.</span><span class="sxs-lookup"><span data-stu-id="d4451-237">You must call the <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" /> method to be notified of any dependency changes.</span></span><span data-ttu-id="d4451-238">Wenn eine Änderung der Abhängigkeit bereits eingetreten sein, die <see cref="T:System.Runtime.Caching.OnChangedCallback" /> Instanz wird aufgerufen, wenn <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" /> aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="d4451-238">If a dependency change has already occurred, the <see cref="T:System.Runtime.Caching.OnChangedCallback" /> instance will be called when <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" /> is called.</span></span><span data-ttu-id="d4451-239">Hingegen die <see cref="T:System.Runtime.Caching.OnChangedCallback" /> Instanz wird ein Mal aufgerufen werden entweder bei der <see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" /> Methode wird aufgerufen, oder wenn die <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" /> -Methode aufgerufen wird, welcher Vorgang zuerst ausgeführt.</span><span class="sxs-lookup"><span data-stu-id="d4451-239">Otherwise, the <see cref="T:System.Runtime.Caching.OnChangedCallback" /> instance will be called one time, either when the <see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" /> method is called or when the <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" /> method is called, whichever occurs first.</span></span><span data-ttu-id="d4451-240">Die <see cref="T:System.Runtime.Caching.OnChangedCallback" /> von der Cacheimplementierung bereitgestellte Instanz Entfernen des Eintrags im Cache und ggf. durch den Aufrufer Cache wird ausgelöst, die notwendige Änderung oder Update-Ereignis an den ursprünglichen Aufrufer der Cache sollte.</span><span class="sxs-lookup"><span data-stu-id="d4451-240">The <see cref="T:System.Runtime.Caching.OnChangedCallback" /> instance provided by the cache implementation should remove the cache entry and if it is requested by the cache caller, raise the necessary change or update event back to the original cache caller.</span></span>  
  
2.  <span data-ttu-id="d4451-241">Der Cacheimplementierung Objekt muss den Cacheeintrag entfernen, der eine Änderung der Abhängigkeitseigenschaft zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="d4451-241">The object cache implementation must remove the cache entry that is associated with a dependency change.</span></span></para>
        </block>
        <altmember cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="OnChanged">
      <MemberSignature Language="C#" Value="protected void OnChanged (object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void OnChanged(object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub OnChanged (state As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void OnChanged(System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="state">
          <span data-ttu-id="d4451-242">Die Daten für das Change-Ereignis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4451-242">The data for the change event.</span>
          </span>
          <span data-ttu-id="d4451-243">Dieser Wert kann <see langword="null" /> sein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4451-243">This value can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d4451-244">Wird von abgeleiteten Klassen aufgerufen, um das Ereignis auszulösen, wenn sich eine Abhängigkeit ändert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4451-244">Called by derived classes to raise the event when a dependency changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4451-245">In der Regel die <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> Methode wird aufgerufen, wenn Abhängigkeit Änderungen auftreten.</span><span class="sxs-lookup"><span data-stu-id="d4451-245">Typically, the <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> method is called when dependency changes occur.</span></span> <span data-ttu-id="d4451-246">Die <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> Methode wird auch aufgerufen, wenn eine änderungsüberwachung Instanz freigegeben wird, aber die Freigabe tritt nur dann, wenn der Rückruf noch nicht aufgerufen wurde.</span><span class="sxs-lookup"><span data-stu-id="d4451-246">The <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> method is also invoked when a change-monitor instance is disposed but the disposal occurs only if the callback has not already been invoked.</span></span>  
  
 <span data-ttu-id="d4451-247">Wenn die <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> Methode wird aufgerufen, bevor die <xref:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged%2A> -Methode aufgerufen wird, das die Zustandsdaten aus dem Aufruf der <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> Methode wird von der Cacheimplementierung gespeichert.</span><span class="sxs-lookup"><span data-stu-id="d4451-247">If the <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> method is called before the <xref:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged%2A> method is called, the state data from the call to the <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> method is saved by the cache implementation.</span></span> <span data-ttu-id="d4451-248">Darüber hinaus wird der Rückruf, der die <xref:System.Runtime.Caching.OnChangedCallback> Methode wird sofort aufgerufen, wenn die <xref:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged%2A> Methode wird aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="d4451-248">Also, the callback to the <xref:System.Runtime.Caching.OnChangedCallback> method is invoked immediately when the <xref:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged%2A> method is invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Runtime.Caching.ChangeMonitor.Dispose" />
        <altmember cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" />
        <altmember cref="P:System.Runtime.Caching.ChangeMonitor.HasChanged" />
      </Docs>
    </Member>
    <Member MemberName="UniqueId">
      <MemberSignature Language="C#" Value="public abstract string UniqueId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UniqueId" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Caching.ChangeMonitor.UniqueId" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property UniqueId As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ UniqueId { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d4451-249">Ruft einen Wert ab, der die <see cref="T:System.Runtime.Caching.ChangeMonitor" />-Klasseninstanz darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4451-249">Gets a value that represents the <see cref="T:System.Runtime.Caching.ChangeMonitor" /> class instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d4451-250">Der Bezeichner für eine Änderungsüberwachungsinstanz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4451-250">The identifier for a change-monitor instance.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4451-251">Die <xref:System.Runtime.Caching.ChangeMonitor.UniqueId%2A> Eigenschaftswert besteht normalerweise aus der Abhängigkeit, kombiniert mit Zeichenfolgendaten, eindeutig Bezeichner die Daten, die überwacht wird eine <xref:System.Runtime.Caching.ChangeMonitor> Instanz.</span><span class="sxs-lookup"><span data-stu-id="d4451-251">The <xref:System.Runtime.Caching.ChangeMonitor.UniqueId%2A> property value typically consists of dependency names combined string data that uniquely identifiers the data that is being monitored by a <xref:System.Runtime.Caching.ChangeMonitor> instance.</span></span> <span data-ttu-id="d4451-252">Der Wert, der die <xref:System.Runtime.Caching.ChangeMonitor.UniqueId%2A> -Eigenschaft ist eine Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="d4451-252">The value of the <xref:System.Runtime.Caching.ChangeMonitor.UniqueId%2A> property is a string.</span></span> <span data-ttu-id="d4451-253">Der Wert der Zeichenfolge verwendet, um die eindeutige ID des zuzuweisen der <xref:System.Runtime.Caching.ChangeMonitor> Instanz.</span><span class="sxs-lookup"><span data-stu-id="d4451-253">The value of the string is used to assign the unique ID of the <xref:System.Runtime.Caching.ChangeMonitor> instance.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="d4451-254">Durch Überschreiben der Eigenschaft, können Sie eine benutzerdefinierte Implementierung für den Zeichenfolgenwert der Eigenschaft definieren, um ihm eine eindeutige ID zuweisen</span>
            <span class="sxs-lookup">
              <span data-stu-id="d4451-254">By overriding the property, you can define a custom implementation for the string value of the property in order to assign it a unique ID.</span>
            </span>
          </para>
        </block>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="d4451-255">In abgeleiteten Klassen muss den Wert der Eigenschaft im Konstruktor festgelegt werden.</span>
            <span class="sxs-lookup">
              <span data-stu-id="d4451-255">In derived classes, you must set the value of the property in the constructor.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
  </Members>
</Type>