<Type Name="HostFileChangeMonitor" FullName="System.Runtime.Caching.HostFileChangeMonitor">
  <Metadata><Meta Name="ms.openlocfilehash" Value="15366bf2547c18451db55bcb7d5d1a037fd07433" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="39924826" /></Metadata><TypeSignature Language="C#" Value="public sealed class HostFileChangeMonitor : System.Runtime.Caching.FileChangeMonitor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HostFileChangeMonitor extends System.Runtime.Caching.FileChangeMonitor" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Caching.HostFileChangeMonitor" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HostFileChangeMonitor&#xA;Inherits FileChangeMonitor" />
  <TypeSignature Language="C++ CLI" Value="public ref class HostFileChangeMonitor sealed : System::Runtime::Caching::FileChangeMonitor" />
  <TypeSignature Language="F#" Value="type HostFileChangeMonitor = class&#xA;    inherit FileChangeMonitor" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Caching</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Runtime.Caching.FileChangeMonitor</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Überwacht Verzeichnisse und Dateipfade und benachrichtigt den Cache über Änderungen der überwachten Elemente. Diese Klasse kann nicht vererbt werden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Runtime.Caching.HostFileChangeMonitor> Klasse ist eine konkrete Implementierung der <xref:System.Runtime.Caching.FileChangeMonitor> Typ. Diese Klasse ist versiegelt, daher können nicht erweitert werden. Diese Klasse ist hilfreich, wenn Sie eine vorhandenen Cacheimplementierung zu verwenden und Dateien und Verzeichnisse auf Änderungen überwachen möchten.  
  
 Für jede angegebene Datei oder Verzeichnispfad der <xref:System.Runtime.Caching.HostFileChangeMonitor> Klasse löst eine änderungsbenachrichtigung aus, wenn eine der folgenden Änderungen auftritt:  
  
-   Der Name der überwachten Datei oder des Directory-Änderungen.  
  
-   Die angegebene Datei oder das Verzeichnis war zum Zeitpunkt nicht vorhanden, der Monitor erstellt wurde, sondern später erstellt wurde. Das heißt, wurde eine Datei oder ein Verzeichnis im Rahmen der überwachten Elemente erstellt.  
  
-   Die Größe einer überwachten Datei geändert.  
  
-   Der Inhalt einer überwachten Datei geändert oder den Inhalt eines überwachten Verzeichnisses geändert.  
  
-   Die Zugriffssteuerungsliste (ACL) der Datei oder Verzeichnis wurde geändert.  
  
-   Der überwachten Datei oder Verzeichnis wurde gelöscht.  
  
 Wenn zu viele Änderungen für die überwachten Datei oder das Verzeichnis auftreten, die zur gleichen Zeit, die <xref:System.Runtime.Caching.HostFileChangeMonitor> Instanz kann das Nachverfolgen von bestimmten Änderungen verlieren. In diesem Szenario die <xref:System.Runtime.Caching.HostFileChangeMonitor> Klasse löst eine änderungsbenachrichtigung aus. Dieses Szenario ist eher auftreten, wenn die <xref:System.Runtime.Caching.HostFileChangeMonitor> Instanz überwacht ein Verzeichnis aus, und viele Änderungen, die im Rahmen der Verzeichnisstruktur in kurzer Zeit auftreten.  
  
 Da der Zweck der <xref:System.Runtime.Caching.HostFileChangeMonitor> Klasse ist nur für die darauf hinweisen, dass etwas geändert hat, auf die Gruppe der überwachten Dateien und Verzeichnissen, es gilt als nicht wichtig, dass Details über eine bestimmte Änderung nicht erfasst werden. Der Zweck der <xref:System.Runtime.Caching.HostFileChangeMonitor> Klasse ist, geben Sie die Benachrichtigung, die Zustand so geändert, dass ein Cacheeintrag (oder Einträge) entfernt werden können. Da die <xref:System.Runtime.Caching.HostFileChangeMonitor> Klasse gibt keine genauen Änderungen zu identifizieren, die interne änderungsnachverfolgung Überlauf ist irrelevant.  
  
 Wenn Sie die Pfade zum Angeben einer <xref:System.Runtime.Caching.HostFileChangeMonitor> -Instanz, die die Verzeichnis- und Pfade müssen vollständige Pfade für das Verzeichnis oder Datei sein. Relative Pfade und Platzhalterzeichen in Pfaden sind nicht zulässig.  
  
 Wenn die <xref:System.Runtime.Caching.HostFileChangeMonitor> Klasse in einer ASP.NET-Anwendung verwendet wird, die Windows-Identität, die für den Zugriff auf überwachte Elemente verwendet wird, ist der Anwendungsidentität für die ASP.NET-Anwendung. Das heißt, werden die Identität eines der folgenden:  
  
-   Die Prozess-ID ein.  
  
-   Die Identität des konfigurierte Anwendung.  
  
-   Die UNC-Anmeldeinformationen, wenn die Anwendung von einer UNC-Freigabe ausgeführt wird.  
  
 Wenn die <xref:System.Runtime.Caching.HostFileChangeMonitor> Klasse wird in einer Anwendung nicht zu ASP.NET verwendet die <xref:System.IO.FileSystemWatcher> Klasse wird intern verwendet, um Dateien zu überwachen. Alle Zugriffssteuerungsliste (ACL) für eine überwachte Datei oder ein Verzeichnis gilt daher wird auf die Windows-Identität des aktuellen Threads angewendet.  
  
> [!NOTE]
>  Aufrufer müssen die geeigneten Berechtigungen für die Codezugriffssicherheit (CAS), und es müssen die NTFS-Berechtigungen für alle überwachten Verzeichnissen und Pfaden.  
  
   
  
## Examples  
 Das folgende Beispiel erstellt ein Element im Cache, der verwendet eine <xref:System.Runtime.Caching.HostFileChangeMonitor> Objekt, das den Zustand der Quelldaten (Dies ist eine Datei) im Dateisystem überwachen. Der Cacheeintrag wird definiert, mit einem <xref:System.Runtime.Caching.CacheItemPolicy> Lösch-und Ablaufdetails für den Cacheeintrag zu verwendendes Objekt.  
  
 [!code-csharp[CachingASPNetApplications#1](~/samples/snippets/csharp/VS_Snippets_WebNet/cachingaspnetapplications/cs/default.aspx.cs#1)]
 [!code-vb[CachingASPNetApplications#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/cachingaspnetapplications/vb/default.aspx.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HostFileChangeMonitor (System.Collections.Generic.IList&lt;string&gt; filePaths);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IList`1&lt;string&gt; filePaths) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.HostFileChangeMonitor.#ctor(System.Collections.Generic.IList{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (filePaths As IList(Of String))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HostFileChangeMonitor(System::Collections::Generic::IList&lt;System::String ^&gt; ^ filePaths);" />
      <MemberSignature Language="F#" Value="new System.Runtime.Caching.HostFileChangeMonitor : System.Collections.Generic.IList&lt;string&gt; -&gt; System.Runtime.Caching.HostFileChangeMonitor" Usage="new System.Runtime.Caching.HostFileChangeMonitor filePaths" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filePaths" Type="System.Collections.Generic.IList&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="filePaths">Eine Liste, die mindestens einen zu überwachenden Verzeichnis- oder Dateipfad enthält.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Runtime.Caching.HostFileChangeMonitor" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aufrufe von der <xref:System.Runtime.Caching.HostFileChangeMonitor.%23ctor%2A> Konstruktor muss Geben Sie einen Wert ungleich Null für den `filePaths` Parameter. Zumindest überprüft der Konstruktor für die Auflistung der Pfade, die übergeben werden, und klicken Sie dann die Überwachung für diese Pfade initialisiert.  
  
> [!NOTE]
>  Der Konstruktor überprüft nur Zeichenfolge der Name des Pfads. Nicht kanonisieren Pfade oder überprüfen, dass die Pfade vorhanden sind.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="filePaths" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="filePaths" /> enthält null Elemente.  
  
- oder -  
Ein Pfad in der <paramref name="filePaths" />-Liste ist <see langword="null" /> oder eine leere Zeichenfolge.</exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.HostFileChangeMonitor.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="hostFileChangeMonitor.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FilePaths">
      <MemberSignature Language="C#" Value="public override System.Collections.ObjectModel.ReadOnlyCollection&lt;string&gt; FilePaths { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;string&gt; FilePaths" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Caching.HostFileChangeMonitor.FilePaths" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property FilePaths As ReadOnlyCollection(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::String ^&gt; ^ FilePaths { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FilePaths : System.Collections.ObjectModel.ReadOnlyCollection&lt;string&gt;" Usage="System.Runtime.Caching.HostFileChangeMonitor.FilePaths" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Auflistung von Verzeichnis- und Dateipfaden ab, die an den <see cref="M:System.Runtime.Caching.HostFileChangeMonitor.#ctor(System.Collections.Generic.IList{System.String})" />-Konstruktor übergeben wurde.</summary>
        <value>Eine Auflistung von Verzeichnis- und Dateipfaden.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LastModified">
      <MemberSignature Language="C#" Value="public override DateTimeOffset LastModified { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTimeOffset LastModified" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Caching.HostFileChangeMonitor.LastModified" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LastModified As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property DateTimeOffset LastModified { DateTimeOffset get(); };" />
      <MemberSignature Language="F#" Value="member this.LastModified : DateTimeOffset" Usage="System.Runtime.Caching.HostFileChangeMonitor.LastModified" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen schreibgeschützten Wert ab, der den Zeitpunkt des letzten Schreibvorgangs einer überwachten Datei oder eines Pfads angibt.</summary>
        <value>Der Zeitpunkt des letzten Schreibvorgangs für eine überwachte Datei oder einen Pfad.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn eine Datei änderungsüberwachung mehrere Dateien oder Pfade überwacht wird, gibt diese Eigenschaft den Zeitpunkt des letzten Schreibzugriffs im Satz aller Dateien und Pfade an.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UniqueId">
      <MemberSignature Language="C#" Value="public override string UniqueId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UniqueId" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Caching.HostFileChangeMonitor.UniqueId" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property UniqueId As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ UniqueId { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UniqueId : string" Usage="System.Runtime.Caching.HostFileChangeMonitor.UniqueId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Bezeichner für die <see cref="T:System.Runtime.Caching.HostFileChangeMonitor" />-Instanz ab, der auf dem überwachten Satz von Verzeichnissen und Dateipfaden basiert.</summary>
        <value>Ein Bezeichner für die Änderungsüberwachung.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Zeichenfolge, aus denen die <xref:System.Runtime.Caching.HostFileChangeMonitor.UniqueId%2A> Eigenschaftswert aus den folgenden Teilen erstellt wird:  
  
-   Eine Datei- oder Verzeichnispfad.  
  
-   Die letzte Schreibzeit im UTC-Zeit, gemessen als Ticks jedoch als hexadezimale Zeichenfolge dargestellt.  
  
-   Die Dateigröße, dargestellt als hexadezimale Zeichenfolge.  
  
 Wenn eine Datei änderungsüberwachung mehrere Pfade überwacht, wird von dieser Eigenschaft zurückgegebene Informationen in einer einzelnen Zeichenfolge für alle überwachten Verzeichnisse und Dateipfade verkettet.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>